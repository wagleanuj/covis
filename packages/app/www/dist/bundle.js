(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropSymbols = Object.getOwnPropertySymbols;
  var __propIsEnum = Object.prototype.propertyIsEnumerable;
  var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {enumerable: true, configurable: true, writable: true, value}) : obj[key] = value;
  var __objSpread = (a7, b8) => {
    for (var prop in b8 || (b8 = {}))
      if (__hasOwnProp.call(b8, prop))
        __defNormalProp(a7, prop, b8[prop]);
    if (__getOwnPropSymbols)
      for (var prop of __getOwnPropSymbols(b8)) {
        if (__propIsEnum.call(b8, prop))
          __defNormalProp(a7, prop, b8[prop]);
      }
    return a7;
  };
  var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
  var __commonJS = (cb, mod) => () => (mod || cb((mod = {exports: {}}).exports, mod), mod.exports);
  var __reExport = (target, module, desc) => {
    if (module && typeof module === "object" || typeof module === "function") {
      for (let key of __getOwnPropNames(module))
        if (!__hasOwnProp.call(target, key) && key !== "default")
          __defProp(target, key, {get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable});
    }
    return target;
  };
  var __toModule = (module) => {
    return __reExport(__markAsModule(__defProp(module != null ? __create(__getProtoOf(module)) : {}, "default", module && module.__esModule && "default" in module ? {get: () => module.default, enumerable: true} : {value: module, enumerable: true})), module);
  };

  // ../../node_modules/react/cjs/react.development.js
  var require_react_development = __commonJS((exports, module) => {
    /**
     * @license React
     * react.development.js
     *
     * Copyright (c) Facebook, Inc. and its affiliates.
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE file in the root directory of this source tree.
     */
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var ReactVersion = "18.2.0";
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var ReactCurrentDispatcher = {
          current: null
        };
        var ReactCurrentBatchConfig = {
          transition: null
        };
        var ReactCurrentActQueue = {
          current: null,
          isBatchingLegacy: false,
          didScheduleLegacyUpdate: false
        };
        var ReactCurrentOwner = {
          current: null
        };
        var ReactDebugCurrentFrame = {};
        var currentExtraStackFrame = null;
        function setExtraStackFrame(stack) {
          {
            currentExtraStackFrame = stack;
          }
        }
        {
          ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
            {
              currentExtraStackFrame = stack;
            }
          };
          ReactDebugCurrentFrame.getCurrentStack = null;
          ReactDebugCurrentFrame.getStackAddendum = function() {
            var stack = "";
            if (currentExtraStackFrame) {
              stack += currentExtraStackFrame;
            }
            var impl = ReactDebugCurrentFrame.getCurrentStack;
            if (impl) {
              stack += impl() || "";
            }
            return stack;
          };
        }
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var ReactSharedInternals = {
          ReactCurrentDispatcher,
          ReactCurrentBatchConfig,
          ReactCurrentOwner
        };
        {
          ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
          ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
        }
        function warn(format4) {
          {
            {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format4, args);
            }
          }
        }
        function error(format4) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format4, args);
            }
          }
        }
        function printWarning(level, format4, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format4 += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format4);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var didWarnStateUpdateForUnmountedComponent = {};
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass";
            var warningKey = componentName + "." + callerName;
            if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
              return;
            }
            error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
            didWarnStateUpdateForUnmountedComponent[warningKey] = true;
          }
        }
        var ReactNoopUpdateQueue = {
          isMounted: function(publicInstance) {
            return false;
          },
          enqueueForceUpdate: function(publicInstance, callback, callerName) {
            warnNoop(publicInstance, "forceUpdate");
          },
          enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, "replaceState");
          },
          enqueueSetState: function(publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, "setState");
          }
        };
        var assign3 = Object.assign;
        var emptyObject = {};
        {
          Object.freeze(emptyObject);
        }
        function Component(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        Component.prototype.isReactComponent = {};
        Component.prototype.setState = function(partialState, callback) {
          if (typeof partialState !== "object" && typeof partialState !== "function" && partialState != null) {
            throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
          }
          this.updater.enqueueSetState(this, partialState, callback, "setState");
        };
        Component.prototype.forceUpdate = function(callback) {
          this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
        };
        {
          var deprecatedAPIs = {
            isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
            replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
          };
          var defineDeprecationWarning = function(methodName, info) {
            Object.defineProperty(Component.prototype, methodName, {
              get: function() {
                warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
                return void 0;
              }
            });
          };
          for (var fnName in deprecatedAPIs) {
            if (deprecatedAPIs.hasOwnProperty(fnName)) {
              defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
            }
          }
        }
        function ComponentDummy() {
        }
        ComponentDummy.prototype = Component.prototype;
        function PureComponent(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
        pureComponentPrototype.constructor = PureComponent;
        assign3(pureComponentPrototype, Component.prototype);
        pureComponentPrototype.isPureReactComponent = true;
        function createRef() {
          var refObject = {
            current: null
          };
          {
            Object.seal(refObject);
          }
          return refObject;
        }
        var isArrayImpl = Array.isArray;
        function isArray2(a7) {
          return isArrayImpl(a7);
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type2 = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type2;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e15) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkKeyStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type2) {
          return type2.displayName || "Context";
        }
        function getComponentNameFromType(type2) {
          if (type2 == null) {
            return null;
          }
          {
            if (typeof type2.tag === "number") {
              error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type2 === "function") {
            return type2.displayName || type2.name || null;
          }
          if (typeof type2 === "string") {
            return type2;
          }
          switch (type2) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type2 === "object") {
            switch (type2.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type2;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type2;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type2, type2.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type2.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type2.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type2;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentNameFromType(init(payload));
                } catch (x7) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var hasOwnProperty2 = Object.prototype.hasOwnProperty;
        var RESERVED_PROPS2 = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };
        var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
        {
          didWarnAboutStringRefs = {};
        }
        function hasValidRef(config2) {
          {
            if (hasOwnProperty2.call(config2, "ref")) {
              var getter = Object.getOwnPropertyDescriptor(config2, "ref").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config2.ref !== void 0;
        }
        function hasValidKey(config2) {
          {
            if (hasOwnProperty2.call(config2, "key")) {
              var getter = Object.getOwnPropertyDescriptor(config2, "key").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config2.key !== void 0;
        }
        function defineKeyPropWarningGetter(props, displayName) {
          var warnAboutAccessingKey = function() {
            {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            }
          };
          warnAboutAccessingKey.isReactWarning = true;
          Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: true
          });
        }
        function defineRefPropWarningGetter(props, displayName) {
          var warnAboutAccessingRef = function() {
            {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            }
          };
          warnAboutAccessingRef.isReactWarning = true;
          Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: true
          });
        }
        function warnIfStringRefCannotBeAutoConverted(config2) {
          {
            if (typeof config2.ref === "string" && ReactCurrentOwner.current && config2.__self && ReactCurrentOwner.current.stateNode !== config2.__self) {
              var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
              if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config2.ref);
                didWarnAboutStringRefs[componentName] = true;
              }
            }
          }
        }
        var ReactElement = function(type2, key, ref, self2, source, owner, props) {
          var element = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type2,
            key,
            ref,
            props,
            _owner: owner
          };
          {
            element._store = {};
            Object.defineProperty(element._store, "validated", {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element, "_self", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self2
            });
            Object.defineProperty(element, "_source", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function createElement5(type2, config2, children) {
          var propName;
          var props = {};
          var key = null;
          var ref = null;
          var self2 = null;
          var source = null;
          if (config2 != null) {
            if (hasValidRef(config2)) {
              ref = config2.ref;
              {
                warnIfStringRefCannotBeAutoConverted(config2);
              }
            }
            if (hasValidKey(config2)) {
              {
                checkKeyStringCoercion(config2.key);
              }
              key = "" + config2.key;
            }
            self2 = config2.__self === void 0 ? null : config2.__self;
            source = config2.__source === void 0 ? null : config2.__source;
            for (propName in config2) {
              if (hasOwnProperty2.call(config2, propName) && !RESERVED_PROPS2.hasOwnProperty(propName)) {
                props[propName] = config2[propName];
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i9 = 0; i9 < childrenLength; i9++) {
              childArray[i9] = arguments[i9 + 2];
            }
            {
              if (Object.freeze) {
                Object.freeze(childArray);
              }
            }
            props.children = childArray;
          }
          if (type2 && type2.defaultProps) {
            var defaultProps = type2.defaultProps;
            for (propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
          }
          {
            if (key || ref) {
              var displayName = typeof type2 === "function" ? type2.displayName || type2.name || "Unknown" : type2;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
          }
          return ReactElement(type2, key, ref, self2, source, ReactCurrentOwner.current, props);
        }
        function cloneAndReplaceKey(oldElement, newKey) {
          var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
          return newElement;
        }
        function cloneElement(element, config2, children) {
          if (element === null || element === void 0) {
            throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
          }
          var propName;
          var props = assign3({}, element.props);
          var key = element.key;
          var ref = element.ref;
          var self2 = element._self;
          var source = element._source;
          var owner = element._owner;
          if (config2 != null) {
            if (hasValidRef(config2)) {
              ref = config2.ref;
              owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config2)) {
              {
                checkKeyStringCoercion(config2.key);
              }
              key = "" + config2.key;
            }
            var defaultProps;
            if (element.type && element.type.defaultProps) {
              defaultProps = element.type.defaultProps;
            }
            for (propName in config2) {
              if (hasOwnProperty2.call(config2, propName) && !RESERVED_PROPS2.hasOwnProperty(propName)) {
                if (config2[propName] === void 0 && defaultProps !== void 0) {
                  props[propName] = defaultProps[propName];
                } else {
                  props[propName] = config2[propName];
                }
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i9 = 0; i9 < childrenLength; i9++) {
              childArray[i9] = arguments[i9 + 2];
            }
            props.children = childArray;
          }
          return ReactElement(element.type, key, ref, self2, source, owner, props);
        }
        function isValidElement(object2) {
          return typeof object2 === "object" && object2 !== null && object2.$$typeof === REACT_ELEMENT_TYPE;
        }
        var SEPARATOR = ".";
        var SUBSEPARATOR = ":";
        function escape(key) {
          var escapeRegex = /[=:]/g;
          var escaperLookup = {
            "=": "=0",
            ":": "=2"
          };
          var escapedString = key.replace(escapeRegex, function(match2) {
            return escaperLookup[match2];
          });
          return "$" + escapedString;
        }
        var didWarnAboutMaps = false;
        var userProvidedKeyEscapeRegex = /\/+/g;
        function escapeUserProvidedKey(text) {
          return text.replace(userProvidedKeyEscapeRegex, "$&/");
        }
        function getElementKey(element, index) {
          if (typeof element === "object" && element !== null && element.key != null) {
            {
              checkKeyStringCoercion(element.key);
            }
            return escape("" + element.key);
          }
          return index.toString(36);
        }
        function mapIntoArray(children, array2, escapedPrefix, nameSoFar, callback) {
          var type2 = typeof children;
          if (type2 === "undefined" || type2 === "boolean") {
            children = null;
          }
          var invokeCallback = false;
          if (children === null) {
            invokeCallback = true;
          } else {
            switch (type2) {
              case "string":
              case "number":
                invokeCallback = true;
                break;
              case "object":
                switch (children.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                  case REACT_PORTAL_TYPE:
                    invokeCallback = true;
                }
            }
          }
          if (invokeCallback) {
            var _child = children;
            var mappedChild = callback(_child);
            var childKey = nameSoFar === "" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
            if (isArray2(mappedChild)) {
              var escapedChildKey = "";
              if (childKey != null) {
                escapedChildKey = escapeUserProvidedKey(childKey) + "/";
              }
              mapIntoArray(mappedChild, array2, escapedChildKey, "", function(c6) {
                return c6;
              });
            } else if (mappedChild != null) {
              if (isValidElement(mappedChild)) {
                {
                  if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
                    checkKeyStringCoercion(mappedChild.key);
                  }
                }
                mappedChild = cloneAndReplaceKey(mappedChild, escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? escapeUserProvidedKey("" + mappedChild.key) + "/" : "") + childKey);
              }
              array2.push(mappedChild);
            }
            return 1;
          }
          var child;
          var nextName;
          var subtreeCount = 0;
          var nextNamePrefix = nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;
          if (isArray2(children)) {
            for (var i9 = 0; i9 < children.length; i9++) {
              child = children[i9];
              nextName = nextNamePrefix + getElementKey(child, i9);
              subtreeCount += mapIntoArray(child, array2, escapedPrefix, nextName, callback);
            }
          } else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === "function") {
              var iterableChildren = children;
              {
                if (iteratorFn === iterableChildren.entries) {
                  if (!didWarnAboutMaps) {
                    warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                  }
                  didWarnAboutMaps = true;
                }
              }
              var iterator = iteratorFn.call(iterableChildren);
              var step;
              var ii2 = 0;
              while (!(step = iterator.next()).done) {
                child = step.value;
                nextName = nextNamePrefix + getElementKey(child, ii2++);
                subtreeCount += mapIntoArray(child, array2, escapedPrefix, nextName, callback);
              }
            } else if (type2 === "object") {
              var childrenString = String(children);
              throw new Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString) + "). If you meant to render a collection of children, use an array instead.");
            }
          }
          return subtreeCount;
        }
        function mapChildren(children, func, context) {
          if (children == null) {
            return children;
          }
          var result = [];
          var count2 = 0;
          mapIntoArray(children, result, "", "", function(child) {
            return func.call(context, child, count2++);
          });
          return result;
        }
        function countChildren(children) {
          var n11 = 0;
          mapChildren(children, function() {
            n11++;
          });
          return n11;
        }
        function forEachChildren(children, forEachFunc, forEachContext) {
          mapChildren(children, function() {
            forEachFunc.apply(this, arguments);
          }, forEachContext);
        }
        function toArray2(children) {
          return mapChildren(children, function(child) {
            return child;
          }) || [];
        }
        function onlyChild(children) {
          if (!isValidElement(children)) {
            throw new Error("React.Children.only expected to receive a single React element child.");
          }
          return children;
        }
        function createContext2(defaultValue) {
          var context = {
            $$typeof: REACT_CONTEXT_TYPE,
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            _threadCount: 0,
            Provider: null,
            Consumer: null,
            _defaultValue: null,
            _globalName: null
          };
          context.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context
          };
          var hasWarnedAboutUsingNestedContextConsumers = false;
          var hasWarnedAboutUsingConsumerProvider = false;
          var hasWarnedAboutDisplayNameOnConsumer = false;
          {
            var Consumer2 = {
              $$typeof: REACT_CONTEXT_TYPE,
              _context: context
            };
            Object.defineProperties(Consumer2, {
              Provider: {
                get: function() {
                  if (!hasWarnedAboutUsingConsumerProvider) {
                    hasWarnedAboutUsingConsumerProvider = true;
                    error("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                  }
                  return context.Provider;
                },
                set: function(_Provider) {
                  context.Provider = _Provider;
                }
              },
              _currentValue: {
                get: function() {
                  return context._currentValue;
                },
                set: function(_currentValue) {
                  context._currentValue = _currentValue;
                }
              },
              _currentValue2: {
                get: function() {
                  return context._currentValue2;
                },
                set: function(_currentValue2) {
                  context._currentValue2 = _currentValue2;
                }
              },
              _threadCount: {
                get: function() {
                  return context._threadCount;
                },
                set: function(_threadCount) {
                  context._threadCount = _threadCount;
                }
              },
              Consumer: {
                get: function() {
                  if (!hasWarnedAboutUsingNestedContextConsumers) {
                    hasWarnedAboutUsingNestedContextConsumers = true;
                    error("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                  }
                  return context.Consumer;
                }
              },
              displayName: {
                get: function() {
                  return context.displayName;
                },
                set: function(displayName) {
                  if (!hasWarnedAboutDisplayNameOnConsumer) {
                    warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                    hasWarnedAboutDisplayNameOnConsumer = true;
                  }
                }
              }
            });
            context.Consumer = Consumer2;
          }
          {
            context._currentRenderer = null;
            context._currentRenderer2 = null;
          }
          return context;
        }
        var Uninitialized = -1;
        var Pending = 0;
        var Resolved = 1;
        var Rejected = 2;
        function lazyInitializer(payload) {
          if (payload._status === Uninitialized) {
            var ctor = payload._result;
            var thenable = ctor();
            thenable.then(function(moduleObject2) {
              if (payload._status === Pending || payload._status === Uninitialized) {
                var resolved = payload;
                resolved._status = Resolved;
                resolved._result = moduleObject2;
              }
            }, function(error2) {
              if (payload._status === Pending || payload._status === Uninitialized) {
                var rejected = payload;
                rejected._status = Rejected;
                rejected._result = error2;
              }
            });
            if (payload._status === Uninitialized) {
              var pending = payload;
              pending._status = Pending;
              pending._result = thenable;
            }
          }
          if (payload._status === Resolved) {
            var moduleObject = payload._result;
            {
              if (moduleObject === void 0) {
                error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", moduleObject);
              }
            }
            {
              if (!("default" in moduleObject)) {
                error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
              }
            }
            return moduleObject.default;
          } else {
            throw payload._result;
          }
        }
        function lazy(ctor) {
          var payload = {
            _status: Uninitialized,
            _result: ctor
          };
          var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _payload: payload,
            _init: lazyInitializer
          };
          {
            var defaultProps;
            var propTypes;
            Object.defineProperties(lazyType, {
              defaultProps: {
                configurable: true,
                get: function() {
                  return defaultProps;
                },
                set: function(newDefaultProps) {
                  error("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                  defaultProps = newDefaultProps;
                  Object.defineProperty(lazyType, "defaultProps", {
                    enumerable: true
                  });
                }
              },
              propTypes: {
                configurable: true,
                get: function() {
                  return propTypes;
                },
                set: function(newPropTypes) {
                  error("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                  propTypes = newPropTypes;
                  Object.defineProperty(lazyType, "propTypes", {
                    enumerable: true
                  });
                }
              }
            });
          }
          return lazyType;
        }
        function forwardRef3(render) {
          {
            if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
              error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
            } else if (typeof render !== "function") {
              error("forwardRef requires a render function but was given %s.", render === null ? "null" : typeof render);
            } else {
              if (render.length !== 0 && render.length !== 2) {
                error("forwardRef render functions accept exactly two parameters: props and ref. %s", render.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
              }
            }
            if (render != null) {
              if (render.defaultProps != null || render.propTypes != null) {
                error("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
              }
            }
          }
          var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render
          };
          {
            var ownName;
            Object.defineProperty(elementType, "displayName", {
              enumerable: false,
              configurable: true,
              get: function() {
                return ownName;
              },
              set: function(name) {
                ownName = name;
                if (!render.name && !render.displayName) {
                  render.displayName = name;
                }
              }
            });
          }
          return elementType;
        }
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type2) {
          if (typeof type2 === "string" || typeof type2 === "function") {
            return true;
          }
          if (type2 === REACT_FRAGMENT_TYPE || type2 === REACT_PROFILER_TYPE || enableDebugTracing || type2 === REACT_STRICT_MODE_TYPE || type2 === REACT_SUSPENSE_TYPE || type2 === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type2 === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type2 === "object" && type2 !== null) {
            if (type2.$$typeof === REACT_LAZY_TYPE || type2.$$typeof === REACT_MEMO_TYPE || type2.$$typeof === REACT_PROVIDER_TYPE || type2.$$typeof === REACT_CONTEXT_TYPE || type2.$$typeof === REACT_FORWARD_REF_TYPE || type2.$$typeof === REACT_MODULE_REFERENCE || type2.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function memo(type2, compare) {
          {
            if (!isValidElementType(type2)) {
              error("memo: The first argument must be a component. Instead received: %s", type2 === null ? "null" : typeof type2);
            }
          }
          var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type: type2,
            compare: compare === void 0 ? null : compare
          };
          {
            var ownName;
            Object.defineProperty(elementType, "displayName", {
              enumerable: false,
              configurable: true,
              get: function() {
                return ownName;
              },
              set: function(name) {
                ownName = name;
                if (!type2.name && !type2.displayName) {
                  type2.displayName = name;
                }
              }
            });
          }
          return elementType;
        }
        function resolveDispatcher() {
          var dispatcher = ReactCurrentDispatcher.current;
          {
            if (dispatcher === null) {
              error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
            }
          }
          return dispatcher;
        }
        function useContext9(Context) {
          var dispatcher = resolveDispatcher();
          {
            if (Context._context !== void 0) {
              var realContext = Context._context;
              if (realContext.Consumer === Context) {
                error("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
              } else if (realContext.Provider === Context) {
                error("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
              }
            }
          }
          return dispatcher.useContext(Context);
        }
        function useState14(initialState) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useState(initialState);
        }
        function useReducer(reducer, initialArg, init) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useReducer(reducer, initialArg, init);
        }
        function useRef19(initialValue) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useRef(initialValue);
        }
        function useEffect19(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useEffect(create, deps);
        }
        function useInsertionEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useInsertionEffect(create, deps);
        }
        function useLayoutEffect3(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useLayoutEffect(create, deps);
        }
        function useCallback26(callback, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useCallback(callback, deps);
        }
        function useMemo6(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useMemo(create, deps);
        }
        function useImperativeHandle4(ref, create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useImperativeHandle(ref, create, deps);
        }
        function useDebugValue(value, formatterFn) {
          {
            var dispatcher = resolveDispatcher();
            return dispatcher.useDebugValue(value, formatterFn);
          }
        }
        function useTransition2() {
          var dispatcher = resolveDispatcher();
          return dispatcher.useTransition();
        }
        function useDeferredValue(value) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useDeferredValue(value);
        }
        function useId() {
          var dispatcher = resolveDispatcher();
          return dispatcher.useId();
        }
        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign3({}, props, {
                  value: prevLog
                }),
                info: assign3({}, props, {
                  value: prevInfo
                }),
                warn: assign3({}, props, {
                  value: prevWarn
                }),
                error: assign3({}, props, {
                  value: prevError
                }),
                group: assign3({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign3({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign3({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix3;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix3 === void 0) {
              try {
                throw Error();
              } catch (x7) {
                var match2 = x7.stack.trim().match(/\n( *(at )?)/);
                prefix3 = match2 && match2[1] || "";
              }
            }
            return "\n" + prefix3 + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn2, construct) {
          if (!fn2 || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn2);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x7) {
                  control = x7;
                }
                Reflect.construct(fn2, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x7) {
                  control = x7;
                }
                fn2.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x7) {
                control = x7;
              }
              fn2();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s4 = sampleLines.length - 1;
              var c6 = controlLines.length - 1;
              while (s4 >= 1 && c6 >= 0 && sampleLines[s4] !== controlLines[c6]) {
                c6--;
              }
              for (; s4 >= 1 && c6 >= 0; s4--, c6--) {
                if (sampleLines[s4] !== controlLines[c6]) {
                  if (s4 !== 1 || c6 !== 1) {
                    do {
                      s4--;
                      c6--;
                      if (c6 < 0 || sampleLines[s4] !== controlLines[c6]) {
                        var _frame = "\n" + sampleLines[s4].replace(" at new ", " at ");
                        if (fn2.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn2.displayName);
                        }
                        {
                          if (typeof fn2 === "function") {
                            componentFrameCache.set(fn2, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s4 >= 1 && c6 >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher$1.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn2 ? fn2.displayName || fn2.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn2 === "function") {
              componentFrameCache.set(fn2, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn2, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn2, false);
          }
        }
        function shouldConstruct(Component2) {
          var prototype = Component2.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type2, source, ownerFn) {
          if (type2 == null) {
            return "";
          }
          if (typeof type2 === "function") {
            {
              return describeNativeComponentFrame(type2, shouldConstruct(type2));
            }
          }
          if (typeof type2 === "string") {
            return describeBuiltInComponentFrame(type2);
          }
          switch (type2) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type2 === "object") {
            switch (type2.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type2.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type2.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type2;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x7) {
                }
              }
            }
          }
          return "";
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty2);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        function setCurrentlyValidatingElement$1(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              setExtraStackFrame(stack);
            } else {
              setExtraStackFrame(null);
            }
          }
        }
        var propTypesMisspellWarningShown;
        {
          propTypesMisspellWarningShown = false;
        }
        function getDeclarationErrorAddendum() {
          if (ReactCurrentOwner.current) {
            var name = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (name) {
              return "\n\nCheck the render method of `" + name + "`.";
            }
          }
          return "";
        }
        function getSourceInfoErrorAddendum(source) {
          if (source !== void 0) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, "");
            var lineNumber = source.lineNumber;
            return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
          }
          return "";
        }
        function getSourceInfoErrorAddendumForProps(elementProps) {
          if (elementProps !== null && elementProps !== void 0) {
            return getSourceInfoErrorAddendum(elementProps.__source);
          }
          return "";
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          var info = getDeclarationErrorAddendum();
          if (!info) {
            var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
            if (parentName) {
              info = "\n\nCheck the top-level render call using <" + parentName + ">.";
            }
          }
          return info;
        }
        function validateExplicitKey(element, parentType) {
          if (!element._store || element._store.validated || element.key != null) {
            return;
          }
          element._store.validated = true;
          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
            return;
          }
          ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
          var childOwner = "";
          if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
            childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
          }
          {
            setCurrentlyValidatingElement$1(element);
            error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
            setCurrentlyValidatingElement$1(null);
          }
        }
        function validateChildKeys(node, parentType) {
          if (typeof node !== "object") {
            return;
          }
          if (isArray2(node)) {
            for (var i9 = 0; i9 < node.length; i9++) {
              var child = node[i9];
              if (isValidElement(child)) {
                validateExplicitKey(child, parentType);
              }
            }
          } else if (isValidElement(node)) {
            if (node._store) {
              node._store.validated = true;
            }
          } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === "function") {
              if (iteratorFn !== node.entries) {
                var iterator = iteratorFn.call(node);
                var step;
                while (!(step = iterator.next()).done) {
                  if (isValidElement(step.value)) {
                    validateExplicitKey(step.value, parentType);
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          {
            var type2 = element.type;
            if (type2 === null || type2 === void 0 || typeof type2 === "string") {
              return;
            }
            var propTypes;
            if (typeof type2 === "function") {
              propTypes = type2.propTypes;
            } else if (typeof type2 === "object" && (type2.$$typeof === REACT_FORWARD_REF_TYPE || type2.$$typeof === REACT_MEMO_TYPE)) {
              propTypes = type2.propTypes;
            } else {
              return;
            }
            if (propTypes) {
              var name = getComponentNameFromType(type2);
              checkPropTypes(propTypes, element.props, "prop", name, element);
            } else if (type2.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
              propTypesMisspellWarningShown = true;
              var _name = getComponentNameFromType(type2);
              error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
            }
            if (typeof type2.getDefaultProps === "function" && !type2.getDefaultProps.isReactClassApproved) {
              error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
            }
          }
        }
        function validateFragmentProps(fragment) {
          {
            var keys = Object.keys(fragment.props);
            for (var i9 = 0; i9 < keys.length; i9++) {
              var key = keys[i9];
              if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
              }
            }
            if (fragment.ref !== null) {
              setCurrentlyValidatingElement$1(fragment);
              error("Invalid attribute `ref` supplied to `React.Fragment`.");
              setCurrentlyValidatingElement$1(null);
            }
          }
        }
        function createElementWithValidation(type2, props, children) {
          var validType = isValidElementType(type2);
          if (!validType) {
            var info = "";
            if (type2 === void 0 || typeof type2 === "object" && type2 !== null && Object.keys(type2).length === 0) {
              info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) {
              info += sourceInfo;
            } else {
              info += getDeclarationErrorAddendum();
            }
            var typeString;
            if (type2 === null) {
              typeString = "null";
            } else if (isArray2(type2)) {
              typeString = "array";
            } else if (type2 !== void 0 && type2.$$typeof === REACT_ELEMENT_TYPE) {
              typeString = "<" + (getComponentNameFromType(type2.type) || "Unknown") + " />";
              info = " Did you accidentally export a JSX literal instead of a component?";
            } else {
              typeString = typeof type2;
            }
            {
              error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
            }
          }
          var element = createElement5.apply(this, arguments);
          if (element == null) {
            return element;
          }
          if (validType) {
            for (var i9 = 2; i9 < arguments.length; i9++) {
              validateChildKeys(arguments[i9], type2);
            }
          }
          if (type2 === REACT_FRAGMENT_TYPE) {
            validateFragmentProps(element);
          } else {
            validatePropTypes(element);
          }
          return element;
        }
        var didWarnAboutDeprecatedCreateFactory = false;
        function createFactoryWithValidation(type2) {
          var validatedFactory = createElementWithValidation.bind(null, type2);
          validatedFactory.type = type2;
          {
            if (!didWarnAboutDeprecatedCreateFactory) {
              didWarnAboutDeprecatedCreateFactory = true;
              warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
            }
            Object.defineProperty(validatedFactory, "type", {
              enumerable: false,
              get: function() {
                warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                Object.defineProperty(this, "type", {
                  value: type2
                });
                return type2;
              }
            });
          }
          return validatedFactory;
        }
        function cloneElementWithValidation(element, props, children) {
          var newElement = cloneElement.apply(this, arguments);
          for (var i9 = 2; i9 < arguments.length; i9++) {
            validateChildKeys(arguments[i9], newElement.type);
          }
          validatePropTypes(newElement);
          return newElement;
        }
        function startTransition(scope, options) {
          var prevTransition = ReactCurrentBatchConfig.transition;
          ReactCurrentBatchConfig.transition = {};
          var currentTransition = ReactCurrentBatchConfig.transition;
          {
            ReactCurrentBatchConfig.transition._updatedFibers = new Set();
          }
          try {
            scope();
          } finally {
            ReactCurrentBatchConfig.transition = prevTransition;
            {
              if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) {
                  warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                }
                currentTransition._updatedFibers.clear();
              }
            }
          }
        }
        var didWarnAboutMessageChannel = false;
        var enqueueTaskImpl = null;
        function enqueueTask(task) {
          if (enqueueTaskImpl === null) {
            try {
              var requireString = ("require" + Math.random()).slice(0, 7);
              var nodeRequire = module && module[requireString];
              enqueueTaskImpl = nodeRequire.call(module, "timers").setImmediate;
            } catch (_err) {
              enqueueTaskImpl = function(callback) {
                {
                  if (didWarnAboutMessageChannel === false) {
                    didWarnAboutMessageChannel = true;
                    if (typeof MessageChannel === "undefined") {
                      error("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.");
                    }
                  }
                }
                var channel = new MessageChannel();
                channel.port1.onmessage = callback;
                channel.port2.postMessage(void 0);
              };
            }
          }
          return enqueueTaskImpl(task);
        }
        var actScopeDepth = 0;
        var didWarnNoAwaitAct = false;
        function act(callback) {
          {
            var prevActScopeDepth = actScopeDepth;
            actScopeDepth++;
            if (ReactCurrentActQueue.current === null) {
              ReactCurrentActQueue.current = [];
            }
            var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
            var result;
            try {
              ReactCurrentActQueue.isBatchingLegacy = true;
              result = callback();
              if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
                var queue = ReactCurrentActQueue.current;
                if (queue !== null) {
                  ReactCurrentActQueue.didScheduleLegacyUpdate = false;
                  flushActQueue(queue);
                }
              }
            } catch (error2) {
              popActScope(prevActScopeDepth);
              throw error2;
            } finally {
              ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
            }
            if (result !== null && typeof result === "object" && typeof result.then === "function") {
              var thenableResult = result;
              var wasAwaited = false;
              var thenable = {
                then: function(resolve, reject) {
                  wasAwaited = true;
                  thenableResult.then(function(returnValue2) {
                    popActScope(prevActScopeDepth);
                    if (actScopeDepth === 0) {
                      recursivelyFlushAsyncActWork(returnValue2, resolve, reject);
                    } else {
                      resolve(returnValue2);
                    }
                  }, function(error2) {
                    popActScope(prevActScopeDepth);
                    reject(error2);
                  });
                }
              };
              {
                if (!didWarnNoAwaitAct && typeof Promise !== "undefined") {
                  Promise.resolve().then(function() {
                  }).then(function() {
                    if (!wasAwaited) {
                      didWarnNoAwaitAct = true;
                      error("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);");
                    }
                  });
                }
              }
              return thenable;
            } else {
              var returnValue = result;
              popActScope(prevActScopeDepth);
              if (actScopeDepth === 0) {
                var _queue = ReactCurrentActQueue.current;
                if (_queue !== null) {
                  flushActQueue(_queue);
                  ReactCurrentActQueue.current = null;
                }
                var _thenable = {
                  then: function(resolve, reject) {
                    if (ReactCurrentActQueue.current === null) {
                      ReactCurrentActQueue.current = [];
                      recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                    } else {
                      resolve(returnValue);
                    }
                  }
                };
                return _thenable;
              } else {
                var _thenable2 = {
                  then: function(resolve, reject) {
                    resolve(returnValue);
                  }
                };
                return _thenable2;
              }
            }
          }
        }
        function popActScope(prevActScopeDepth) {
          {
            if (prevActScopeDepth !== actScopeDepth - 1) {
              error("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
            }
            actScopeDepth = prevActScopeDepth;
          }
        }
        function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
          {
            var queue = ReactCurrentActQueue.current;
            if (queue !== null) {
              try {
                flushActQueue(queue);
                enqueueTask(function() {
                  if (queue.length === 0) {
                    ReactCurrentActQueue.current = null;
                    resolve(returnValue);
                  } else {
                    recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                  }
                });
              } catch (error2) {
                reject(error2);
              }
            } else {
              resolve(returnValue);
            }
          }
        }
        var isFlushing = false;
        function flushActQueue(queue) {
          {
            if (!isFlushing) {
              isFlushing = true;
              var i9 = 0;
              try {
                for (; i9 < queue.length; i9++) {
                  var callback = queue[i9];
                  do {
                    callback = callback(true);
                  } while (callback !== null);
                }
                queue.length = 0;
              } catch (error2) {
                queue = queue.slice(i9 + 1);
                throw error2;
              } finally {
                isFlushing = false;
              }
            }
          }
        }
        var createElement$1 = createElementWithValidation;
        var cloneElement$1 = cloneElementWithValidation;
        var createFactory = createFactoryWithValidation;
        var Children = {
          map: mapChildren,
          forEach: forEachChildren,
          count: countChildren,
          toArray: toArray2,
          only: onlyChild
        };
        exports.Children = Children;
        exports.Component = Component;
        exports.Fragment = REACT_FRAGMENT_TYPE;
        exports.Profiler = REACT_PROFILER_TYPE;
        exports.PureComponent = PureComponent;
        exports.StrictMode = REACT_STRICT_MODE_TYPE;
        exports.Suspense = REACT_SUSPENSE_TYPE;
        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
        exports.cloneElement = cloneElement$1;
        exports.createContext = createContext2;
        exports.createElement = createElement$1;
        exports.createFactory = createFactory;
        exports.createRef = createRef;
        exports.forwardRef = forwardRef3;
        exports.isValidElement = isValidElement;
        exports.lazy = lazy;
        exports.memo = memo;
        exports.startTransition = startTransition;
        exports.unstable_act = act;
        exports.useCallback = useCallback26;
        exports.useContext = useContext9;
        exports.useDebugValue = useDebugValue;
        exports.useDeferredValue = useDeferredValue;
        exports.useEffect = useEffect19;
        exports.useId = useId;
        exports.useImperativeHandle = useImperativeHandle4;
        exports.useInsertionEffect = useInsertionEffect;
        exports.useLayoutEffect = useLayoutEffect3;
        exports.useMemo = useMemo6;
        exports.useReducer = useReducer;
        exports.useRef = useRef19;
        exports.useState = useState14;
        exports.useSyncExternalStore = useSyncExternalStore;
        exports.useTransition = useTransition2;
        exports.version = ReactVersion;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  });

  // ../../node_modules/react/index.js
  var require_react = __commonJS((exports, module) => {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_development();
    }
  });

  // ../../node_modules/prop-types/node_modules/react-is/cjs/react-is.development.js
  var require_react_is_development = __commonJS((exports) => {
    /** @license React v16.13.1
     * react-is.development.js
     *
     * Copyright (c) Facebook, Inc. and its affiliates.
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE file in the root directory of this source tree.
     */
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol2 = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol2 ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol2 ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol2 ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol2 ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol2 ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol2 ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol2 ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol2 ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol2 ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol2 ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol2 ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol2 ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol2 ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol2 ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol2 ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol2 ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol2 ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol2 ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type2) {
          return typeof type2 === "string" || typeof type2 === "function" || type2 === REACT_FRAGMENT_TYPE || type2 === REACT_CONCURRENT_MODE_TYPE || type2 === REACT_PROFILER_TYPE || type2 === REACT_STRICT_MODE_TYPE || type2 === REACT_SUSPENSE_TYPE || type2 === REACT_SUSPENSE_LIST_TYPE || typeof type2 === "object" && type2 !== null && (type2.$$typeof === REACT_LAZY_TYPE || type2.$$typeof === REACT_MEMO_TYPE || type2.$$typeof === REACT_PROVIDER_TYPE || type2.$$typeof === REACT_CONTEXT_TYPE || type2.$$typeof === REACT_FORWARD_REF_TYPE || type2.$$typeof === REACT_FUNDAMENTAL_TYPE || type2.$$typeof === REACT_RESPONDER_TYPE || type2.$$typeof === REACT_SCOPE_TYPE || type2.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object2) {
          if (typeof object2 === "object" && object2 !== null) {
            var $$typeof = object2.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type2 = object2.type;
                switch (type2) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type2;
                  default:
                    var $$typeofType = type2 && type2.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment2 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object2) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object2) || typeOf(object2) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object2) {
          return typeOf(object2) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object2) {
          return typeOf(object2) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object2) {
          return typeOf(object2) === REACT_PROVIDER_TYPE;
        }
        function isElement4(object2) {
          return typeof object2 === "object" && object2 !== null && object2.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object2) {
          return typeOf(object2) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object2) {
          return typeOf(object2) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object2) {
          return typeOf(object2) === REACT_LAZY_TYPE;
        }
        function isMemo(object2) {
          return typeOf(object2) === REACT_MEMO_TYPE;
        }
        function isPortal(object2) {
          return typeOf(object2) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object2) {
          return typeOf(object2) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object2) {
          return typeOf(object2) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object2) {
          return typeOf(object2) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment2;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement4;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  });

  // ../../node_modules/prop-types/node_modules/react-is/index.js
  var require_react_is = __commonJS((exports, module) => {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  });

  // ../../node_modules/object-assign/index.js
  var require_object_assign = __commonJS((exports, module) => {
    /*
    object-assign
    (c) Sindre Sorhus
    @license MIT
    */
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty2 = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i9 = 0; i9 < 10; i9++) {
          test2["_" + String.fromCharCode(i9)] = i9;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n11) {
          return test2[n11];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to3 = toObject(target);
      var symbols;
      for (var s4 = 1; s4 < arguments.length; s4++) {
        from = Object(arguments[s4]);
        for (var key in from) {
          if (hasOwnProperty2.call(from, key)) {
            to3[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i9 = 0; i9 < symbols.length; i9++) {
            if (propIsEnumerable.call(from, symbols[i9])) {
              to3[symbols[i9]] = from[symbols[i9]];
            }
          }
        }
      }
      return to3;
    };
  });

  // ../../node_modules/prop-types/lib/ReactPropTypesSecret.js
  var require_ReactPropTypesSecret = __commonJS((exports, module) => {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  });

  // ../../node_modules/prop-types/lib/has.js
  var require_has = __commonJS((exports, module) => {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  });

  // ../../node_modules/prop-types/checkPropTypes.js
  var require_checkPropTypes = __commonJS((exports, module) => {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x7) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning((componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).");
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning("Failed " + location + " type: " + error.message + (stack != null ? stack : ""));
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  });

  // ../../node_modules/prop-types/factoryWithTypeCheckers.js
  var require_factoryWithTypeCheckers = __commonJS((exports, module) => {
    "use strict";
    var ReactIs = require_react_is();
    var assign3 = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x7) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is3(x7, y6) {
        if (x7 === y6) {
          return x7 !== 0 || 1 / x7 === 1 / y6;
        } else {
          return x7 !== x7 && y6 !== y6;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey2 = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey2] && manualPropTypeWarningCount < 3) {
                printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.");
                manualPropTypeCallCache[cacheKey2] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."), {expectedType});
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i9 = 0; i9 < propValue.length; i9++) {
            var error = typeChecker(propValue, i9, componentName, location, propFullName + "[" + i9 + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning("Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).");
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i9 = 0; i9 < expectedValues.length; i9++) {
            if (is3(propValue, expectedValues[i9])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type2 = getPreciseType(value);
            if (type2 === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i9 = 0; i9 < arrayOfTypeCheckers.length; i9++) {
          var checker = arrayOfTypeCheckers[i9];
          if (typeof checker !== "function") {
            printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i9 + ".");
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i10 = 0; i10 < arrayOfTypeCheckers.length; i10++) {
            var checker2 = arrayOfTypeCheckers[i10];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type2) {
        return new PropTypeError((componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type2 + "`.");
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign3({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  "));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type2 = getPreciseType(value);
        switch (type2) {
          case "array":
          case "object":
            return "an " + type2;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type2;
          default:
            return type2;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  });

  // ../../node_modules/prop-types/index.js
  var require_prop_types = __commonJS((exports, module) => {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  });

  // ../../node_modules/lodash/isArray.js
  var require_isArray = __commonJS((exports, module) => {
    var isArray2 = Array.isArray;
    module.exports = isArray2;
  });

  // ../../node_modules/lodash/_freeGlobal.js
  var require_freeGlobal = __commonJS((exports, module) => {
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    module.exports = freeGlobal;
  });

  // ../../node_modules/lodash/_root.js
  var require_root = __commonJS((exports, module) => {
    var freeGlobal = require_freeGlobal();
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root2 = freeGlobal || freeSelf || Function("return this")();
    module.exports = root2;
  });

  // ../../node_modules/lodash/_Symbol.js
  var require_Symbol = __commonJS((exports, module) => {
    var root2 = require_root();
    var Symbol2 = root2.Symbol;
    module.exports = Symbol2;
  });

  // ../../node_modules/lodash/_getRawTag.js
  var require_getRawTag = __commonJS((exports, module) => {
    var Symbol2 = require_Symbol();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function getRawTag(value) {
      var isOwn = hasOwnProperty2.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e15) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    module.exports = getRawTag;
  });

  // ../../node_modules/lodash/_objectToString.js
  var require_objectToString = __commonJS((exports, module) => {
    var objectProto = Object.prototype;
    var nativeObjectToString = objectProto.toString;
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    module.exports = objectToString;
  });

  // ../../node_modules/lodash/_baseGetTag.js
  var require_baseGetTag = __commonJS((exports, module) => {
    var Symbol2 = require_Symbol();
    var getRawTag = require_getRawTag();
    var objectToString = require_objectToString();
    var nullTag = "[object Null]";
    var undefinedTag = "[object Undefined]";
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    module.exports = baseGetTag;
  });

  // ../../node_modules/lodash/isObjectLike.js
  var require_isObjectLike = __commonJS((exports, module) => {
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    module.exports = isObjectLike;
  });

  // ../../node_modules/lodash/isSymbol.js
  var require_isSymbol = __commonJS((exports, module) => {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var symbolTag = "[object Symbol]";
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
    }
    module.exports = isSymbol;
  });

  // ../../node_modules/lodash/_isKey.js
  var require_isKey = __commonJS((exports, module) => {
    var isArray2 = require_isArray();
    var isSymbol = require_isSymbol();
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
    var reIsPlainProp = /^\w*$/;
    function isKey(value, object2) {
      if (isArray2(value)) {
        return false;
      }
      var type2 = typeof value;
      if (type2 == "number" || type2 == "symbol" || type2 == "boolean" || value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object2 != null && value in Object(object2);
    }
    module.exports = isKey;
  });

  // ../../node_modules/lodash/isObject.js
  var require_isObject = __commonJS((exports, module) => {
    function isObject(value) {
      var type2 = typeof value;
      return value != null && (type2 == "object" || type2 == "function");
    }
    module.exports = isObject;
  });

  // ../../node_modules/lodash/isFunction.js
  var require_isFunction = __commonJS((exports, module) => {
    var baseGetTag = require_baseGetTag();
    var isObject = require_isObject();
    var asyncTag = "[object AsyncFunction]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var proxyTag = "[object Proxy]";
    function isFunction4(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    module.exports = isFunction4;
  });

  // ../../node_modules/lodash/_coreJsData.js
  var require_coreJsData = __commonJS((exports, module) => {
    var root2 = require_root();
    var coreJsData = root2["__core-js_shared__"];
    module.exports = coreJsData;
  });

  // ../../node_modules/lodash/_isMasked.js
  var require_isMasked = __commonJS((exports, module) => {
    var coreJsData = require_coreJsData();
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    module.exports = isMasked;
  });

  // ../../node_modules/lodash/_toSource.js
  var require_toSource = __commonJS((exports, module) => {
    var funcProto = Function.prototype;
    var funcToString = funcProto.toString;
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e15) {
        }
        try {
          return func + "";
        } catch (e15) {
        }
      }
      return "";
    }
    module.exports = toSource;
  });

  // ../../node_modules/lodash/_baseIsNative.js
  var require_baseIsNative = __commonJS((exports, module) => {
    var isFunction4 = require_isFunction();
    var isMasked = require_isMasked();
    var isObject = require_isObject();
    var toSource = require_toSource();
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction4(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    module.exports = baseIsNative;
  });

  // ../../node_modules/lodash/_getValue.js
  var require_getValue = __commonJS((exports, module) => {
    function getValue(object2, key) {
      return object2 == null ? void 0 : object2[key];
    }
    module.exports = getValue;
  });

  // ../../node_modules/lodash/_getNative.js
  var require_getNative = __commonJS((exports, module) => {
    var baseIsNative = require_baseIsNative();
    var getValue = require_getValue();
    function getNative(object2, key) {
      var value = getValue(object2, key);
      return baseIsNative(value) ? value : void 0;
    }
    module.exports = getNative;
  });

  // ../../node_modules/lodash/_nativeCreate.js
  var require_nativeCreate = __commonJS((exports, module) => {
    var getNative = require_getNative();
    var nativeCreate = getNative(Object, "create");
    module.exports = nativeCreate;
  });

  // ../../node_modules/lodash/_hashClear.js
  var require_hashClear = __commonJS((exports, module) => {
    var nativeCreate = require_nativeCreate();
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    module.exports = hashClear;
  });

  // ../../node_modules/lodash/_hashDelete.js
  var require_hashDelete = __commonJS((exports, module) => {
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = hashDelete;
  });

  // ../../node_modules/lodash/_hashGet.js
  var require_hashGet = __commonJS((exports, module) => {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty2.call(data, key) ? data[key] : void 0;
    }
    module.exports = hashGet;
  });

  // ../../node_modules/lodash/_hashHas.js
  var require_hashHas = __commonJS((exports, module) => {
    var nativeCreate = require_nativeCreate();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty2.call(data, key);
    }
    module.exports = hashHas;
  });

  // ../../node_modules/lodash/_hashSet.js
  var require_hashSet = __commonJS((exports, module) => {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    module.exports = hashSet;
  });

  // ../../node_modules/lodash/_Hash.js
  var require_Hash = __commonJS((exports, module) => {
    var hashClear = require_hashClear();
    var hashDelete = require_hashDelete();
    var hashGet = require_hashGet();
    var hashHas = require_hashHas();
    var hashSet = require_hashSet();
    function Hash(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    module.exports = Hash;
  });

  // ../../node_modules/lodash/_listCacheClear.js
  var require_listCacheClear = __commonJS((exports, module) => {
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    module.exports = listCacheClear;
  });

  // ../../node_modules/lodash/eq.js
  var require_eq = __commonJS((exports, module) => {
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    module.exports = eq;
  });

  // ../../node_modules/lodash/_assocIndexOf.js
  var require_assocIndexOf = __commonJS((exports, module) => {
    var eq = require_eq();
    function assocIndexOf(array2, key) {
      var length = array2.length;
      while (length--) {
        if (eq(array2[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    module.exports = assocIndexOf;
  });

  // ../../node_modules/lodash/_listCacheDelete.js
  var require_listCacheDelete = __commonJS((exports, module) => {
    var assocIndexOf = require_assocIndexOf();
    var arrayProto = Array.prototype;
    var splice = arrayProto.splice;
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    module.exports = listCacheDelete;
  });

  // ../../node_modules/lodash/_listCacheGet.js
  var require_listCacheGet = __commonJS((exports, module) => {
    var assocIndexOf = require_assocIndexOf();
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    module.exports = listCacheGet;
  });

  // ../../node_modules/lodash/_listCacheHas.js
  var require_listCacheHas = __commonJS((exports, module) => {
    var assocIndexOf = require_assocIndexOf();
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    module.exports = listCacheHas;
  });

  // ../../node_modules/lodash/_listCacheSet.js
  var require_listCacheSet = __commonJS((exports, module) => {
    var assocIndexOf = require_assocIndexOf();
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    module.exports = listCacheSet;
  });

  // ../../node_modules/lodash/_ListCache.js
  var require_ListCache = __commonJS((exports, module) => {
    var listCacheClear = require_listCacheClear();
    var listCacheDelete = require_listCacheDelete();
    var listCacheGet = require_listCacheGet();
    var listCacheHas = require_listCacheHas();
    var listCacheSet = require_listCacheSet();
    function ListCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    module.exports = ListCache;
  });

  // ../../node_modules/lodash/_Map.js
  var require_Map = __commonJS((exports, module) => {
    var getNative = require_getNative();
    var root2 = require_root();
    var Map3 = getNative(root2, "Map");
    module.exports = Map3;
  });

  // ../../node_modules/lodash/_mapCacheClear.js
  var require_mapCacheClear = __commonJS((exports, module) => {
    var Hash = require_Hash();
    var ListCache = require_ListCache();
    var Map3 = require_Map();
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        hash: new Hash(),
        map: new (Map3 || ListCache)(),
        string: new Hash()
      };
    }
    module.exports = mapCacheClear;
  });

  // ../../node_modules/lodash/_isKeyable.js
  var require_isKeyable = __commonJS((exports, module) => {
    function isKeyable(value) {
      var type2 = typeof value;
      return type2 == "string" || type2 == "number" || type2 == "symbol" || type2 == "boolean" ? value !== "__proto__" : value === null;
    }
    module.exports = isKeyable;
  });

  // ../../node_modules/lodash/_getMapData.js
  var require_getMapData = __commonJS((exports, module) => {
    var isKeyable = require_isKeyable();
    function getMapData(map5, key) {
      var data = map5.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    module.exports = getMapData;
  });

  // ../../node_modules/lodash/_mapCacheDelete.js
  var require_mapCacheDelete = __commonJS((exports, module) => {
    var getMapData = require_getMapData();
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = mapCacheDelete;
  });

  // ../../node_modules/lodash/_mapCacheGet.js
  var require_mapCacheGet = __commonJS((exports, module) => {
    var getMapData = require_getMapData();
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    module.exports = mapCacheGet;
  });

  // ../../node_modules/lodash/_mapCacheHas.js
  var require_mapCacheHas = __commonJS((exports, module) => {
    var getMapData = require_getMapData();
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    module.exports = mapCacheHas;
  });

  // ../../node_modules/lodash/_mapCacheSet.js
  var require_mapCacheSet = __commonJS((exports, module) => {
    var getMapData = require_getMapData();
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size2 = data.size;
      data.set(key, value);
      this.size += data.size == size2 ? 0 : 1;
      return this;
    }
    module.exports = mapCacheSet;
  });

  // ../../node_modules/lodash/_MapCache.js
  var require_MapCache = __commonJS((exports, module) => {
    var mapCacheClear = require_mapCacheClear();
    var mapCacheDelete = require_mapCacheDelete();
    var mapCacheGet = require_mapCacheGet();
    var mapCacheHas = require_mapCacheHas();
    var mapCacheSet = require_mapCacheSet();
    function MapCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    module.exports = MapCache;
  });

  // ../../node_modules/lodash/memoize.js
  var require_memoize = __commonJS((exports, module) => {
    var MapCache = require_MapCache();
    var FUNC_ERROR_TEXT = "Expected a function";
    function memoize(func, resolver) {
      if (typeof func != "function" || resolver != null && typeof resolver != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache2 = memoized.cache;
        if (cache2.has(key)) {
          return cache2.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache2.set(key, result) || cache2;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    }
    memoize.Cache = MapCache;
    module.exports = memoize;
  });

  // ../../node_modules/lodash/_memoizeCapped.js
  var require_memoizeCapped = __commonJS((exports, module) => {
    var memoize = require_memoize();
    var MAX_MEMOIZE_SIZE = 500;
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache2.size === MAX_MEMOIZE_SIZE) {
          cache2.clear();
        }
        return key;
      });
      var cache2 = result.cache;
      return result;
    }
    module.exports = memoizeCapped;
  });

  // ../../node_modules/lodash/_stringToPath.js
  var require_stringToPath = __commonJS((exports, module) => {
    var memoizeCapped = require_memoizeCapped();
    var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46) {
        result.push("");
      }
      string.replace(rePropName, function(match2, number3, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, "$1") : number3 || match2);
      });
      return result;
    });
    module.exports = stringToPath;
  });

  // ../../node_modules/lodash/_arrayMap.js
  var require_arrayMap = __commonJS((exports, module) => {
    function arrayMap(array2, iteratee) {
      var index = -1, length = array2 == null ? 0 : array2.length, result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array2[index], index, array2);
      }
      return result;
    }
    module.exports = arrayMap;
  });

  // ../../node_modules/lodash/_baseToString.js
  var require_baseToString = __commonJS((exports, module) => {
    var Symbol2 = require_Symbol();
    var arrayMap = require_arrayMap();
    var isArray2 = require_isArray();
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolToString = symbolProto ? symbolProto.toString : void 0;
    function baseToString(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isArray2(value)) {
        return arrayMap(value, baseToString) + "";
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = baseToString;
  });

  // ../../node_modules/lodash/toString.js
  var require_toString = __commonJS((exports, module) => {
    var baseToString = require_baseToString();
    function toString(value) {
      return value == null ? "" : baseToString(value);
    }
    module.exports = toString;
  });

  // ../../node_modules/lodash/_castPath.js
  var require_castPath = __commonJS((exports, module) => {
    var isArray2 = require_isArray();
    var isKey = require_isKey();
    var stringToPath = require_stringToPath();
    var toString = require_toString();
    function castPath(value, object2) {
      if (isArray2(value)) {
        return value;
      }
      return isKey(value, object2) ? [value] : stringToPath(toString(value));
    }
    module.exports = castPath;
  });

  // ../../node_modules/lodash/_toKey.js
  var require_toKey = __commonJS((exports, module) => {
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    function toKey(value) {
      if (typeof value == "string" || isSymbol(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = toKey;
  });

  // ../../node_modules/lodash/_baseGet.js
  var require_baseGet = __commonJS((exports, module) => {
    var castPath = require_castPath();
    var toKey = require_toKey();
    function baseGet(object2, path2) {
      path2 = castPath(path2, object2);
      var index = 0, length = path2.length;
      while (object2 != null && index < length) {
        object2 = object2[toKey(path2[index++])];
      }
      return index && index == length ? object2 : void 0;
    }
    module.exports = baseGet;
  });

  // ../../node_modules/lodash/_defineProperty.js
  var require_defineProperty = __commonJS((exports, module) => {
    var getNative = require_getNative();
    var defineProperty = function() {
      try {
        var func = getNative(Object, "defineProperty");
        func({}, "", {});
        return func;
      } catch (e15) {
      }
    }();
    module.exports = defineProperty;
  });

  // ../../node_modules/lodash/_baseAssignValue.js
  var require_baseAssignValue = __commonJS((exports, module) => {
    var defineProperty = require_defineProperty();
    function baseAssignValue(object2, key, value) {
      if (key == "__proto__" && defineProperty) {
        defineProperty(object2, key, {
          configurable: true,
          enumerable: true,
          value,
          writable: true
        });
      } else {
        object2[key] = value;
      }
    }
    module.exports = baseAssignValue;
  });

  // ../../node_modules/lodash/_assignValue.js
  var require_assignValue = __commonJS((exports, module) => {
    var baseAssignValue = require_baseAssignValue();
    var eq = require_eq();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function assignValue(object2, key, value) {
      var objValue = object2[key];
      if (!(hasOwnProperty2.call(object2, key) && eq(objValue, value)) || value === void 0 && !(key in object2)) {
        baseAssignValue(object2, key, value);
      }
    }
    module.exports = assignValue;
  });

  // ../../node_modules/lodash/_isIndex.js
  var require_isIndex = __commonJS((exports, module) => {
    var MAX_SAFE_INTEGER = 9007199254740991;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    function isIndex(value, length) {
      var type2 = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (type2 == "number" || type2 != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    module.exports = isIndex;
  });

  // ../../node_modules/lodash/_baseSet.js
  var require_baseSet = __commonJS((exports, module) => {
    var assignValue = require_assignValue();
    var castPath = require_castPath();
    var isIndex = require_isIndex();
    var isObject = require_isObject();
    var toKey = require_toKey();
    function baseSet(object2, path2, value, customizer) {
      if (!isObject(object2)) {
        return object2;
      }
      path2 = castPath(path2, object2);
      var index = -1, length = path2.length, lastIndex = length - 1, nested = object2;
      while (nested != null && ++index < length) {
        var key = toKey(path2[index]), newValue = value;
        if (key === "__proto__" || key === "constructor" || key === "prototype") {
          return object2;
        }
        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : void 0;
          if (newValue === void 0) {
            newValue = isObject(objValue) ? objValue : isIndex(path2[index + 1]) ? [] : {};
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object2;
    }
    module.exports = baseSet;
  });

  // ../../node_modules/lodash/_basePickBy.js
  var require_basePickBy = __commonJS((exports, module) => {
    var baseGet = require_baseGet();
    var baseSet = require_baseSet();
    var castPath = require_castPath();
    function basePickBy(object2, paths, predicate) {
      var index = -1, length = paths.length, result = {};
      while (++index < length) {
        var path2 = paths[index], value = baseGet(object2, path2);
        if (predicate(value, path2)) {
          baseSet(result, castPath(path2, object2), value);
        }
      }
      return result;
    }
    module.exports = basePickBy;
  });

  // ../../node_modules/lodash/_baseHasIn.js
  var require_baseHasIn = __commonJS((exports, module) => {
    function baseHasIn(object2, key) {
      return object2 != null && key in Object(object2);
    }
    module.exports = baseHasIn;
  });

  // ../../node_modules/lodash/_baseIsArguments.js
  var require_baseIsArguments = __commonJS((exports, module) => {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    module.exports = baseIsArguments;
  });

  // ../../node_modules/lodash/isArguments.js
  var require_isArguments = __commonJS((exports, module) => {
    var baseIsArguments = require_baseIsArguments();
    var isObjectLike = require_isObjectLike();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var isArguments = baseIsArguments(function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty2.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    module.exports = isArguments;
  });

  // ../../node_modules/lodash/isLength.js
  var require_isLength = __commonJS((exports, module) => {
    var MAX_SAFE_INTEGER = 9007199254740991;
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    module.exports = isLength;
  });

  // ../../node_modules/lodash/_hasPath.js
  var require_hasPath = __commonJS((exports, module) => {
    var castPath = require_castPath();
    var isArguments = require_isArguments();
    var isArray2 = require_isArray();
    var isIndex = require_isIndex();
    var isLength = require_isLength();
    var toKey = require_toKey();
    function hasPath(object2, path2, hasFunc) {
      path2 = castPath(path2, object2);
      var index = -1, length = path2.length, result = false;
      while (++index < length) {
        var key = toKey(path2[index]);
        if (!(result = object2 != null && hasFunc(object2, key))) {
          break;
        }
        object2 = object2[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object2 == null ? 0 : object2.length;
      return !!length && isLength(length) && isIndex(key, length) && (isArray2(object2) || isArguments(object2));
    }
    module.exports = hasPath;
  });

  // ../../node_modules/lodash/hasIn.js
  var require_hasIn = __commonJS((exports, module) => {
    var baseHasIn = require_baseHasIn();
    var hasPath = require_hasPath();
    function hasIn(object2, path2) {
      return object2 != null && hasPath(object2, path2, baseHasIn);
    }
    module.exports = hasIn;
  });

  // ../../node_modules/lodash/_basePick.js
  var require_basePick = __commonJS((exports, module) => {
    var basePickBy = require_basePickBy();
    var hasIn = require_hasIn();
    function basePick(object2, paths) {
      return basePickBy(object2, paths, function(value, path2) {
        return hasIn(object2, path2);
      });
    }
    module.exports = basePick;
  });

  // ../../node_modules/lodash/_arrayPush.js
  var require_arrayPush = __commonJS((exports, module) => {
    function arrayPush(array2, values) {
      var index = -1, length = values.length, offset = array2.length;
      while (++index < length) {
        array2[offset + index] = values[index];
      }
      return array2;
    }
    module.exports = arrayPush;
  });

  // ../../node_modules/lodash/_isFlattenable.js
  var require_isFlattenable = __commonJS((exports, module) => {
    var Symbol2 = require_Symbol();
    var isArguments = require_isArguments();
    var isArray2 = require_isArray();
    var spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : void 0;
    function isFlattenable(value) {
      return isArray2(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
    }
    module.exports = isFlattenable;
  });

  // ../../node_modules/lodash/_baseFlatten.js
  var require_baseFlatten = __commonJS((exports, module) => {
    var arrayPush = require_arrayPush();
    var isFlattenable = require_isFlattenable();
    function baseFlatten(array2, depth, predicate, isStrict, result) {
      var index = -1, length = array2.length;
      predicate || (predicate = isFlattenable);
      result || (result = []);
      while (++index < length) {
        var value = array2[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }
    module.exports = baseFlatten;
  });

  // ../../node_modules/lodash/flatten.js
  var require_flatten = __commonJS((exports, module) => {
    var baseFlatten = require_baseFlatten();
    function flatten(array2) {
      var length = array2 == null ? 0 : array2.length;
      return length ? baseFlatten(array2, 1) : [];
    }
    module.exports = flatten;
  });

  // ../../node_modules/lodash/_apply.js
  var require_apply = __commonJS((exports, module) => {
    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);
        case 1:
          return func.call(thisArg, args[0]);
        case 2:
          return func.call(thisArg, args[0], args[1]);
        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }
      return func.apply(thisArg, args);
    }
    module.exports = apply;
  });

  // ../../node_modules/lodash/_overRest.js
  var require_overRest = __commonJS((exports, module) => {
    var apply = require_apply();
    var nativeMax = Math.max;
    function overRest(func, start2, transform) {
      start2 = nativeMax(start2 === void 0 ? func.length - 1 : start2, 0);
      return function() {
        var args = arguments, index = -1, length = nativeMax(args.length - start2, 0), array2 = Array(length);
        while (++index < length) {
          array2[index] = args[start2 + index];
        }
        index = -1;
        var otherArgs = Array(start2 + 1);
        while (++index < start2) {
          otherArgs[index] = args[index];
        }
        otherArgs[start2] = transform(array2);
        return apply(func, this, otherArgs);
      };
    }
    module.exports = overRest;
  });

  // ../../node_modules/lodash/constant.js
  var require_constant = __commonJS((exports, module) => {
    function constant(value) {
      return function() {
        return value;
      };
    }
    module.exports = constant;
  });

  // ../../node_modules/lodash/identity.js
  var require_identity = __commonJS((exports, module) => {
    function identity2(value) {
      return value;
    }
    module.exports = identity2;
  });

  // ../../node_modules/lodash/_baseSetToString.js
  var require_baseSetToString = __commonJS((exports, module) => {
    var constant = require_constant();
    var defineProperty = require_defineProperty();
    var identity2 = require_identity();
    var baseSetToString = !defineProperty ? identity2 : function(func, string) {
      return defineProperty(func, "toString", {
        configurable: true,
        enumerable: false,
        value: constant(string),
        writable: true
      });
    };
    module.exports = baseSetToString;
  });

  // ../../node_modules/lodash/_shortOut.js
  var require_shortOut = __commonJS((exports, module) => {
    var HOT_COUNT = 800;
    var HOT_SPAN = 16;
    var nativeNow = Date.now;
    function shortOut(func) {
      var count2 = 0, lastCalled = 0;
      return function() {
        var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
        lastCalled = stamp;
        if (remaining > 0) {
          if (++count2 >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count2 = 0;
        }
        return func.apply(void 0, arguments);
      };
    }
    module.exports = shortOut;
  });

  // ../../node_modules/lodash/_setToString.js
  var require_setToString = __commonJS((exports, module) => {
    var baseSetToString = require_baseSetToString();
    var shortOut = require_shortOut();
    var setToString = shortOut(baseSetToString);
    module.exports = setToString;
  });

  // ../../node_modules/lodash/_flatRest.js
  var require_flatRest = __commonJS((exports, module) => {
    var flatten = require_flatten();
    var overRest = require_overRest();
    var setToString = require_setToString();
    function flatRest(func) {
      return setToString(overRest(func, void 0, flatten), func + "");
    }
    module.exports = flatRest;
  });

  // ../../node_modules/lodash/pick.js
  var require_pick = __commonJS((exports, module) => {
    var basePick = require_basePick();
    var flatRest = require_flatRest();
    var pick4 = flatRest(function(object2, paths) {
      return object2 == null ? {} : basePick(object2, paths);
    });
    module.exports = pick4;
  });

  // ../../node_modules/lodash/_stackClear.js
  var require_stackClear = __commonJS((exports, module) => {
    var ListCache = require_ListCache();
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    module.exports = stackClear;
  });

  // ../../node_modules/lodash/_stackDelete.js
  var require_stackDelete = __commonJS((exports, module) => {
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    module.exports = stackDelete;
  });

  // ../../node_modules/lodash/_stackGet.js
  var require_stackGet = __commonJS((exports, module) => {
    function stackGet(key) {
      return this.__data__.get(key);
    }
    module.exports = stackGet;
  });

  // ../../node_modules/lodash/_stackHas.js
  var require_stackHas = __commonJS((exports, module) => {
    function stackHas(key) {
      return this.__data__.has(key);
    }
    module.exports = stackHas;
  });

  // ../../node_modules/lodash/_stackSet.js
  var require_stackSet = __commonJS((exports, module) => {
    var ListCache = require_ListCache();
    var Map3 = require_Map();
    var MapCache = require_MapCache();
    var LARGE_ARRAY_SIZE = 200;
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map3 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    module.exports = stackSet;
  });

  // ../../node_modules/lodash/_Stack.js
  var require_Stack = __commonJS((exports, module) => {
    var ListCache = require_ListCache();
    var stackClear = require_stackClear();
    var stackDelete = require_stackDelete();
    var stackGet = require_stackGet();
    var stackHas = require_stackHas();
    var stackSet = require_stackSet();
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    module.exports = Stack;
  });

  // ../../node_modules/lodash/_setCacheAdd.js
  var require_setCacheAdd = __commonJS((exports, module) => {
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    module.exports = setCacheAdd;
  });

  // ../../node_modules/lodash/_setCacheHas.js
  var require_setCacheHas = __commonJS((exports, module) => {
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    module.exports = setCacheHas;
  });

  // ../../node_modules/lodash/_SetCache.js
  var require_SetCache = __commonJS((exports, module) => {
    var MapCache = require_MapCache();
    var setCacheAdd = require_setCacheAdd();
    var setCacheHas = require_setCacheHas();
    function SetCache(values) {
      var index = -1, length = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length) {
        this.add(values[index]);
      }
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    module.exports = SetCache;
  });

  // ../../node_modules/lodash/_arraySome.js
  var require_arraySome = __commonJS((exports, module) => {
    function arraySome(array2, predicate) {
      var index = -1, length = array2 == null ? 0 : array2.length;
      while (++index < length) {
        if (predicate(array2[index], index, array2)) {
          return true;
        }
      }
      return false;
    }
    module.exports = arraySome;
  });

  // ../../node_modules/lodash/_cacheHas.js
  var require_cacheHas = __commonJS((exports, module) => {
    function cacheHas(cache2, key) {
      return cache2.has(key);
    }
    module.exports = cacheHas;
  });

  // ../../node_modules/lodash/_equalArrays.js
  var require_equalArrays = __commonJS((exports, module) => {
    var SetCache = require_SetCache();
    var arraySome = require_arraySome();
    var cacheHas = require_cacheHas();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function equalArrays(array2, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array2.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var arrStacked = stack.get(array2);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array2;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array2, other);
      stack.set(other, array2);
      while (++index < arrLength) {
        var arrValue = array2[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array2, stack) : customizer(arrValue, othValue, index, array2, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array2);
      stack["delete"](other);
      return result;
    }
    module.exports = equalArrays;
  });

  // ../../node_modules/lodash/_Uint8Array.js
  var require_Uint8Array = __commonJS((exports, module) => {
    var root2 = require_root();
    var Uint8Array2 = root2.Uint8Array;
    module.exports = Uint8Array2;
  });

  // ../../node_modules/lodash/_mapToArray.js
  var require_mapToArray = __commonJS((exports, module) => {
    function mapToArray(map5) {
      var index = -1, result = Array(map5.size);
      map5.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    module.exports = mapToArray;
  });

  // ../../node_modules/lodash/_setToArray.js
  var require_setToArray = __commonJS((exports, module) => {
    function setToArray(set) {
      var index = -1, result = Array(set.size);
      set.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    module.exports = setToArray;
  });

  // ../../node_modules/lodash/_equalByTag.js
  var require_equalByTag = __commonJS((exports, module) => {
    var Symbol2 = require_Symbol();
    var Uint8Array2 = require_Uint8Array();
    var eq = require_eq();
    var equalArrays = require_equalArrays();
    var mapToArray = require_mapToArray();
    var setToArray = require_setToArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function equalByTag(object2, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object2.byteLength != other.byteLength || object2.byteOffset != other.byteOffset) {
            return false;
          }
          object2 = object2.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object2.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object2), new Uint8Array2(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object2, +other);
        case errorTag:
          return object2.name == other.name && object2.message == other.message;
        case regexpTag:
        case stringTag:
          return object2 == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object2.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object2);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object2, other);
          var result = equalArrays(convert(object2), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object2);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object2) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    module.exports = equalByTag;
  });

  // ../../node_modules/lodash/_baseGetAllKeys.js
  var require_baseGetAllKeys = __commonJS((exports, module) => {
    var arrayPush = require_arrayPush();
    var isArray2 = require_isArray();
    function baseGetAllKeys(object2, keysFunc, symbolsFunc) {
      var result = keysFunc(object2);
      return isArray2(object2) ? result : arrayPush(result, symbolsFunc(object2));
    }
    module.exports = baseGetAllKeys;
  });

  // ../../node_modules/lodash/_arrayFilter.js
  var require_arrayFilter = __commonJS((exports, module) => {
    function arrayFilter(array2, predicate) {
      var index = -1, length = array2 == null ? 0 : array2.length, resIndex = 0, result = [];
      while (++index < length) {
        var value = array2[index];
        if (predicate(value, index, array2)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    module.exports = arrayFilter;
  });

  // ../../node_modules/lodash/stubArray.js
  var require_stubArray = __commonJS((exports, module) => {
    function stubArray() {
      return [];
    }
    module.exports = stubArray;
  });

  // ../../node_modules/lodash/_getSymbols.js
  var require_getSymbols = __commonJS((exports, module) => {
    var arrayFilter = require_arrayFilter();
    var stubArray = require_stubArray();
    var objectProto = Object.prototype;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbols = !nativeGetSymbols ? stubArray : function(object2) {
      if (object2 == null) {
        return [];
      }
      object2 = Object(object2);
      return arrayFilter(nativeGetSymbols(object2), function(symbol) {
        return propertyIsEnumerable.call(object2, symbol);
      });
    };
    module.exports = getSymbols;
  });

  // ../../node_modules/lodash/_baseTimes.js
  var require_baseTimes = __commonJS((exports, module) => {
    function baseTimes(n11, iteratee) {
      var index = -1, result = Array(n11);
      while (++index < n11) {
        result[index] = iteratee(index);
      }
      return result;
    }
    module.exports = baseTimes;
  });

  // ../../node_modules/lodash/stubFalse.js
  var require_stubFalse = __commonJS((exports, module) => {
    function stubFalse() {
      return false;
    }
    module.exports = stubFalse;
  });

  // ../../node_modules/lodash/isBuffer.js
  var require_isBuffer = __commonJS((exports, module) => {
    var root2 = require_root();
    var stubFalse = require_stubFalse();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer2 = moduleExports ? root2.Buffer : void 0;
    var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
    var isBuffer = nativeIsBuffer || stubFalse;
    module.exports = isBuffer;
  });

  // ../../node_modules/lodash/_baseIsTypedArray.js
  var require_baseIsTypedArray = __commonJS((exports, module) => {
    var baseGetTag = require_baseGetTag();
    var isLength = require_isLength();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    module.exports = baseIsTypedArray;
  });

  // ../../node_modules/lodash/_baseUnary.js
  var require_baseUnary = __commonJS((exports, module) => {
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    module.exports = baseUnary;
  });

  // ../../node_modules/lodash/_nodeUtil.js
  var require_nodeUtil = __commonJS((exports, module) => {
    var freeGlobal = require_freeGlobal();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        var types = freeModule && freeModule.require && freeModule.require("util").types;
        if (types) {
          return types;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e15) {
      }
    }();
    module.exports = nodeUtil;
  });

  // ../../node_modules/lodash/isTypedArray.js
  var require_isTypedArray = __commonJS((exports, module) => {
    var baseIsTypedArray = require_baseIsTypedArray();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    module.exports = isTypedArray;
  });

  // ../../node_modules/lodash/_arrayLikeKeys.js
  var require_arrayLikeKeys = __commonJS((exports, module) => {
    var baseTimes = require_baseTimes();
    var isArguments = require_isArguments();
    var isArray2 = require_isArray();
    var isBuffer = require_isBuffer();
    var isIndex = require_isIndex();
    var isTypedArray = require_isTypedArray();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray2(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty2.call(value, key)) && !(skipIndexes && (key == "length" || isBuff && (key == "offset" || key == "parent") || isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = arrayLikeKeys;
  });

  // ../../node_modules/lodash/_isPrototype.js
  var require_isPrototype = __commonJS((exports, module) => {
    var objectProto = Object.prototype;
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    module.exports = isPrototype;
  });

  // ../../node_modules/lodash/_overArg.js
  var require_overArg = __commonJS((exports, module) => {
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    module.exports = overArg;
  });

  // ../../node_modules/lodash/_nativeKeys.js
  var require_nativeKeys = __commonJS((exports, module) => {
    var overArg = require_overArg();
    var nativeKeys = overArg(Object.keys, Object);
    module.exports = nativeKeys;
  });

  // ../../node_modules/lodash/_baseKeys.js
  var require_baseKeys = __commonJS((exports, module) => {
    var isPrototype = require_isPrototype();
    var nativeKeys = require_nativeKeys();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function baseKeys(object2) {
      if (!isPrototype(object2)) {
        return nativeKeys(object2);
      }
      var result = [];
      for (var key in Object(object2)) {
        if (hasOwnProperty2.call(object2, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = baseKeys;
  });

  // ../../node_modules/lodash/isArrayLike.js
  var require_isArrayLike = __commonJS((exports, module) => {
    var isFunction4 = require_isFunction();
    var isLength = require_isLength();
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction4(value);
    }
    module.exports = isArrayLike;
  });

  // ../../node_modules/lodash/keys.js
  var require_keys = __commonJS((exports, module) => {
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeys = require_baseKeys();
    var isArrayLike = require_isArrayLike();
    function keys(object2) {
      return isArrayLike(object2) ? arrayLikeKeys(object2) : baseKeys(object2);
    }
    module.exports = keys;
  });

  // ../../node_modules/lodash/_getAllKeys.js
  var require_getAllKeys = __commonJS((exports, module) => {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbols = require_getSymbols();
    var keys = require_keys();
    function getAllKeys(object2) {
      return baseGetAllKeys(object2, keys, getSymbols);
    }
    module.exports = getAllKeys;
  });

  // ../../node_modules/lodash/_equalObjects.js
  var require_equalObjects = __commonJS((exports, module) => {
    var getAllKeys = require_getAllKeys();
    var COMPARE_PARTIAL_FLAG = 1;
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function equalObjects(object2, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object2), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty2.call(other, key))) {
          return false;
        }
      }
      var objStacked = stack.get(object2);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object2;
      }
      var result = true;
      stack.set(object2, other);
      stack.set(other, object2);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object2[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object2, stack) : customizer(objValue, othValue, key, object2, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object2.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object2 && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object2);
      stack["delete"](other);
      return result;
    }
    module.exports = equalObjects;
  });

  // ../../node_modules/lodash/_DataView.js
  var require_DataView = __commonJS((exports, module) => {
    var getNative = require_getNative();
    var root2 = require_root();
    var DataView2 = getNative(root2, "DataView");
    module.exports = DataView2;
  });

  // ../../node_modules/lodash/_Promise.js
  var require_Promise = __commonJS((exports, module) => {
    var getNative = require_getNative();
    var root2 = require_root();
    var Promise2 = getNative(root2, "Promise");
    module.exports = Promise2;
  });

  // ../../node_modules/lodash/_Set.js
  var require_Set = __commonJS((exports, module) => {
    var getNative = require_getNative();
    var root2 = require_root();
    var Set2 = getNative(root2, "Set");
    module.exports = Set2;
  });

  // ../../node_modules/lodash/_WeakMap.js
  var require_WeakMap = __commonJS((exports, module) => {
    var getNative = require_getNative();
    var root2 = require_root();
    var WeakMap2 = getNative(root2, "WeakMap");
    module.exports = WeakMap2;
  });

  // ../../node_modules/lodash/_getTag.js
  var require_getTag = __commonJS((exports, module) => {
    var DataView2 = require_DataView();
    var Map3 = require_Map();
    var Promise2 = require_Promise();
    var Set2 = require_Set();
    var WeakMap2 = require_WeakMap();
    var baseGetTag = require_baseGetTag();
    var toSource = require_toSource();
    var mapTag = "[object Map]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var setTag = "[object Set]";
    var weakMapTag = "[object WeakMap]";
    var dataViewTag = "[object DataView]";
    var dataViewCtorString = toSource(DataView2);
    var mapCtorString = toSource(Map3);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap2);
    var getTag = baseGetTag;
    if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map3 && getTag(new Map3()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    module.exports = getTag;
  });

  // ../../node_modules/lodash/_baseIsEqualDeep.js
  var require_baseIsEqualDeep = __commonJS((exports, module) => {
    var Stack = require_Stack();
    var equalArrays = require_equalArrays();
    var equalByTag = require_equalByTag();
    var equalObjects = require_equalObjects();
    var getTag = require_getTag();
    var isArray2 = require_isArray();
    var isBuffer = require_isBuffer();
    var isTypedArray = require_isTypedArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var objectTag = "[object Object]";
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function baseIsEqualDeep(object2, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray2(object2), othIsArr = isArray2(other), objTag = objIsArr ? arrayTag : getTag(object2), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object2)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object2) ? equalArrays(object2, other, bitmask, customizer, equalFunc, stack) : equalByTag(object2, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty2.call(object2, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty2.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object2.value() : object2, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object2, other, bitmask, customizer, equalFunc, stack);
    }
    module.exports = baseIsEqualDeep;
  });

  // ../../node_modules/lodash/_baseIsEqual.js
  var require_baseIsEqual = __commonJS((exports, module) => {
    var baseIsEqualDeep = require_baseIsEqualDeep();
    var isObjectLike = require_isObjectLike();
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    module.exports = baseIsEqual;
  });

  // ../../node_modules/lodash/_baseIsMatch.js
  var require_baseIsMatch = __commonJS((exports, module) => {
    var Stack = require_Stack();
    var baseIsEqual = require_baseIsEqual();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseIsMatch(object2, source, matchData, customizer) {
      var index = matchData.length, length = index, noCustomizer = !customizer;
      if (object2 == null) {
        return !length;
      }
      object2 = Object(object2);
      while (index--) {
        var data = matchData[index];
        if (noCustomizer && data[2] ? data[1] !== object2[data[0]] : !(data[0] in object2)) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0], objValue = object2[key], srcValue = data[1];
        if (noCustomizer && data[2]) {
          if (objValue === void 0 && !(key in object2)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object2, source, stack);
          }
          if (!(result === void 0 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    module.exports = baseIsMatch;
  });

  // ../../node_modules/lodash/_isStrictComparable.js
  var require_isStrictComparable = __commonJS((exports, module) => {
    var isObject = require_isObject();
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }
    module.exports = isStrictComparable;
  });

  // ../../node_modules/lodash/_getMatchData.js
  var require_getMatchData = __commonJS((exports, module) => {
    var isStrictComparable = require_isStrictComparable();
    var keys = require_keys();
    function getMatchData(object2) {
      var result = keys(object2), length = result.length;
      while (length--) {
        var key = result[length], value = object2[key];
        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }
    module.exports = getMatchData;
  });

  // ../../node_modules/lodash/_matchesStrictComparable.js
  var require_matchesStrictComparable = __commonJS((exports, module) => {
    function matchesStrictComparable(key, srcValue) {
      return function(object2) {
        if (object2 == null) {
          return false;
        }
        return object2[key] === srcValue && (srcValue !== void 0 || key in Object(object2));
      };
    }
    module.exports = matchesStrictComparable;
  });

  // ../../node_modules/lodash/_baseMatches.js
  var require_baseMatches = __commonJS((exports, module) => {
    var baseIsMatch = require_baseIsMatch();
    var getMatchData = require_getMatchData();
    var matchesStrictComparable = require_matchesStrictComparable();
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object2) {
        return object2 === source || baseIsMatch(object2, source, matchData);
      };
    }
    module.exports = baseMatches;
  });

  // ../../node_modules/lodash/get.js
  var require_get = __commonJS((exports, module) => {
    var baseGet = require_baseGet();
    function get5(object2, path2, defaultValue) {
      var result = object2 == null ? void 0 : baseGet(object2, path2);
      return result === void 0 ? defaultValue : result;
    }
    module.exports = get5;
  });

  // ../../node_modules/lodash/_baseMatchesProperty.js
  var require_baseMatchesProperty = __commonJS((exports, module) => {
    var baseIsEqual = require_baseIsEqual();
    var get5 = require_get();
    var hasIn = require_hasIn();
    var isKey = require_isKey();
    var isStrictComparable = require_isStrictComparable();
    var matchesStrictComparable = require_matchesStrictComparable();
    var toKey = require_toKey();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseMatchesProperty(path2, srcValue) {
      if (isKey(path2) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path2), srcValue);
      }
      return function(object2) {
        var objValue = get5(object2, path2);
        return objValue === void 0 && objValue === srcValue ? hasIn(object2, path2) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }
    module.exports = baseMatchesProperty;
  });

  // ../../node_modules/lodash/_baseProperty.js
  var require_baseProperty = __commonJS((exports, module) => {
    function baseProperty(key) {
      return function(object2) {
        return object2 == null ? void 0 : object2[key];
      };
    }
    module.exports = baseProperty;
  });

  // ../../node_modules/lodash/_basePropertyDeep.js
  var require_basePropertyDeep = __commonJS((exports, module) => {
    var baseGet = require_baseGet();
    function basePropertyDeep(path2) {
      return function(object2) {
        return baseGet(object2, path2);
      };
    }
    module.exports = basePropertyDeep;
  });

  // ../../node_modules/lodash/property.js
  var require_property = __commonJS((exports, module) => {
    var baseProperty = require_baseProperty();
    var basePropertyDeep = require_basePropertyDeep();
    var isKey = require_isKey();
    var toKey = require_toKey();
    function property(path2) {
      return isKey(path2) ? baseProperty(toKey(path2)) : basePropertyDeep(path2);
    }
    module.exports = property;
  });

  // ../../node_modules/lodash/_baseIteratee.js
  var require_baseIteratee = __commonJS((exports, module) => {
    var baseMatches = require_baseMatches();
    var baseMatchesProperty = require_baseMatchesProperty();
    var identity2 = require_identity();
    var isArray2 = require_isArray();
    var property = require_property();
    function baseIteratee(value) {
      if (typeof value == "function") {
        return value;
      }
      if (value == null) {
        return identity2;
      }
      if (typeof value == "object") {
        return isArray2(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }
    module.exports = baseIteratee;
  });

  // ../../node_modules/lodash/negate.js
  var require_negate = __commonJS((exports, module) => {
    var FUNC_ERROR_TEXT = "Expected a function";
    function negate(predicate) {
      if (typeof predicate != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0:
            return !predicate.call(this);
          case 1:
            return !predicate.call(this, args[0]);
          case 2:
            return !predicate.call(this, args[0], args[1]);
          case 3:
            return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }
    module.exports = negate;
  });

  // ../../node_modules/lodash/_getPrototype.js
  var require_getPrototype = __commonJS((exports, module) => {
    var overArg = require_overArg();
    var getPrototype = overArg(Object.getPrototypeOf, Object);
    module.exports = getPrototype;
  });

  // ../../node_modules/lodash/_getSymbolsIn.js
  var require_getSymbolsIn = __commonJS((exports, module) => {
    var arrayPush = require_arrayPush();
    var getPrototype = require_getPrototype();
    var getSymbols = require_getSymbols();
    var stubArray = require_stubArray();
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object2) {
      var result = [];
      while (object2) {
        arrayPush(result, getSymbols(object2));
        object2 = getPrototype(object2);
      }
      return result;
    };
    module.exports = getSymbolsIn;
  });

  // ../../node_modules/lodash/_nativeKeysIn.js
  var require_nativeKeysIn = __commonJS((exports, module) => {
    function nativeKeysIn(object2) {
      var result = [];
      if (object2 != null) {
        for (var key in Object(object2)) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = nativeKeysIn;
  });

  // ../../node_modules/lodash/_baseKeysIn.js
  var require_baseKeysIn = __commonJS((exports, module) => {
    var isObject = require_isObject();
    var isPrototype = require_isPrototype();
    var nativeKeysIn = require_nativeKeysIn();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function baseKeysIn(object2) {
      if (!isObject(object2)) {
        return nativeKeysIn(object2);
      }
      var isProto = isPrototype(object2), result = [];
      for (var key in object2) {
        if (!(key == "constructor" && (isProto || !hasOwnProperty2.call(object2, key)))) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = baseKeysIn;
  });

  // ../../node_modules/lodash/keysIn.js
  var require_keysIn = __commonJS((exports, module) => {
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeysIn = require_baseKeysIn();
    var isArrayLike = require_isArrayLike();
    function keysIn(object2) {
      return isArrayLike(object2) ? arrayLikeKeys(object2, true) : baseKeysIn(object2);
    }
    module.exports = keysIn;
  });

  // ../../node_modules/lodash/_getAllKeysIn.js
  var require_getAllKeysIn = __commonJS((exports, module) => {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbolsIn = require_getSymbolsIn();
    var keysIn = require_keysIn();
    function getAllKeysIn(object2) {
      return baseGetAllKeys(object2, keysIn, getSymbolsIn);
    }
    module.exports = getAllKeysIn;
  });

  // ../../node_modules/lodash/pickBy.js
  var require_pickBy = __commonJS((exports, module) => {
    var arrayMap = require_arrayMap();
    var baseIteratee = require_baseIteratee();
    var basePickBy = require_basePickBy();
    var getAllKeysIn = require_getAllKeysIn();
    function pickBy(object2, predicate) {
      if (object2 == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object2), function(prop) {
        return [prop];
      });
      predicate = baseIteratee(predicate);
      return basePickBy(object2, props, function(value, path2) {
        return predicate(value, path2[0]);
      });
    }
    module.exports = pickBy;
  });

  // ../../node_modules/lodash/omitBy.js
  var require_omitBy = __commonJS((exports, module) => {
    var baseIteratee = require_baseIteratee();
    var negate = require_negate();
    var pickBy = require_pickBy();
    function omitBy2(object2, predicate) {
      return pickBy(object2, negate(baseIteratee(predicate)));
    }
    module.exports = omitBy2;
  });

  // ../../node_modules/@babel/runtime/helpers/interopRequireDefault.js
  var require_interopRequireDefault = __commonJS((exports, module) => {
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
  });

  // ../../node_modules/@babel/runtime/helpers/extends.js
  var require_extends = __commonJS((exports, module) => {
    function _extends5() {
      module.exports = _extends5 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i9 = 1; i9 < arguments.length; i9++) {
          var source = arguments[i9];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      return _extends5.apply(this, arguments);
    }
    module.exports = _extends5, module.exports.__esModule = true, module.exports["default"] = module.exports;
  });

  // ../../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js
  var require_objectWithoutPropertiesLoose = __commonJS((exports, module) => {
    function _objectWithoutPropertiesLoose4(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i9;
      for (i9 = 0; i9 < sourceKeys.length; i9++) {
        key = sourceKeys[i9];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    module.exports = _objectWithoutPropertiesLoose4, module.exports.__esModule = true, module.exports["default"] = module.exports;
  });

  // ../../node_modules/classnames/index.js
  var require_classnames = __commonJS((exports, module) => {
    /*!
      Copyright (c) 2018 Jed Watson.
      Licensed under the MIT License (MIT), see
      http://jedwatson.github.io/classnames
    */
    (function() {
      "use strict";
      var hasOwn = {}.hasOwnProperty;
      function classNames7() {
        var classes = [];
        for (var i9 = 0; i9 < arguments.length; i9++) {
          var arg = arguments[i9];
          if (!arg)
            continue;
          var argType = typeof arg;
          if (argType === "string" || argType === "number") {
            classes.push(arg);
          } else if (Array.isArray(arg)) {
            if (arg.length) {
              var inner = classNames7.apply(null, arg);
              if (inner) {
                classes.push(inner);
              }
            }
          } else if (argType === "object") {
            if (arg.toString === Object.prototype.toString) {
              for (var key in arg) {
                if (hasOwn.call(arg, key) && arg[key]) {
                  classes.push(key);
                }
              }
            } else {
              classes.push(arg.toString());
            }
          }
        }
        return classes.join(" ");
      }
      if (typeof module !== "undefined" && module.exports) {
        classNames7.default = classNames7;
        module.exports = classNames7;
      } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define("classnames", [], function() {
          return classNames7;
        });
      } else {
        window.classNames = classNames7;
      }
    })();
  });

  // ../../node_modules/lodash/_metaMap.js
  var require_metaMap = __commonJS((exports, module) => {
    var WeakMap2 = require_WeakMap();
    var metaMap = WeakMap2 && new WeakMap2();
    module.exports = metaMap;
  });

  // ../../node_modules/lodash/_baseSetData.js
  var require_baseSetData = __commonJS((exports, module) => {
    var identity2 = require_identity();
    var metaMap = require_metaMap();
    var baseSetData = !metaMap ? identity2 : function(func, data) {
      metaMap.set(func, data);
      return func;
    };
    module.exports = baseSetData;
  });

  // ../../node_modules/lodash/_baseCreate.js
  var require_baseCreate = __commonJS((exports, module) => {
    var isObject = require_isObject();
    var objectCreate = Object.create;
    var baseCreate = function() {
      function object2() {
      }
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object2.prototype = proto;
        var result = new object2();
        object2.prototype = void 0;
        return result;
      };
    }();
    module.exports = baseCreate;
  });

  // ../../node_modules/lodash/_createCtor.js
  var require_createCtor = __commonJS((exports, module) => {
    var baseCreate = require_baseCreate();
    var isObject = require_isObject();
    function createCtor(Ctor) {
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0:
            return new Ctor();
          case 1:
            return new Ctor(args[0]);
          case 2:
            return new Ctor(args[0], args[1]);
          case 3:
            return new Ctor(args[0], args[1], args[2]);
          case 4:
            return new Ctor(args[0], args[1], args[2], args[3]);
          case 5:
            return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6:
            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7:
            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype), result = Ctor.apply(thisBinding, args);
        return isObject(result) ? result : thisBinding;
      };
    }
    module.exports = createCtor;
  });

  // ../../node_modules/lodash/_createBind.js
  var require_createBind = __commonJS((exports, module) => {
    var createCtor = require_createCtor();
    var root2 = require_root();
    var WRAP_BIND_FLAG = 1;
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
      function wrapper() {
        var fn2 = this && this !== root2 && this instanceof wrapper ? Ctor : func;
        return fn2.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }
    module.exports = createBind;
  });

  // ../../node_modules/lodash/_composeArgs.js
  var require_composeArgs = __commonJS((exports, module) => {
    var nativeMax = Math.max;
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result = Array(leftLength + rangeLength), isUncurried = !isCurried;
      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }
    module.exports = composeArgs;
  });

  // ../../node_modules/lodash/_composeArgsRight.js
  var require_composeArgsRight = __commonJS((exports, module) => {
    var nativeMax = Math.max;
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result = Array(rangeLength + rightLength), isUncurried = !isCurried;
      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }
    module.exports = composeArgsRight;
  });

  // ../../node_modules/lodash/_countHolders.js
  var require_countHolders = __commonJS((exports, module) => {
    function countHolders(array2, placeholder) {
      var length = array2.length, result = 0;
      while (length--) {
        if (array2[length] === placeholder) {
          ++result;
        }
      }
      return result;
    }
    module.exports = countHolders;
  });

  // ../../node_modules/lodash/_baseLodash.js
  var require_baseLodash = __commonJS((exports, module) => {
    function baseLodash() {
    }
    module.exports = baseLodash;
  });

  // ../../node_modules/lodash/_LazyWrapper.js
  var require_LazyWrapper = __commonJS((exports, module) => {
    var baseCreate = require_baseCreate();
    var baseLodash = require_baseLodash();
    var MAX_ARRAY_LENGTH = 4294967295;
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;
    module.exports = LazyWrapper;
  });

  // ../../node_modules/lodash/noop.js
  var require_noop = __commonJS((exports, module) => {
    function noop3() {
    }
    module.exports = noop3;
  });

  // ../../node_modules/lodash/_getData.js
  var require_getData = __commonJS((exports, module) => {
    var metaMap = require_metaMap();
    var noop3 = require_noop();
    var getData = !metaMap ? noop3 : function(func) {
      return metaMap.get(func);
    };
    module.exports = getData;
  });

  // ../../node_modules/lodash/_realNames.js
  var require_realNames = __commonJS((exports, module) => {
    var realNames = {};
    module.exports = realNames;
  });

  // ../../node_modules/lodash/_getFuncName.js
  var require_getFuncName = __commonJS((exports, module) => {
    var realNames = require_realNames();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function getFuncName(func) {
      var result = func.name + "", array2 = realNames[result], length = hasOwnProperty2.call(realNames, result) ? array2.length : 0;
      while (length--) {
        var data = array2[length], otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }
    module.exports = getFuncName;
  });

  // ../../node_modules/lodash/_LodashWrapper.js
  var require_LodashWrapper = __commonJS((exports, module) => {
    var baseCreate = require_baseCreate();
    var baseLodash = require_baseLodash();
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = void 0;
    }
    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;
    module.exports = LodashWrapper;
  });

  // ../../node_modules/lodash/_copyArray.js
  var require_copyArray = __commonJS((exports, module) => {
    function copyArray(source, array2) {
      var index = -1, length = source.length;
      array2 || (array2 = Array(length));
      while (++index < length) {
        array2[index] = source[index];
      }
      return array2;
    }
    module.exports = copyArray;
  });

  // ../../node_modules/lodash/_wrapperClone.js
  var require_wrapperClone = __commonJS((exports, module) => {
    var LazyWrapper = require_LazyWrapper();
    var LodashWrapper = require_LodashWrapper();
    var copyArray = require_copyArray();
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__ = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }
    module.exports = wrapperClone;
  });

  // ../../node_modules/lodash/wrapperLodash.js
  var require_wrapperLodash = __commonJS((exports, module) => {
    var LazyWrapper = require_LazyWrapper();
    var LodashWrapper = require_LodashWrapper();
    var baseLodash = require_baseLodash();
    var isArray2 = require_isArray();
    var isObjectLike = require_isObjectLike();
    var wrapperClone = require_wrapperClone();
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function lodash(value) {
      if (isObjectLike(value) && !isArray2(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty2.call(value, "__wrapped__")) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;
    module.exports = lodash;
  });

  // ../../node_modules/lodash/_isLaziable.js
  var require_isLaziable = __commonJS((exports, module) => {
    var LazyWrapper = require_LazyWrapper();
    var getData = require_getData();
    var getFuncName = require_getFuncName();
    var lodash = require_wrapperLodash();
    function isLaziable(func) {
      var funcName = getFuncName(func), other = lodash[funcName];
      if (typeof other != "function" || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }
    module.exports = isLaziable;
  });

  // ../../node_modules/lodash/_setData.js
  var require_setData = __commonJS((exports, module) => {
    var baseSetData = require_baseSetData();
    var shortOut = require_shortOut();
    var setData = shortOut(baseSetData);
    module.exports = setData;
  });

  // ../../node_modules/lodash/_getWrapDetails.js
  var require_getWrapDetails = __commonJS((exports, module) => {
    var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/;
    var reSplitDetails = /,? & /;
    function getWrapDetails(source) {
      var match2 = source.match(reWrapDetails);
      return match2 ? match2[1].split(reSplitDetails) : [];
    }
    module.exports = getWrapDetails;
  });

  // ../../node_modules/lodash/_insertWrapDetails.js
  var require_insertWrapDetails = __commonJS((exports, module) => {
    var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
      details = details.join(length > 2 ? ", " : " ");
      return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
    }
    module.exports = insertWrapDetails;
  });

  // ../../node_modules/lodash/_arrayEach.js
  var require_arrayEach = __commonJS((exports, module) => {
    function arrayEach(array2, iteratee) {
      var index = -1, length = array2 == null ? 0 : array2.length;
      while (++index < length) {
        if (iteratee(array2[index], index, array2) === false) {
          break;
        }
      }
      return array2;
    }
    module.exports = arrayEach;
  });

  // ../../node_modules/lodash/_baseFindIndex.js
  var require_baseFindIndex = __commonJS((exports, module) => {
    function baseFindIndex(array2, predicate, fromIndex, fromRight) {
      var length = array2.length, index = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index-- : ++index < length) {
        if (predicate(array2[index], index, array2)) {
          return index;
        }
      }
      return -1;
    }
    module.exports = baseFindIndex;
  });

  // ../../node_modules/lodash/_baseIsNaN.js
  var require_baseIsNaN = __commonJS((exports, module) => {
    function baseIsNaN(value) {
      return value !== value;
    }
    module.exports = baseIsNaN;
  });

  // ../../node_modules/lodash/_strictIndexOf.js
  var require_strictIndexOf = __commonJS((exports, module) => {
    function strictIndexOf(array2, value, fromIndex) {
      var index = fromIndex - 1, length = array2.length;
      while (++index < length) {
        if (array2[index] === value) {
          return index;
        }
      }
      return -1;
    }
    module.exports = strictIndexOf;
  });

  // ../../node_modules/lodash/_baseIndexOf.js
  var require_baseIndexOf = __commonJS((exports, module) => {
    var baseFindIndex = require_baseFindIndex();
    var baseIsNaN = require_baseIsNaN();
    var strictIndexOf = require_strictIndexOf();
    function baseIndexOf(array2, value, fromIndex) {
      return value === value ? strictIndexOf(array2, value, fromIndex) : baseFindIndex(array2, baseIsNaN, fromIndex);
    }
    module.exports = baseIndexOf;
  });

  // ../../node_modules/lodash/_arrayIncludes.js
  var require_arrayIncludes = __commonJS((exports, module) => {
    var baseIndexOf = require_baseIndexOf();
    function arrayIncludes(array2, value) {
      var length = array2 == null ? 0 : array2.length;
      return !!length && baseIndexOf(array2, value, 0) > -1;
    }
    module.exports = arrayIncludes;
  });

  // ../../node_modules/lodash/_updateWrapDetails.js
  var require_updateWrapDetails = __commonJS((exports, module) => {
    var arrayEach = require_arrayEach();
    var arrayIncludes = require_arrayIncludes();
    var WRAP_BIND_FLAG = 1;
    var WRAP_BIND_KEY_FLAG = 2;
    var WRAP_CURRY_FLAG = 8;
    var WRAP_CURRY_RIGHT_FLAG = 16;
    var WRAP_PARTIAL_FLAG = 32;
    var WRAP_PARTIAL_RIGHT_FLAG = 64;
    var WRAP_ARY_FLAG = 128;
    var WRAP_REARG_FLAG = 256;
    var WRAP_FLIP_FLAG = 512;
    var wrapFlags = [
      ["ary", WRAP_ARY_FLAG],
      ["bind", WRAP_BIND_FLAG],
      ["bindKey", WRAP_BIND_KEY_FLAG],
      ["curry", WRAP_CURRY_FLAG],
      ["curryRight", WRAP_CURRY_RIGHT_FLAG],
      ["flip", WRAP_FLIP_FLAG],
      ["partial", WRAP_PARTIAL_FLAG],
      ["partialRight", WRAP_PARTIAL_RIGHT_FLAG],
      ["rearg", WRAP_REARG_FLAG]
    ];
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair2) {
        var value = "_." + pair2[0];
        if (bitmask & pair2[1] && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }
    module.exports = updateWrapDetails;
  });

  // ../../node_modules/lodash/_setWrapToString.js
  var require_setWrapToString = __commonJS((exports, module) => {
    var getWrapDetails = require_getWrapDetails();
    var insertWrapDetails = require_insertWrapDetails();
    var setToString = require_setToString();
    var updateWrapDetails = require_updateWrapDetails();
    function setWrapToString(wrapper, reference, bitmask) {
      var source = reference + "";
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }
    module.exports = setWrapToString;
  });

  // ../../node_modules/lodash/_createRecurry.js
  var require_createRecurry = __commonJS((exports, module) => {
    var isLaziable = require_isLaziable();
    var setData = require_setData();
    var setWrapToString = require_setWrapToString();
    var WRAP_BIND_FLAG = 1;
    var WRAP_BIND_KEY_FLAG = 2;
    var WRAP_CURRY_BOUND_FLAG = 4;
    var WRAP_CURRY_FLAG = 8;
    var WRAP_PARTIAL_FLAG = 32;
    var WRAP_PARTIAL_RIGHT_FLAG = 64;
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : void 0, newHoldersRight = isCurry ? void 0 : holders, newPartials = isCurry ? partials : void 0, newPartialsRight = isCurry ? void 0 : partials;
      bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func,
        bitmask,
        thisArg,
        newPartials,
        newHolders,
        newPartialsRight,
        newHoldersRight,
        argPos,
        ary,
        arity
      ];
      var result = wrapFunc.apply(void 0, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }
    module.exports = createRecurry;
  });

  // ../../node_modules/lodash/_getHolder.js
  var require_getHolder = __commonJS((exports, module) => {
    function getHolder(func) {
      var object2 = func;
      return object2.placeholder;
    }
    module.exports = getHolder;
  });

  // ../../node_modules/lodash/_reorder.js
  var require_reorder = __commonJS((exports, module) => {
    var copyArray = require_copyArray();
    var isIndex = require_isIndex();
    var nativeMin = Math.min;
    function reorder(array2, indexes) {
      var arrLength = array2.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array2);
      while (length--) {
        var index = indexes[length];
        array2[length] = isIndex(index, arrLength) ? oldArray[index] : void 0;
      }
      return array2;
    }
    module.exports = reorder;
  });

  // ../../node_modules/lodash/_replaceHolders.js
  var require_replaceHolders = __commonJS((exports, module) => {
    var PLACEHOLDER = "__lodash_placeholder__";
    function replaceHolders(array2, placeholder) {
      var index = -1, length = array2.length, resIndex = 0, result = [];
      while (++index < length) {
        var value = array2[index];
        if (value === placeholder || value === PLACEHOLDER) {
          array2[index] = PLACEHOLDER;
          result[resIndex++] = index;
        }
      }
      return result;
    }
    module.exports = replaceHolders;
  });

  // ../../node_modules/lodash/_createHybrid.js
  var require_createHybrid = __commonJS((exports, module) => {
    var composeArgs = require_composeArgs();
    var composeArgsRight = require_composeArgsRight();
    var countHolders = require_countHolders();
    var createCtor = require_createCtor();
    var createRecurry = require_createRecurry();
    var getHolder = require_getHolder();
    var reorder = require_reorder();
    var replaceHolders = require_replaceHolders();
    var root2 = require_root();
    var WRAP_BIND_FLAG = 1;
    var WRAP_BIND_KEY_FLAG = 2;
    var WRAP_CURRY_FLAG = 8;
    var WRAP_CURRY_RIGHT_FLAG = 16;
    var WRAP_ARY_FLAG = 128;
    var WRAP_FLIP_FLAG = 512;
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? void 0 : createCtor(func);
      function wrapper() {
        var length = arguments.length, args = Array(length), index = length;
        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
        }
        var thisBinding = isBind ? thisArg : this, fn2 = isBindKey ? thisBinding[func] : func;
        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root2 && this instanceof wrapper) {
          fn2 = Ctor || createCtor(fn2);
        }
        return fn2.apply(thisBinding, args);
      }
      return wrapper;
    }
    module.exports = createHybrid;
  });

  // ../../node_modules/lodash/_createCurry.js
  var require_createCurry = __commonJS((exports, module) => {
    var apply = require_apply();
    var createCtor = require_createCtor();
    var createHybrid = require_createHybrid();
    var createRecurry = require_createRecurry();
    var getHolder = require_getHolder();
    var replaceHolders = require_replaceHolders();
    var root2 = require_root();
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);
      function wrapper() {
        var length = arguments.length, args = Array(length), index = length, placeholder = getHolder(wrapper);
        while (index--) {
          args[index] = arguments[index];
        }
        var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
        length -= holders.length;
        if (length < arity) {
          return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, void 0, args, holders, void 0, void 0, arity - length);
        }
        var fn2 = this && this !== root2 && this instanceof wrapper ? Ctor : func;
        return apply(fn2, this, args);
      }
      return wrapper;
    }
    module.exports = createCurry;
  });

  // ../../node_modules/lodash/_createPartial.js
  var require_createPartial = __commonJS((exports, module) => {
    var apply = require_apply();
    var createCtor = require_createCtor();
    var root2 = require_root();
    var WRAP_BIND_FLAG = 1;
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
      function wrapper() {
        var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array(leftLength + argsLength), fn2 = this && this !== root2 && this instanceof wrapper ? Ctor : func;
        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn2, isBind ? thisArg : this, args);
      }
      return wrapper;
    }
    module.exports = createPartial;
  });

  // ../../node_modules/lodash/_mergeData.js
  var require_mergeData = __commonJS((exports, module) => {
    var composeArgs = require_composeArgs();
    var composeArgsRight = require_composeArgsRight();
    var replaceHolders = require_replaceHolders();
    var PLACEHOLDER = "__lodash_placeholder__";
    var WRAP_BIND_FLAG = 1;
    var WRAP_BIND_KEY_FLAG = 2;
    var WRAP_CURRY_BOUND_FLAG = 4;
    var WRAP_CURRY_FLAG = 8;
    var WRAP_ARY_FLAG = 128;
    var WRAP_REARG_FLAG = 256;
    var nativeMin = Math.min;
    function mergeData(data, source) {
      var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
      var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
      if (!(isCommon || isCombo)) {
        return data;
      }
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      value = source[7];
      if (value) {
        data[7] = value;
      }
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      if (data[9] == null) {
        data[9] = source[9];
      }
      data[0] = source[0];
      data[1] = newBitmask;
      return data;
    }
    module.exports = mergeData;
  });

  // ../../node_modules/lodash/_trimmedEndIndex.js
  var require_trimmedEndIndex = __commonJS((exports, module) => {
    var reWhitespace = /\s/;
    function trimmedEndIndex(string) {
      var index = string.length;
      while (index-- && reWhitespace.test(string.charAt(index))) {
      }
      return index;
    }
    module.exports = trimmedEndIndex;
  });

  // ../../node_modules/lodash/_baseTrim.js
  var require_baseTrim = __commonJS((exports, module) => {
    var trimmedEndIndex = require_trimmedEndIndex();
    var reTrimStart = /^\s+/;
    function baseTrim(string) {
      return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
    }
    module.exports = baseTrim;
  });

  // ../../node_modules/lodash/toNumber.js
  var require_toNumber = __commonJS((exports, module) => {
    var baseTrim = require_baseTrim();
    var isObject = require_isObject();
    var isSymbol = require_isSymbol();
    var NAN = 0 / 0;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = toNumber;
  });

  // ../../node_modules/lodash/toFinite.js
  var require_toFinite = __commonJS((exports, module) => {
    var toNumber = require_toNumber();
    var INFINITY = 1 / 0;
    var MAX_INTEGER = 17976931348623157e292;
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign3 = value < 0 ? -1 : 1;
        return sign3 * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    module.exports = toFinite;
  });

  // ../../node_modules/lodash/toInteger.js
  var require_toInteger = __commonJS((exports, module) => {
    var toFinite = require_toFinite();
    function toInteger2(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    module.exports = toInteger2;
  });

  // ../../node_modules/lodash/_createWrap.js
  var require_createWrap = __commonJS((exports, module) => {
    var baseSetData = require_baseSetData();
    var createBind = require_createBind();
    var createCurry = require_createCurry();
    var createHybrid = require_createHybrid();
    var createPartial = require_createPartial();
    var getData = require_getData();
    var mergeData = require_mergeData();
    var setData = require_setData();
    var setWrapToString = require_setWrapToString();
    var toInteger2 = require_toInteger();
    var FUNC_ERROR_TEXT = "Expected a function";
    var WRAP_BIND_FLAG = 1;
    var WRAP_BIND_KEY_FLAG = 2;
    var WRAP_CURRY_FLAG = 8;
    var WRAP_CURRY_RIGHT_FLAG = 16;
    var WRAP_PARTIAL_FLAG = 32;
    var WRAP_PARTIAL_RIGHT_FLAG = 64;
    var nativeMax = Math.max;
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = void 0;
      }
      ary = ary === void 0 ? ary : nativeMax(toInteger2(ary), 0);
      arity = arity === void 0 ? arity : toInteger2(arity);
      length -= holders ? holders.length : 0;
      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials, holdersRight = holders;
        partials = holders = void 0;
      }
      var data = isBindKey ? void 0 : getData(func);
      var newData = [
        func,
        bitmask,
        thisArg,
        partials,
        holders,
        partialsRight,
        holdersRight,
        argPos,
        ary,
        arity
      ];
      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === void 0 ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(void 0, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }
    module.exports = createWrap;
  });

  // ../../node_modules/lodash/curry.js
  var require_curry = __commonJS((exports, module) => {
    var createWrap = require_createWrap();
    var WRAP_CURRY_FLAG = 8;
    function curry2(func, arity, guard) {
      arity = guard ? void 0 : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, void 0, void 0, void 0, void 0, void 0, arity);
      result.placeholder = curry2.placeholder;
      return result;
    }
    curry2.placeholder = {};
    module.exports = curry2;
  });

  // ../../node_modules/@rsuite/icons/lib/utils/prefix.js
  var require_prefix = __commonJS((exports) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.prefix = exports.defaultClassPrefix = exports.getClassNamePrefix = exports.globalKey = void 0;
    var _curry = _interopRequireDefault(require_curry());
    var _classnames = _interopRequireDefault(require_classnames());
    var globalKey = "rs-";
    exports.globalKey = globalKey;
    var getClassNamePrefix = function getClassNamePrefix2() {
      return globalKey;
    };
    exports.getClassNamePrefix = getClassNamePrefix;
    var defaultClassPrefix = function defaultClassPrefix2(name) {
      return name ? "" + getClassNamePrefix() + name : void 0;
    };
    exports.defaultClassPrefix = defaultClassPrefix;
    var prefix3 = (0, _curry["default"])(function(pre, className) {
      if (!pre || !className) {
        return "";
      }
      if (Array.isArray(className)) {
        return (0, _classnames["default"])(className.filter(function(name) {
          return !!name;
        }).map(function(name) {
          return pre + "-" + name;
        }));
      }
      return pre + "-" + className;
    });
    exports.prefix = prefix3;
  });

  // ../../node_modules/@rsuite/icons/lib/utils/useClassNames.js
  var require_useClassNames = __commonJS((exports, module) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports["default"] = useClassNames2;
    var _prefix = require_prefix();
    var _classnames = _interopRequireDefault(require_classnames());
    var _react = require_react();
    function useClassNames2(componentClassName) {
      var className = (0, _prefix.defaultClassPrefix)("icon");
      var addPrefix = (0, _react.useCallback)(function(blockClassName) {
        return (0, _prefix.prefix)(className, blockClassName);
      }, []);
      return [(0, _classnames["default"])(className, (0, _prefix.defaultClassPrefix)(componentClassName)), addPrefix];
    }
    module.exports = exports.default;
  });

  // ../../node_modules/@rsuite/icons/lib/utils/inBrowserEnv.js
  var require_inBrowserEnv = __commonJS((exports, module) => {
    "use strict";
    exports.__esModule = true;
    exports["default"] = _default;
    function _default() {
      return typeof document !== "undefined" && typeof window !== "undefined" && typeof document.createElement === "function";
    }
    module.exports = exports.default;
  });

  // ../../node_modules/insert-css/index.js
  var require_insert_css = __commonJS((exports, module) => {
    var containers = [];
    var styleElements = [];
    var usage = "insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).";
    function insertCss(css, options) {
      options = options || {};
      if (css === void 0) {
        throw new Error(usage);
      }
      var position = options.prepend === true ? "prepend" : "append";
      var container2 = options.container !== void 0 ? options.container : document.querySelector("head");
      var containerId = containers.indexOf(container2);
      if (containerId === -1) {
        containerId = containers.push(container2) - 1;
        styleElements[containerId] = {};
      }
      var styleElement;
      if (styleElements[containerId] !== void 0 && styleElements[containerId][position] !== void 0) {
        styleElement = styleElements[containerId][position];
      } else {
        styleElement = styleElements[containerId][position] = createStyleElement();
        if (position === "prepend") {
          container2.insertBefore(styleElement, container2.childNodes[0]);
        } else {
          container2.appendChild(styleElement);
        }
      }
      if (css.charCodeAt(0) === 65279) {
        css = css.substr(1, css.length);
      }
      if (styleElement.styleSheet) {
        styleElement.styleSheet.cssText += css;
      } else {
        styleElement.textContent += css;
      }
      return styleElement;
    }
    function createStyleElement() {
      var styleElement = document.createElement("style");
      styleElement.setAttribute("type", "text/css");
      return styleElement;
    }
    module.exports = insertCss;
    module.exports.insertCss = insertCss;
  });

  // ../../node_modules/@rsuite/icons/lib/utils/useInsertStyles.js
  var require_useInsertStyles = __commonJS((exports, module) => {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _insertCss = require_insert_css();
    var _prefix = require_prefix();
    var _react = require_react();
    var prefix3 = (0, _prefix.getClassNamePrefix)();
    var styles = "." + prefix3 + "icon {\n  display: -webkit-inline-box;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  vertical-align: middle;\n}\n." + prefix3 + "icon[tabindex] {\n  cursor: pointer;\n}\n." + prefix3 + "icon-spin {\n  -webkit-animation: icon-spin 2s infinite linear;\n          animation: icon-spin 2s infinite linear;\n}\n." + prefix3 + "icon-pulse {\n  -webkit-animation: icon-spin 1s infinite steps(8);\n          animation: icon-spin 1s infinite steps(8);\n}\n." + prefix3 + "icon-flip-horizontal {\n  -webkit-transform: scaleX(-1);\n      -ms-transform: scaleX(-1);\n          transform: scaleX(-1);\n}\n." + prefix3 + "icon-flip-vertical {\n  -webkit-transform: scaleY(-1);\n      -ms-transform: scaleY(-1);\n          transform: scaleY(-1);\n}\n@-webkit-keyframes icon-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n            transform: rotate(359deg);\n  }\n}\n@keyframes icon-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n            transform: rotate(359deg);\n  }\n}";
    var cssInjected = false;
    var useInsertStyles = function useInsertStyles2(styleStr) {
      if (styleStr === void 0) {
        styleStr = styles;
      }
      (0, _react.useEffect)(function() {
        if (!cssInjected) {
          (0, _insertCss.insertCss)(styleStr, {
            prepend: true
          });
          cssInjected = true;
        }
      }, []);
    };
    var _default = useInsertStyles;
    exports["default"] = _default;
    module.exports = exports.default;
  });

  // ../../node_modules/@rsuite/icons/lib/utils/index.js
  var require_utils = __commonJS((exports) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    var _exportNames = {
      useClassNames: true,
      inBrowserEnv: true,
      useInsertStyles: true
    };
    exports.useInsertStyles = exports.inBrowserEnv = exports.useClassNames = void 0;
    var _prefix = require_prefix();
    Object.keys(_prefix).forEach(function(key) {
      if (key === "default" || key === "__esModule")
        return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key))
        return;
      if (key in exports && exports[key] === _prefix[key])
        return;
      exports[key] = _prefix[key];
    });
    var _useClassNames = _interopRequireDefault(require_useClassNames());
    exports.useClassNames = _useClassNames["default"];
    var _inBrowserEnv = _interopRequireDefault(require_inBrowserEnv());
    exports.inBrowserEnv = _inBrowserEnv["default"];
    var _useInsertStyles = _interopRequireDefault(require_useInsertStyles());
    exports.useInsertStyles = _useInsertStyles["default"];
  });

  // ../../node_modules/@rsuite/icons/lib/Icon.js
  var require_Icon = __commonJS((exports, module) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _extends22 = _interopRequireDefault(require_extends());
    var _objectWithoutPropertiesLoose22 = _interopRequireDefault(require_objectWithoutPropertiesLoose());
    var _react = _interopRequireDefault(require_react());
    var _classnames = _interopRequireDefault(require_classnames());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _utils = require_utils();
    var defaultProps = {
      as: "svg",
      fill: "currentColor",
      width: "1em",
      height: "1em"
    };
    function filterProps(props) {
      var nextProps = {};
      Object.entries(props).forEach(function(_ref) {
        var key = _ref[0], value = _ref[1];
        if (typeof value !== "undefined") {
          nextProps[key] = value;
        }
      });
      return nextProps;
    }
    var Icon = /* @__PURE__ */ _react["default"].forwardRef(function(props, ref) {
      var _classNames;
      var Component = props.as, spin = props.spin, pulse = props.pulse, flip = props.flip, fill = props.fill, className = props.className, rotate = props.rotate, children = props.children, viewBox = props.viewBox, width = props.width, height = props.height, style = props.style, rest = (0, _objectWithoutPropertiesLoose22["default"])(props, ["as", "spin", "pulse", "flip", "fill", "className", "rotate", "children", "viewBox", "width", "height", "style"]);
      var _useClassNames = (0, _utils.useClassNames)(), componentClassName = _useClassNames[0], addPrefix = _useClassNames[1];
      var classes = (0, _classnames["default"])(className, componentClassName, (_classNames = {}, _classNames[addPrefix("spin")] = spin, _classNames[addPrefix("pulse")] = pulse, _classNames[addPrefix("flip-" + flip)] = !!flip, _classNames));
      var rotateStyles = {
        msTransform: "rotate(" + rotate + "deg)",
        transform: "rotate(" + rotate + "deg)"
      };
      (0, _utils.useInsertStyles)();
      var svgProps = filterProps({
        width,
        height,
        fill,
        viewBox,
        className: classes,
        style: rotate ? (0, _extends22["default"])({}, rotateStyles, style) : style
      });
      return /* @__PURE__ */ _react["default"].createElement(Component, (0, _extends22["default"])({
        "aria-hidden": true,
        focusable: false,
        ref
      }, svgProps, rest), children);
    });
    Icon.displayName = "Icon";
    Icon.defaultProps = defaultProps;
    Icon.propTypes = {
      spin: _propTypes["default"].bool,
      pulse: _propTypes["default"].bool,
      rotate: _propTypes["default"].number,
      viewBox: _propTypes["default"].string,
      as: _propTypes["default"].oneOfType([_propTypes["default"].elementType, _propTypes["default"].string]),
      flip: _propTypes["default"].oneOf(["horizontal", "vertical"]),
      fill: _propTypes["default"].string
    };
    var _default = Icon;
    exports["default"] = _default;
    module.exports = exports.default;
  });

  // ../../node_modules/@rsuite/icons/lib/createSvgIcon.js
  var require_createSvgIcon = __commonJS((exports, module) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _extends22 = _interopRequireDefault(require_extends());
    var _react = _interopRequireDefault(require_react());
    var _Icon = _interopRequireDefault(require_Icon());
    function createSvgIcon(_ref) {
      var as = _ref.as, ariaLabel = _ref.ariaLabel, displayName = _ref.displayName, category = _ref.category;
      var IconComponent = /* @__PURE__ */ _react["default"].forwardRef(function(props, ref) {
        return /* @__PURE__ */ _react["default"].createElement(_Icon["default"], (0, _extends22["default"])({
          "aria-label": ariaLabel,
          "data-category": category,
          ref,
          as
        }, props));
      });
      IconComponent.displayName = displayName;
      return IconComponent;
    }
    var _default = createSvgIcon;
    exports["default"] = _default;
    module.exports = exports.default;
  });

  // ../../node_modules/@rsuite/icon-font/lib/application/Close.js
  var require_Close = __commonJS((exports) => {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var React52 = _interopRequireWildcard(require_react());
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache2 = new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache2;
      };
      return cache2;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {default: obj};
      }
      var cache2 = _getRequireWildcardCache();
      if (cache2 && cache2.has(obj)) {
        return cache2.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache2) {
        cache2.set(obj, newObj);
      }
      return newObj;
    }
    function _extends5() {
      _extends5 = Object.assign || function(target) {
        for (var i9 = 1; i9 < arguments.length; i9++) {
          var source = arguments[i9];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends5.apply(this, arguments);
    }
    function Close2(props, svgRef) {
      return /* @__PURE__ */ React52.createElement("svg", _extends5({
        width: "1em",
        height: "1em",
        viewBox: "0 0 16 16",
        fill: "currentColor",
        ref: svgRef
      }, props), /* @__PURE__ */ React52.createElement("path", {
        d: "M2.784 2.089l.069.058 5.146 5.147 5.146-5.147a.5.5 0 01.765.638l-.058.069L8.705 8l5.147 5.146a.5.5 0 01-.638.765l-.069-.058-5.146-5.147-5.146 5.147a.5.5 0 01-.765-.638l.058-.069L7.293 8 2.146 2.854a.5.5 0 01.638-.765z"
      }));
    }
    var ForwardRef = /* @__PURE__ */ React52.forwardRef(Close2);
    var _default = ForwardRef;
    exports["default"] = _default;
  });

  // ../../node_modules/@rsuite/icons/lib/icons/Close.js
  var require_Close2 = __commonJS((exports, module) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _Close = _interopRequireDefault(require_Close());
    var Close2 = (0, _createSvgIcon["default"])({
      as: _Close["default"],
      ariaLabel: "close",
      category: "application",
      displayName: "Close"
    });
    var _default = Close2;
    exports["default"] = _default;
    module.exports = exports.default;
  });

  // ../../node_modules/@rsuite/icons/Close.js
  var require_Close3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function get5() {
        return _Close["default"];
      }
    });
    var _Close = _interopRequireDefault(require_Close2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
  });

  // ../../node_modules/lodash/isEmpty.js
  var require_isEmpty = __commonJS((exports, module) => {
    var baseKeys = require_baseKeys();
    var getTag = require_getTag();
    var isArguments = require_isArguments();
    var isArray2 = require_isArray();
    var isArrayLike = require_isArrayLike();
    var isBuffer = require_isBuffer();
    var isPrototype = require_isPrototype();
    var isTypedArray = require_isTypedArray();
    var mapTag = "[object Map]";
    var setTag = "[object Set]";
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) && (isArray2(value) || typeof value == "string" || typeof value.splice == "function" || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty2.call(value, key)) {
          return false;
        }
      }
      return true;
    }
    module.exports = isEmpty;
  });

  // ../../node_modules/lodash/_copyObject.js
  var require_copyObject = __commonJS((exports, module) => {
    var assignValue = require_assignValue();
    var baseAssignValue = require_baseAssignValue();
    function copyObject(source, props, object2, customizer) {
      var isNew = !object2;
      object2 || (object2 = {});
      var index = -1, length = props.length;
      while (++index < length) {
        var key = props[index];
        var newValue = customizer ? customizer(object2[key], source[key], key, object2, source) : void 0;
        if (newValue === void 0) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object2, key, newValue);
        } else {
          assignValue(object2, key, newValue);
        }
      }
      return object2;
    }
    module.exports = copyObject;
  });

  // ../../node_modules/lodash/_baseAssign.js
  var require_baseAssign = __commonJS((exports, module) => {
    var copyObject = require_copyObject();
    var keys = require_keys();
    function baseAssign(object2, source) {
      return object2 && copyObject(source, keys(source), object2);
    }
    module.exports = baseAssign;
  });

  // ../../node_modules/lodash/_baseAssignIn.js
  var require_baseAssignIn = __commonJS((exports, module) => {
    var copyObject = require_copyObject();
    var keysIn = require_keysIn();
    function baseAssignIn(object2, source) {
      return object2 && copyObject(source, keysIn(source), object2);
    }
    module.exports = baseAssignIn;
  });

  // ../../node_modules/lodash/_cloneBuffer.js
  var require_cloneBuffer = __commonJS((exports, module) => {
    var root2 = require_root();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer2 = moduleExports ? root2.Buffer : void 0;
    var allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : void 0;
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
      buffer.copy(result);
      return result;
    }
    module.exports = cloneBuffer;
  });

  // ../../node_modules/lodash/_copySymbols.js
  var require_copySymbols = __commonJS((exports, module) => {
    var copyObject = require_copyObject();
    var getSymbols = require_getSymbols();
    function copySymbols(source, object2) {
      return copyObject(source, getSymbols(source), object2);
    }
    module.exports = copySymbols;
  });

  // ../../node_modules/lodash/_copySymbolsIn.js
  var require_copySymbolsIn = __commonJS((exports, module) => {
    var copyObject = require_copyObject();
    var getSymbolsIn = require_getSymbolsIn();
    function copySymbolsIn(source, object2) {
      return copyObject(source, getSymbolsIn(source), object2);
    }
    module.exports = copySymbolsIn;
  });

  // ../../node_modules/lodash/_initCloneArray.js
  var require_initCloneArray = __commonJS((exports, module) => {
    var objectProto = Object.prototype;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    function initCloneArray(array2) {
      var length = array2.length, result = new array2.constructor(length);
      if (length && typeof array2[0] == "string" && hasOwnProperty2.call(array2, "index")) {
        result.index = array2.index;
        result.input = array2.input;
      }
      return result;
    }
    module.exports = initCloneArray;
  });

  // ../../node_modules/lodash/_cloneArrayBuffer.js
  var require_cloneArrayBuffer = __commonJS((exports, module) => {
    var Uint8Array2 = require_Uint8Array();
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array2(result).set(new Uint8Array2(arrayBuffer));
      return result;
    }
    module.exports = cloneArrayBuffer;
  });

  // ../../node_modules/lodash/_cloneDataView.js
  var require_cloneDataView = __commonJS((exports, module) => {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }
    module.exports = cloneDataView;
  });

  // ../../node_modules/lodash/_cloneRegExp.js
  var require_cloneRegExp = __commonJS((exports, module) => {
    var reFlags = /\w*$/;
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }
    module.exports = cloneRegExp;
  });

  // ../../node_modules/lodash/_cloneSymbol.js
  var require_cloneSymbol = __commonJS((exports, module) => {
    var Symbol2 = require_Symbol();
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }
    module.exports = cloneSymbol;
  });

  // ../../node_modules/lodash/_cloneTypedArray.js
  var require_cloneTypedArray = __commonJS((exports, module) => {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }
    module.exports = cloneTypedArray;
  });

  // ../../node_modules/lodash/_initCloneByTag.js
  var require_initCloneByTag = __commonJS((exports, module) => {
    var cloneArrayBuffer = require_cloneArrayBuffer();
    var cloneDataView = require_cloneDataView();
    var cloneRegExp = require_cloneRegExp();
    var cloneSymbol = require_cloneSymbol();
    var cloneTypedArray = require_cloneTypedArray();
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    function initCloneByTag(object2, tag, isDeep) {
      var Ctor = object2.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object2);
        case boolTag:
        case dateTag:
          return new Ctor(+object2);
        case dataViewTag:
          return cloneDataView(object2, isDeep);
        case float32Tag:
        case float64Tag:
        case int8Tag:
        case int16Tag:
        case int32Tag:
        case uint8Tag:
        case uint8ClampedTag:
        case uint16Tag:
        case uint32Tag:
          return cloneTypedArray(object2, isDeep);
        case mapTag:
          return new Ctor();
        case numberTag:
        case stringTag:
          return new Ctor(object2);
        case regexpTag:
          return cloneRegExp(object2);
        case setTag:
          return new Ctor();
        case symbolTag:
          return cloneSymbol(object2);
      }
    }
    module.exports = initCloneByTag;
  });

  // ../../node_modules/lodash/_initCloneObject.js
  var require_initCloneObject = __commonJS((exports, module) => {
    var baseCreate = require_baseCreate();
    var getPrototype = require_getPrototype();
    var isPrototype = require_isPrototype();
    function initCloneObject(object2) {
      return typeof object2.constructor == "function" && !isPrototype(object2) ? baseCreate(getPrototype(object2)) : {};
    }
    module.exports = initCloneObject;
  });

  // ../../node_modules/lodash/_baseIsMap.js
  var require_baseIsMap = __commonJS((exports, module) => {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var mapTag = "[object Map]";
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }
    module.exports = baseIsMap;
  });

  // ../../node_modules/lodash/isMap.js
  var require_isMap = __commonJS((exports, module) => {
    var baseIsMap = require_baseIsMap();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsMap = nodeUtil && nodeUtil.isMap;
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
    module.exports = isMap;
  });

  // ../../node_modules/lodash/_baseIsSet.js
  var require_baseIsSet = __commonJS((exports, module) => {
    var getTag = require_getTag();
    var isObjectLike = require_isObjectLike();
    var setTag = "[object Set]";
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }
    module.exports = baseIsSet;
  });

  // ../../node_modules/lodash/isSet.js
  var require_isSet = __commonJS((exports, module) => {
    var baseIsSet = require_baseIsSet();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsSet = nodeUtil && nodeUtil.isSet;
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
    module.exports = isSet;
  });

  // ../../node_modules/lodash/_baseClone.js
  var require_baseClone = __commonJS((exports, module) => {
    var Stack = require_Stack();
    var arrayEach = require_arrayEach();
    var assignValue = require_assignValue();
    var baseAssign = require_baseAssign();
    var baseAssignIn = require_baseAssignIn();
    var cloneBuffer = require_cloneBuffer();
    var copyArray = require_copyArray();
    var copySymbols = require_copySymbols();
    var copySymbolsIn = require_copySymbolsIn();
    var getAllKeys = require_getAllKeys();
    var getAllKeysIn = require_getAllKeysIn();
    var getTag = require_getTag();
    var initCloneArray = require_initCloneArray();
    var initCloneByTag = require_initCloneByTag();
    var initCloneObject = require_initCloneObject();
    var isArray2 = require_isArray();
    var isBuffer = require_isBuffer();
    var isMap = require_isMap();
    var isObject = require_isObject();
    var isSet = require_isSet();
    var keys = require_keys();
    var keysIn = require_keysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    function baseClone(value, bitmask, customizer, key, object2, stack) {
      var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
      if (customizer) {
        result = object2 ? customizer(value, key, object2, stack) : customizer(value);
      }
      if (result !== void 0) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray2(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || isFunc && !object2) {
          result = isFlat || isFunc ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object2 ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      stack || (stack = new Stack());
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);
      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key2) {
          result.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
        });
      }
      var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
      var props = isArr ? void 0 : keysFunc(value);
      arrayEach(props || value, function(subValue, key2) {
        if (props) {
          key2 = subValue;
          subValue = value[key2];
        }
        assignValue(result, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));
      });
      return result;
    }
    module.exports = baseClone;
  });

  // ../../node_modules/lodash/clone.js
  var require_clone = __commonJS((exports, module) => {
    var baseClone = require_baseClone();
    var CLONE_SYMBOLS_FLAG = 4;
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }
    module.exports = clone;
  });

  // ../../node_modules/lodash/isNil.js
  var require_isNil = __commonJS((exports, module) => {
    function isNil3(value) {
      return value == null;
    }
    module.exports = isNil3;
  });

  // ../../node_modules/lodash/last.js
  var require_last = __commonJS((exports, module) => {
    function last(array2) {
      var length = array2 == null ? 0 : array2.length;
      return length ? array2[length - 1] : void 0;
    }
    module.exports = last;
  });

  // ../../node_modules/lodash/_baseSlice.js
  var require_baseSlice = __commonJS((exports, module) => {
    function baseSlice(array2, start2, end) {
      var index = -1, length = array2.length;
      if (start2 < 0) {
        start2 = -start2 > length ? 0 : length + start2;
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start2 > end ? 0 : end - start2 >>> 0;
      start2 >>>= 0;
      var result = Array(length);
      while (++index < length) {
        result[index] = array2[index + start2];
      }
      return result;
    }
    module.exports = baseSlice;
  });

  // ../../node_modules/lodash/_parent.js
  var require_parent = __commonJS((exports, module) => {
    var baseGet = require_baseGet();
    var baseSlice = require_baseSlice();
    function parent(object2, path2) {
      return path2.length < 2 ? object2 : baseGet(object2, baseSlice(path2, 0, -1));
    }
    module.exports = parent;
  });

  // ../../node_modules/lodash/_baseUnset.js
  var require_baseUnset = __commonJS((exports, module) => {
    var castPath = require_castPath();
    var last = require_last();
    var parent = require_parent();
    var toKey = require_toKey();
    function baseUnset(object2, path2) {
      path2 = castPath(path2, object2);
      object2 = parent(object2, path2);
      return object2 == null || delete object2[toKey(last(path2))];
    }
    module.exports = baseUnset;
  });

  // ../../node_modules/lodash/isPlainObject.js
  var require_isPlainObject = __commonJS((exports, module) => {
    var baseGetTag = require_baseGetTag();
    var getPrototype = require_getPrototype();
    var isObjectLike = require_isObjectLike();
    var objectTag = "[object Object]";
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    var objectCtorString = funcToString.call(Object);
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty2.call(proto, "constructor") && proto.constructor;
      return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
    }
    module.exports = isPlainObject;
  });

  // ../../node_modules/lodash/_customOmitClone.js
  var require_customOmitClone = __commonJS((exports, module) => {
    var isPlainObject = require_isPlainObject();
    function customOmitClone(value) {
      return isPlainObject(value) ? void 0 : value;
    }
    module.exports = customOmitClone;
  });

  // ../../node_modules/lodash/omit.js
  var require_omit = __commonJS((exports, module) => {
    var arrayMap = require_arrayMap();
    var baseClone = require_baseClone();
    var baseUnset = require_baseUnset();
    var castPath = require_castPath();
    var copyObject = require_copyObject();
    var customOmitClone = require_customOmitClone();
    var flatRest = require_flatRest();
    var getAllKeysIn = require_getAllKeysIn();
    var CLONE_DEEP_FLAG = 1;
    var CLONE_FLAT_FLAG = 2;
    var CLONE_SYMBOLS_FLAG = 4;
    var omit7 = flatRest(function(object2, paths) {
      var result = {};
      if (object2 == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path2) {
        path2 = castPath(path2, object2);
        isDeep || (isDeep = path2.length > 1);
        return path2;
      });
      copyObject(object2, getAllKeysIn(object2), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });
    module.exports = omit7;
  });

  // ../../node_modules/lodash/isUndefined.js
  var require_isUndefined = __commonJS((exports, module) => {
    function isUndefined4(value) {
      return value === void 0;
    }
    module.exports = isUndefined4;
  });

  // ../../node_modules/lodash/_arrayIncludesWith.js
  var require_arrayIncludesWith = __commonJS((exports, module) => {
    function arrayIncludesWith(array2, value, comparator) {
      var index = -1, length = array2 == null ? 0 : array2.length;
      while (++index < length) {
        if (comparator(value, array2[index])) {
          return true;
        }
      }
      return false;
    }
    module.exports = arrayIncludesWith;
  });

  // ../../node_modules/lodash/_baseIntersection.js
  var require_baseIntersection = __commonJS((exports, module) => {
    var SetCache = require_SetCache();
    var arrayIncludes = require_arrayIncludes();
    var arrayIncludesWith = require_arrayIncludesWith();
    var arrayMap = require_arrayMap();
    var baseUnary = require_baseUnary();
    var cacheHas = require_cacheHas();
    var nativeMin = Math.min;
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array(othLength), maxLength = Infinity, result = [];
      while (othIndex--) {
        var array2 = arrays[othIndex];
        if (othIndex && iteratee) {
          array2 = arrayMap(array2, baseUnary(iteratee));
        }
        maxLength = nativeMin(array2.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || length >= 120 && array2.length >= 120) ? new SetCache(othIndex && array2) : void 0;
      }
      array2 = arrays[0];
      var index = -1, seen = caches[0];
      outer:
        while (++index < length && result.length < maxLength) {
          var value = array2[index], computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
            othIndex = othLength;
            while (--othIndex) {
              var cache2 = caches[othIndex];
              if (!(cache2 ? cacheHas(cache2, computed) : includes(arrays[othIndex], computed, comparator))) {
                continue outer;
              }
            }
            if (seen) {
              seen.push(computed);
            }
            result.push(value);
          }
        }
      return result;
    }
    module.exports = baseIntersection;
  });

  // ../../node_modules/lodash/_baseRest.js
  var require_baseRest = __commonJS((exports, module) => {
    var identity2 = require_identity();
    var overRest = require_overRest();
    var setToString = require_setToString();
    function baseRest(func, start2) {
      return setToString(overRest(func, start2, identity2), func + "");
    }
    module.exports = baseRest;
  });

  // ../../node_modules/lodash/isArrayLikeObject.js
  var require_isArrayLikeObject = __commonJS((exports, module) => {
    var isArrayLike = require_isArrayLike();
    var isObjectLike = require_isObjectLike();
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }
    module.exports = isArrayLikeObject;
  });

  // ../../node_modules/lodash/_castArrayLikeObject.js
  var require_castArrayLikeObject = __commonJS((exports, module) => {
    var isArrayLikeObject = require_isArrayLikeObject();
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }
    module.exports = castArrayLikeObject;
  });

  // ../../node_modules/lodash/intersection.js
  var require_intersection = __commonJS((exports, module) => {
    var arrayMap = require_arrayMap();
    var baseIntersection = require_baseIntersection();
    var baseRest = require_baseRest();
    var castArrayLikeObject = require_castArrayLikeObject();
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
    });
    module.exports = intersection;
  });

  // ../../node_modules/lodash/_baseExtremum.js
  var require_baseExtremum = __commonJS((exports, module) => {
    var isSymbol = require_isSymbol();
    function baseExtremum(array2, iteratee, comparator) {
      var index = -1, length = array2.length;
      while (++index < length) {
        var value = array2[index], current = iteratee(value);
        if (current != null && (computed === void 0 ? current === current && !isSymbol(current) : comparator(current, computed))) {
          var computed = current, result = value;
        }
      }
      return result;
    }
    module.exports = baseExtremum;
  });

  // ../../node_modules/lodash/_baseGt.js
  var require_baseGt = __commonJS((exports, module) => {
    function baseGt(value, other) {
      return value > other;
    }
    module.exports = baseGt;
  });

  // ../../node_modules/lodash/maxBy.js
  var require_maxBy = __commonJS((exports, module) => {
    var baseExtremum = require_baseExtremum();
    var baseGt = require_baseGt();
    var baseIteratee = require_baseIteratee();
    function maxBy2(array2, iteratee) {
      return array2 && array2.length ? baseExtremum(array2, baseIteratee(iteratee, 2), baseGt) : void 0;
    }
    module.exports = maxBy2;
  });

  // ../../node_modules/lodash/_baseLt.js
  var require_baseLt = __commonJS((exports, module) => {
    function baseLt(value, other) {
      return value < other;
    }
    module.exports = baseLt;
  });

  // ../../node_modules/lodash/minBy.js
  var require_minBy = __commonJS((exports, module) => {
    var baseExtremum = require_baseExtremum();
    var baseIteratee = require_baseIteratee();
    var baseLt = require_baseLt();
    function minBy2(array2, iteratee) {
      return array2 && array2.length ? baseExtremum(array2, baseIteratee(iteratee, 2), baseLt) : void 0;
    }
    module.exports = minBy2;
  });

  // ../../node_modules/lodash/_arrayReduce.js
  var require_arrayReduce = __commonJS((exports, module) => {
    function arrayReduce(array2, iteratee, accumulator, initAccum) {
      var index = -1, length = array2 == null ? 0 : array2.length;
      if (initAccum && length) {
        accumulator = array2[++index];
      }
      while (++index < length) {
        accumulator = iteratee(accumulator, array2[index], index, array2);
      }
      return accumulator;
    }
    module.exports = arrayReduce;
  });

  // ../../node_modules/lodash/_basePropertyOf.js
  var require_basePropertyOf = __commonJS((exports, module) => {
    function basePropertyOf(object2) {
      return function(key) {
        return object2 == null ? void 0 : object2[key];
      };
    }
    module.exports = basePropertyOf;
  });

  // ../../node_modules/lodash/_deburrLetter.js
  var require_deburrLetter = __commonJS((exports, module) => {
    var basePropertyOf = require_basePropertyOf();
    var deburredLetters = {
      \u00C0: "A",
      \u00C1: "A",
      \u00C2: "A",
      \u00C3: "A",
      \u00C4: "A",
      \u00C5: "A",
      \u00E0: "a",
      \u00E1: "a",
      \u00E2: "a",
      \u00E3: "a",
      \u00E4: "a",
      \u00E5: "a",
      \u00C7: "C",
      \u00E7: "c",
      \u00D0: "D",
      \u00F0: "d",
      \u00C8: "E",
      \u00C9: "E",
      \u00CA: "E",
      \u00CB: "E",
      \u00E8: "e",
      \u00E9: "e",
      \u00EA: "e",
      \u00EB: "e",
      \u00CC: "I",
      \u00CD: "I",
      \u00CE: "I",
      \u00CF: "I",
      \u00EC: "i",
      \u00ED: "i",
      \u00EE: "i",
      \u00EF: "i",
      \u00D1: "N",
      \u00F1: "n",
      \u00D2: "O",
      \u00D3: "O",
      \u00D4: "O",
      \u00D5: "O",
      \u00D6: "O",
      \u00D8: "O",
      \u00F2: "o",
      \u00F3: "o",
      \u00F4: "o",
      \u00F5: "o",
      \u00F6: "o",
      \u00F8: "o",
      \u00D9: "U",
      \u00DA: "U",
      \u00DB: "U",
      \u00DC: "U",
      \u00F9: "u",
      \u00FA: "u",
      \u00FB: "u",
      \u00FC: "u",
      \u00DD: "Y",
      \u00FD: "y",
      \u00FF: "y",
      \u00C6: "Ae",
      \u00E6: "ae",
      \u00DE: "Th",
      \u00FE: "th",
      \u00DF: "ss",
      \u0100: "A",
      \u0102: "A",
      \u0104: "A",
      \u0101: "a",
      \u0103: "a",
      \u0105: "a",
      \u0106: "C",
      \u0108: "C",
      \u010A: "C",
      \u010C: "C",
      \u0107: "c",
      \u0109: "c",
      \u010B: "c",
      \u010D: "c",
      \u010E: "D",
      \u0110: "D",
      \u010F: "d",
      \u0111: "d",
      \u0112: "E",
      \u0114: "E",
      \u0116: "E",
      \u0118: "E",
      \u011A: "E",
      \u0113: "e",
      \u0115: "e",
      \u0117: "e",
      \u0119: "e",
      \u011B: "e",
      \u011C: "G",
      \u011E: "G",
      \u0120: "G",
      \u0122: "G",
      \u011D: "g",
      \u011F: "g",
      \u0121: "g",
      \u0123: "g",
      \u0124: "H",
      \u0126: "H",
      \u0125: "h",
      \u0127: "h",
      \u0128: "I",
      \u012A: "I",
      \u012C: "I",
      \u012E: "I",
      \u0130: "I",
      \u0129: "i",
      \u012B: "i",
      \u012D: "i",
      \u012F: "i",
      \u0131: "i",
      \u0134: "J",
      \u0135: "j",
      \u0136: "K",
      \u0137: "k",
      \u0138: "k",
      \u0139: "L",
      \u013B: "L",
      \u013D: "L",
      \u013F: "L",
      \u0141: "L",
      \u013A: "l",
      \u013C: "l",
      \u013E: "l",
      \u0140: "l",
      \u0142: "l",
      \u0143: "N",
      \u0145: "N",
      \u0147: "N",
      \u014A: "N",
      \u0144: "n",
      \u0146: "n",
      \u0148: "n",
      \u014B: "n",
      \u014C: "O",
      \u014E: "O",
      \u0150: "O",
      \u014D: "o",
      \u014F: "o",
      \u0151: "o",
      \u0154: "R",
      \u0156: "R",
      \u0158: "R",
      \u0155: "r",
      \u0157: "r",
      \u0159: "r",
      \u015A: "S",
      \u015C: "S",
      \u015E: "S",
      \u0160: "S",
      \u015B: "s",
      \u015D: "s",
      \u015F: "s",
      \u0161: "s",
      \u0162: "T",
      \u0164: "T",
      \u0166: "T",
      \u0163: "t",
      \u0165: "t",
      \u0167: "t",
      \u0168: "U",
      \u016A: "U",
      \u016C: "U",
      \u016E: "U",
      \u0170: "U",
      \u0172: "U",
      \u0169: "u",
      \u016B: "u",
      \u016D: "u",
      \u016F: "u",
      \u0171: "u",
      \u0173: "u",
      \u0174: "W",
      \u0175: "w",
      \u0176: "Y",
      \u0177: "y",
      \u0178: "Y",
      \u0179: "Z",
      \u017B: "Z",
      \u017D: "Z",
      \u017A: "z",
      \u017C: "z",
      \u017E: "z",
      \u0132: "IJ",
      \u0133: "ij",
      \u0152: "Oe",
      \u0153: "oe",
      \u0149: "'n",
      \u017F: "s"
    };
    var deburrLetter = basePropertyOf(deburredLetters);
    module.exports = deburrLetter;
  });

  // ../../node_modules/lodash/deburr.js
  var require_deburr = __commonJS((exports, module) => {
    var deburrLetter = require_deburrLetter();
    var toString = require_toString();
    var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsCombo = "[" + rsComboRange + "]";
    var reComboMark = RegExp(rsCombo, "g");
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
    }
    module.exports = deburr;
  });

  // ../../node_modules/lodash/_asciiWords.js
  var require_asciiWords = __commonJS((exports, module) => {
    var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
    function asciiWords(string) {
      return string.match(reAsciiWord) || [];
    }
    module.exports = asciiWords;
  });

  // ../../node_modules/lodash/_hasUnicodeWord.js
  var require_hasUnicodeWord = __commonJS((exports, module) => {
    var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
    function hasUnicodeWord(string) {
      return reHasUnicodeWord.test(string);
    }
    module.exports = hasUnicodeWord;
  });

  // ../../node_modules/lodash/_unicodeWords.js
  var require_unicodeWords = __commonJS((exports, module) => {
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsDingbatRange = "\\u2700-\\u27bf";
    var rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff";
    var rsMathOpRange = "\\xac\\xb1\\xd7\\xf7";
    var rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf";
    var rsPunctuationRange = "\\u2000-\\u206f";
    var rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000";
    var rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde";
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
    var rsApos = "['\u2019]";
    var rsBreak = "[" + rsBreakRange + "]";
    var rsCombo = "[" + rsComboRange + "]";
    var rsDigits = "\\d+";
    var rsDingbat = "[" + rsDingbatRange + "]";
    var rsLower = "[" + rsLowerRange + "]";
    var rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]";
    var rsFitz = "\\ud83c[\\udffb-\\udfff]";
    var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
    var rsNonAstral = "[^" + rsAstralRange + "]";
    var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
    var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
    var rsUpper = "[" + rsUpperRange + "]";
    var rsZWJ = "\\u200d";
    var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")";
    var rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")";
    var rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?";
    var rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?";
    var reOptMod = rsModifier + "?";
    var rsOptVar = "[" + rsVarRange + "]?";
    var rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
    var rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])";
    var rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])";
    var rsSeq = rsOptVar + reOptMod + rsOptJoin;
    var rsEmoji = "(?:" + [rsDingbat, rsRegional, rsSurrPair].join("|") + ")" + rsSeq;
    var reUnicodeWord = RegExp([
      rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [rsBreak, rsUpper, "$"].join("|") + ")",
      rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [rsBreak, rsUpper + rsMiscLower, "$"].join("|") + ")",
      rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower,
      rsUpper + "+" + rsOptContrUpper,
      rsOrdUpper,
      rsOrdLower,
      rsDigits,
      rsEmoji
    ].join("|"), "g");
    function unicodeWords(string) {
      return string.match(reUnicodeWord) || [];
    }
    module.exports = unicodeWords;
  });

  // ../../node_modules/lodash/words.js
  var require_words = __commonJS((exports, module) => {
    var asciiWords = require_asciiWords();
    var hasUnicodeWord = require_hasUnicodeWord();
    var toString = require_toString();
    var unicodeWords = require_unicodeWords();
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? void 0 : pattern;
      if (pattern === void 0) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }
    module.exports = words;
  });

  // ../../node_modules/lodash/_createCompounder.js
  var require_createCompounder = __commonJS((exports, module) => {
    var arrayReduce = require_arrayReduce();
    var deburr = require_deburr();
    var words = require_words();
    var rsApos = "['\u2019]";
    var reApos = RegExp(rsApos, "g");
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
      };
    }
    module.exports = createCompounder;
  });

  // ../../node_modules/lodash/kebabCase.js
  var require_kebabCase = __commonJS((exports, module) => {
    var createCompounder = require_createCompounder();
    var kebabCase3 = createCompounder(function(result, word, index) {
      return result + (index ? "-" : "") + word.toLowerCase();
    });
    module.exports = kebabCase3;
  });

  // ../../node_modules/scheduler/cjs/scheduler.development.js
  var require_scheduler_development = __commonJS((exports) => {
    /**
     * @license React
     * scheduler.development.js
     *
     * Copyright (c) Facebook, Inc. and its affiliates.
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE file in the root directory of this source tree.
     */
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push(heap, node) {
          var index = heap.length;
          heap.push(node);
          siftUp(heap, node, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first = heap[0];
          var last = heap.pop();
          if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
          }
          return first;
        }
        function siftUp(heap, node, i9) {
          var index = i9;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
              heap[parentIndex] = node;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node, i9) {
          var index = i9;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex];
            if (compare(left, node) < 0) {
              if (rightIndex < length && compare(right, left) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
              } else {
                heap[index] = left;
                heap[leftIndex] = node;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare(right, node) < 0) {
              heap[index] = right;
              heap[rightIndex] = node;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare(a7, b8) {
          var diff = a7.sortIndex - b8.sortIndex;
          return diff !== 0 ? diff : a7.id - b8.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate2 = Date;
          var initialTime = localDate2.now();
          exports.unstable_now = function() {
            return localDate2.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
              priorityLevel = NormalPriority;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority:
            default:
              timeout = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  });

  // ../../node_modules/scheduler/index.js
  var require_scheduler = __commonJS((exports, module) => {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development();
    }
  });

  // ../../node_modules/react-dom/cjs/react-dom.development.js
  var require_react_dom_development = __commonJS((exports) => {
    /**
     * @license React
     * react-dom.development.js
     *
     * Copyright (c) Facebook, Inc. and its affiliates.
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE file in the root directory of this source tree.
     */
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var React52 = require_react();
        var Scheduler2 = require_scheduler();
        var ReactSharedInternals = React52.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        var suppressWarning = false;
        function setSuppressWarning(newSuppressWarning) {
          {
            suppressWarning = newSuppressWarning;
          }
        }
        function warn(format4) {
          {
            if (!suppressWarning) {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format4, args);
            }
          }
        }
        function error(format4) {
          {
            if (!suppressWarning) {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format4, args);
            }
          }
        }
        function printWarning(level, format4, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format4 += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format4);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var FunctionComponent = 0;
        var ClassComponent = 1;
        var IndeterminateComponent = 2;
        var HostRoot = 3;
        var HostPortal = 4;
        var HostComponent = 5;
        var HostText = 6;
        var Fragment2 = 7;
        var Mode = 8;
        var ContextConsumer = 9;
        var ContextProvider = 10;
        var ForwardRef = 11;
        var Profiler = 12;
        var SuspenseComponent = 13;
        var MemoComponent = 14;
        var SimpleMemoComponent = 15;
        var LazyComponent = 16;
        var IncompleteClassComponent = 17;
        var DehydratedFragment = 18;
        var SuspenseListComponent = 19;
        var ScopeComponent = 21;
        var OffscreenComponent = 22;
        var LegacyHiddenComponent = 23;
        var CacheComponent = 24;
        var TracingMarkerComponent = 25;
        var enableClientRenderFallbackOnTextMismatch = true;
        var enableNewReconciler = false;
        var enableLazyContextPropagation = false;
        var enableLegacyHidden = false;
        var enableSuspenseAvoidThisFallback = false;
        var disableCommentsAsDOMContainers = true;
        var enableCustomElementPropertySupport = false;
        var warnAboutStringRefs = false;
        var enableSchedulingProfiler = true;
        var enableProfilerTimer = true;
        var enableProfilerCommitHooks = true;
        var allNativeEvents = new Set();
        var registrationNameDependencies = {};
        var possibleRegistrationNames = {};
        function registerTwoPhaseEvent(registrationName, dependencies) {
          registerDirectEvent(registrationName, dependencies);
          registerDirectEvent(registrationName + "Capture", dependencies);
        }
        function registerDirectEvent(registrationName, dependencies) {
          {
            if (registrationNameDependencies[registrationName]) {
              error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
            }
          }
          registrationNameDependencies[registrationName] = dependencies;
          {
            var lowerCasedName = registrationName.toLowerCase();
            possibleRegistrationNames[lowerCasedName] = registrationName;
            if (registrationName === "onDoubleClick") {
              possibleRegistrationNames.ondblclick = registrationName;
            }
          }
          for (var i9 = 0; i9 < dependencies.length; i9++) {
            allNativeEvents.add(dependencies[i9]);
          }
        }
        var canUseDOM2 = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
        var hasOwnProperty2 = Object.prototype.hasOwnProperty;
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type2 = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type2;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e15) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkAttributeStringCoercion(value, attributeName) {
          {
            if (willCoercionThrow(value)) {
              error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkKeyStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkPropStringCoercion(value, propName) {
          {
            if (willCoercionThrow(value)) {
              error("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkCSSPropertyStringCoercion(value, propName) {
          {
            if (willCoercionThrow(value)) {
              error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkHtmlStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkFormFieldValueStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        var RESERVED = 0;
        var STRING = 1;
        var BOOLEANISH_STRING = 2;
        var BOOLEAN = 3;
        var OVERLOADED_BOOLEAN = 4;
        var NUMERIC = 5;
        var POSITIVE_NUMERIC = 6;
        var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
        var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};
        function isAttributeNameSafe(attributeName) {
          if (hasOwnProperty2.call(validatedAttributeNameCache, attributeName)) {
            return true;
          }
          if (hasOwnProperty2.call(illegalAttributeNameCache, attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          {
            error("Invalid attribute name: `%s`", attributeName);
          }
          return false;
        }
        function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null) {
            return propertyInfo.type === RESERVED;
          }
          if (isCustomComponentTag) {
            return false;
          }
          if (name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")) {
            return true;
          }
          return false;
        }
        function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null && propertyInfo.type === RESERVED) {
            return false;
          }
          switch (typeof value) {
            case "function":
            case "symbol":
              return true;
            case "boolean": {
              if (isCustomComponentTag) {
                return false;
              }
              if (propertyInfo !== null) {
                return !propertyInfo.acceptsBooleans;
              } else {
                var prefix4 = name.toLowerCase().slice(0, 5);
                return prefix4 !== "data-" && prefix4 !== "aria-";
              }
            }
            default:
              return false;
          }
        }
        function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
          if (value === null || typeof value === "undefined") {
            return true;
          }
          if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
            return true;
          }
          if (isCustomComponentTag) {
            return false;
          }
          if (propertyInfo !== null) {
            switch (propertyInfo.type) {
              case BOOLEAN:
                return !value;
              case OVERLOADED_BOOLEAN:
                return value === false;
              case NUMERIC:
                return isNaN(value);
              case POSITIVE_NUMERIC:
                return isNaN(value) || value < 1;
            }
          }
          return false;
        }
        function getPropertyInfo(name) {
          return properties.hasOwnProperty(name) ? properties[name] : null;
        }
        function PropertyInfoRecord(name, type2, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
          this.acceptsBooleans = type2 === BOOLEANISH_STRING || type2 === BOOLEAN || type2 === OVERLOADED_BOOLEAN;
          this.attributeName = attributeName;
          this.attributeNamespace = attributeNamespace;
          this.mustUseProperty = mustUseProperty;
          this.propertyName = name;
          this.type = type2;
          this.sanitizeURL = sanitizeURL2;
          this.removeEmptyString = removeEmptyString;
        }
        var properties = {};
        var reservedProps = [
          "children",
          "dangerouslySetInnerHTML",
          "defaultValue",
          "defaultChecked",
          "innerHTML",
          "suppressContentEditableWarning",
          "suppressHydrationWarning",
          "style"
        ];
        reservedProps.forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null, false, false);
        });
        [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
          var name = _ref[0], attributeName = _ref[1];
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
        });
        ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null, false, false);
        });
        ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null, false, false);
        });
        [
          "allowFullScreen",
          "async",
          "autoFocus",
          "autoPlay",
          "controls",
          "default",
          "defer",
          "disabled",
          "disablePictureInPicture",
          "disableRemotePlayback",
          "formNoValidate",
          "hidden",
          "loop",
          "noModule",
          "noValidate",
          "open",
          "playsInline",
          "readOnly",
          "required",
          "reversed",
          "scoped",
          "seamless",
          "itemScope"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null, false, false);
        });
        [
          "checked",
          "multiple",
          "muted",
          "selected"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null, false, false);
        });
        [
          "capture",
          "download"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null, false, false);
        });
        [
          "cols",
          "rows",
          "size",
          "span"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null, false, false);
        });
        ["rowSpan", "start"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null, false, false);
        });
        var CAMELIZE = /[\-\:]([a-z])/g;
        var capitalize2 = function(token) {
          return token[1].toUpperCase();
        };
        [
          "accent-height",
          "alignment-baseline",
          "arabic-form",
          "baseline-shift",
          "cap-height",
          "clip-path",
          "clip-rule",
          "color-interpolation",
          "color-interpolation-filters",
          "color-profile",
          "color-rendering",
          "dominant-baseline",
          "enable-background",
          "fill-opacity",
          "fill-rule",
          "flood-color",
          "flood-opacity",
          "font-family",
          "font-size",
          "font-size-adjust",
          "font-stretch",
          "font-style",
          "font-variant",
          "font-weight",
          "glyph-name",
          "glyph-orientation-horizontal",
          "glyph-orientation-vertical",
          "horiz-adv-x",
          "horiz-origin-x",
          "image-rendering",
          "letter-spacing",
          "lighting-color",
          "marker-end",
          "marker-mid",
          "marker-start",
          "overline-position",
          "overline-thickness",
          "paint-order",
          "panose-1",
          "pointer-events",
          "rendering-intent",
          "shape-rendering",
          "stop-color",
          "stop-opacity",
          "strikethrough-position",
          "strikethrough-thickness",
          "stroke-dasharray",
          "stroke-dashoffset",
          "stroke-linecap",
          "stroke-linejoin",
          "stroke-miterlimit",
          "stroke-opacity",
          "stroke-width",
          "text-anchor",
          "text-decoration",
          "text-rendering",
          "underline-position",
          "underline-thickness",
          "unicode-bidi",
          "unicode-range",
          "units-per-em",
          "v-alphabetic",
          "v-hanging",
          "v-ideographic",
          "v-mathematical",
          "vector-effect",
          "vert-adv-y",
          "vert-origin-x",
          "vert-origin-y",
          "word-spacing",
          "writing-mode",
          "xmlns:xlink",
          "x-height"
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize2);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
        });
        [
          "xlink:actuate",
          "xlink:arcrole",
          "xlink:role",
          "xlink:show",
          "xlink:title",
          "xlink:type"
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize2);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/1999/xlink", false, false);
        });
        [
          "xml:base",
          "xml:lang",
          "xml:space"
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize2);
          properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/XML/1998/namespace", false, false);
        });
        ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, false, false);
        });
        var xlinkHref = "xlinkHref";
        properties[xlinkHref] = new PropertyInfoRecord("xlinkHref", STRING, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
        ["src", "href", "action", "formAction"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, true, true);
        });
        var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
        var didWarn = false;
        function sanitizeURL(url) {
          {
            if (!didWarn && isJavaScriptProtocol.test(url)) {
              didWarn = true;
              error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
            }
          }
        }
        function getValueForProperty(node, name, expected, propertyInfo) {
          {
            if (propertyInfo.mustUseProperty) {
              var propertyName = propertyInfo.propertyName;
              return node[propertyName];
            } else {
              {
                checkAttributeStringCoercion(expected, name);
              }
              if (propertyInfo.sanitizeURL) {
                sanitizeURL("" + expected);
              }
              var attributeName = propertyInfo.attributeName;
              var stringValue = null;
              if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                if (node.hasAttribute(attributeName)) {
                  var value = node.getAttribute(attributeName);
                  if (value === "") {
                    return true;
                  }
                  if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                    return value;
                  }
                  if (value === "" + expected) {
                    return expected;
                  }
                  return value;
                }
              } else if (node.hasAttribute(attributeName)) {
                if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                  return node.getAttribute(attributeName);
                }
                if (propertyInfo.type === BOOLEAN) {
                  return expected;
                }
                stringValue = node.getAttribute(attributeName);
              }
              if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                return stringValue === null ? expected : stringValue;
              } else if (stringValue === "" + expected) {
                return expected;
              } else {
                return stringValue;
              }
            }
          }
        }
        function getValueForAttribute(node, name, expected, isCustomComponentTag) {
          {
            if (!isAttributeNameSafe(name)) {
              return;
            }
            if (!node.hasAttribute(name)) {
              return expected === void 0 ? void 0 : null;
            }
            var value = node.getAttribute(name);
            {
              checkAttributeStringCoercion(expected, name);
            }
            if (value === "" + expected) {
              return expected;
            }
            return value;
          }
        }
        function setValueForProperty(node, name, value, isCustomComponentTag) {
          var propertyInfo = getPropertyInfo(name);
          if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
            return;
          }
          if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
            value = null;
          }
          if (isCustomComponentTag || propertyInfo === null) {
            if (isAttributeNameSafe(name)) {
              var _attributeName = name;
              if (value === null) {
                node.removeAttribute(_attributeName);
              } else {
                {
                  checkAttributeStringCoercion(value, name);
                }
                node.setAttribute(_attributeName, "" + value);
              }
            }
            return;
          }
          var mustUseProperty = propertyInfo.mustUseProperty;
          if (mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            if (value === null) {
              var type2 = propertyInfo.type;
              node[propertyName] = type2 === BOOLEAN ? false : "";
            } else {
              node[propertyName] = value;
            }
            return;
          }
          var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
          if (value === null) {
            node.removeAttribute(attributeName);
          } else {
            var _type = propertyInfo.type;
            var attributeValue;
            if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
              attributeValue = "";
            } else {
              {
                {
                  checkAttributeStringCoercion(value, attributeName);
                }
                attributeValue = "" + value;
              }
              if (propertyInfo.sanitizeURL) {
                sanitizeURL(attributeValue.toString());
              }
            }
            if (attributeNamespace) {
              node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
            } else {
              node.setAttribute(attributeName, attributeValue);
            }
          }
        }
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_SCOPE_TYPE = Symbol.for("react.scope");
        var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
        var REACT_CACHE_TYPE = Symbol.for("react.cache");
        var REACT_TRACING_MARKER_TYPE = Symbol.for("react.tracing_marker");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var assign3 = Object.assign;
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign3({}, props, {
                  value: prevLog
                }),
                info: assign3({}, props, {
                  value: prevInfo
                }),
                warn: assign3({}, props, {
                  value: prevWarn
                }),
                error: assign3({}, props, {
                  value: prevError
                }),
                group: assign3({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign3({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign3({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix3;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix3 === void 0) {
              try {
                throw Error();
              } catch (x7) {
                var match2 = x7.stack.trim().match(/\n( *(at )?)/);
                prefix3 = match2 && match2[1] || "";
              }
            }
            return "\n" + prefix3 + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn2, construct) {
          if (!fn2 || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn2);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x7) {
                  control = x7;
                }
                Reflect.construct(fn2, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x7) {
                  control = x7;
                }
                fn2.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x7) {
                control = x7;
              }
              fn2();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s4 = sampleLines.length - 1;
              var c6 = controlLines.length - 1;
              while (s4 >= 1 && c6 >= 0 && sampleLines[s4] !== controlLines[c6]) {
                c6--;
              }
              for (; s4 >= 1 && c6 >= 0; s4--, c6--) {
                if (sampleLines[s4] !== controlLines[c6]) {
                  if (s4 !== 1 || c6 !== 1) {
                    do {
                      s4--;
                      c6--;
                      if (c6 < 0 || sampleLines[s4] !== controlLines[c6]) {
                        var _frame = "\n" + sampleLines[s4].replace(" at new ", " at ");
                        if (fn2.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn2.displayName);
                        }
                        {
                          if (typeof fn2 === "function") {
                            componentFrameCache.set(fn2, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s4 >= 1 && c6 >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn2 ? fn2.displayName || fn2.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn2 === "function") {
              componentFrameCache.set(fn2, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeClassComponentFrame(ctor, source, ownerFn) {
          {
            return describeNativeComponentFrame(ctor, true);
          }
        }
        function describeFunctionComponentFrame(fn2, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn2, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type2, source, ownerFn) {
          if (type2 == null) {
            return "";
          }
          if (typeof type2 === "function") {
            {
              return describeNativeComponentFrame(type2, shouldConstruct(type2));
            }
          }
          if (typeof type2 === "string") {
            return describeBuiltInComponentFrame(type2);
          }
          switch (type2) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type2 === "object") {
            switch (type2.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type2.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type2.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type2;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x7) {
                }
              }
            }
          }
          return "";
        }
        function describeFiber(fiber) {
          var owner = fiber._debugOwner ? fiber._debugOwner.type : null;
          var source = fiber._debugSource;
          switch (fiber.tag) {
            case HostComponent:
              return describeBuiltInComponentFrame(fiber.type);
            case LazyComponent:
              return describeBuiltInComponentFrame("Lazy");
            case SuspenseComponent:
              return describeBuiltInComponentFrame("Suspense");
            case SuspenseListComponent:
              return describeBuiltInComponentFrame("SuspenseList");
            case FunctionComponent:
            case IndeterminateComponent:
            case SimpleMemoComponent:
              return describeFunctionComponentFrame(fiber.type);
            case ForwardRef:
              return describeFunctionComponentFrame(fiber.type.render);
            case ClassComponent:
              return describeClassComponentFrame(fiber.type);
            default:
              return "";
          }
        }
        function getStackByFiberInDevAndProd(workInProgress2) {
          try {
            var info = "";
            var node = workInProgress2;
            do {
              info += describeFiber(node);
              node = node.return;
            } while (node);
            return info;
          } catch (x7) {
            return "\nError generating stack: " + x7.message + "\n" + x7.stack;
          }
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type2) {
          return type2.displayName || "Context";
        }
        function getComponentNameFromType(type2) {
          if (type2 == null) {
            return null;
          }
          {
            if (typeof type2.tag === "number") {
              error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type2 === "function") {
            return type2.displayName || type2.name || null;
          }
          if (typeof type2 === "string") {
            return type2;
          }
          switch (type2) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type2 === "object") {
            switch (type2.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type2;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type2;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type2, type2.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type2.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type2.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type2;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentNameFromType(init(payload));
                } catch (x7) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        function getWrappedName$1(outerType, innerType, wrapperName) {
          var functionName = innerType.displayName || innerType.name || "";
          return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
        }
        function getContextName$1(type2) {
          return type2.displayName || "Context";
        }
        function getComponentNameFromFiber(fiber) {
          var tag = fiber.tag, type2 = fiber.type;
          switch (tag) {
            case CacheComponent:
              return "Cache";
            case ContextConsumer:
              var context = type2;
              return getContextName$1(context) + ".Consumer";
            case ContextProvider:
              var provider = type2;
              return getContextName$1(provider._context) + ".Provider";
            case DehydratedFragment:
              return "DehydratedFragment";
            case ForwardRef:
              return getWrappedName$1(type2, type2.render, "ForwardRef");
            case Fragment2:
              return "Fragment";
            case HostComponent:
              return type2;
            case HostPortal:
              return "Portal";
            case HostRoot:
              return "Root";
            case HostText:
              return "Text";
            case LazyComponent:
              return getComponentNameFromType(type2);
            case Mode:
              if (type2 === REACT_STRICT_MODE_TYPE) {
                return "StrictMode";
              }
              return "Mode";
            case OffscreenComponent:
              return "Offscreen";
            case Profiler:
              return "Profiler";
            case ScopeComponent:
              return "Scope";
            case SuspenseComponent:
              return "Suspense";
            case SuspenseListComponent:
              return "SuspenseList";
            case TracingMarkerComponent:
              return "TracingMarker";
            case ClassComponent:
            case FunctionComponent:
            case IncompleteClassComponent:
            case IndeterminateComponent:
            case MemoComponent:
            case SimpleMemoComponent:
              if (typeof type2 === "function") {
                return type2.displayName || type2.name || null;
              }
              if (typeof type2 === "string") {
                return type2;
              }
              break;
          }
          return null;
        }
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var current = null;
        var isRendering = false;
        function getCurrentFiberOwnerNameInDevOrNull() {
          {
            if (current === null) {
              return null;
            }
            var owner = current._debugOwner;
            if (owner !== null && typeof owner !== "undefined") {
              return getComponentNameFromFiber(owner);
            }
          }
          return null;
        }
        function getCurrentFiberStackInDev() {
          {
            if (current === null) {
              return "";
            }
            return getStackByFiberInDevAndProd(current);
          }
        }
        function resetCurrentFiber() {
          {
            ReactDebugCurrentFrame.getCurrentStack = null;
            current = null;
            isRendering = false;
          }
        }
        function setCurrentFiber(fiber) {
          {
            ReactDebugCurrentFrame.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;
            current = fiber;
            isRendering = false;
          }
        }
        function getCurrentFiber() {
          {
            return current;
          }
        }
        function setIsRendering(rendering) {
          {
            isRendering = rendering;
          }
        }
        function toString(value) {
          return "" + value;
        }
        function getToStringValue(value) {
          switch (typeof value) {
            case "boolean":
            case "number":
            case "string":
            case "undefined":
              return value;
            case "object":
              {
                checkFormFieldValueStringCoercion(value);
              }
              return value;
            default:
              return "";
          }
        }
        var hasReadOnlyValue = {
          button: true,
          checkbox: true,
          image: true,
          hidden: true,
          radio: true,
          reset: true,
          submit: true
        };
        function checkControlledValueProps(tagName, props) {
          {
            if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
              error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
            }
            if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
              error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
            }
          }
        }
        function isCheckable(elem) {
          var type2 = elem.type;
          var nodeName = elem.nodeName;
          return nodeName && nodeName.toLowerCase() === "input" && (type2 === "checkbox" || type2 === "radio");
        }
        function getTracker(node) {
          return node._valueTracker;
        }
        function detachTracker(node) {
          node._valueTracker = null;
        }
        function getValueFromNode(node) {
          var value = "";
          if (!node) {
            return value;
          }
          if (isCheckable(node)) {
            value = node.checked ? "true" : "false";
          } else {
            value = node.value;
          }
          return value;
        }
        function trackValueOnNode(node) {
          var valueField = isCheckable(node) ? "checked" : "value";
          var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
          {
            checkFormFieldValueStringCoercion(node[valueField]);
          }
          var currentValue = "" + node[valueField];
          if (node.hasOwnProperty(valueField) || typeof descriptor === "undefined" || typeof descriptor.get !== "function" || typeof descriptor.set !== "function") {
            return;
          }
          var get6 = descriptor.get, set2 = descriptor.set;
          Object.defineProperty(node, valueField, {
            configurable: true,
            get: function() {
              return get6.call(this);
            },
            set: function(value) {
              {
                checkFormFieldValueStringCoercion(value);
              }
              currentValue = "" + value;
              set2.call(this, value);
            }
          });
          Object.defineProperty(node, valueField, {
            enumerable: descriptor.enumerable
          });
          var tracker = {
            getValue: function() {
              return currentValue;
            },
            setValue: function(value) {
              {
                checkFormFieldValueStringCoercion(value);
              }
              currentValue = "" + value;
            },
            stopTracking: function() {
              detachTracker(node);
              delete node[valueField];
            }
          };
          return tracker;
        }
        function track(node) {
          if (getTracker(node)) {
            return;
          }
          node._valueTracker = trackValueOnNode(node);
        }
        function updateValueIfChanged(node) {
          if (!node) {
            return false;
          }
          var tracker = getTracker(node);
          if (!tracker) {
            return true;
          }
          var lastValue = tracker.getValue();
          var nextValue = getValueFromNode(node);
          if (nextValue !== lastValue) {
            tracker.setValue(nextValue);
            return true;
          }
          return false;
        }
        function getActiveElement(doc) {
          doc = doc || (typeof document !== "undefined" ? document : void 0);
          if (typeof doc === "undefined") {
            return null;
          }
          try {
            return doc.activeElement || doc.body;
          } catch (e15) {
            return doc.body;
          }
        }
        var didWarnValueDefaultValue = false;
        var didWarnCheckedDefaultChecked = false;
        var didWarnControlledToUncontrolled = false;
        var didWarnUncontrolledToControlled = false;
        function isControlled(props) {
          var usesChecked = props.type === "checkbox" || props.type === "radio";
          return usesChecked ? props.checked != null : props.value != null;
        }
        function getHostProps(element, props) {
          var node = element;
          var checked = props.checked;
          var hostProps = assign3({}, props, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: checked != null ? checked : node._wrapperState.initialChecked
          });
          return hostProps;
        }
        function initWrapperState(element, props) {
          {
            checkControlledValueProps("input", props);
            if (props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnCheckedDefaultChecked) {
              error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
              didWarnCheckedDefaultChecked = true;
            }
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue) {
              error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
              didWarnValueDefaultValue = true;
            }
          }
          var node = element;
          var defaultValue = props.defaultValue == null ? "" : props.defaultValue;
          node._wrapperState = {
            initialChecked: props.checked != null ? props.checked : props.defaultChecked,
            initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
            controlled: isControlled(props)
          };
        }
        function updateChecked(element, props) {
          var node = element;
          var checked = props.checked;
          if (checked != null) {
            setValueForProperty(node, "checked", checked, false);
          }
        }
        function updateWrapper(element, props) {
          var node = element;
          {
            var controlled = isControlled(props);
            if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
              error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
              didWarnUncontrolledToControlled = true;
            }
            if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
              error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
              didWarnControlledToUncontrolled = true;
            }
          }
          updateChecked(element, props);
          var value = getToStringValue(props.value);
          var type2 = props.type;
          if (value != null) {
            if (type2 === "number") {
              if (value === 0 && node.value === "" || node.value != value) {
                node.value = toString(value);
              }
            } else if (node.value !== toString(value)) {
              node.value = toString(value);
            }
          } else if (type2 === "submit" || type2 === "reset") {
            node.removeAttribute("value");
            return;
          }
          {
            if (props.hasOwnProperty("value")) {
              setDefaultValue(node, props.type, value);
            } else if (props.hasOwnProperty("defaultValue")) {
              setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
            }
          }
          {
            if (props.checked == null && props.defaultChecked != null) {
              node.defaultChecked = !!props.defaultChecked;
            }
          }
        }
        function postMountWrapper(element, props, isHydrating2) {
          var node = element;
          if (props.hasOwnProperty("value") || props.hasOwnProperty("defaultValue")) {
            var type2 = props.type;
            var isButton = type2 === "submit" || type2 === "reset";
            if (isButton && (props.value === void 0 || props.value === null)) {
              return;
            }
            var initialValue = toString(node._wrapperState.initialValue);
            if (!isHydrating2) {
              {
                if (initialValue !== node.value) {
                  node.value = initialValue;
                }
              }
            }
            {
              node.defaultValue = initialValue;
            }
          }
          var name = node.name;
          if (name !== "") {
            node.name = "";
          }
          {
            node.defaultChecked = !node.defaultChecked;
            node.defaultChecked = !!node._wrapperState.initialChecked;
          }
          if (name !== "") {
            node.name = name;
          }
        }
        function restoreControlledState(element, props) {
          var node = element;
          updateWrapper(node, props);
          updateNamedCousins(node, props);
        }
        function updateNamedCousins(rootNode, props) {
          var name = props.name;
          if (props.type === "radio" && name != null) {
            var queryRoot = rootNode;
            while (queryRoot.parentNode) {
              queryRoot = queryRoot.parentNode;
            }
            {
              checkAttributeStringCoercion(name, "name");
            }
            var group = queryRoot.querySelectorAll("input[name=" + JSON.stringify("" + name) + '][type="radio"]');
            for (var i9 = 0; i9 < group.length; i9++) {
              var otherNode = group[i9];
              if (otherNode === rootNode || otherNode.form !== rootNode.form) {
                continue;
              }
              var otherProps = getFiberCurrentPropsFromNode(otherNode);
              if (!otherProps) {
                throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
              }
              updateValueIfChanged(otherNode);
              updateWrapper(otherNode, otherProps);
            }
          }
        }
        function setDefaultValue(node, type2, value) {
          if (type2 !== "number" || getActiveElement(node.ownerDocument) !== node) {
            if (value == null) {
              node.defaultValue = toString(node._wrapperState.initialValue);
            } else if (node.defaultValue !== toString(value)) {
              node.defaultValue = toString(value);
            }
          }
        }
        var didWarnSelectedSetOnOption = false;
        var didWarnInvalidChild = false;
        var didWarnInvalidInnerHTML = false;
        function validateProps(element, props) {
          {
            if (props.value == null) {
              if (typeof props.children === "object" && props.children !== null) {
                React52.Children.forEach(props.children, function(child) {
                  if (child == null) {
                    return;
                  }
                  if (typeof child === "string" || typeof child === "number") {
                    return;
                  }
                  if (!didWarnInvalidChild) {
                    didWarnInvalidChild = true;
                    error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
                  }
                });
              } else if (props.dangerouslySetInnerHTML != null) {
                if (!didWarnInvalidInnerHTML) {
                  didWarnInvalidInnerHTML = true;
                  error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                }
              }
            }
            if (props.selected != null && !didWarnSelectedSetOnOption) {
              error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
              didWarnSelectedSetOnOption = true;
            }
          }
        }
        function postMountWrapper$1(element, props) {
          if (props.value != null) {
            element.setAttribute("value", toString(getToStringValue(props.value)));
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray2(a7) {
          return isArrayImpl(a7);
        }
        var didWarnValueDefaultValue$1;
        {
          didWarnValueDefaultValue$1 = false;
        }
        function getDeclarationErrorAddendum() {
          var ownerName = getCurrentFiberOwnerNameInDevOrNull();
          if (ownerName) {
            return "\n\nCheck the render method of `" + ownerName + "`.";
          }
          return "";
        }
        var valuePropNames = ["value", "defaultValue"];
        function checkSelectPropTypes(props) {
          {
            checkControlledValueProps("select", props);
            for (var i9 = 0; i9 < valuePropNames.length; i9++) {
              var propName = valuePropNames[i9];
              if (props[propName] == null) {
                continue;
              }
              var propNameIsArray = isArray2(props[propName]);
              if (props.multiple && !propNameIsArray) {
                error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum());
              } else if (!props.multiple && propNameIsArray) {
                error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
              }
            }
          }
        }
        function updateOptions(node, multiple, propValue, setDefaultSelected) {
          var options2 = node.options;
          if (multiple) {
            var selectedValues = propValue;
            var selectedValue = {};
            for (var i9 = 0; i9 < selectedValues.length; i9++) {
              selectedValue["$" + selectedValues[i9]] = true;
            }
            for (var _i = 0; _i < options2.length; _i++) {
              var selected = selectedValue.hasOwnProperty("$" + options2[_i].value);
              if (options2[_i].selected !== selected) {
                options2[_i].selected = selected;
              }
              if (selected && setDefaultSelected) {
                options2[_i].defaultSelected = true;
              }
            }
          } else {
            var _selectedValue = toString(getToStringValue(propValue));
            var defaultSelected = null;
            for (var _i2 = 0; _i2 < options2.length; _i2++) {
              if (options2[_i2].value === _selectedValue) {
                options2[_i2].selected = true;
                if (setDefaultSelected) {
                  options2[_i2].defaultSelected = true;
                }
                return;
              }
              if (defaultSelected === null && !options2[_i2].disabled) {
                defaultSelected = options2[_i2];
              }
            }
            if (defaultSelected !== null) {
              defaultSelected.selected = true;
            }
          }
        }
        function getHostProps$1(element, props) {
          return assign3({}, props, {
            value: void 0
          });
        }
        function initWrapperState$1(element, props) {
          var node = element;
          {
            checkSelectPropTypes(props);
          }
          node._wrapperState = {
            wasMultiple: !!props.multiple
          };
          {
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue$1) {
              error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnValueDefaultValue$1 = true;
            }
          }
        }
        function postMountWrapper$2(element, props) {
          var node = element;
          node.multiple = !!props.multiple;
          var value = props.value;
          if (value != null) {
            updateOptions(node, !!props.multiple, value, false);
          } else if (props.defaultValue != null) {
            updateOptions(node, !!props.multiple, props.defaultValue, true);
          }
        }
        function postUpdateWrapper(element, props) {
          var node = element;
          var wasMultiple = node._wrapperState.wasMultiple;
          node._wrapperState.wasMultiple = !!props.multiple;
          var value = props.value;
          if (value != null) {
            updateOptions(node, !!props.multiple, value, false);
          } else if (wasMultiple !== !!props.multiple) {
            if (props.defaultValue != null) {
              updateOptions(node, !!props.multiple, props.defaultValue, true);
            } else {
              updateOptions(node, !!props.multiple, props.multiple ? [] : "", false);
            }
          }
        }
        function restoreControlledState$1(element, props) {
          var node = element;
          var value = props.value;
          if (value != null) {
            updateOptions(node, !!props.multiple, value, false);
          }
        }
        var didWarnValDefaultVal = false;
        function getHostProps$2(element, props) {
          var node = element;
          if (props.dangerouslySetInnerHTML != null) {
            throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
          }
          var hostProps = assign3({}, props, {
            value: void 0,
            defaultValue: void 0,
            children: toString(node._wrapperState.initialValue)
          });
          return hostProps;
        }
        function initWrapperState$2(element, props) {
          var node = element;
          {
            checkControlledValueProps("textarea", props);
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValDefaultVal) {
              error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component");
              didWarnValDefaultVal = true;
            }
          }
          var initialValue = props.value;
          if (initialValue == null) {
            var children = props.children, defaultValue = props.defaultValue;
            if (children != null) {
              {
                error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
              }
              {
                if (defaultValue != null) {
                  throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                }
                if (isArray2(children)) {
                  if (children.length > 1) {
                    throw new Error("<textarea> can only have at most one child.");
                  }
                  children = children[0];
                }
                defaultValue = children;
              }
            }
            if (defaultValue == null) {
              defaultValue = "";
            }
            initialValue = defaultValue;
          }
          node._wrapperState = {
            initialValue: getToStringValue(initialValue)
          };
        }
        function updateWrapper$1(element, props) {
          var node = element;
          var value = getToStringValue(props.value);
          var defaultValue = getToStringValue(props.defaultValue);
          if (value != null) {
            var newValue = toString(value);
            if (newValue !== node.value) {
              node.value = newValue;
            }
            if (props.defaultValue == null && node.defaultValue !== newValue) {
              node.defaultValue = newValue;
            }
          }
          if (defaultValue != null) {
            node.defaultValue = toString(defaultValue);
          }
        }
        function postMountWrapper$3(element, props) {
          var node = element;
          var textContent = node.textContent;
          if (textContent === node._wrapperState.initialValue) {
            if (textContent !== "" && textContent !== null) {
              node.value = textContent;
            }
          }
        }
        function restoreControlledState$2(element, props) {
          updateWrapper$1(element, props);
        }
        var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
        var MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
        var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
        function getIntrinsicNamespace(type2) {
          switch (type2) {
            case "svg":
              return SVG_NAMESPACE;
            case "math":
              return MATH_NAMESPACE;
            default:
              return HTML_NAMESPACE;
          }
        }
        function getChildNamespace(parentNamespace, type2) {
          if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
            return getIntrinsicNamespace(type2);
          }
          if (parentNamespace === SVG_NAMESPACE && type2 === "foreignObject") {
            return HTML_NAMESPACE;
          }
          return parentNamespace;
        }
        var createMicrosoftUnsafeLocalFunction = function(func) {
          if (typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction) {
            return function(arg0, arg1, arg2, arg3) {
              MSApp.execUnsafeLocalFunction(function() {
                return func(arg0, arg1, arg2, arg3);
              });
            };
          } else {
            return func;
          }
        };
        var reusableSVGContainer;
        var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
          if (node.namespaceURI === SVG_NAMESPACE) {
            if (!("innerHTML" in node)) {
              reusableSVGContainer = reusableSVGContainer || document.createElement("div");
              reusableSVGContainer.innerHTML = "<svg>" + html.valueOf().toString() + "</svg>";
              var svgNode = reusableSVGContainer.firstChild;
              while (node.firstChild) {
                node.removeChild(node.firstChild);
              }
              while (svgNode.firstChild) {
                node.appendChild(svgNode.firstChild);
              }
              return;
            }
          }
          node.innerHTML = html;
        });
        var ELEMENT_NODE = 1;
        var TEXT_NODE = 3;
        var COMMENT_NODE = 8;
        var DOCUMENT_NODE = 9;
        var DOCUMENT_FRAGMENT_NODE = 11;
        var setTextContent = function(node, text) {
          if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
              firstChild.nodeValue = text;
              return;
            }
          }
          node.textContent = text;
        };
        var shorthandToLonghand = {
          animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
          background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
          backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
          border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
          borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
          borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
          borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
          borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
          borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
          borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
          borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
          borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
          borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
          borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
          borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
          borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
          borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
          columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
          columns: ["columnCount", "columnWidth"],
          flex: ["flexBasis", "flexGrow", "flexShrink"],
          flexFlow: ["flexDirection", "flexWrap"],
          font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
          fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
          gap: ["columnGap", "rowGap"],
          grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
          gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
          gridColumn: ["gridColumnEnd", "gridColumnStart"],
          gridColumnGap: ["columnGap"],
          gridGap: ["columnGap", "rowGap"],
          gridRow: ["gridRowEnd", "gridRowStart"],
          gridRowGap: ["rowGap"],
          gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
          listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
          margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
          marker: ["markerEnd", "markerMid", "markerStart"],
          mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
          maskPosition: ["maskPositionX", "maskPositionY"],
          outline: ["outlineColor", "outlineStyle", "outlineWidth"],
          overflow: ["overflowX", "overflowY"],
          padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
          placeContent: ["alignContent", "justifyContent"],
          placeItems: ["alignItems", "justifyItems"],
          placeSelf: ["alignSelf", "justifySelf"],
          textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
          textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
          transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
          wordWrap: ["overflowWrap"]
        };
        var isUnitlessNumber2 = {
          animationIterationCount: true,
          aspectRatio: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridArea: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true
        };
        function prefixKey2(prefix4, key) {
          return prefix4 + key.charAt(0).toUpperCase() + key.substring(1);
        }
        var prefixes4 = ["Webkit", "ms", "Moz", "O"];
        Object.keys(isUnitlessNumber2).forEach(function(prop) {
          prefixes4.forEach(function(prefix4) {
            isUnitlessNumber2[prefixKey2(prefix4, prop)] = isUnitlessNumber2[prop];
          });
        });
        function dangerousStyleValue2(name, value, isCustomProperty) {
          var isEmpty = value == null || typeof value === "boolean" || value === "";
          if (isEmpty) {
            return "";
          }
          if (!isCustomProperty && typeof value === "number" && value !== 0 && !(isUnitlessNumber2.hasOwnProperty(name) && isUnitlessNumber2[name])) {
            return value + "px";
          }
          {
            checkCSSPropertyStringCoercion(value, name);
          }
          return ("" + value).trim();
        }
        var uppercasePattern = /([A-Z])/g;
        var msPattern3 = /^ms-/;
        function hyphenateStyleName(name) {
          return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern3, "-ms-");
        }
        var warnValidStyle = function() {
        };
        {
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
          var msPattern$1 = /^-ms-/;
          var hyphenPattern = /-(.)/g;
          var badStyleValueWithSemicolonPattern = /;\s*$/;
          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;
          var warnedForInfinityValue = false;
          var camelize2 = function(string) {
            return string.replace(hyphenPattern, function(_5, character) {
              return character.toUpperCase();
            });
          };
          var warnHyphenatedStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error("Unsupported style property %s. Did you mean %s?", name, camelize2(name.replace(msPattern$1, "ms-")));
          };
          var warnBadVendoredStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
          };
          var warnStyleValueWithSemicolon = function(name, value) {
            if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
              return;
            }
            warnedStyleValues[value] = true;
            error(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, ""));
          };
          var warnStyleValueIsNaN = function(name, value) {
            if (warnedForNaNValue) {
              return;
            }
            warnedForNaNValue = true;
            error("`NaN` is an invalid value for the `%s` css style property.", name);
          };
          var warnStyleValueIsInfinity = function(name, value) {
            if (warnedForInfinityValue) {
              return;
            }
            warnedForInfinityValue = true;
            error("`Infinity` is an invalid value for the `%s` css style property.", name);
          };
          warnValidStyle = function(name, value) {
            if (name.indexOf("-") > -1) {
              warnHyphenatedStyleName(name);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value);
            }
            if (typeof value === "number") {
              if (isNaN(value)) {
                warnStyleValueIsNaN(name, value);
              } else if (!isFinite(value)) {
                warnStyleValueIsInfinity(name, value);
              }
            }
          };
        }
        var warnValidStyle$1 = warnValidStyle;
        function createDangerousStringForStyles(styles) {
          {
            var serialized = "";
            var delimiter = "";
            for (var styleName in styles) {
              if (!styles.hasOwnProperty(styleName)) {
                continue;
              }
              var styleValue = styles[styleName];
              if (styleValue != null) {
                var isCustomProperty = styleName.indexOf("--") === 0;
                serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ":";
                serialized += dangerousStyleValue2(styleName, styleValue, isCustomProperty);
                delimiter = ";";
              }
            }
            return serialized || null;
          }
        }
        function setValueForStyles(node, styles) {
          var style2 = node.style;
          for (var styleName in styles) {
            if (!styles.hasOwnProperty(styleName)) {
              continue;
            }
            var isCustomProperty = styleName.indexOf("--") === 0;
            {
              if (!isCustomProperty) {
                warnValidStyle$1(styleName, styles[styleName]);
              }
            }
            var styleValue = dangerousStyleValue2(styleName, styles[styleName], isCustomProperty);
            if (styleName === "float") {
              styleName = "cssFloat";
            }
            if (isCustomProperty) {
              style2.setProperty(styleName, styleValue);
            } else {
              style2[styleName] = styleValue;
            }
          }
        }
        function isValueEmpty(value) {
          return value == null || typeof value === "boolean" || value === "";
        }
        function expandShorthandMap(styles) {
          var expanded = {};
          for (var key in styles) {
            var longhands = shorthandToLonghand[key] || [key];
            for (var i9 = 0; i9 < longhands.length; i9++) {
              expanded[longhands[i9]] = key;
            }
          }
          return expanded;
        }
        function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
          {
            if (!nextStyles) {
              return;
            }
            var expandedUpdates = expandShorthandMap(styleUpdates);
            var expandedStyles = expandShorthandMap(nextStyles);
            var warnedAbout = {};
            for (var key in expandedUpdates) {
              var originalKey = expandedUpdates[key];
              var correctOriginalKey = expandedStyles[key];
              if (correctOriginalKey && originalKey !== correctOriginalKey) {
                var warningKey = originalKey + "," + correctOriginalKey;
                if (warnedAbout[warningKey]) {
                  continue;
                }
                warnedAbout[warningKey] = true;
                error("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? "Removing" : "Updating", originalKey, correctOriginalKey);
              }
            }
          }
        }
        var omittedCloseTags = {
          area: true,
          base: true,
          br: true,
          col: true,
          embed: true,
          hr: true,
          img: true,
          input: true,
          keygen: true,
          link: true,
          meta: true,
          param: true,
          source: true,
          track: true,
          wbr: true
        };
        var voidElementTags = assign3({
          menuitem: true
        }, omittedCloseTags);
        var HTML = "__html";
        function assertValidProps(tag, props) {
          if (!props) {
            return;
          }
          if (voidElementTags[tag]) {
            if (props.children != null || props.dangerouslySetInnerHTML != null) {
              throw new Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
            }
          }
          if (props.dangerouslySetInnerHTML != null) {
            if (props.children != null) {
              throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            }
            if (typeof props.dangerouslySetInnerHTML !== "object" || !(HTML in props.dangerouslySetInnerHTML)) {
              throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            }
          }
          {
            if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
              error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
            }
          }
          if (props.style != null && typeof props.style !== "object") {
            throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
          }
        }
        function isCustomComponent(tagName, props) {
          if (tagName.indexOf("-") === -1) {
            return typeof props.is === "string";
          }
          switch (tagName) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return false;
            default:
              return true;
          }
        }
        var possibleStandardNames = {
          accept: "accept",
          acceptcharset: "acceptCharset",
          "accept-charset": "acceptCharset",
          accesskey: "accessKey",
          action: "action",
          allowfullscreen: "allowFullScreen",
          alt: "alt",
          as: "as",
          async: "async",
          autocapitalize: "autoCapitalize",
          autocomplete: "autoComplete",
          autocorrect: "autoCorrect",
          autofocus: "autoFocus",
          autoplay: "autoPlay",
          autosave: "autoSave",
          capture: "capture",
          cellpadding: "cellPadding",
          cellspacing: "cellSpacing",
          challenge: "challenge",
          charset: "charSet",
          checked: "checked",
          children: "children",
          cite: "cite",
          class: "className",
          classid: "classID",
          classname: "className",
          cols: "cols",
          colspan: "colSpan",
          content: "content",
          contenteditable: "contentEditable",
          contextmenu: "contextMenu",
          controls: "controls",
          controlslist: "controlsList",
          coords: "coords",
          crossorigin: "crossOrigin",
          dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
          data: "data",
          datetime: "dateTime",
          default: "default",
          defaultchecked: "defaultChecked",
          defaultvalue: "defaultValue",
          defer: "defer",
          dir: "dir",
          disabled: "disabled",
          disablepictureinpicture: "disablePictureInPicture",
          disableremoteplayback: "disableRemotePlayback",
          download: "download",
          draggable: "draggable",
          enctype: "encType",
          enterkeyhint: "enterKeyHint",
          for: "htmlFor",
          form: "form",
          formmethod: "formMethod",
          formaction: "formAction",
          formenctype: "formEncType",
          formnovalidate: "formNoValidate",
          formtarget: "formTarget",
          frameborder: "frameBorder",
          headers: "headers",
          height: "height",
          hidden: "hidden",
          high: "high",
          href: "href",
          hreflang: "hrefLang",
          htmlfor: "htmlFor",
          httpequiv: "httpEquiv",
          "http-equiv": "httpEquiv",
          icon: "icon",
          id: "id",
          imagesizes: "imageSizes",
          imagesrcset: "imageSrcSet",
          innerhtml: "innerHTML",
          inputmode: "inputMode",
          integrity: "integrity",
          is: "is",
          itemid: "itemID",
          itemprop: "itemProp",
          itemref: "itemRef",
          itemscope: "itemScope",
          itemtype: "itemType",
          keyparams: "keyParams",
          keytype: "keyType",
          kind: "kind",
          label: "label",
          lang: "lang",
          list: "list",
          loop: "loop",
          low: "low",
          manifest: "manifest",
          marginwidth: "marginWidth",
          marginheight: "marginHeight",
          max: "max",
          maxlength: "maxLength",
          media: "media",
          mediagroup: "mediaGroup",
          method: "method",
          min: "min",
          minlength: "minLength",
          multiple: "multiple",
          muted: "muted",
          name: "name",
          nomodule: "noModule",
          nonce: "nonce",
          novalidate: "noValidate",
          open: "open",
          optimum: "optimum",
          pattern: "pattern",
          placeholder: "placeholder",
          playsinline: "playsInline",
          poster: "poster",
          preload: "preload",
          profile: "profile",
          radiogroup: "radioGroup",
          readonly: "readOnly",
          referrerpolicy: "referrerPolicy",
          rel: "rel",
          required: "required",
          reversed: "reversed",
          role: "role",
          rows: "rows",
          rowspan: "rowSpan",
          sandbox: "sandbox",
          scope: "scope",
          scoped: "scoped",
          scrolling: "scrolling",
          seamless: "seamless",
          selected: "selected",
          shape: "shape",
          size: "size",
          sizes: "sizes",
          span: "span",
          spellcheck: "spellCheck",
          src: "src",
          srcdoc: "srcDoc",
          srclang: "srcLang",
          srcset: "srcSet",
          start: "start",
          step: "step",
          style: "style",
          summary: "summary",
          tabindex: "tabIndex",
          target: "target",
          title: "title",
          type: "type",
          usemap: "useMap",
          value: "value",
          width: "width",
          wmode: "wmode",
          wrap: "wrap",
          about: "about",
          accentheight: "accentHeight",
          "accent-height": "accentHeight",
          accumulate: "accumulate",
          additive: "additive",
          alignmentbaseline: "alignmentBaseline",
          "alignment-baseline": "alignmentBaseline",
          allowreorder: "allowReorder",
          alphabetic: "alphabetic",
          amplitude: "amplitude",
          arabicform: "arabicForm",
          "arabic-form": "arabicForm",
          ascent: "ascent",
          attributename: "attributeName",
          attributetype: "attributeType",
          autoreverse: "autoReverse",
          azimuth: "azimuth",
          basefrequency: "baseFrequency",
          baselineshift: "baselineShift",
          "baseline-shift": "baselineShift",
          baseprofile: "baseProfile",
          bbox: "bbox",
          begin: "begin",
          bias: "bias",
          by: "by",
          calcmode: "calcMode",
          capheight: "capHeight",
          "cap-height": "capHeight",
          clip: "clip",
          clippath: "clipPath",
          "clip-path": "clipPath",
          clippathunits: "clipPathUnits",
          cliprule: "clipRule",
          "clip-rule": "clipRule",
          color: "color",
          colorinterpolation: "colorInterpolation",
          "color-interpolation": "colorInterpolation",
          colorinterpolationfilters: "colorInterpolationFilters",
          "color-interpolation-filters": "colorInterpolationFilters",
          colorprofile: "colorProfile",
          "color-profile": "colorProfile",
          colorrendering: "colorRendering",
          "color-rendering": "colorRendering",
          contentscripttype: "contentScriptType",
          contentstyletype: "contentStyleType",
          cursor: "cursor",
          cx: "cx",
          cy: "cy",
          d: "d",
          datatype: "datatype",
          decelerate: "decelerate",
          descent: "descent",
          diffuseconstant: "diffuseConstant",
          direction: "direction",
          display: "display",
          divisor: "divisor",
          dominantbaseline: "dominantBaseline",
          "dominant-baseline": "dominantBaseline",
          dur: "dur",
          dx: "dx",
          dy: "dy",
          edgemode: "edgeMode",
          elevation: "elevation",
          enablebackground: "enableBackground",
          "enable-background": "enableBackground",
          end: "end",
          exponent: "exponent",
          externalresourcesrequired: "externalResourcesRequired",
          fill: "fill",
          fillopacity: "fillOpacity",
          "fill-opacity": "fillOpacity",
          fillrule: "fillRule",
          "fill-rule": "fillRule",
          filter: "filter",
          filterres: "filterRes",
          filterunits: "filterUnits",
          floodopacity: "floodOpacity",
          "flood-opacity": "floodOpacity",
          floodcolor: "floodColor",
          "flood-color": "floodColor",
          focusable: "focusable",
          fontfamily: "fontFamily",
          "font-family": "fontFamily",
          fontsize: "fontSize",
          "font-size": "fontSize",
          fontsizeadjust: "fontSizeAdjust",
          "font-size-adjust": "fontSizeAdjust",
          fontstretch: "fontStretch",
          "font-stretch": "fontStretch",
          fontstyle: "fontStyle",
          "font-style": "fontStyle",
          fontvariant: "fontVariant",
          "font-variant": "fontVariant",
          fontweight: "fontWeight",
          "font-weight": "fontWeight",
          format: "format",
          from: "from",
          fx: "fx",
          fy: "fy",
          g1: "g1",
          g2: "g2",
          glyphname: "glyphName",
          "glyph-name": "glyphName",
          glyphorientationhorizontal: "glyphOrientationHorizontal",
          "glyph-orientation-horizontal": "glyphOrientationHorizontal",
          glyphorientationvertical: "glyphOrientationVertical",
          "glyph-orientation-vertical": "glyphOrientationVertical",
          glyphref: "glyphRef",
          gradienttransform: "gradientTransform",
          gradientunits: "gradientUnits",
          hanging: "hanging",
          horizadvx: "horizAdvX",
          "horiz-adv-x": "horizAdvX",
          horizoriginx: "horizOriginX",
          "horiz-origin-x": "horizOriginX",
          ideographic: "ideographic",
          imagerendering: "imageRendering",
          "image-rendering": "imageRendering",
          in2: "in2",
          in: "in",
          inlist: "inlist",
          intercept: "intercept",
          k1: "k1",
          k2: "k2",
          k3: "k3",
          k4: "k4",
          k: "k",
          kernelmatrix: "kernelMatrix",
          kernelunitlength: "kernelUnitLength",
          kerning: "kerning",
          keypoints: "keyPoints",
          keysplines: "keySplines",
          keytimes: "keyTimes",
          lengthadjust: "lengthAdjust",
          letterspacing: "letterSpacing",
          "letter-spacing": "letterSpacing",
          lightingcolor: "lightingColor",
          "lighting-color": "lightingColor",
          limitingconeangle: "limitingConeAngle",
          local: "local",
          markerend: "markerEnd",
          "marker-end": "markerEnd",
          markerheight: "markerHeight",
          markermid: "markerMid",
          "marker-mid": "markerMid",
          markerstart: "markerStart",
          "marker-start": "markerStart",
          markerunits: "markerUnits",
          markerwidth: "markerWidth",
          mask: "mask",
          maskcontentunits: "maskContentUnits",
          maskunits: "maskUnits",
          mathematical: "mathematical",
          mode: "mode",
          numoctaves: "numOctaves",
          offset: "offset",
          opacity: "opacity",
          operator: "operator",
          order: "order",
          orient: "orient",
          orientation: "orientation",
          origin: "origin",
          overflow: "overflow",
          overlineposition: "overlinePosition",
          "overline-position": "overlinePosition",
          overlinethickness: "overlineThickness",
          "overline-thickness": "overlineThickness",
          paintorder: "paintOrder",
          "paint-order": "paintOrder",
          panose1: "panose1",
          "panose-1": "panose1",
          pathlength: "pathLength",
          patterncontentunits: "patternContentUnits",
          patterntransform: "patternTransform",
          patternunits: "patternUnits",
          pointerevents: "pointerEvents",
          "pointer-events": "pointerEvents",
          points: "points",
          pointsatx: "pointsAtX",
          pointsaty: "pointsAtY",
          pointsatz: "pointsAtZ",
          prefix: "prefix",
          preservealpha: "preserveAlpha",
          preserveaspectratio: "preserveAspectRatio",
          primitiveunits: "primitiveUnits",
          property: "property",
          r: "r",
          radius: "radius",
          refx: "refX",
          refy: "refY",
          renderingintent: "renderingIntent",
          "rendering-intent": "renderingIntent",
          repeatcount: "repeatCount",
          repeatdur: "repeatDur",
          requiredextensions: "requiredExtensions",
          requiredfeatures: "requiredFeatures",
          resource: "resource",
          restart: "restart",
          result: "result",
          results: "results",
          rotate: "rotate",
          rx: "rx",
          ry: "ry",
          scale: "scale",
          security: "security",
          seed: "seed",
          shaperendering: "shapeRendering",
          "shape-rendering": "shapeRendering",
          slope: "slope",
          spacing: "spacing",
          specularconstant: "specularConstant",
          specularexponent: "specularExponent",
          speed: "speed",
          spreadmethod: "spreadMethod",
          startoffset: "startOffset",
          stddeviation: "stdDeviation",
          stemh: "stemh",
          stemv: "stemv",
          stitchtiles: "stitchTiles",
          stopcolor: "stopColor",
          "stop-color": "stopColor",
          stopopacity: "stopOpacity",
          "stop-opacity": "stopOpacity",
          strikethroughposition: "strikethroughPosition",
          "strikethrough-position": "strikethroughPosition",
          strikethroughthickness: "strikethroughThickness",
          "strikethrough-thickness": "strikethroughThickness",
          string: "string",
          stroke: "stroke",
          strokedasharray: "strokeDasharray",
          "stroke-dasharray": "strokeDasharray",
          strokedashoffset: "strokeDashoffset",
          "stroke-dashoffset": "strokeDashoffset",
          strokelinecap: "strokeLinecap",
          "stroke-linecap": "strokeLinecap",
          strokelinejoin: "strokeLinejoin",
          "stroke-linejoin": "strokeLinejoin",
          strokemiterlimit: "strokeMiterlimit",
          "stroke-miterlimit": "strokeMiterlimit",
          strokewidth: "strokeWidth",
          "stroke-width": "strokeWidth",
          strokeopacity: "strokeOpacity",
          "stroke-opacity": "strokeOpacity",
          suppresscontenteditablewarning: "suppressContentEditableWarning",
          suppresshydrationwarning: "suppressHydrationWarning",
          surfacescale: "surfaceScale",
          systemlanguage: "systemLanguage",
          tablevalues: "tableValues",
          targetx: "targetX",
          targety: "targetY",
          textanchor: "textAnchor",
          "text-anchor": "textAnchor",
          textdecoration: "textDecoration",
          "text-decoration": "textDecoration",
          textlength: "textLength",
          textrendering: "textRendering",
          "text-rendering": "textRendering",
          to: "to",
          transform: "transform",
          typeof: "typeof",
          u1: "u1",
          u2: "u2",
          underlineposition: "underlinePosition",
          "underline-position": "underlinePosition",
          underlinethickness: "underlineThickness",
          "underline-thickness": "underlineThickness",
          unicode: "unicode",
          unicodebidi: "unicodeBidi",
          "unicode-bidi": "unicodeBidi",
          unicoderange: "unicodeRange",
          "unicode-range": "unicodeRange",
          unitsperem: "unitsPerEm",
          "units-per-em": "unitsPerEm",
          unselectable: "unselectable",
          valphabetic: "vAlphabetic",
          "v-alphabetic": "vAlphabetic",
          values: "values",
          vectoreffect: "vectorEffect",
          "vector-effect": "vectorEffect",
          version: "version",
          vertadvy: "vertAdvY",
          "vert-adv-y": "vertAdvY",
          vertoriginx: "vertOriginX",
          "vert-origin-x": "vertOriginX",
          vertoriginy: "vertOriginY",
          "vert-origin-y": "vertOriginY",
          vhanging: "vHanging",
          "v-hanging": "vHanging",
          videographic: "vIdeographic",
          "v-ideographic": "vIdeographic",
          viewbox: "viewBox",
          viewtarget: "viewTarget",
          visibility: "visibility",
          vmathematical: "vMathematical",
          "v-mathematical": "vMathematical",
          vocab: "vocab",
          widths: "widths",
          wordspacing: "wordSpacing",
          "word-spacing": "wordSpacing",
          writingmode: "writingMode",
          "writing-mode": "writingMode",
          x1: "x1",
          x2: "x2",
          x: "x",
          xchannelselector: "xChannelSelector",
          xheight: "xHeight",
          "x-height": "xHeight",
          xlinkactuate: "xlinkActuate",
          "xlink:actuate": "xlinkActuate",
          xlinkarcrole: "xlinkArcrole",
          "xlink:arcrole": "xlinkArcrole",
          xlinkhref: "xlinkHref",
          "xlink:href": "xlinkHref",
          xlinkrole: "xlinkRole",
          "xlink:role": "xlinkRole",
          xlinkshow: "xlinkShow",
          "xlink:show": "xlinkShow",
          xlinktitle: "xlinkTitle",
          "xlink:title": "xlinkTitle",
          xlinktype: "xlinkType",
          "xlink:type": "xlinkType",
          xmlbase: "xmlBase",
          "xml:base": "xmlBase",
          xmllang: "xmlLang",
          "xml:lang": "xmlLang",
          xmlns: "xmlns",
          "xml:space": "xmlSpace",
          xmlnsxlink: "xmlnsXlink",
          "xmlns:xlink": "xmlnsXlink",
          xmlspace: "xmlSpace",
          y1: "y1",
          y2: "y2",
          y: "y",
          ychannelselector: "yChannelSelector",
          z: "z",
          zoomandpan: "zoomAndPan"
        };
        var ariaProperties = {
          "aria-current": 0,
          "aria-description": 0,
          "aria-details": 0,
          "aria-disabled": 0,
          "aria-hidden": 0,
          "aria-invalid": 0,
          "aria-keyshortcuts": 0,
          "aria-label": 0,
          "aria-roledescription": 0,
          "aria-autocomplete": 0,
          "aria-checked": 0,
          "aria-expanded": 0,
          "aria-haspopup": 0,
          "aria-level": 0,
          "aria-modal": 0,
          "aria-multiline": 0,
          "aria-multiselectable": 0,
          "aria-orientation": 0,
          "aria-placeholder": 0,
          "aria-pressed": 0,
          "aria-readonly": 0,
          "aria-required": 0,
          "aria-selected": 0,
          "aria-sort": 0,
          "aria-valuemax": 0,
          "aria-valuemin": 0,
          "aria-valuenow": 0,
          "aria-valuetext": 0,
          "aria-atomic": 0,
          "aria-busy": 0,
          "aria-live": 0,
          "aria-relevant": 0,
          "aria-dropeffect": 0,
          "aria-grabbed": 0,
          "aria-activedescendant": 0,
          "aria-colcount": 0,
          "aria-colindex": 0,
          "aria-colspan": 0,
          "aria-controls": 0,
          "aria-describedby": 0,
          "aria-errormessage": 0,
          "aria-flowto": 0,
          "aria-labelledby": 0,
          "aria-owns": 0,
          "aria-posinset": 0,
          "aria-rowcount": 0,
          "aria-rowindex": 0,
          "aria-rowspan": 0,
          "aria-setsize": 0
        };
        var warnedProperties = {};
        var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
        var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        function validateProperty(tagName, name) {
          {
            if (hasOwnProperty2.call(warnedProperties, name) && warnedProperties[name]) {
              return true;
            }
            if (rARIACamel.test(name)) {
              var ariaName = "aria-" + name.slice(4).toLowerCase();
              var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
              if (correctName == null) {
                error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                warnedProperties[name] = true;
                return true;
              }
              if (name !== correctName) {
                error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                warnedProperties[name] = true;
                return true;
              }
            }
            if (rARIA.test(name)) {
              var lowerCasedName = name.toLowerCase();
              var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
              if (standardName == null) {
                warnedProperties[name] = true;
                return false;
              }
              if (name !== standardName) {
                error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties[name] = true;
                return true;
              }
            }
          }
          return true;
        }
        function warnInvalidARIAProps(type2, props) {
          {
            var invalidProps = [];
            for (var key in props) {
              var isValid2 = validateProperty(type2, key);
              if (!isValid2) {
                invalidProps.push(key);
              }
            }
            var unknownPropString = invalidProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (invalidProps.length === 1) {
              error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type2);
            } else if (invalidProps.length > 1) {
              error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type2);
            }
          }
        }
        function validateProperties(type2, props) {
          if (isCustomComponent(type2, props)) {
            return;
          }
          warnInvalidARIAProps(type2, props);
        }
        var didWarnValueNull = false;
        function validateProperties$1(type2, props) {
          {
            if (type2 !== "input" && type2 !== "textarea" && type2 !== "select") {
              return;
            }
            if (props != null && props.value === null && !didWarnValueNull) {
              didWarnValueNull = true;
              if (type2 === "select" && props.multiple) {
                error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type2);
              } else {
                error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type2);
              }
            }
          }
        }
        var validateProperty$1 = function() {
        };
        {
          var warnedProperties$1 = {};
          var EVENT_NAME_REGEX = /^on./;
          var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
          var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
          var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
          validateProperty$1 = function(tagName, name, value, eventRegistry) {
            if (hasOwnProperty2.call(warnedProperties$1, name) && warnedProperties$1[name]) {
              return true;
            }
            var lowerCasedName = name.toLowerCase();
            if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
              error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (eventRegistry != null) {
              var registrationNameDependencies2 = eventRegistry.registrationNameDependencies, possibleRegistrationNames2 = eventRegistry.possibleRegistrationNames;
              if (registrationNameDependencies2.hasOwnProperty(name)) {
                return true;
              }
              var registrationName = possibleRegistrationNames2.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames2[lowerCasedName] : null;
              if (registrationName != null) {
                error("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                warnedProperties$1[name] = true;
                return true;
              }
              if (EVENT_NAME_REGEX.test(name)) {
                error("Unknown event handler property `%s`. It will be ignored.", name);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (EVENT_NAME_REGEX.test(name)) {
              if (INVALID_EVENT_NAME_REGEX.test(name)) {
                error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
              return true;
            }
            if (lowerCasedName === "innerhtml") {
              error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "aria") {
              error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value !== "string") {
              error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "number" && isNaN(value)) {
              error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
              warnedProperties$1[name] = true;
              return true;
            }
            var propertyInfo = getPropertyInfo(name);
            var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              var standardName = possibleStandardNames[lowerCasedName];
              if (standardName !== name) {
                error("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (!isReserved && name !== lowerCasedName) {
              error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              if (value) {
                error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
              } else {
                error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (isReserved) {
              return true;
            }
            if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              warnedProperties$1[name] = true;
              return false;
            }
            if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
              error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
              warnedProperties$1[name] = true;
              return true;
            }
            return true;
          };
        }
        var warnUnknownProperties = function(type2, props, eventRegistry) {
          {
            var unknownProps = [];
            for (var key in props) {
              var isValid2 = validateProperty$1(type2, key, props[key], eventRegistry);
              if (!isValid2) {
                unknownProps.push(key);
              }
            }
            var unknownPropString = unknownProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (unknownProps.length === 1) {
              error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type2);
            } else if (unknownProps.length > 1) {
              error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type2);
            }
          }
        };
        function validateProperties$2(type2, props, eventRegistry) {
          if (isCustomComponent(type2, props)) {
            return;
          }
          warnUnknownProperties(type2, props, eventRegistry);
        }
        var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
        var IS_NON_DELEGATED = 1 << 1;
        var IS_CAPTURE_PHASE = 1 << 2;
        var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
        var currentReplayingEvent = null;
        function setReplayingEvent(event) {
          {
            if (currentReplayingEvent !== null) {
              error("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          currentReplayingEvent = event;
        }
        function resetReplayingEvent() {
          {
            if (currentReplayingEvent === null) {
              error("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          currentReplayingEvent = null;
        }
        function isReplayingEvent(event) {
          return event === currentReplayingEvent;
        }
        function getEventTarget(nativeEvent) {
          var target = nativeEvent.target || nativeEvent.srcElement || window;
          if (target.correspondingUseElement) {
            target = target.correspondingUseElement;
          }
          return target.nodeType === TEXT_NODE ? target.parentNode : target;
        }
        var restoreImpl = null;
        var restoreTarget = null;
        var restoreQueue = null;
        function restoreStateOfTarget(target) {
          var internalInstance = getInstanceFromNode(target);
          if (!internalInstance) {
            return;
          }
          if (typeof restoreImpl !== "function") {
            throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
          }
          var stateNode = internalInstance.stateNode;
          if (stateNode) {
            var _props = getFiberCurrentPropsFromNode(stateNode);
            restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
          }
        }
        function setRestoreImplementation(impl) {
          restoreImpl = impl;
        }
        function enqueueStateRestore(target) {
          if (restoreTarget) {
            if (restoreQueue) {
              restoreQueue.push(target);
            } else {
              restoreQueue = [target];
            }
          } else {
            restoreTarget = target;
          }
        }
        function needsStateRestore() {
          return restoreTarget !== null || restoreQueue !== null;
        }
        function restoreStateIfNeeded() {
          if (!restoreTarget) {
            return;
          }
          var target = restoreTarget;
          var queuedTargets = restoreQueue;
          restoreTarget = null;
          restoreQueue = null;
          restoreStateOfTarget(target);
          if (queuedTargets) {
            for (var i9 = 0; i9 < queuedTargets.length; i9++) {
              restoreStateOfTarget(queuedTargets[i9]);
            }
          }
        }
        var batchedUpdatesImpl = function(fn2, bookkeeping) {
          return fn2(bookkeeping);
        };
        var flushSyncImpl = function() {
        };
        var isInsideEventHandler = false;
        function finishEventHandler() {
          var controlledComponentsHavePendingUpdates = needsStateRestore();
          if (controlledComponentsHavePendingUpdates) {
            flushSyncImpl();
            restoreStateIfNeeded();
          }
        }
        function batchedUpdates(fn2, a7, b8) {
          if (isInsideEventHandler) {
            return fn2(a7, b8);
          }
          isInsideEventHandler = true;
          try {
            return batchedUpdatesImpl(fn2, a7, b8);
          } finally {
            isInsideEventHandler = false;
            finishEventHandler();
          }
        }
        function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushSyncImpl) {
          batchedUpdatesImpl = _batchedUpdatesImpl;
          flushSyncImpl = _flushSyncImpl;
        }
        function isInteractive(tag) {
          return tag === "button" || tag === "input" || tag === "select" || tag === "textarea";
        }
        function shouldPreventMouseEvent(name, type2, props) {
          switch (name) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
              return !!(props.disabled && isInteractive(type2));
            default:
              return false;
          }
        }
        function getListener(inst, registrationName) {
          var stateNode = inst.stateNode;
          if (stateNode === null) {
            return null;
          }
          var props = getFiberCurrentPropsFromNode(stateNode);
          if (props === null) {
            return null;
          }
          var listener = props[registrationName];
          if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
            return null;
          }
          if (listener && typeof listener !== "function") {
            throw new Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
          }
          return listener;
        }
        var passiveBrowserEventsSupported = false;
        if (canUseDOM2) {
          try {
            var options = {};
            Object.defineProperty(options, "passive", {
              get: function() {
                passiveBrowserEventsSupported = true;
              }
            });
            window.addEventListener("test", options, options);
            window.removeEventListener("test", options, options);
          } catch (e15) {
            passiveBrowserEventsSupported = false;
          }
        }
        function invokeGuardedCallbackProd(name, func, context, a7, b8, c6, d4, e15, f4) {
          var funcArgs = Array.prototype.slice.call(arguments, 3);
          try {
            func.apply(context, funcArgs);
          } catch (error2) {
            this.onError(error2);
          }
        }
        var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
        {
          if (typeof window !== "undefined" && typeof window.dispatchEvent === "function" && typeof document !== "undefined" && typeof document.createEvent === "function") {
            var fakeNode = document.createElement("react");
            invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a7, b8, c6, d4, e15, f4) {
              if (typeof document === "undefined" || document === null) {
                throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
              }
              var evt = document.createEvent("Event");
              var didCall = false;
              var didError = true;
              var windowEvent = window.event;
              var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, "event");
              function restoreAfterDispatch() {
                fakeNode.removeEventListener(evtType, callCallback2, false);
                if (typeof window.event !== "undefined" && window.hasOwnProperty("event")) {
                  window.event = windowEvent;
                }
              }
              var funcArgs = Array.prototype.slice.call(arguments, 3);
              function callCallback2() {
                didCall = true;
                restoreAfterDispatch();
                func.apply(context, funcArgs);
                didError = false;
              }
              var error2;
              var didSetError = false;
              var isCrossOriginError = false;
              function handleWindowError(event) {
                error2 = event.error;
                didSetError = true;
                if (error2 === null && event.colno === 0 && event.lineno === 0) {
                  isCrossOriginError = true;
                }
                if (event.defaultPrevented) {
                  if (error2 != null && typeof error2 === "object") {
                    try {
                      error2._suppressLogging = true;
                    } catch (inner) {
                    }
                  }
                }
              }
              var evtType = "react-" + (name ? name : "invokeguardedcallback");
              window.addEventListener("error", handleWindowError);
              fakeNode.addEventListener(evtType, callCallback2, false);
              evt.initEvent(evtType, false, false);
              fakeNode.dispatchEvent(evt);
              if (windowEventDescriptor) {
                Object.defineProperty(window, "event", windowEventDescriptor);
              }
              if (didCall && didError) {
                if (!didSetError) {
                  error2 = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`);
                } else if (isCrossOriginError) {
                  error2 = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.");
                }
                this.onError(error2);
              }
              window.removeEventListener("error", handleWindowError);
              if (!didCall) {
                restoreAfterDispatch();
                return invokeGuardedCallbackProd.apply(this, arguments);
              }
            };
          }
        }
        var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
        var hasError = false;
        var caughtError = null;
        var hasRethrowError = false;
        var rethrowError = null;
        var reporter = {
          onError: function(error2) {
            hasError = true;
            caughtError = error2;
          }
        };
        function invokeGuardedCallback(name, func, context, a7, b8, c6, d4, e15, f4) {
          hasError = false;
          caughtError = null;
          invokeGuardedCallbackImpl$1.apply(reporter, arguments);
        }
        function invokeGuardedCallbackAndCatchFirstError(name, func, context, a7, b8, c6, d4, e15, f4) {
          invokeGuardedCallback.apply(this, arguments);
          if (hasError) {
            var error2 = clearCaughtError();
            if (!hasRethrowError) {
              hasRethrowError = true;
              rethrowError = error2;
            }
          }
        }
        function rethrowCaughtError() {
          if (hasRethrowError) {
            var error2 = rethrowError;
            hasRethrowError = false;
            rethrowError = null;
            throw error2;
          }
        }
        function hasCaughtError() {
          return hasError;
        }
        function clearCaughtError() {
          if (hasError) {
            var error2 = caughtError;
            hasError = false;
            caughtError = null;
            return error2;
          } else {
            throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
        function get5(key) {
          return key._reactInternals;
        }
        function has(key) {
          return key._reactInternals !== void 0;
        }
        function set(key, value) {
          key._reactInternals = value;
        }
        var NoFlags = 0;
        var PerformedWork = 1;
        var Placement = 2;
        var Update = 4;
        var ChildDeletion = 16;
        var ContentReset = 32;
        var Callback = 64;
        var DidCapture = 128;
        var ForceClientRender = 256;
        var Ref = 512;
        var Snapshot = 1024;
        var Passive = 2048;
        var Hydrating = 4096;
        var Visibility = 8192;
        var StoreConsistency = 16384;
        var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency;
        var HostEffectMask = 32767;
        var Incomplete = 32768;
        var ShouldCapture = 65536;
        var ForceUpdateForLegacySuspense = 131072;
        var Forked = 1048576;
        var RefStatic = 2097152;
        var LayoutStatic = 4194304;
        var PassiveStatic = 8388608;
        var MountLayoutDev = 16777216;
        var MountPassiveDev = 33554432;
        var BeforeMutationMask = Update | Snapshot | 0;
        var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;
        var LayoutMask = Update | Callback | Ref | Visibility;
        var PassiveMask = Passive | ChildDeletion;
        var StaticMask = LayoutStatic | PassiveStatic | RefStatic;
        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
        function getNearestMountedFiber(fiber) {
          var node = fiber;
          var nearestMounted = fiber;
          if (!fiber.alternate) {
            var nextNode = node;
            do {
              node = nextNode;
              if ((node.flags & (Placement | Hydrating)) !== NoFlags) {
                nearestMounted = node.return;
              }
              nextNode = node.return;
            } while (nextNode);
          } else {
            while (node.return) {
              node = node.return;
            }
          }
          if (node.tag === HostRoot) {
            return nearestMounted;
          }
          return null;
        }
        function getSuspenseInstanceFromFiber(fiber) {
          if (fiber.tag === SuspenseComponent) {
            var suspenseState = fiber.memoizedState;
            if (suspenseState === null) {
              var current2 = fiber.alternate;
              if (current2 !== null) {
                suspenseState = current2.memoizedState;
              }
            }
            if (suspenseState !== null) {
              return suspenseState.dehydrated;
            }
          }
          return null;
        }
        function getContainerFromFiber(fiber) {
          return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
        }
        function isFiberMounted(fiber) {
          return getNearestMountedFiber(fiber) === fiber;
        }
        function isMounted(component) {
          {
            var owner = ReactCurrentOwner.current;
            if (owner !== null && owner.tag === ClassComponent) {
              var ownerFiber = owner;
              var instance = ownerFiber.stateNode;
              if (!instance._warnedAboutRefsInRender) {
                error("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromFiber(ownerFiber) || "A component");
              }
              instance._warnedAboutRefsInRender = true;
            }
          }
          var fiber = get5(component);
          if (!fiber) {
            return false;
          }
          return getNearestMountedFiber(fiber) === fiber;
        }
        function assertIsMounted(fiber) {
          if (getNearestMountedFiber(fiber) !== fiber) {
            throw new Error("Unable to find node on an unmounted component.");
          }
        }
        function findCurrentFiberUsingSlowPath(fiber) {
          var alternate = fiber.alternate;
          if (!alternate) {
            var nearestMounted = getNearestMountedFiber(fiber);
            if (nearestMounted === null) {
              throw new Error("Unable to find node on an unmounted component.");
            }
            if (nearestMounted !== fiber) {
              return null;
            }
            return fiber;
          }
          var a7 = fiber;
          var b8 = alternate;
          while (true) {
            var parentA = a7.return;
            if (parentA === null) {
              break;
            }
            var parentB = parentA.alternate;
            if (parentB === null) {
              var nextParent = parentA.return;
              if (nextParent !== null) {
                a7 = b8 = nextParent;
                continue;
              }
              break;
            }
            if (parentA.child === parentB.child) {
              var child = parentA.child;
              while (child) {
                if (child === a7) {
                  assertIsMounted(parentA);
                  return fiber;
                }
                if (child === b8) {
                  assertIsMounted(parentA);
                  return alternate;
                }
                child = child.sibling;
              }
              throw new Error("Unable to find node on an unmounted component.");
            }
            if (a7.return !== b8.return) {
              a7 = parentA;
              b8 = parentB;
            } else {
              var didFindChild = false;
              var _child = parentA.child;
              while (_child) {
                if (_child === a7) {
                  didFindChild = true;
                  a7 = parentA;
                  b8 = parentB;
                  break;
                }
                if (_child === b8) {
                  didFindChild = true;
                  b8 = parentA;
                  a7 = parentB;
                  break;
                }
                _child = _child.sibling;
              }
              if (!didFindChild) {
                _child = parentB.child;
                while (_child) {
                  if (_child === a7) {
                    didFindChild = true;
                    a7 = parentB;
                    b8 = parentA;
                    break;
                  }
                  if (_child === b8) {
                    didFindChild = true;
                    b8 = parentB;
                    a7 = parentA;
                    break;
                  }
                  _child = _child.sibling;
                }
                if (!didFindChild) {
                  throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                }
              }
            }
            if (a7.alternate !== b8) {
              throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          if (a7.tag !== HostRoot) {
            throw new Error("Unable to find node on an unmounted component.");
          }
          if (a7.stateNode.current === a7) {
            return fiber;
          }
          return alternate;
        }
        function findCurrentHostFiber(parent) {
          var currentParent = findCurrentFiberUsingSlowPath(parent);
          return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;
        }
        function findCurrentHostFiberImpl(node) {
          if (node.tag === HostComponent || node.tag === HostText) {
            return node;
          }
          var child = node.child;
          while (child !== null) {
            var match2 = findCurrentHostFiberImpl(child);
            if (match2 !== null) {
              return match2;
            }
            child = child.sibling;
          }
          return null;
        }
        function findCurrentHostFiberWithNoPortals(parent) {
          var currentParent = findCurrentFiberUsingSlowPath(parent);
          return currentParent !== null ? findCurrentHostFiberWithNoPortalsImpl(currentParent) : null;
        }
        function findCurrentHostFiberWithNoPortalsImpl(node) {
          if (node.tag === HostComponent || node.tag === HostText) {
            return node;
          }
          var child = node.child;
          while (child !== null) {
            if (child.tag !== HostPortal) {
              var match2 = findCurrentHostFiberWithNoPortalsImpl(child);
              if (match2 !== null) {
                return match2;
              }
            }
            child = child.sibling;
          }
          return null;
        }
        var scheduleCallback = Scheduler2.unstable_scheduleCallback;
        var cancelCallback = Scheduler2.unstable_cancelCallback;
        var shouldYield = Scheduler2.unstable_shouldYield;
        var requestPaint = Scheduler2.unstable_requestPaint;
        var now = Scheduler2.unstable_now;
        var getCurrentPriorityLevel = Scheduler2.unstable_getCurrentPriorityLevel;
        var ImmediatePriority = Scheduler2.unstable_ImmediatePriority;
        var UserBlockingPriority = Scheduler2.unstable_UserBlockingPriority;
        var NormalPriority = Scheduler2.unstable_NormalPriority;
        var LowPriority = Scheduler2.unstable_LowPriority;
        var IdlePriority = Scheduler2.unstable_IdlePriority;
        var unstable_yieldValue = Scheduler2.unstable_yieldValue;
        var unstable_setDisableYieldValue = Scheduler2.unstable_setDisableYieldValue;
        var rendererID = null;
        var injectedHook = null;
        var injectedProfilingHooks = null;
        var hasLoggedError = false;
        var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined";
        function injectInternals(internals) {
          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined") {
            return false;
          }
          var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (hook.isDisabled) {
            return true;
          }
          if (!hook.supportsFiber) {
            {
              error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools");
            }
            return true;
          }
          try {
            if (enableSchedulingProfiler) {
              internals = assign3({}, internals, {
                getLaneLabelMap,
                injectProfilingHooks
              });
            }
            rendererID = hook.inject(internals);
            injectedHook = hook;
          } catch (err) {
            {
              error("React instrumentation encountered an error: %s.", err);
            }
          }
          if (hook.checkDCE) {
            return true;
          } else {
            return false;
          }
        }
        function onScheduleRoot(root3, children) {
          {
            if (injectedHook && typeof injectedHook.onScheduleFiberRoot === "function") {
              try {
                injectedHook.onScheduleFiberRoot(rendererID, root3, children);
              } catch (err) {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error("React instrumentation encountered an error: %s", err);
                }
              }
            }
          }
        }
        function onCommitRoot(root3, eventPriority) {
          if (injectedHook && typeof injectedHook.onCommitFiberRoot === "function") {
            try {
              var didError = (root3.current.flags & DidCapture) === DidCapture;
              if (enableProfilerTimer) {
                var schedulerPriority;
                switch (eventPriority) {
                  case DiscreteEventPriority:
                    schedulerPriority = ImmediatePriority;
                    break;
                  case ContinuousEventPriority:
                    schedulerPriority = UserBlockingPriority;
                    break;
                  case DefaultEventPriority:
                    schedulerPriority = NormalPriority;
                    break;
                  case IdleEventPriority:
                    schedulerPriority = IdlePriority;
                    break;
                  default:
                    schedulerPriority = NormalPriority;
                    break;
                }
                injectedHook.onCommitFiberRoot(rendererID, root3, schedulerPriority, didError);
              } else {
                injectedHook.onCommitFiberRoot(rendererID, root3, void 0, didError);
              }
            } catch (err) {
              {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error("React instrumentation encountered an error: %s", err);
                }
              }
            }
          }
        }
        function onPostCommitRoot(root3) {
          if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === "function") {
            try {
              injectedHook.onPostCommitFiberRoot(rendererID, root3);
            } catch (err) {
              {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error("React instrumentation encountered an error: %s", err);
                }
              }
            }
          }
        }
        function onCommitUnmount(fiber) {
          if (injectedHook && typeof injectedHook.onCommitFiberUnmount === "function") {
            try {
              injectedHook.onCommitFiberUnmount(rendererID, fiber);
            } catch (err) {
              {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error("React instrumentation encountered an error: %s", err);
                }
              }
            }
          }
        }
        function setIsStrictModeForDevtools(newIsStrictMode) {
          {
            if (typeof unstable_yieldValue === "function") {
              unstable_setDisableYieldValue(newIsStrictMode);
              setSuppressWarning(newIsStrictMode);
            }
            if (injectedHook && typeof injectedHook.setStrictMode === "function") {
              try {
                injectedHook.setStrictMode(rendererID, newIsStrictMode);
              } catch (err) {
                {
                  if (!hasLoggedError) {
                    hasLoggedError = true;
                    error("React instrumentation encountered an error: %s", err);
                  }
                }
              }
            }
          }
        }
        function injectProfilingHooks(profilingHooks) {
          injectedProfilingHooks = profilingHooks;
        }
        function getLaneLabelMap() {
          {
            var map5 = new Map();
            var lane = 1;
            for (var index2 = 0; index2 < TotalLanes; index2++) {
              var label = getLabelForLane(lane);
              map5.set(lane, label);
              lane *= 2;
            }
            return map5;
          }
        }
        function markCommitStarted(lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStarted === "function") {
              injectedProfilingHooks.markCommitStarted(lanes);
            }
          }
        }
        function markCommitStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStopped === "function") {
              injectedProfilingHooks.markCommitStopped();
            }
          }
        }
        function markComponentRenderStarted(fiber) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStarted === "function") {
              injectedProfilingHooks.markComponentRenderStarted(fiber);
            }
          }
        }
        function markComponentRenderStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStopped === "function") {
              injectedProfilingHooks.markComponentRenderStopped();
            }
          }
        }
        function markComponentPassiveEffectMountStarted(fiber) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted === "function") {
              injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);
            }
          }
        }
        function markComponentPassiveEffectMountStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped === "function") {
              injectedProfilingHooks.markComponentPassiveEffectMountStopped();
            }
          }
        }
        function markComponentPassiveEffectUnmountStarted(fiber) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted === "function") {
              injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);
            }
          }
        }
        function markComponentPassiveEffectUnmountStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped === "function") {
              injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();
            }
          }
        }
        function markComponentLayoutEffectMountStarted(fiber) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted === "function") {
              injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);
            }
          }
        }
        function markComponentLayoutEffectMountStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped === "function") {
              injectedProfilingHooks.markComponentLayoutEffectMountStopped();
            }
          }
        }
        function markComponentLayoutEffectUnmountStarted(fiber) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted === "function") {
              injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);
            }
          }
        }
        function markComponentLayoutEffectUnmountStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped === "function") {
              injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();
            }
          }
        }
        function markComponentErrored(fiber, thrownValue, lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentErrored === "function") {
              injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);
            }
          }
        }
        function markComponentSuspended(fiber, wakeable, lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentSuspended === "function") {
              injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);
            }
          }
        }
        function markLayoutEffectsStarted(lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStarted === "function") {
              injectedProfilingHooks.markLayoutEffectsStarted(lanes);
            }
          }
        }
        function markLayoutEffectsStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStopped === "function") {
              injectedProfilingHooks.markLayoutEffectsStopped();
            }
          }
        }
        function markPassiveEffectsStarted(lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStarted === "function") {
              injectedProfilingHooks.markPassiveEffectsStarted(lanes);
            }
          }
        }
        function markPassiveEffectsStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStopped === "function") {
              injectedProfilingHooks.markPassiveEffectsStopped();
            }
          }
        }
        function markRenderStarted(lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStarted === "function") {
              injectedProfilingHooks.markRenderStarted(lanes);
            }
          }
        }
        function markRenderYielded() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderYielded === "function") {
              injectedProfilingHooks.markRenderYielded();
            }
          }
        }
        function markRenderStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStopped === "function") {
              injectedProfilingHooks.markRenderStopped();
            }
          }
        }
        function markRenderScheduled(lane) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderScheduled === "function") {
              injectedProfilingHooks.markRenderScheduled(lane);
            }
          }
        }
        function markForceUpdateScheduled(fiber, lane) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markForceUpdateScheduled === "function") {
              injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);
            }
          }
        }
        function markStateUpdateScheduled(fiber, lane) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markStateUpdateScheduled === "function") {
              injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
            }
          }
        }
        var NoMode = 0;
        var ConcurrentMode = 1;
        var ProfileMode = 2;
        var StrictLegacyMode = 8;
        var StrictEffectsMode = 16;
        var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
        var log3 = Math.log;
        var LN2 = Math.LN2;
        function clz32Fallback(x7) {
          var asUint = x7 >>> 0;
          if (asUint === 0) {
            return 32;
          }
          return 31 - (log3(asUint) / LN2 | 0) | 0;
        }
        var TotalLanes = 31;
        var NoLanes = 0;
        var NoLane = 0;
        var SyncLane = 1;
        var InputContinuousHydrationLane = 2;
        var InputContinuousLane = 4;
        var DefaultHydrationLane = 8;
        var DefaultLane = 16;
        var TransitionHydrationLane = 32;
        var TransitionLanes = 4194240;
        var TransitionLane1 = 64;
        var TransitionLane2 = 128;
        var TransitionLane3 = 256;
        var TransitionLane4 = 512;
        var TransitionLane5 = 1024;
        var TransitionLane6 = 2048;
        var TransitionLane7 = 4096;
        var TransitionLane8 = 8192;
        var TransitionLane9 = 16384;
        var TransitionLane10 = 32768;
        var TransitionLane11 = 65536;
        var TransitionLane12 = 131072;
        var TransitionLane13 = 262144;
        var TransitionLane14 = 524288;
        var TransitionLane15 = 1048576;
        var TransitionLane16 = 2097152;
        var RetryLanes = 130023424;
        var RetryLane1 = 4194304;
        var RetryLane2 = 8388608;
        var RetryLane3 = 16777216;
        var RetryLane4 = 33554432;
        var RetryLane5 = 67108864;
        var SomeRetryLane = RetryLane1;
        var SelectiveHydrationLane = 134217728;
        var NonIdleLanes = 268435455;
        var IdleHydrationLane = 268435456;
        var IdleLane = 536870912;
        var OffscreenLane = 1073741824;
        function getLabelForLane(lane) {
          {
            if (lane & SyncLane) {
              return "Sync";
            }
            if (lane & InputContinuousHydrationLane) {
              return "InputContinuousHydration";
            }
            if (lane & InputContinuousLane) {
              return "InputContinuous";
            }
            if (lane & DefaultHydrationLane) {
              return "DefaultHydration";
            }
            if (lane & DefaultLane) {
              return "Default";
            }
            if (lane & TransitionHydrationLane) {
              return "TransitionHydration";
            }
            if (lane & TransitionLanes) {
              return "Transition";
            }
            if (lane & RetryLanes) {
              return "Retry";
            }
            if (lane & SelectiveHydrationLane) {
              return "SelectiveHydration";
            }
            if (lane & IdleHydrationLane) {
              return "IdleHydration";
            }
            if (lane & IdleLane) {
              return "Idle";
            }
            if (lane & OffscreenLane) {
              return "Offscreen";
            }
          }
        }
        var NoTimestamp = -1;
        var nextTransitionLane = TransitionLane1;
        var nextRetryLane = RetryLane1;
        function getHighestPriorityLanes(lanes) {
          switch (getHighestPriorityLane(lanes)) {
            case SyncLane:
              return SyncLane;
            case InputContinuousHydrationLane:
              return InputContinuousHydrationLane;
            case InputContinuousLane:
              return InputContinuousLane;
            case DefaultHydrationLane:
              return DefaultHydrationLane;
            case DefaultLane:
              return DefaultLane;
            case TransitionHydrationLane:
              return TransitionHydrationLane;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
              return lanes & TransitionLanes;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
              return lanes & RetryLanes;
            case SelectiveHydrationLane:
              return SelectiveHydrationLane;
            case IdleHydrationLane:
              return IdleHydrationLane;
            case IdleLane:
              return IdleLane;
            case OffscreenLane:
              return OffscreenLane;
            default:
              {
                error("Should have found matching lanes. This is a bug in React.");
              }
              return lanes;
          }
        }
        function getNextLanes(root3, wipLanes) {
          var pendingLanes = root3.pendingLanes;
          if (pendingLanes === NoLanes) {
            return NoLanes;
          }
          var nextLanes = NoLanes;
          var suspendedLanes = root3.suspendedLanes;
          var pingedLanes = root3.pingedLanes;
          var nonIdlePendingLanes = pendingLanes & NonIdleLanes;
          if (nonIdlePendingLanes !== NoLanes) {
            var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
            if (nonIdleUnblockedLanes !== NoLanes) {
              nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
            } else {
              var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
              if (nonIdlePingedLanes !== NoLanes) {
                nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
              }
            }
          } else {
            var unblockedLanes = pendingLanes & ~suspendedLanes;
            if (unblockedLanes !== NoLanes) {
              nextLanes = getHighestPriorityLanes(unblockedLanes);
            } else {
              if (pingedLanes !== NoLanes) {
                nextLanes = getHighestPriorityLanes(pingedLanes);
              }
            }
          }
          if (nextLanes === NoLanes) {
            return NoLanes;
          }
          if (wipLanes !== NoLanes && wipLanes !== nextLanes && (wipLanes & suspendedLanes) === NoLanes) {
            var nextLane = getHighestPriorityLane(nextLanes);
            var wipLane = getHighestPriorityLane(wipLanes);
            if (nextLane >= wipLane || nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) {
              return wipLanes;
            }
          }
          if ((nextLanes & InputContinuousLane) !== NoLanes) {
            nextLanes |= pendingLanes & DefaultLane;
          }
          var entangledLanes = root3.entangledLanes;
          if (entangledLanes !== NoLanes) {
            var entanglements = root3.entanglements;
            var lanes = nextLanes & entangledLanes;
            while (lanes > 0) {
              var index2 = pickArbitraryLaneIndex(lanes);
              var lane = 1 << index2;
              nextLanes |= entanglements[index2];
              lanes &= ~lane;
            }
          }
          return nextLanes;
        }
        function getMostRecentEventTime(root3, lanes) {
          var eventTimes = root3.eventTimes;
          var mostRecentEventTime = NoTimestamp;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            var eventTime = eventTimes[index2];
            if (eventTime > mostRecentEventTime) {
              mostRecentEventTime = eventTime;
            }
            lanes &= ~lane;
          }
          return mostRecentEventTime;
        }
        function computeExpirationTime(lane, currentTime) {
          switch (lane) {
            case SyncLane:
            case InputContinuousHydrationLane:
            case InputContinuousLane:
              return currentTime + 250;
            case DefaultHydrationLane:
            case DefaultLane:
            case TransitionHydrationLane:
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
              return currentTime + 5e3;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
              return NoTimestamp;
            case SelectiveHydrationLane:
            case IdleHydrationLane:
            case IdleLane:
            case OffscreenLane:
              return NoTimestamp;
            default:
              {
                error("Should have found matching lanes. This is a bug in React.");
              }
              return NoTimestamp;
          }
        }
        function markStarvedLanesAsExpired(root3, currentTime) {
          var pendingLanes = root3.pendingLanes;
          var suspendedLanes = root3.suspendedLanes;
          var pingedLanes = root3.pingedLanes;
          var expirationTimes = root3.expirationTimes;
          var lanes = pendingLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            var expirationTime = expirationTimes[index2];
            if (expirationTime === NoTimestamp) {
              if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {
                expirationTimes[index2] = computeExpirationTime(lane, currentTime);
              }
            } else if (expirationTime <= currentTime) {
              root3.expiredLanes |= lane;
            }
            lanes &= ~lane;
          }
        }
        function getHighestPriorityPendingLanes(root3) {
          return getHighestPriorityLanes(root3.pendingLanes);
        }
        function getLanesToRetrySynchronouslyOnError(root3) {
          var everythingButOffscreen = root3.pendingLanes & ~OffscreenLane;
          if (everythingButOffscreen !== NoLanes) {
            return everythingButOffscreen;
          }
          if (everythingButOffscreen & OffscreenLane) {
            return OffscreenLane;
          }
          return NoLanes;
        }
        function includesSyncLane(lanes) {
          return (lanes & SyncLane) !== NoLanes;
        }
        function includesNonIdleWork(lanes) {
          return (lanes & NonIdleLanes) !== NoLanes;
        }
        function includesOnlyRetries(lanes) {
          return (lanes & RetryLanes) === lanes;
        }
        function includesOnlyNonUrgentLanes(lanes) {
          var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;
          return (lanes & UrgentLanes) === NoLanes;
        }
        function includesOnlyTransitions(lanes) {
          return (lanes & TransitionLanes) === lanes;
        }
        function includesBlockingLane(root3, lanes) {
          var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;
          return (lanes & SyncDefaultLanes) !== NoLanes;
        }
        function includesExpiredLane(root3, lanes) {
          return (lanes & root3.expiredLanes) !== NoLanes;
        }
        function isTransitionLane(lane) {
          return (lane & TransitionLanes) !== NoLanes;
        }
        function claimNextTransitionLane() {
          var lane = nextTransitionLane;
          nextTransitionLane <<= 1;
          if ((nextTransitionLane & TransitionLanes) === NoLanes) {
            nextTransitionLane = TransitionLane1;
          }
          return lane;
        }
        function claimNextRetryLane() {
          var lane = nextRetryLane;
          nextRetryLane <<= 1;
          if ((nextRetryLane & RetryLanes) === NoLanes) {
            nextRetryLane = RetryLane1;
          }
          return lane;
        }
        function getHighestPriorityLane(lanes) {
          return lanes & -lanes;
        }
        function pickArbitraryLane(lanes) {
          return getHighestPriorityLane(lanes);
        }
        function pickArbitraryLaneIndex(lanes) {
          return 31 - clz32(lanes);
        }
        function laneToIndex(lane) {
          return pickArbitraryLaneIndex(lane);
        }
        function includesSomeLane(a7, b8) {
          return (a7 & b8) !== NoLanes;
        }
        function isSubsetOfLanes(set2, subset) {
          return (set2 & subset) === subset;
        }
        function mergeLanes(a7, b8) {
          return a7 | b8;
        }
        function removeLanes(set2, subset) {
          return set2 & ~subset;
        }
        function intersectLanes(a7, b8) {
          return a7 & b8;
        }
        function laneToLanes(lane) {
          return lane;
        }
        function higherPriorityLane(a7, b8) {
          return a7 !== NoLane && a7 < b8 ? a7 : b8;
        }
        function createLaneMap(initial) {
          var laneMap = [];
          for (var i9 = 0; i9 < TotalLanes; i9++) {
            laneMap.push(initial);
          }
          return laneMap;
        }
        function markRootUpdated(root3, updateLane, eventTime) {
          root3.pendingLanes |= updateLane;
          if (updateLane !== IdleLane) {
            root3.suspendedLanes = NoLanes;
            root3.pingedLanes = NoLanes;
          }
          var eventTimes = root3.eventTimes;
          var index2 = laneToIndex(updateLane);
          eventTimes[index2] = eventTime;
        }
        function markRootSuspended(root3, suspendedLanes) {
          root3.suspendedLanes |= suspendedLanes;
          root3.pingedLanes &= ~suspendedLanes;
          var expirationTimes = root3.expirationTimes;
          var lanes = suspendedLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            expirationTimes[index2] = NoTimestamp;
            lanes &= ~lane;
          }
        }
        function markRootPinged(root3, pingedLanes, eventTime) {
          root3.pingedLanes |= root3.suspendedLanes & pingedLanes;
        }
        function markRootFinished(root3, remainingLanes) {
          var noLongerPendingLanes = root3.pendingLanes & ~remainingLanes;
          root3.pendingLanes = remainingLanes;
          root3.suspendedLanes = NoLanes;
          root3.pingedLanes = NoLanes;
          root3.expiredLanes &= remainingLanes;
          root3.mutableReadLanes &= remainingLanes;
          root3.entangledLanes &= remainingLanes;
          var entanglements = root3.entanglements;
          var eventTimes = root3.eventTimes;
          var expirationTimes = root3.expirationTimes;
          var lanes = noLongerPendingLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            entanglements[index2] = NoLanes;
            eventTimes[index2] = NoTimestamp;
            expirationTimes[index2] = NoTimestamp;
            lanes &= ~lane;
          }
        }
        function markRootEntangled(root3, entangledLanes) {
          var rootEntangledLanes = root3.entangledLanes |= entangledLanes;
          var entanglements = root3.entanglements;
          var lanes = rootEntangledLanes;
          while (lanes) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            if (lane & entangledLanes | entanglements[index2] & entangledLanes) {
              entanglements[index2] |= entangledLanes;
            }
            lanes &= ~lane;
          }
        }
        function getBumpedLaneForHydration(root3, renderLanes2) {
          var renderLane = getHighestPriorityLane(renderLanes2);
          var lane;
          switch (renderLane) {
            case InputContinuousLane:
              lane = InputContinuousHydrationLane;
              break;
            case DefaultLane:
              lane = DefaultHydrationLane;
              break;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
              lane = TransitionHydrationLane;
              break;
            case IdleLane:
              lane = IdleHydrationLane;
              break;
            default:
              lane = NoLane;
              break;
          }
          if ((lane & (root3.suspendedLanes | renderLanes2)) !== NoLane) {
            return NoLane;
          }
          return lane;
        }
        function addFiberToLanesMap(root3, fiber, lanes) {
          if (!isDevToolsPresent) {
            return;
          }
          var pendingUpdatersLaneMap = root3.pendingUpdatersLaneMap;
          while (lanes > 0) {
            var index2 = laneToIndex(lanes);
            var lane = 1 << index2;
            var updaters = pendingUpdatersLaneMap[index2];
            updaters.add(fiber);
            lanes &= ~lane;
          }
        }
        function movePendingFibersToMemoized(root3, lanes) {
          if (!isDevToolsPresent) {
            return;
          }
          var pendingUpdatersLaneMap = root3.pendingUpdatersLaneMap;
          var memoizedUpdaters = root3.memoizedUpdaters;
          while (lanes > 0) {
            var index2 = laneToIndex(lanes);
            var lane = 1 << index2;
            var updaters = pendingUpdatersLaneMap[index2];
            if (updaters.size > 0) {
              updaters.forEach(function(fiber) {
                var alternate = fiber.alternate;
                if (alternate === null || !memoizedUpdaters.has(alternate)) {
                  memoizedUpdaters.add(fiber);
                }
              });
              updaters.clear();
            }
            lanes &= ~lane;
          }
        }
        function getTransitionsForLanes(root3, lanes) {
          {
            return null;
          }
        }
        var DiscreteEventPriority = SyncLane;
        var ContinuousEventPriority = InputContinuousLane;
        var DefaultEventPriority = DefaultLane;
        var IdleEventPriority = IdleLane;
        var currentUpdatePriority = NoLane;
        function getCurrentUpdatePriority() {
          return currentUpdatePriority;
        }
        function setCurrentUpdatePriority(newPriority) {
          currentUpdatePriority = newPriority;
        }
        function runWithPriority(priority2, fn2) {
          var previousPriority = currentUpdatePriority;
          try {
            currentUpdatePriority = priority2;
            return fn2();
          } finally {
            currentUpdatePriority = previousPriority;
          }
        }
        function higherEventPriority(a7, b8) {
          return a7 !== 0 && a7 < b8 ? a7 : b8;
        }
        function lowerEventPriority(a7, b8) {
          return a7 === 0 || a7 > b8 ? a7 : b8;
        }
        function isHigherEventPriority(a7, b8) {
          return a7 !== 0 && a7 < b8;
        }
        function lanesToEventPriority(lanes) {
          var lane = getHighestPriorityLane(lanes);
          if (!isHigherEventPriority(DiscreteEventPriority, lane)) {
            return DiscreteEventPriority;
          }
          if (!isHigherEventPriority(ContinuousEventPriority, lane)) {
            return ContinuousEventPriority;
          }
          if (includesNonIdleWork(lane)) {
            return DefaultEventPriority;
          }
          return IdleEventPriority;
        }
        function isRootDehydrated(root3) {
          var currentState = root3.current.memoizedState;
          return currentState.isDehydrated;
        }
        var _attemptSynchronousHydration;
        function setAttemptSynchronousHydration(fn2) {
          _attemptSynchronousHydration = fn2;
        }
        function attemptSynchronousHydration(fiber) {
          _attemptSynchronousHydration(fiber);
        }
        var attemptContinuousHydration;
        function setAttemptContinuousHydration(fn2) {
          attemptContinuousHydration = fn2;
        }
        var attemptHydrationAtCurrentPriority;
        function setAttemptHydrationAtCurrentPriority(fn2) {
          attemptHydrationAtCurrentPriority = fn2;
        }
        var getCurrentUpdatePriority$1;
        function setGetCurrentUpdatePriority(fn2) {
          getCurrentUpdatePriority$1 = fn2;
        }
        var attemptHydrationAtPriority;
        function setAttemptHydrationAtPriority(fn2) {
          attemptHydrationAtPriority = fn2;
        }
        var hasScheduledReplayAttempt = false;
        var queuedDiscreteEvents = [];
        var queuedFocus = null;
        var queuedDrag = null;
        var queuedMouse = null;
        var queuedPointers = new Map();
        var queuedPointerCaptures = new Map();
        var queuedExplicitHydrationTargets = [];
        var discreteReplayableEvents = [
          "mousedown",
          "mouseup",
          "touchcancel",
          "touchend",
          "touchstart",
          "auxclick",
          "dblclick",
          "pointercancel",
          "pointerdown",
          "pointerup",
          "dragend",
          "dragstart",
          "drop",
          "compositionend",
          "compositionstart",
          "keydown",
          "keypress",
          "keyup",
          "input",
          "textInput",
          "copy",
          "cut",
          "paste",
          "click",
          "change",
          "contextmenu",
          "reset",
          "submit"
        ];
        function isDiscreteEventThatRequiresHydration(eventType) {
          return discreteReplayableEvents.indexOf(eventType) > -1;
        }
        function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          return {
            blockedOn,
            domEventName,
            eventSystemFlags,
            nativeEvent,
            targetContainers: [targetContainer]
          };
        }
        function clearIfContinuousEvent(domEventName, nativeEvent) {
          switch (domEventName) {
            case "focusin":
            case "focusout":
              queuedFocus = null;
              break;
            case "dragenter":
            case "dragleave":
              queuedDrag = null;
              break;
            case "mouseover":
            case "mouseout":
              queuedMouse = null;
              break;
            case "pointerover":
            case "pointerout": {
              var pointerId = nativeEvent.pointerId;
              queuedPointers.delete(pointerId);
              break;
            }
            case "gotpointercapture":
            case "lostpointercapture": {
              var _pointerId = nativeEvent.pointerId;
              queuedPointerCaptures.delete(_pointerId);
              break;
            }
          }
        }
        function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
            var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            if (blockedOn !== null) {
              var _fiber2 = getInstanceFromNode(blockedOn);
              if (_fiber2 !== null) {
                attemptContinuousHydration(_fiber2);
              }
            }
            return queuedEvent;
          }
          existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
          var targetContainers = existingQueuedEvent.targetContainers;
          if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) {
            targetContainers.push(targetContainer);
          }
          return existingQueuedEvent;
        }
        function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          switch (domEventName) {
            case "focusin": {
              var focusEvent = nativeEvent;
              queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
              return true;
            }
            case "dragenter": {
              var dragEvent = nativeEvent;
              queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
              return true;
            }
            case "mouseover": {
              var mouseEvent = nativeEvent;
              queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
              return true;
            }
            case "pointerover": {
              var pointerEvent = nativeEvent;
              var pointerId = pointerEvent.pointerId;
              queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
              return true;
            }
            case "gotpointercapture": {
              var _pointerEvent = nativeEvent;
              var _pointerId2 = _pointerEvent.pointerId;
              queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
              return true;
            }
          }
          return false;
        }
        function attemptExplicitHydrationTarget(queuedTarget) {
          var targetInst = getClosestInstanceFromNode(queuedTarget.target);
          if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted !== null) {
              var tag = nearestMounted.tag;
              if (tag === SuspenseComponent) {
                var instance = getSuspenseInstanceFromFiber(nearestMounted);
                if (instance !== null) {
                  queuedTarget.blockedOn = instance;
                  attemptHydrationAtPriority(queuedTarget.priority, function() {
                    attemptHydrationAtCurrentPriority(nearestMounted);
                  });
                  return;
                }
              } else if (tag === HostRoot) {
                var root3 = nearestMounted.stateNode;
                if (isRootDehydrated(root3)) {
                  queuedTarget.blockedOn = getContainerFromFiber(nearestMounted);
                  return;
                }
              }
            }
          }
          queuedTarget.blockedOn = null;
        }
        function queueExplicitHydrationTarget(target) {
          var updatePriority = getCurrentUpdatePriority$1();
          var queuedTarget = {
            blockedOn: null,
            target,
            priority: updatePriority
          };
          var i9 = 0;
          for (; i9 < queuedExplicitHydrationTargets.length; i9++) {
            if (!isHigherEventPriority(updatePriority, queuedExplicitHydrationTargets[i9].priority)) {
              break;
            }
          }
          queuedExplicitHydrationTargets.splice(i9, 0, queuedTarget);
          if (i9 === 0) {
            attemptExplicitHydrationTarget(queuedTarget);
          }
        }
        function attemptReplayContinuousQueuedEvent(queuedEvent) {
          if (queuedEvent.blockedOn !== null) {
            return false;
          }
          var targetContainers = queuedEvent.targetContainers;
          while (targetContainers.length > 0) {
            var targetContainer = targetContainers[0];
            var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
            if (nextBlockedOn === null) {
              {
                var nativeEvent = queuedEvent.nativeEvent;
                var nativeEventClone = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
                setReplayingEvent(nativeEventClone);
                nativeEvent.target.dispatchEvent(nativeEventClone);
                resetReplayingEvent();
              }
            } else {
              var _fiber3 = getInstanceFromNode(nextBlockedOn);
              if (_fiber3 !== null) {
                attemptContinuousHydration(_fiber3);
              }
              queuedEvent.blockedOn = nextBlockedOn;
              return false;
            }
            targetContainers.shift();
          }
          return true;
        }
        function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map5) {
          if (attemptReplayContinuousQueuedEvent(queuedEvent)) {
            map5.delete(key);
          }
        }
        function replayUnblockedEvents() {
          hasScheduledReplayAttempt = false;
          if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {
            queuedFocus = null;
          }
          if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {
            queuedDrag = null;
          }
          if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {
            queuedMouse = null;
          }
          queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
          queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
        }
        function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
          if (queuedEvent.blockedOn === unblocked) {
            queuedEvent.blockedOn = null;
            if (!hasScheduledReplayAttempt) {
              hasScheduledReplayAttempt = true;
              Scheduler2.unstable_scheduleCallback(Scheduler2.unstable_NormalPriority, replayUnblockedEvents);
            }
          }
        }
        function retryIfBlockedOn(unblocked) {
          if (queuedDiscreteEvents.length > 0) {
            scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked);
            for (var i9 = 1; i9 < queuedDiscreteEvents.length; i9++) {
              var queuedEvent = queuedDiscreteEvents[i9];
              if (queuedEvent.blockedOn === unblocked) {
                queuedEvent.blockedOn = null;
              }
            }
          }
          if (queuedFocus !== null) {
            scheduleCallbackIfUnblocked(queuedFocus, unblocked);
          }
          if (queuedDrag !== null) {
            scheduleCallbackIfUnblocked(queuedDrag, unblocked);
          }
          if (queuedMouse !== null) {
            scheduleCallbackIfUnblocked(queuedMouse, unblocked);
          }
          var unblock = function(queuedEvent2) {
            return scheduleCallbackIfUnblocked(queuedEvent2, unblocked);
          };
          queuedPointers.forEach(unblock);
          queuedPointerCaptures.forEach(unblock);
          for (var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++) {
            var queuedTarget = queuedExplicitHydrationTargets[_i];
            if (queuedTarget.blockedOn === unblocked) {
              queuedTarget.blockedOn = null;
            }
          }
          while (queuedExplicitHydrationTargets.length > 0) {
            var nextExplicitTarget = queuedExplicitHydrationTargets[0];
            if (nextExplicitTarget.blockedOn !== null) {
              break;
            } else {
              attemptExplicitHydrationTarget(nextExplicitTarget);
              if (nextExplicitTarget.blockedOn === null) {
                queuedExplicitHydrationTargets.shift();
              }
            }
          }
        }
        var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;
        var _enabled = true;
        function setEnabled(enabled) {
          _enabled = !!enabled;
        }
        function isEnabled() {
          return _enabled;
        }
        function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
          var eventPriority = getEventPriority(domEventName);
          var listenerWrapper;
          switch (eventPriority) {
            case DiscreteEventPriority:
              listenerWrapper = dispatchDiscreteEvent;
              break;
            case ContinuousEventPriority:
              listenerWrapper = dispatchContinuousEvent;
              break;
            case DefaultEventPriority:
            default:
              listenerWrapper = dispatchEvent;
              break;
          }
          return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
        }
        function dispatchDiscreteEvent(domEventName, eventSystemFlags, container2, nativeEvent) {
          var previousPriority = getCurrentUpdatePriority();
          var prevTransition = ReactCurrentBatchConfig.transition;
          ReactCurrentBatchConfig.transition = null;
          try {
            setCurrentUpdatePriority(DiscreteEventPriority);
            dispatchEvent(domEventName, eventSystemFlags, container2, nativeEvent);
          } finally {
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
          }
        }
        function dispatchContinuousEvent(domEventName, eventSystemFlags, container2, nativeEvent) {
          var previousPriority = getCurrentUpdatePriority();
          var prevTransition = ReactCurrentBatchConfig.transition;
          ReactCurrentBatchConfig.transition = null;
          try {
            setCurrentUpdatePriority(ContinuousEventPriority);
            dispatchEvent(domEventName, eventSystemFlags, container2, nativeEvent);
          } finally {
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
          }
        }
        function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          if (!_enabled) {
            return;
          }
          {
            dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);
          }
        }
        function dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          var blockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
          if (blockedOn === null) {
            dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
            clearIfContinuousEvent(domEventName, nativeEvent);
            return;
          }
          if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
            nativeEvent.stopPropagation();
            return;
          }
          clearIfContinuousEvent(domEventName, nativeEvent);
          if (eventSystemFlags & IS_CAPTURE_PHASE && isDiscreteEventThatRequiresHydration(domEventName)) {
            while (blockedOn !== null) {
              var fiber = getInstanceFromNode(blockedOn);
              if (fiber !== null) {
                attemptSynchronousHydration(fiber);
              }
              var nextBlockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
              if (nextBlockedOn === null) {
                dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
              }
              if (nextBlockedOn === blockedOn) {
                break;
              }
              blockedOn = nextBlockedOn;
            }
            if (blockedOn !== null) {
              nativeEvent.stopPropagation();
            }
            return;
          }
          dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
        }
        var return_targetInst = null;
        function findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          return_targetInst = null;
          var nativeEventTarget = getEventTarget(nativeEvent);
          var targetInst = getClosestInstanceFromNode(nativeEventTarget);
          if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted === null) {
              targetInst = null;
            } else {
              var tag = nearestMounted.tag;
              if (tag === SuspenseComponent) {
                var instance = getSuspenseInstanceFromFiber(nearestMounted);
                if (instance !== null) {
                  return instance;
                }
                targetInst = null;
              } else if (tag === HostRoot) {
                var root3 = nearestMounted.stateNode;
                if (isRootDehydrated(root3)) {
                  return getContainerFromFiber(nearestMounted);
                }
                targetInst = null;
              } else if (nearestMounted !== targetInst) {
                targetInst = null;
              }
            }
          }
          return_targetInst = targetInst;
          return null;
        }
        function getEventPriority(domEventName) {
          switch (domEventName) {
            case "cancel":
            case "click":
            case "close":
            case "contextmenu":
            case "copy":
            case "cut":
            case "auxclick":
            case "dblclick":
            case "dragend":
            case "dragstart":
            case "drop":
            case "focusin":
            case "focusout":
            case "input":
            case "invalid":
            case "keydown":
            case "keypress":
            case "keyup":
            case "mousedown":
            case "mouseup":
            case "paste":
            case "pause":
            case "play":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
            case "ratechange":
            case "reset":
            case "resize":
            case "seeked":
            case "submit":
            case "touchcancel":
            case "touchend":
            case "touchstart":
            case "volumechange":
            case "change":
            case "selectionchange":
            case "textInput":
            case "compositionstart":
            case "compositionend":
            case "compositionupdate":
            case "beforeblur":
            case "afterblur":
            case "beforeinput":
            case "blur":
            case "fullscreenchange":
            case "focus":
            case "hashchange":
            case "popstate":
            case "select":
            case "selectstart":
              return DiscreteEventPriority;
            case "drag":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "mousemove":
            case "mouseout":
            case "mouseover":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "scroll":
            case "toggle":
            case "touchmove":
            case "wheel":
            case "mouseenter":
            case "mouseleave":
            case "pointerenter":
            case "pointerleave":
              return ContinuousEventPriority;
            case "message": {
              var schedulerPriority = getCurrentPriorityLevel();
              switch (schedulerPriority) {
                case ImmediatePriority:
                  return DiscreteEventPriority;
                case UserBlockingPriority:
                  return ContinuousEventPriority;
                case NormalPriority:
                case LowPriority:
                  return DefaultEventPriority;
                case IdlePriority:
                  return IdleEventPriority;
                default:
                  return DefaultEventPriority;
              }
            }
            default:
              return DefaultEventPriority;
          }
        }
        function addEventBubbleListener(target, eventType, listener) {
          target.addEventListener(eventType, listener, false);
          return listener;
        }
        function addEventCaptureListener(target, eventType, listener) {
          target.addEventListener(eventType, listener, true);
          return listener;
        }
        function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
          target.addEventListener(eventType, listener, {
            capture: true,
            passive
          });
          return listener;
        }
        function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
          target.addEventListener(eventType, listener, {
            passive
          });
          return listener;
        }
        var root2 = null;
        var startText = null;
        var fallbackText = null;
        function initialize(nativeEventTarget) {
          root2 = nativeEventTarget;
          startText = getText();
          return true;
        }
        function reset() {
          root2 = null;
          startText = null;
          fallbackText = null;
        }
        function getData() {
          if (fallbackText) {
            return fallbackText;
          }
          var start2;
          var startValue = startText;
          var startLength = startValue.length;
          var end;
          var endValue = getText();
          var endLength = endValue.length;
          for (start2 = 0; start2 < startLength; start2++) {
            if (startValue[start2] !== endValue[start2]) {
              break;
            }
          }
          var minEnd = startLength - start2;
          for (end = 1; end <= minEnd; end++) {
            if (startValue[startLength - end] !== endValue[endLength - end]) {
              break;
            }
          }
          var sliceTail = end > 1 ? 1 - end : void 0;
          fallbackText = endValue.slice(start2, sliceTail);
          return fallbackText;
        }
        function getText() {
          if ("value" in root2) {
            return root2.value;
          }
          return root2.textContent;
        }
        function getEventCharCode(nativeEvent) {
          var charCode;
          var keyCode = nativeEvent.keyCode;
          if ("charCode" in nativeEvent) {
            charCode = nativeEvent.charCode;
            if (charCode === 0 && keyCode === 13) {
              charCode = 13;
            }
          } else {
            charCode = keyCode;
          }
          if (charCode === 10) {
            charCode = 13;
          }
          if (charCode >= 32 || charCode === 13) {
            return charCode;
          }
          return 0;
        }
        function functionThatReturnsTrue() {
          return true;
        }
        function functionThatReturnsFalse() {
          return false;
        }
        function createSyntheticEvent(Interface) {
          function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this._reactName = reactName;
            this._targetInst = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for (var _propName in Interface) {
              if (!Interface.hasOwnProperty(_propName)) {
                continue;
              }
              var normalize2 = Interface[_propName];
              if (normalize2) {
                this[_propName] = normalize2(nativeEvent);
              } else {
                this[_propName] = nativeEvent[_propName];
              }
            }
            var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
            if (defaultPrevented) {
              this.isDefaultPrevented = functionThatReturnsTrue;
            } else {
              this.isDefaultPrevented = functionThatReturnsFalse;
            }
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
          }
          assign3(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
              this.defaultPrevented = true;
              var event = this.nativeEvent;
              if (!event) {
                return;
              }
              if (event.preventDefault) {
                event.preventDefault();
              } else if (typeof event.returnValue !== "unknown") {
                event.returnValue = false;
              }
              this.isDefaultPrevented = functionThatReturnsTrue;
            },
            stopPropagation: function() {
              var event = this.nativeEvent;
              if (!event) {
                return;
              }
              if (event.stopPropagation) {
                event.stopPropagation();
              } else if (typeof event.cancelBubble !== "unknown") {
                event.cancelBubble = true;
              }
              this.isPropagationStopped = functionThatReturnsTrue;
            },
            persist: function() {
            },
            isPersistent: functionThatReturnsTrue
          });
          return SyntheticBaseEvent;
        }
        var EventInterface = {
          eventPhase: 0,
          bubbles: 0,
          cancelable: 0,
          timeStamp: function(event) {
            return event.timeStamp || Date.now();
          },
          defaultPrevented: 0,
          isTrusted: 0
        };
        var SyntheticEvent = createSyntheticEvent(EventInterface);
        var UIEventInterface = assign3({}, EventInterface, {
          view: 0,
          detail: 0
        });
        var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
        var lastMovementX;
        var lastMovementY;
        var lastMouseEvent;
        function updateMouseMovementPolyfillState(event) {
          if (event !== lastMouseEvent) {
            if (lastMouseEvent && event.type === "mousemove") {
              lastMovementX = event.screenX - lastMouseEvent.screenX;
              lastMovementY = event.screenY - lastMouseEvent.screenY;
            } else {
              lastMovementX = 0;
              lastMovementY = 0;
            }
            lastMouseEvent = event;
          }
        }
        var MouseEventInterface = assign3({}, UIEventInterface, {
          screenX: 0,
          screenY: 0,
          clientX: 0,
          clientY: 0,
          pageX: 0,
          pageY: 0,
          ctrlKey: 0,
          shiftKey: 0,
          altKey: 0,
          metaKey: 0,
          getModifierState: getEventModifierState,
          button: 0,
          buttons: 0,
          relatedTarget: function(event) {
            if (event.relatedTarget === void 0)
              return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
            return event.relatedTarget;
          },
          movementX: function(event) {
            if ("movementX" in event) {
              return event.movementX;
            }
            updateMouseMovementPolyfillState(event);
            return lastMovementX;
          },
          movementY: function(event) {
            if ("movementY" in event) {
              return event.movementY;
            }
            return lastMovementY;
          }
        });
        var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
        var DragEventInterface = assign3({}, MouseEventInterface, {
          dataTransfer: 0
        });
        var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
        var FocusEventInterface = assign3({}, UIEventInterface, {
          relatedTarget: 0
        });
        var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
        var AnimationEventInterface = assign3({}, EventInterface, {
          animationName: 0,
          elapsedTime: 0,
          pseudoElement: 0
        });
        var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
        var ClipboardEventInterface = assign3({}, EventInterface, {
          clipboardData: function(event) {
            return "clipboardData" in event ? event.clipboardData : window.clipboardData;
          }
        });
        var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
        var CompositionEventInterface = assign3({}, EventInterface, {
          data: 0
        });
        var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
        var SyntheticInputEvent = SyntheticCompositionEvent;
        var normalizeKey = {
          Esc: "Escape",
          Spacebar: " ",
          Left: "ArrowLeft",
          Up: "ArrowUp",
          Right: "ArrowRight",
          Down: "ArrowDown",
          Del: "Delete",
          Win: "OS",
          Menu: "ContextMenu",
          Apps: "ContextMenu",
          Scroll: "ScrollLock",
          MozPrintableKey: "Unidentified"
        };
        var translateToKey = {
          "8": "Backspace",
          "9": "Tab",
          "12": "Clear",
          "13": "Enter",
          "16": "Shift",
          "17": "Control",
          "18": "Alt",
          "19": "Pause",
          "20": "CapsLock",
          "27": "Escape",
          "32": " ",
          "33": "PageUp",
          "34": "PageDown",
          "35": "End",
          "36": "Home",
          "37": "ArrowLeft",
          "38": "ArrowUp",
          "39": "ArrowRight",
          "40": "ArrowDown",
          "45": "Insert",
          "46": "Delete",
          "112": "F1",
          "113": "F2",
          "114": "F3",
          "115": "F4",
          "116": "F5",
          "117": "F6",
          "118": "F7",
          "119": "F8",
          "120": "F9",
          "121": "F10",
          "122": "F11",
          "123": "F12",
          "144": "NumLock",
          "145": "ScrollLock",
          "224": "Meta"
        };
        function getEventKey(nativeEvent) {
          if (nativeEvent.key) {
            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
            if (key !== "Unidentified") {
              return key;
            }
          }
          if (nativeEvent.type === "keypress") {
            var charCode = getEventCharCode(nativeEvent);
            return charCode === 13 ? "Enter" : String.fromCharCode(charCode);
          }
          if (nativeEvent.type === "keydown" || nativeEvent.type === "keyup") {
            return translateToKey[nativeEvent.keyCode] || "Unidentified";
          }
          return "";
        }
        var modifierKeyToProp = {
          Alt: "altKey",
          Control: "ctrlKey",
          Meta: "metaKey",
          Shift: "shiftKey"
        };
        function modifierStateGetter(keyArg) {
          var syntheticEvent = this;
          var nativeEvent = syntheticEvent.nativeEvent;
          if (nativeEvent.getModifierState) {
            return nativeEvent.getModifierState(keyArg);
          }
          var keyProp = modifierKeyToProp[keyArg];
          return keyProp ? !!nativeEvent[keyProp] : false;
        }
        function getEventModifierState(nativeEvent) {
          return modifierStateGetter;
        }
        var KeyboardEventInterface = assign3({}, UIEventInterface, {
          key: getEventKey,
          code: 0,
          location: 0,
          ctrlKey: 0,
          shiftKey: 0,
          altKey: 0,
          metaKey: 0,
          repeat: 0,
          locale: 0,
          getModifierState: getEventModifierState,
          charCode: function(event) {
            if (event.type === "keypress") {
              return getEventCharCode(event);
            }
            return 0;
          },
          keyCode: function(event) {
            if (event.type === "keydown" || event.type === "keyup") {
              return event.keyCode;
            }
            return 0;
          },
          which: function(event) {
            if (event.type === "keypress") {
              return getEventCharCode(event);
            }
            if (event.type === "keydown" || event.type === "keyup") {
              return event.keyCode;
            }
            return 0;
          }
        });
        var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
        var PointerEventInterface = assign3({}, MouseEventInterface, {
          pointerId: 0,
          width: 0,
          height: 0,
          pressure: 0,
          tangentialPressure: 0,
          tiltX: 0,
          tiltY: 0,
          twist: 0,
          pointerType: 0,
          isPrimary: 0
        });
        var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
        var TouchEventInterface = assign3({}, UIEventInterface, {
          touches: 0,
          targetTouches: 0,
          changedTouches: 0,
          altKey: 0,
          metaKey: 0,
          ctrlKey: 0,
          shiftKey: 0,
          getModifierState: getEventModifierState
        });
        var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
        var TransitionEventInterface = assign3({}, EventInterface, {
          propertyName: 0,
          elapsedTime: 0,
          pseudoElement: 0
        });
        var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
        var WheelEventInterface = assign3({}, MouseEventInterface, {
          deltaX: function(event) {
            return "deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
          },
          deltaY: function(event) {
            return "deltaY" in event ? event.deltaY : "wheelDeltaY" in event ? -event.wheelDeltaY : "wheelDelta" in event ? -event.wheelDelta : 0;
          },
          deltaZ: 0,
          deltaMode: 0
        });
        var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
        var END_KEYCODES = [9, 13, 27, 32];
        var START_KEYCODE = 229;
        var canUseCompositionEvent = canUseDOM2 && "CompositionEvent" in window;
        var documentMode = null;
        if (canUseDOM2 && "documentMode" in document) {
          documentMode = document.documentMode;
        }
        var canUseTextInputEvent = canUseDOM2 && "TextEvent" in window && !documentMode;
        var useFallbackCompositionData = canUseDOM2 && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
        var SPACEBAR_CODE = 32;
        var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
        function registerEvents() {
          registerTwoPhaseEvent("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
          registerTwoPhaseEvent("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
          registerTwoPhaseEvent("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
          registerTwoPhaseEvent("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
        }
        var hasSpaceKeypress = false;
        function isKeypressCommand(nativeEvent) {
          return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
        }
        function getCompositionEventType(domEventName) {
          switch (domEventName) {
            case "compositionstart":
              return "onCompositionStart";
            case "compositionend":
              return "onCompositionEnd";
            case "compositionupdate":
              return "onCompositionUpdate";
          }
        }
        function isFallbackCompositionStart(domEventName, nativeEvent) {
          return domEventName === "keydown" && nativeEvent.keyCode === START_KEYCODE;
        }
        function isFallbackCompositionEnd(domEventName, nativeEvent) {
          switch (domEventName) {
            case "keyup":
              return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
            case "keydown":
              return nativeEvent.keyCode !== START_KEYCODE;
            case "keypress":
            case "mousedown":
            case "focusout":
              return true;
            default:
              return false;
          }
        }
        function getDataFromCustomEvent(nativeEvent) {
          var detail = nativeEvent.detail;
          if (typeof detail === "object" && "data" in detail) {
            return detail.data;
          }
          return null;
        }
        function isUsingKoreanIME(nativeEvent) {
          return nativeEvent.locale === "ko";
        }
        var isComposing = false;
        function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
          var eventType;
          var fallbackData;
          if (canUseCompositionEvent) {
            eventType = getCompositionEventType(domEventName);
          } else if (!isComposing) {
            if (isFallbackCompositionStart(domEventName, nativeEvent)) {
              eventType = "onCompositionStart";
            }
          } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) {
            eventType = "onCompositionEnd";
          }
          if (!eventType) {
            return null;
          }
          if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
            if (!isComposing && eventType === "onCompositionStart") {
              isComposing = initialize(nativeEventTarget);
            } else if (eventType === "onCompositionEnd") {
              if (isComposing) {
                fallbackData = getData();
              }
            }
          }
          var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
          if (listeners.length > 0) {
            var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
              event,
              listeners
            });
            if (fallbackData) {
              event.data = fallbackData;
            } else {
              var customData = getDataFromCustomEvent(nativeEvent);
              if (customData !== null) {
                event.data = customData;
              }
            }
          }
        }
        function getNativeBeforeInputChars(domEventName, nativeEvent) {
          switch (domEventName) {
            case "compositionend":
              return getDataFromCustomEvent(nativeEvent);
            case "keypress":
              var which = nativeEvent.which;
              if (which !== SPACEBAR_CODE) {
                return null;
              }
              hasSpaceKeypress = true;
              return SPACEBAR_CHAR;
            case "textInput":
              var chars = nativeEvent.data;
              if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
                return null;
              }
              return chars;
            default:
              return null;
          }
        }
        function getFallbackBeforeInputChars(domEventName, nativeEvent) {
          if (isComposing) {
            if (domEventName === "compositionend" || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
              var chars = getData();
              reset();
              isComposing = false;
              return chars;
            }
            return null;
          }
          switch (domEventName) {
            case "paste":
              return null;
            case "keypress":
              if (!isKeypressCommand(nativeEvent)) {
                if (nativeEvent.char && nativeEvent.char.length > 1) {
                  return nativeEvent.char;
                } else if (nativeEvent.which) {
                  return String.fromCharCode(nativeEvent.which);
                }
              }
              return null;
            case "compositionend":
              return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
            default:
              return null;
          }
        }
        function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
          var chars;
          if (canUseTextInputEvent) {
            chars = getNativeBeforeInputChars(domEventName, nativeEvent);
          } else {
            chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
          }
          if (!chars) {
            return null;
          }
          var listeners = accumulateTwoPhaseListeners(targetInst, "onBeforeInput");
          if (listeners.length > 0) {
            var event = new SyntheticInputEvent("onBeforeInput", "beforeinput", null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
              event,
              listeners
            });
            event.data = chars;
          }
        }
        function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
          extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        }
        var supportedInputTypes = {
          color: true,
          date: true,
          datetime: true,
          "datetime-local": true,
          email: true,
          month: true,
          number: true,
          password: true,
          range: true,
          search: true,
          tel: true,
          text: true,
          time: true,
          url: true,
          week: true
        };
        function isTextInputElement(elem) {
          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
          if (nodeName === "input") {
            return !!supportedInputTypes[elem.type];
          }
          if (nodeName === "textarea") {
            return true;
          }
          return false;
        }
        /**
         * Checks if an event is supported in the current execution environment.
         *
         * NOTE: This will not work correctly for non-generic events such as `change`,
         * `reset`, `load`, `error`, and `select`.
         *
         * Borrows from Modernizr.
         *
         * @param {string} eventNameSuffix Event name, e.g. "click".
         * @return {boolean} True if the event is supported.
         * @internal
         * @license Modernizr 3.0.0pre (Custom Build) | MIT
         */
        function isEventSupported(eventNameSuffix) {
          if (!canUseDOM2) {
            return false;
          }
          var eventName = "on" + eventNameSuffix;
          var isSupported = eventName in document;
          if (!isSupported) {
            var element = document.createElement("div");
            element.setAttribute(eventName, "return;");
            isSupported = typeof element[eventName] === "function";
          }
          return isSupported;
        }
        function registerEvents$1() {
          registerTwoPhaseEvent("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
        }
        function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
          enqueueStateRestore(target);
          var listeners = accumulateTwoPhaseListeners(inst, "onChange");
          if (listeners.length > 0) {
            var event = new SyntheticEvent("onChange", "change", null, nativeEvent, target);
            dispatchQueue.push({
              event,
              listeners
            });
          }
        }
        var activeElement = null;
        var activeElementInst = null;
        function shouldUseChangeEvent(elem) {
          var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
          return nodeName === "select" || nodeName === "input" && elem.type === "file";
        }
        function manualDispatchChangeEvent(nativeEvent) {
          var dispatchQueue = [];
          createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
          batchedUpdates(runEventInBatch, dispatchQueue);
        }
        function runEventInBatch(dispatchQueue) {
          processDispatchQueue(dispatchQueue, 0);
        }
        function getInstIfValueChanged(targetInst) {
          var targetNode = getNodeFromInstance(targetInst);
          if (updateValueIfChanged(targetNode)) {
            return targetInst;
          }
        }
        function getTargetInstForChangeEvent(domEventName, targetInst) {
          if (domEventName === "change") {
            return targetInst;
          }
        }
        var isInputEventSupported = false;
        if (canUseDOM2) {
          isInputEventSupported = isEventSupported("input") && (!document.documentMode || document.documentMode > 9);
        }
        function startWatchingForValueChange(target, targetInst) {
          activeElement = target;
          activeElementInst = targetInst;
          activeElement.attachEvent("onpropertychange", handlePropertyChange);
        }
        function stopWatchingForValueChange() {
          if (!activeElement) {
            return;
          }
          activeElement.detachEvent("onpropertychange", handlePropertyChange);
          activeElement = null;
          activeElementInst = null;
        }
        function handlePropertyChange(nativeEvent) {
          if (nativeEvent.propertyName !== "value") {
            return;
          }
          if (getInstIfValueChanged(activeElementInst)) {
            manualDispatchChangeEvent(nativeEvent);
          }
        }
        function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
          if (domEventName === "focusin") {
            stopWatchingForValueChange();
            startWatchingForValueChange(target, targetInst);
          } else if (domEventName === "focusout") {
            stopWatchingForValueChange();
          }
        }
        function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
          if (domEventName === "selectionchange" || domEventName === "keyup" || domEventName === "keydown") {
            return getInstIfValueChanged(activeElementInst);
          }
        }
        function shouldUseClickEvent(elem) {
          var nodeName = elem.nodeName;
          return nodeName && nodeName.toLowerCase() === "input" && (elem.type === "checkbox" || elem.type === "radio");
        }
        function getTargetInstForClickEvent(domEventName, targetInst) {
          if (domEventName === "click") {
            return getInstIfValueChanged(targetInst);
          }
        }
        function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
          if (domEventName === "input" || domEventName === "change") {
            return getInstIfValueChanged(targetInst);
          }
        }
        function handleControlledInputBlur(node) {
          var state = node._wrapperState;
          if (!state || !state.controlled || node.type !== "number") {
            return;
          }
          {
            setDefaultValue(node, "number", node.value);
          }
        }
        function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
          var getTargetInstFunc, handleEventFunc;
          if (shouldUseChangeEvent(targetNode)) {
            getTargetInstFunc = getTargetInstForChangeEvent;
          } else if (isTextInputElement(targetNode)) {
            if (isInputEventSupported) {
              getTargetInstFunc = getTargetInstForInputOrChangeEvent;
            } else {
              getTargetInstFunc = getTargetInstForInputEventPolyfill;
              handleEventFunc = handleEventsForInputEventPolyfill;
            }
          } else if (shouldUseClickEvent(targetNode)) {
            getTargetInstFunc = getTargetInstForClickEvent;
          }
          if (getTargetInstFunc) {
            var inst = getTargetInstFunc(domEventName, targetInst);
            if (inst) {
              createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
              return;
            }
          }
          if (handleEventFunc) {
            handleEventFunc(domEventName, targetNode, targetInst);
          }
          if (domEventName === "focusout") {
            handleControlledInputBlur(targetNode);
          }
        }
        function registerEvents$2() {
          registerDirectEvent("onMouseEnter", ["mouseout", "mouseover"]);
          registerDirectEvent("onMouseLeave", ["mouseout", "mouseover"]);
          registerDirectEvent("onPointerEnter", ["pointerout", "pointerover"]);
          registerDirectEvent("onPointerLeave", ["pointerout", "pointerover"]);
        }
        function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var isOverEvent = domEventName === "mouseover" || domEventName === "pointerover";
          var isOutEvent = domEventName === "mouseout" || domEventName === "pointerout";
          if (isOverEvent && !isReplayingEvent(nativeEvent)) {
            var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
            if (related) {
              if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) {
                return;
              }
            }
          }
          if (!isOutEvent && !isOverEvent) {
            return;
          }
          var win;
          if (nativeEventTarget.window === nativeEventTarget) {
            win = nativeEventTarget;
          } else {
            var doc = nativeEventTarget.ownerDocument;
            if (doc) {
              win = doc.defaultView || doc.parentWindow;
            } else {
              win = window;
            }
          }
          var from;
          var to3;
          if (isOutEvent) {
            var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
            from = targetInst;
            to3 = _related ? getClosestInstanceFromNode(_related) : null;
            if (to3 !== null) {
              var nearestMounted = getNearestMountedFiber(to3);
              if (to3 !== nearestMounted || to3.tag !== HostComponent && to3.tag !== HostText) {
                to3 = null;
              }
            }
          } else {
            from = null;
            to3 = targetInst;
          }
          if (from === to3) {
            return;
          }
          var SyntheticEventCtor = SyntheticMouseEvent;
          var leaveEventType = "onMouseLeave";
          var enterEventType = "onMouseEnter";
          var eventTypePrefix = "mouse";
          if (domEventName === "pointerout" || domEventName === "pointerover") {
            SyntheticEventCtor = SyntheticPointerEvent;
            leaveEventType = "onPointerLeave";
            enterEventType = "onPointerEnter";
            eventTypePrefix = "pointer";
          }
          var fromNode = from == null ? win : getNodeFromInstance(from);
          var toNode = to3 == null ? win : getNodeFromInstance(to3);
          var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + "leave", from, nativeEvent, nativeEventTarget);
          leave.target = fromNode;
          leave.relatedTarget = toNode;
          var enter = null;
          var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
          if (nativeTargetInst === targetInst) {
            var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + "enter", to3, nativeEvent, nativeEventTarget);
            enterEvent.target = toNode;
            enterEvent.relatedTarget = fromNode;
            enter = enterEvent;
          }
          accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to3);
        }
        function is3(x7, y6) {
          return x7 === y6 && (x7 !== 0 || 1 / x7 === 1 / y6) || x7 !== x7 && y6 !== y6;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is3;
        function shallowEqual2(objA, objB) {
          if (objectIs(objA, objB)) {
            return true;
          }
          if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
            return false;
          }
          var keysA = Object.keys(objA);
          var keysB = Object.keys(objB);
          if (keysA.length !== keysB.length) {
            return false;
          }
          for (var i9 = 0; i9 < keysA.length; i9++) {
            var currentKey = keysA[i9];
            if (!hasOwnProperty2.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) {
              return false;
            }
          }
          return true;
        }
        function getLeafNode(node) {
          while (node && node.firstChild) {
            node = node.firstChild;
          }
          return node;
        }
        function getSiblingNode(node) {
          while (node) {
            if (node.nextSibling) {
              return node.nextSibling;
            }
            node = node.parentNode;
          }
        }
        function getNodeForCharacterOffset(root3, offset) {
          var node = getLeafNode(root3);
          var nodeStart = 0;
          var nodeEnd = 0;
          while (node) {
            if (node.nodeType === TEXT_NODE) {
              nodeEnd = nodeStart + node.textContent.length;
              if (nodeStart <= offset && nodeEnd >= offset) {
                return {
                  node,
                  offset: offset - nodeStart
                };
              }
              nodeStart = nodeEnd;
            }
            node = getLeafNode(getSiblingNode(node));
          }
        }
        function getOffsets(outerNode) {
          var ownerDocument = outerNode.ownerDocument;
          var win = ownerDocument && ownerDocument.defaultView || window;
          var selection = win.getSelection && win.getSelection();
          if (!selection || selection.rangeCount === 0) {
            return null;
          }
          var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset;
          try {
            anchorNode.nodeType;
            focusNode.nodeType;
          } catch (e15) {
            return null;
          }
          return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
        }
        function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
          var length = 0;
          var start2 = -1;
          var end = -1;
          var indexWithinAnchor = 0;
          var indexWithinFocus = 0;
          var node = outerNode;
          var parentNode = null;
          outer:
            while (true) {
              var next = null;
              while (true) {
                if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
                  start2 = length + anchorOffset;
                }
                if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
                  end = length + focusOffset;
                }
                if (node.nodeType === TEXT_NODE) {
                  length += node.nodeValue.length;
                }
                if ((next = node.firstChild) === null) {
                  break;
                }
                parentNode = node;
                node = next;
              }
              while (true) {
                if (node === outerNode) {
                  break outer;
                }
                if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
                  start2 = length;
                }
                if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
                  end = length;
                }
                if ((next = node.nextSibling) !== null) {
                  break;
                }
                node = parentNode;
                parentNode = node.parentNode;
              }
              node = next;
            }
          if (start2 === -1 || end === -1) {
            return null;
          }
          return {
            start: start2,
            end
          };
        }
        function setOffsets(node, offsets) {
          var doc = node.ownerDocument || document;
          var win = doc && doc.defaultView || window;
          if (!win.getSelection) {
            return;
          }
          var selection = win.getSelection();
          var length = node.textContent.length;
          var start2 = Math.min(offsets.start, length);
          var end = offsets.end === void 0 ? start2 : Math.min(offsets.end, length);
          if (!selection.extend && start2 > end) {
            var temp2 = end;
            end = start2;
            start2 = temp2;
          }
          var startMarker = getNodeForCharacterOffset(node, start2);
          var endMarker = getNodeForCharacterOffset(node, end);
          if (startMarker && endMarker) {
            if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
              return;
            }
            var range = doc.createRange();
            range.setStart(startMarker.node, startMarker.offset);
            selection.removeAllRanges();
            if (start2 > end) {
              selection.addRange(range);
              selection.extend(endMarker.node, endMarker.offset);
            } else {
              range.setEnd(endMarker.node, endMarker.offset);
              selection.addRange(range);
            }
          }
        }
        function isTextNode(node) {
          return node && node.nodeType === TEXT_NODE;
        }
        function containsNode(outerNode, innerNode) {
          if (!outerNode || !innerNode) {
            return false;
          } else if (outerNode === innerNode) {
            return true;
          } else if (isTextNode(outerNode)) {
            return false;
          } else if (isTextNode(innerNode)) {
            return containsNode(outerNode, innerNode.parentNode);
          } else if ("contains" in outerNode) {
            return outerNode.contains(innerNode);
          } else if (outerNode.compareDocumentPosition) {
            return !!(outerNode.compareDocumentPosition(innerNode) & 16);
          } else {
            return false;
          }
        }
        function isInDocument(node) {
          return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
        }
        function isSameOriginFrame(iframe) {
          try {
            return typeof iframe.contentWindow.location.href === "string";
          } catch (err) {
            return false;
          }
        }
        function getActiveElementDeep() {
          var win = window;
          var element = getActiveElement();
          while (element instanceof win.HTMLIFrameElement) {
            if (isSameOriginFrame(element)) {
              win = element.contentWindow;
            } else {
              return element;
            }
            element = getActiveElement(win.document);
          }
          return element;
        }
        function hasSelectionCapabilities(elem) {
          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
          return nodeName && (nodeName === "input" && (elem.type === "text" || elem.type === "search" || elem.type === "tel" || elem.type === "url" || elem.type === "password") || nodeName === "textarea" || elem.contentEditable === "true");
        }
        function getSelectionInformation() {
          var focusedElem = getActiveElementDeep();
          return {
            focusedElem,
            selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
          };
        }
        function restoreSelection(priorSelectionInformation) {
          var curFocusedElem = getActiveElementDeep();
          var priorFocusedElem = priorSelectionInformation.focusedElem;
          var priorSelectionRange = priorSelectionInformation.selectionRange;
          if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
            if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
              setSelection(priorFocusedElem, priorSelectionRange);
            }
            var ancestors = [];
            var ancestor = priorFocusedElem;
            while (ancestor = ancestor.parentNode) {
              if (ancestor.nodeType === ELEMENT_NODE) {
                ancestors.push({
                  element: ancestor,
                  left: ancestor.scrollLeft,
                  top: ancestor.scrollTop
                });
              }
            }
            if (typeof priorFocusedElem.focus === "function") {
              priorFocusedElem.focus();
            }
            for (var i9 = 0; i9 < ancestors.length; i9++) {
              var info = ancestors[i9];
              info.element.scrollLeft = info.left;
              info.element.scrollTop = info.top;
            }
          }
        }
        function getSelection(input) {
          var selection;
          if ("selectionStart" in input) {
            selection = {
              start: input.selectionStart,
              end: input.selectionEnd
            };
          } else {
            selection = getOffsets(input);
          }
          return selection || {
            start: 0,
            end: 0
          };
        }
        function setSelection(input, offsets) {
          var start2 = offsets.start;
          var end = offsets.end;
          if (end === void 0) {
            end = start2;
          }
          if ("selectionStart" in input) {
            input.selectionStart = start2;
            input.selectionEnd = Math.min(end, input.value.length);
          } else {
            setOffsets(input, offsets);
          }
        }
        var skipSelectionChangeEvent = canUseDOM2 && "documentMode" in document && document.documentMode <= 11;
        function registerEvents$3() {
          registerTwoPhaseEvent("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
        }
        var activeElement$1 = null;
        var activeElementInst$1 = null;
        var lastSelection = null;
        var mouseDown = false;
        function getSelection$1(node) {
          if ("selectionStart" in node && hasSelectionCapabilities(node)) {
            return {
              start: node.selectionStart,
              end: node.selectionEnd
            };
          } else {
            var win = node.ownerDocument && node.ownerDocument.defaultView || window;
            var selection = win.getSelection();
            return {
              anchorNode: selection.anchorNode,
              anchorOffset: selection.anchorOffset,
              focusNode: selection.focusNode,
              focusOffset: selection.focusOffset
            };
          }
        }
        function getEventTargetDocument(eventTarget) {
          return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
        }
        function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
          var doc = getEventTargetDocument(nativeEventTarget);
          if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
            return;
          }
          var currentSelection = getSelection$1(activeElement$1);
          if (!lastSelection || !shallowEqual2(lastSelection, currentSelection)) {
            lastSelection = currentSelection;
            var listeners = accumulateTwoPhaseListeners(activeElementInst$1, "onSelect");
            if (listeners.length > 0) {
              var event = new SyntheticEvent("onSelect", "select", null, nativeEvent, nativeEventTarget);
              dispatchQueue.push({
                event,
                listeners
              });
              event.target = activeElement$1;
            }
          }
        }
        function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
          switch (domEventName) {
            case "focusin":
              if (isTextInputElement(targetNode) || targetNode.contentEditable === "true") {
                activeElement$1 = targetNode;
                activeElementInst$1 = targetInst;
                lastSelection = null;
              }
              break;
            case "focusout":
              activeElement$1 = null;
              activeElementInst$1 = null;
              lastSelection = null;
              break;
            case "mousedown":
              mouseDown = true;
              break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
              mouseDown = false;
              constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
              break;
            case "selectionchange":
              if (skipSelectionChangeEvent) {
                break;
              }
            case "keydown":
            case "keyup":
              constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
          }
        }
        function makePrefixMap(styleProp, eventName) {
          var prefixes5 = {};
          prefixes5[styleProp.toLowerCase()] = eventName.toLowerCase();
          prefixes5["Webkit" + styleProp] = "webkit" + eventName;
          prefixes5["Moz" + styleProp] = "moz" + eventName;
          return prefixes5;
        }
        var vendorPrefixes = {
          animationend: makePrefixMap("Animation", "AnimationEnd"),
          animationiteration: makePrefixMap("Animation", "AnimationIteration"),
          animationstart: makePrefixMap("Animation", "AnimationStart"),
          transitionend: makePrefixMap("Transition", "TransitionEnd")
        };
        var prefixedEventNames = {};
        var style = {};
        if (canUseDOM2) {
          style = document.createElement("div").style;
          if (!("AnimationEvent" in window)) {
            delete vendorPrefixes.animationend.animation;
            delete vendorPrefixes.animationiteration.animation;
            delete vendorPrefixes.animationstart.animation;
          }
          if (!("TransitionEvent" in window)) {
            delete vendorPrefixes.transitionend.transition;
          }
        }
        function getVendorPrefixedEventName(eventName) {
          if (prefixedEventNames[eventName]) {
            return prefixedEventNames[eventName];
          } else if (!vendorPrefixes[eventName]) {
            return eventName;
          }
          var prefixMap = vendorPrefixes[eventName];
          for (var styleProp in prefixMap) {
            if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
              return prefixedEventNames[eventName] = prefixMap[styleProp];
            }
          }
          return eventName;
        }
        var ANIMATION_END = getVendorPrefixedEventName("animationend");
        var ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration");
        var ANIMATION_START = getVendorPrefixedEventName("animationstart");
        var TRANSITION_END = getVendorPrefixedEventName("transitionend");
        var topLevelEventsToReactNames = new Map();
        var simpleEventPluginEvents = ["abort", "auxClick", "cancel", "canPlay", "canPlayThrough", "click", "close", "contextMenu", "copy", "cut", "drag", "dragEnd", "dragEnter", "dragExit", "dragLeave", "dragOver", "dragStart", "drop", "durationChange", "emptied", "encrypted", "ended", "error", "gotPointerCapture", "input", "invalid", "keyDown", "keyPress", "keyUp", "load", "loadedData", "loadedMetadata", "loadStart", "lostPointerCapture", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "paste", "pause", "play", "playing", "pointerCancel", "pointerDown", "pointerMove", "pointerOut", "pointerOver", "pointerUp", "progress", "rateChange", "reset", "resize", "seeked", "seeking", "stalled", "submit", "suspend", "timeUpdate", "touchCancel", "touchEnd", "touchStart", "volumeChange", "scroll", "toggle", "touchMove", "waiting", "wheel"];
        function registerSimpleEvent(domEventName, reactName) {
          topLevelEventsToReactNames.set(domEventName, reactName);
          registerTwoPhaseEvent(reactName, [domEventName]);
        }
        function registerSimpleEvents() {
          for (var i9 = 0; i9 < simpleEventPluginEvents.length; i9++) {
            var eventName = simpleEventPluginEvents[i9];
            var domEventName = eventName.toLowerCase();
            var capitalizedEvent = eventName[0].toUpperCase() + eventName.slice(1);
            registerSimpleEvent(domEventName, "on" + capitalizedEvent);
          }
          registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
          registerSimpleEvent(ANIMATION_ITERATION, "onAnimationIteration");
          registerSimpleEvent(ANIMATION_START, "onAnimationStart");
          registerSimpleEvent("dblclick", "onDoubleClick");
          registerSimpleEvent("focusin", "onFocus");
          registerSimpleEvent("focusout", "onBlur");
          registerSimpleEvent(TRANSITION_END, "onTransitionEnd");
        }
        function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var reactName = topLevelEventsToReactNames.get(domEventName);
          if (reactName === void 0) {
            return;
          }
          var SyntheticEventCtor = SyntheticEvent;
          var reactEventType = domEventName;
          switch (domEventName) {
            case "keypress":
              if (getEventCharCode(nativeEvent) === 0) {
                return;
              }
            case "keydown":
            case "keyup":
              SyntheticEventCtor = SyntheticKeyboardEvent;
              break;
            case "focusin":
              reactEventType = "focus";
              SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "focusout":
              reactEventType = "blur";
              SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "beforeblur":
            case "afterblur":
              SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "click":
              if (nativeEvent.button === 2) {
                return;
              }
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              SyntheticEventCtor = SyntheticMouseEvent;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              SyntheticEventCtor = SyntheticDragEvent;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              SyntheticEventCtor = SyntheticTouchEvent;
              break;
            case ANIMATION_END:
            case ANIMATION_ITERATION:
            case ANIMATION_START:
              SyntheticEventCtor = SyntheticAnimationEvent;
              break;
            case TRANSITION_END:
              SyntheticEventCtor = SyntheticTransitionEvent;
              break;
            case "scroll":
              SyntheticEventCtor = SyntheticUIEvent;
              break;
            case "wheel":
              SyntheticEventCtor = SyntheticWheelEvent;
              break;
            case "copy":
            case "cut":
            case "paste":
              SyntheticEventCtor = SyntheticClipboardEvent;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              SyntheticEventCtor = SyntheticPointerEvent;
              break;
          }
          var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
          {
            var accumulateTargetOnly = !inCapturePhase && domEventName === "scroll";
            var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
            if (_listeners.length > 0) {
              var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
              dispatchQueue.push({
                event: _event,
                listeners: _listeners
              });
            }
          }
        }
        registerSimpleEvents();
        registerEvents$2();
        registerEvents$1();
        registerEvents$3();
        registerEvents();
        function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
          var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0;
          if (shouldProcessPolyfillPlugins) {
            extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
          }
        }
        var mediaEventTypes = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "resize", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"];
        var nonDelegatedEvents = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(mediaEventTypes));
        function executeDispatch(event, listener, currentTarget) {
          var type2 = event.type || "unknown-event";
          event.currentTarget = currentTarget;
          invokeGuardedCallbackAndCatchFirstError(type2, listener, void 0, event);
          event.currentTarget = null;
        }
        function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
          var previousInstance;
          if (inCapturePhase) {
            for (var i9 = dispatchListeners.length - 1; i9 >= 0; i9--) {
              var _dispatchListeners$i = dispatchListeners[i9], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
              if (instance !== previousInstance && event.isPropagationStopped()) {
                return;
              }
              executeDispatch(event, listener, currentTarget);
              previousInstance = instance;
            }
          } else {
            for (var _i = 0; _i < dispatchListeners.length; _i++) {
              var _dispatchListeners$_i = dispatchListeners[_i], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
              if (_instance !== previousInstance && event.isPropagationStopped()) {
                return;
              }
              executeDispatch(event, _listener, _currentTarget);
              previousInstance = _instance;
            }
          }
        }
        function processDispatchQueue(dispatchQueue, eventSystemFlags) {
          var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
          for (var i9 = 0; i9 < dispatchQueue.length; i9++) {
            var _dispatchQueue$i = dispatchQueue[i9], event = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
            processDispatchQueueItemsInOrder(event, listeners, inCapturePhase);
          }
          rethrowCaughtError();
        }
        function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
          var nativeEventTarget = getEventTarget(nativeEvent);
          var dispatchQueue = [];
          extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
          processDispatchQueue(dispatchQueue, eventSystemFlags);
        }
        function listenToNonDelegatedEvent(domEventName, targetElement) {
          {
            if (!nonDelegatedEvents.has(domEventName)) {
              error('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', domEventName);
            }
          }
          var isCapturePhaseListener = false;
          var listenerSet = getEventListenerSet(targetElement);
          var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
          if (!listenerSet.has(listenerSetKey)) {
            addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
          }
        }
        function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
          {
            if (nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener) {
              error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', domEventName);
            }
          }
          var eventSystemFlags = 0;
          if (isCapturePhaseListener) {
            eventSystemFlags |= IS_CAPTURE_PHASE;
          }
          addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
        }
        var listeningMarker = "_reactListening" + Math.random().toString(36).slice(2);
        function listenToAllSupportedEvents(rootContainerElement) {
          if (!rootContainerElement[listeningMarker]) {
            rootContainerElement[listeningMarker] = true;
            allNativeEvents.forEach(function(domEventName) {
              if (domEventName !== "selectionchange") {
                if (!nonDelegatedEvents.has(domEventName)) {
                  listenToNativeEvent(domEventName, false, rootContainerElement);
                }
                listenToNativeEvent(domEventName, true, rootContainerElement);
              }
            });
            var ownerDocument = rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
            if (ownerDocument !== null) {
              if (!ownerDocument[listeningMarker]) {
                ownerDocument[listeningMarker] = true;
                listenToNativeEvent("selectionchange", false, ownerDocument);
              }
            }
          }
        }
        function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
          var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags);
          var isPassiveListener = void 0;
          if (passiveBrowserEventsSupported) {
            if (domEventName === "touchstart" || domEventName === "touchmove" || domEventName === "wheel") {
              isPassiveListener = true;
            }
          }
          targetContainer = targetContainer;
          var unsubscribeListener;
          if (isCapturePhaseListener) {
            if (isPassiveListener !== void 0) {
              unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            } else {
              unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
            }
          } else {
            if (isPassiveListener !== void 0) {
              unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            } else {
              unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
            }
          }
        }
        function isMatchingRootContainer(grandContainer, targetContainer) {
          return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
        }
        function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
          var ancestorInst = targetInst;
          if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
            var targetContainerNode = targetContainer;
            if (targetInst !== null) {
              var node = targetInst;
              mainLoop:
                while (true) {
                  if (node === null) {
                    return;
                  }
                  var nodeTag = node.tag;
                  if (nodeTag === HostRoot || nodeTag === HostPortal) {
                    var container2 = node.stateNode.containerInfo;
                    if (isMatchingRootContainer(container2, targetContainerNode)) {
                      break;
                    }
                    if (nodeTag === HostPortal) {
                      var grandNode = node.return;
                      while (grandNode !== null) {
                        var grandTag = grandNode.tag;
                        if (grandTag === HostRoot || grandTag === HostPortal) {
                          var grandContainer = grandNode.stateNode.containerInfo;
                          if (isMatchingRootContainer(grandContainer, targetContainerNode)) {
                            return;
                          }
                        }
                        grandNode = grandNode.return;
                      }
                    }
                    while (container2 !== null) {
                      var parentNode = getClosestInstanceFromNode(container2);
                      if (parentNode === null) {
                        return;
                      }
                      var parentTag = parentNode.tag;
                      if (parentTag === HostComponent || parentTag === HostText) {
                        node = ancestorInst = parentNode;
                        continue mainLoop;
                      }
                      container2 = container2.parentNode;
                    }
                  }
                  node = node.return;
                }
            }
          }
          batchedUpdates(function() {
            return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
          });
        }
        function createDispatchListener(instance, listener, currentTarget) {
          return {
            instance,
            listener,
            currentTarget
          };
        }
        function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly, nativeEvent) {
          var captureName = reactName !== null ? reactName + "Capture" : null;
          var reactEventName = inCapturePhase ? captureName : reactName;
          var listeners = [];
          var instance = targetFiber;
          var lastHostComponent = null;
          while (instance !== null) {
            var _instance2 = instance, stateNode = _instance2.stateNode, tag = _instance2.tag;
            if (tag === HostComponent && stateNode !== null) {
              lastHostComponent = stateNode;
              if (reactEventName !== null) {
                var listener = getListener(instance, reactEventName);
                if (listener != null) {
                  listeners.push(createDispatchListener(instance, listener, lastHostComponent));
                }
              }
            }
            if (accumulateTargetOnly) {
              break;
            }
            instance = instance.return;
          }
          return listeners;
        }
        function accumulateTwoPhaseListeners(targetFiber, reactName) {
          var captureName = reactName + "Capture";
          var listeners = [];
          var instance = targetFiber;
          while (instance !== null) {
            var _instance3 = instance, stateNode = _instance3.stateNode, tag = _instance3.tag;
            if (tag === HostComponent && stateNode !== null) {
              var currentTarget = stateNode;
              var captureListener = getListener(instance, captureName);
              if (captureListener != null) {
                listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
              }
              var bubbleListener = getListener(instance, reactName);
              if (bubbleListener != null) {
                listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
              }
            }
            instance = instance.return;
          }
          return listeners;
        }
        function getParent(inst) {
          if (inst === null) {
            return null;
          }
          do {
            inst = inst.return;
          } while (inst && inst.tag !== HostComponent);
          if (inst) {
            return inst;
          }
          return null;
        }
        function getLowestCommonAncestor(instA, instB) {
          var nodeA = instA;
          var nodeB = instB;
          var depthA = 0;
          for (var tempA = nodeA; tempA; tempA = getParent(tempA)) {
            depthA++;
          }
          var depthB = 0;
          for (var tempB = nodeB; tempB; tempB = getParent(tempB)) {
            depthB++;
          }
          while (depthA - depthB > 0) {
            nodeA = getParent(nodeA);
            depthA--;
          }
          while (depthB - depthA > 0) {
            nodeB = getParent(nodeB);
            depthB--;
          }
          var depth = depthA;
          while (depth--) {
            if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) {
              return nodeA;
            }
            nodeA = getParent(nodeA);
            nodeB = getParent(nodeB);
          }
          return null;
        }
        function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
          var registrationName = event._reactName;
          var listeners = [];
          var instance = target;
          while (instance !== null) {
            if (instance === common) {
              break;
            }
            var _instance4 = instance, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
            if (alternate !== null && alternate === common) {
              break;
            }
            if (tag === HostComponent && stateNode !== null) {
              var currentTarget = stateNode;
              if (inCapturePhase) {
                var captureListener = getListener(instance, registrationName);
                if (captureListener != null) {
                  listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                }
              } else if (!inCapturePhase) {
                var bubbleListener = getListener(instance, registrationName);
                if (bubbleListener != null) {
                  listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
                }
              }
            }
            instance = instance.return;
          }
          if (listeners.length !== 0) {
            dispatchQueue.push({
              event,
              listeners
            });
          }
        }
        function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to3) {
          var common = from && to3 ? getLowestCommonAncestor(from, to3) : null;
          if (from !== null) {
            accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
          }
          if (to3 !== null && enterEvent !== null) {
            accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to3, common, true);
          }
        }
        function getListenerSetKey(domEventName, capture) {
          return domEventName + "__" + (capture ? "capture" : "bubble");
        }
        var didWarnInvalidHydration = false;
        var DANGEROUSLY_SET_INNER_HTML = "dangerouslySetInnerHTML";
        var SUPPRESS_CONTENT_EDITABLE_WARNING = "suppressContentEditableWarning";
        var SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning";
        var AUTOFOCUS = "autoFocus";
        var CHILDREN = "children";
        var STYLE = "style";
        var HTML$1 = "__html";
        var warnedUnknownTags;
        var validatePropertiesInDevelopment;
        var warnForPropDifference;
        var warnForExtraAttributes;
        var warnForInvalidEventListener;
        var canDiffStyleForHydrationWarning;
        var normalizeHTML;
        {
          warnedUnknownTags = {
            dialog: true,
            webview: true
          };
          validatePropertiesInDevelopment = function(type2, props) {
            validateProperties(type2, props);
            validateProperties$1(type2, props);
            validateProperties$2(type2, props, {
              registrationNameDependencies,
              possibleRegistrationNames
            });
          };
          canDiffStyleForHydrationWarning = canUseDOM2 && !document.documentMode;
          warnForPropDifference = function(propName, serverValue, clientValue) {
            if (didWarnInvalidHydration) {
              return;
            }
            var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
            var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
            if (normalizedServerValue === normalizedClientValue) {
              return;
            }
            didWarnInvalidHydration = true;
            error("Prop `%s` did not match. Server: %s Client: %s", propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
          };
          warnForExtraAttributes = function(attributeNames) {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            var names = [];
            attributeNames.forEach(function(name) {
              names.push(name);
            });
            error("Extra attributes from the server: %s", names);
          };
          warnForInvalidEventListener = function(registrationName, listener) {
            if (listener === false) {
              error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName);
            } else {
              error("Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
            }
          };
          normalizeHTML = function(parent, html) {
            var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
            testElement.innerHTML = html;
            return testElement.innerHTML;
          };
        }
        var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
        var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
        function normalizeMarkupForTextOrAttribute(markup) {
          {
            checkHtmlStringCoercion(markup);
          }
          var markupString = typeof markup === "string" ? markup : "" + markup;
          return markupString.replace(NORMALIZE_NEWLINES_REGEX, "\n").replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
        }
        function checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {
          var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
          var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
          if (normalizedServerText === normalizedClientText) {
            return;
          }
          if (shouldWarnDev) {
            {
              if (!didWarnInvalidHydration) {
                didWarnInvalidHydration = true;
                error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
              }
            }
          }
          if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) {
            throw new Error("Text content does not match server-rendered HTML.");
          }
        }
        function getOwnerDocumentFromRootContainer(rootContainerElement) {
          return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
        }
        function noop3() {
        }
        function trapClickOnNonInteractiveElement(node) {
          node.onclick = noop3;
        }
        function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
          for (var propKey in nextProps) {
            if (!nextProps.hasOwnProperty(propKey)) {
              continue;
            }
            var nextProp = nextProps[propKey];
            if (propKey === STYLE) {
              {
                if (nextProp) {
                  Object.freeze(nextProp);
                }
              }
              setValueForStyles(domElement, nextProp);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
              if (nextHtml != null) {
                setInnerHTML(domElement, nextHtml);
              }
            } else if (propKey === CHILDREN) {
              if (typeof nextProp === "string") {
                var canSetTextContent = tag !== "textarea" || nextProp !== "";
                if (canSetTextContent) {
                  setTextContent(domElement, nextProp);
                }
              } else if (typeof nextProp === "number") {
                setTextContent(domElement, "" + nextProp);
              }
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
              ;
            else if (propKey === AUTOFOCUS)
              ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (typeof nextProp !== "function") {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                if (propKey === "onScroll") {
                  listenToNonDelegatedEvent("scroll", domElement);
                }
              }
            } else if (nextProp != null) {
              setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
            }
          }
        }
        function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
          for (var i9 = 0; i9 < updatePayload.length; i9 += 2) {
            var propKey = updatePayload[i9];
            var propValue = updatePayload[i9 + 1];
            if (propKey === STYLE) {
              setValueForStyles(domElement, propValue);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              setInnerHTML(domElement, propValue);
            } else if (propKey === CHILDREN) {
              setTextContent(domElement, propValue);
            } else {
              setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
            }
          }
        }
        function createElement5(type2, props, rootContainerElement, parentNamespace) {
          var isCustomComponentTag;
          var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
          var domElement;
          var namespaceURI = parentNamespace;
          if (namespaceURI === HTML_NAMESPACE) {
            namespaceURI = getIntrinsicNamespace(type2);
          }
          if (namespaceURI === HTML_NAMESPACE) {
            {
              isCustomComponentTag = isCustomComponent(type2, props);
              if (!isCustomComponentTag && type2 !== type2.toLowerCase()) {
                error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type2);
              }
            }
            if (type2 === "script") {
              var div = ownerDocument.createElement("div");
              div.innerHTML = "<script></script>";
              var firstChild = div.firstChild;
              domElement = div.removeChild(firstChild);
            } else if (typeof props.is === "string") {
              domElement = ownerDocument.createElement(type2, {
                is: props.is
              });
            } else {
              domElement = ownerDocument.createElement(type2);
              if (type2 === "select") {
                var node = domElement;
                if (props.multiple) {
                  node.multiple = true;
                } else if (props.size) {
                  node.size = props.size;
                }
              }
            }
          } else {
            domElement = ownerDocument.createElementNS(namespaceURI, type2);
          }
          {
            if (namespaceURI === HTML_NAMESPACE) {
              if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === "[object HTMLUnknownElement]" && !hasOwnProperty2.call(warnedUnknownTags, type2)) {
                warnedUnknownTags[type2] = true;
                error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type2);
              }
            }
          }
          return domElement;
        }
        function createTextNode(text, rootContainerElement) {
          return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
        }
        function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
          var isCustomComponentTag = isCustomComponent(tag, rawProps);
          {
            validatePropertiesInDevelopment(tag, rawProps);
          }
          var props;
          switch (tag) {
            case "dialog":
              listenToNonDelegatedEvent("cancel", domElement);
              listenToNonDelegatedEvent("close", domElement);
              props = rawProps;
              break;
            case "iframe":
            case "object":
            case "embed":
              listenToNonDelegatedEvent("load", domElement);
              props = rawProps;
              break;
            case "video":
            case "audio":
              for (var i9 = 0; i9 < mediaEventTypes.length; i9++) {
                listenToNonDelegatedEvent(mediaEventTypes[i9], domElement);
              }
              props = rawProps;
              break;
            case "source":
              listenToNonDelegatedEvent("error", domElement);
              props = rawProps;
              break;
            case "img":
            case "image":
            case "link":
              listenToNonDelegatedEvent("error", domElement);
              listenToNonDelegatedEvent("load", domElement);
              props = rawProps;
              break;
            case "details":
              listenToNonDelegatedEvent("toggle", domElement);
              props = rawProps;
              break;
            case "input":
              initWrapperState(domElement, rawProps);
              props = getHostProps(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "option":
              validateProps(domElement, rawProps);
              props = rawProps;
              break;
            case "select":
              initWrapperState$1(domElement, rawProps);
              props = getHostProps$1(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "textarea":
              initWrapperState$2(domElement, rawProps);
              props = getHostProps$2(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            default:
              props = rawProps;
          }
          assertValidProps(tag, props);
          setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
          switch (tag) {
            case "input":
              track(domElement);
              postMountWrapper(domElement, rawProps, false);
              break;
            case "textarea":
              track(domElement);
              postMountWrapper$3(domElement);
              break;
            case "option":
              postMountWrapper$1(domElement, rawProps);
              break;
            case "select":
              postMountWrapper$2(domElement, rawProps);
              break;
            default:
              if (typeof props.onClick === "function") {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
        }
        function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
          {
            validatePropertiesInDevelopment(tag, nextRawProps);
          }
          var updatePayload = null;
          var lastProps;
          var nextProps;
          switch (tag) {
            case "input":
              lastProps = getHostProps(domElement, lastRawProps);
              nextProps = getHostProps(domElement, nextRawProps);
              updatePayload = [];
              break;
            case "select":
              lastProps = getHostProps$1(domElement, lastRawProps);
              nextProps = getHostProps$1(domElement, nextRawProps);
              updatePayload = [];
              break;
            case "textarea":
              lastProps = getHostProps$2(domElement, lastRawProps);
              nextProps = getHostProps$2(domElement, nextRawProps);
              updatePayload = [];
              break;
            default:
              lastProps = lastRawProps;
              nextProps = nextRawProps;
              if (typeof lastProps.onClick !== "function" && typeof nextProps.onClick === "function") {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
          assertValidProps(tag, nextProps);
          var propKey;
          var styleName;
          var styleUpdates = null;
          for (propKey in lastProps) {
            if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
              continue;
            }
            if (propKey === STYLE) {
              var lastStyle = lastProps[propKey];
              for (styleName in lastStyle) {
                if (lastStyle.hasOwnProperty(styleName)) {
                  if (!styleUpdates) {
                    styleUpdates = {};
                  }
                  styleUpdates[styleName] = "";
                }
              }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN)
              ;
            else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
              ;
            else if (propKey === AUTOFOCUS)
              ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (!updatePayload) {
                updatePayload = [];
              }
            } else {
              (updatePayload = updatePayload || []).push(propKey, null);
            }
          }
          for (propKey in nextProps) {
            var nextProp = nextProps[propKey];
            var lastProp = lastProps != null ? lastProps[propKey] : void 0;
            if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
              continue;
            }
            if (propKey === STYLE) {
              {
                if (nextProp) {
                  Object.freeze(nextProp);
                }
              }
              if (lastProp) {
                for (styleName in lastProp) {
                  if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = "";
                  }
                }
                for (styleName in nextProp) {
                  if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = nextProp[styleName];
                  }
                }
              } else {
                if (!styleUpdates) {
                  if (!updatePayload) {
                    updatePayload = [];
                  }
                  updatePayload.push(propKey, styleUpdates);
                }
                styleUpdates = nextProp;
              }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
              var lastHtml = lastProp ? lastProp[HTML$1] : void 0;
              if (nextHtml != null) {
                if (lastHtml !== nextHtml) {
                  (updatePayload = updatePayload || []).push(propKey, nextHtml);
                }
              }
            } else if (propKey === CHILDREN) {
              if (typeof nextProp === "string" || typeof nextProp === "number") {
                (updatePayload = updatePayload || []).push(propKey, "" + nextProp);
              }
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
              ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (typeof nextProp !== "function") {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                if (propKey === "onScroll") {
                  listenToNonDelegatedEvent("scroll", domElement);
                }
              }
              if (!updatePayload && lastProp !== nextProp) {
                updatePayload = [];
              }
            } else {
              (updatePayload = updatePayload || []).push(propKey, nextProp);
            }
          }
          if (styleUpdates) {
            {
              validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
            }
            (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
          }
          return updatePayload;
        }
        function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
          if (tag === "input" && nextRawProps.type === "radio" && nextRawProps.name != null) {
            updateChecked(domElement, nextRawProps);
          }
          var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
          var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
          updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);
          switch (tag) {
            case "input":
              updateWrapper(domElement, nextRawProps);
              break;
            case "textarea":
              updateWrapper$1(domElement, nextRawProps);
              break;
            case "select":
              postUpdateWrapper(domElement, nextRawProps);
              break;
          }
        }
        function getPossibleStandardName(propName) {
          {
            var lowerCasedName = propName.toLowerCase();
            if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              return null;
            }
            return possibleStandardNames[lowerCasedName] || null;
          }
        }
        function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement, isConcurrentMode, shouldWarnDev) {
          var isCustomComponentTag;
          var extraAttributeNames;
          {
            isCustomComponentTag = isCustomComponent(tag, rawProps);
            validatePropertiesInDevelopment(tag, rawProps);
          }
          switch (tag) {
            case "dialog":
              listenToNonDelegatedEvent("cancel", domElement);
              listenToNonDelegatedEvent("close", domElement);
              break;
            case "iframe":
            case "object":
            case "embed":
              listenToNonDelegatedEvent("load", domElement);
              break;
            case "video":
            case "audio":
              for (var i9 = 0; i9 < mediaEventTypes.length; i9++) {
                listenToNonDelegatedEvent(mediaEventTypes[i9], domElement);
              }
              break;
            case "source":
              listenToNonDelegatedEvent("error", domElement);
              break;
            case "img":
            case "image":
            case "link":
              listenToNonDelegatedEvent("error", domElement);
              listenToNonDelegatedEvent("load", domElement);
              break;
            case "details":
              listenToNonDelegatedEvent("toggle", domElement);
              break;
            case "input":
              initWrapperState(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "option":
              validateProps(domElement, rawProps);
              break;
            case "select":
              initWrapperState$1(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "textarea":
              initWrapperState$2(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
          }
          assertValidProps(tag, rawProps);
          {
            extraAttributeNames = new Set();
            var attributes = domElement.attributes;
            for (var _i = 0; _i < attributes.length; _i++) {
              var name = attributes[_i].name.toLowerCase();
              switch (name) {
                case "value":
                  break;
                case "checked":
                  break;
                case "selected":
                  break;
                default:
                  extraAttributeNames.add(attributes[_i].name);
              }
            }
          }
          var updatePayload = null;
          for (var propKey in rawProps) {
            if (!rawProps.hasOwnProperty(propKey)) {
              continue;
            }
            var nextProp = rawProps[propKey];
            if (propKey === CHILDREN) {
              if (typeof nextProp === "string") {
                if (domElement.textContent !== nextProp) {
                  if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                    checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                  }
                  updatePayload = [CHILDREN, nextProp];
                }
              } else if (typeof nextProp === "number") {
                if (domElement.textContent !== "" + nextProp) {
                  if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                    checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                  }
                  updatePayload = [CHILDREN, "" + nextProp];
                }
              }
            } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (typeof nextProp !== "function") {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                if (propKey === "onScroll") {
                  listenToNonDelegatedEvent("scroll", domElement);
                }
              }
            } else if (shouldWarnDev && true && typeof isCustomComponentTag === "boolean") {
              var serverValue = void 0;
              var propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);
              if (rawProps[SUPPRESS_HYDRATION_WARNING] === true)
                ;
              else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || propKey === "value" || propKey === "checked" || propKey === "selected")
                ;
              else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var serverHTML = domElement.innerHTML;
                var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
                if (nextHtml != null) {
                  var expectedHTML = normalizeHTML(domElement, nextHtml);
                  if (expectedHTML !== serverHTML) {
                    warnForPropDifference(propKey, serverHTML, expectedHTML);
                  }
                }
              } else if (propKey === STYLE) {
                extraAttributeNames.delete(propKey);
                if (canDiffStyleForHydrationWarning) {
                  var expectedStyle = createDangerousStringForStyles(nextProp);
                  serverValue = domElement.getAttribute("style");
                  if (expectedStyle !== serverValue) {
                    warnForPropDifference(propKey, serverValue, expectedStyle);
                  }
                }
              } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {
                extraAttributeNames.delete(propKey.toLowerCase());
                serverValue = getValueForAttribute(domElement, propKey, nextProp);
                if (nextProp !== serverValue) {
                  warnForPropDifference(propKey, serverValue, nextProp);
                }
              } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                var isMismatchDueToBadCasing = false;
                if (propertyInfo !== null) {
                  extraAttributeNames.delete(propertyInfo.attributeName);
                  serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                } else {
                  var ownNamespace = parentNamespace;
                  if (ownNamespace === HTML_NAMESPACE) {
                    ownNamespace = getIntrinsicNamespace(tag);
                  }
                  if (ownNamespace === HTML_NAMESPACE) {
                    extraAttributeNames.delete(propKey.toLowerCase());
                  } else {
                    var standardName = getPossibleStandardName(propKey);
                    if (standardName !== null && standardName !== propKey) {
                      isMismatchDueToBadCasing = true;
                      extraAttributeNames.delete(standardName);
                    }
                    extraAttributeNames.delete(propKey);
                  }
                  serverValue = getValueForAttribute(domElement, propKey, nextProp);
                }
                var dontWarnCustomElement = enableCustomElementPropertySupport;
                if (!dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing) {
                  warnForPropDifference(propKey, serverValue, nextProp);
                }
              }
            }
          }
          {
            if (shouldWarnDev) {
              if (extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                warnForExtraAttributes(extraAttributeNames);
              }
            }
          }
          switch (tag) {
            case "input":
              track(domElement);
              postMountWrapper(domElement, rawProps, true);
              break;
            case "textarea":
              track(domElement);
              postMountWrapper$3(domElement);
              break;
            case "select":
            case "option":
              break;
            default:
              if (typeof rawProps.onClick === "function") {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
          return updatePayload;
        }
        function diffHydratedText(textNode, text, isConcurrentMode) {
          var isDifferent = textNode.nodeValue !== text;
          return isDifferent;
        }
        function warnForDeletedHydratableElement(parentNode, child) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error("Did not expect server HTML to contain a <%s> in <%s>.", child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
          }
        }
        function warnForDeletedHydratableText(parentNode, child) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
          }
        }
        function warnForInsertedHydratedElement(parentNode, tag, props) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error("Expected server HTML to contain a matching <%s> in <%s>.", tag, parentNode.nodeName.toLowerCase());
          }
        }
        function warnForInsertedHydratedText(parentNode, text) {
          {
            if (text === "") {
              return;
            }
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
          }
        }
        function restoreControlledState$3(domElement, tag, props) {
          switch (tag) {
            case "input":
              restoreControlledState(domElement, props);
              return;
            case "textarea":
              restoreControlledState$2(domElement, props);
              return;
            case "select":
              restoreControlledState$1(domElement, props);
              return;
          }
        }
        var validateDOMNesting = function() {
        };
        var updatedAncestorInfo = function() {
        };
        {
          var specialTags = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"];
          var inScopeTags = [
            "applet",
            "caption",
            "html",
            "table",
            "td",
            "th",
            "marquee",
            "object",
            "template",
            "foreignObject",
            "desc",
            "title"
          ];
          var buttonScopeTags = inScopeTags.concat(["button"]);
          var impliedEndTags = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"];
          var emptyAncestorInfo = {
            current: null,
            formTag: null,
            aTagInScope: null,
            buttonTagInScope: null,
            nobrTagInScope: null,
            pTagInButtonScope: null,
            listItemTagAutoclosing: null,
            dlItemTagAutoclosing: null
          };
          updatedAncestorInfo = function(oldInfo, tag) {
            var ancestorInfo = assign3({}, oldInfo || emptyAncestorInfo);
            var info = {
              tag
            };
            if (inScopeTags.indexOf(tag) !== -1) {
              ancestorInfo.aTagInScope = null;
              ancestorInfo.buttonTagInScope = null;
              ancestorInfo.nobrTagInScope = null;
            }
            if (buttonScopeTags.indexOf(tag) !== -1) {
              ancestorInfo.pTagInButtonScope = null;
            }
            if (specialTags.indexOf(tag) !== -1 && tag !== "address" && tag !== "div" && tag !== "p") {
              ancestorInfo.listItemTagAutoclosing = null;
              ancestorInfo.dlItemTagAutoclosing = null;
            }
            ancestorInfo.current = info;
            if (tag === "form") {
              ancestorInfo.formTag = info;
            }
            if (tag === "a") {
              ancestorInfo.aTagInScope = info;
            }
            if (tag === "button") {
              ancestorInfo.buttonTagInScope = info;
            }
            if (tag === "nobr") {
              ancestorInfo.nobrTagInScope = info;
            }
            if (tag === "p") {
              ancestorInfo.pTagInButtonScope = info;
            }
            if (tag === "li") {
              ancestorInfo.listItemTagAutoclosing = info;
            }
            if (tag === "dd" || tag === "dt") {
              ancestorInfo.dlItemTagAutoclosing = info;
            }
            return ancestorInfo;
          };
          var isTagValidWithParent = function(tag, parentTag) {
            switch (parentTag) {
              case "select":
                return tag === "option" || tag === "optgroup" || tag === "#text";
              case "optgroup":
                return tag === "option" || tag === "#text";
              case "option":
                return tag === "#text";
              case "tr":
                return tag === "th" || tag === "td" || tag === "style" || tag === "script" || tag === "template";
              case "tbody":
              case "thead":
              case "tfoot":
                return tag === "tr" || tag === "style" || tag === "script" || tag === "template";
              case "colgroup":
                return tag === "col" || tag === "template";
              case "table":
                return tag === "caption" || tag === "colgroup" || tag === "tbody" || tag === "tfoot" || tag === "thead" || tag === "style" || tag === "script" || tag === "template";
              case "head":
                return tag === "base" || tag === "basefont" || tag === "bgsound" || tag === "link" || tag === "meta" || tag === "title" || tag === "noscript" || tag === "noframes" || tag === "style" || tag === "script" || tag === "template";
              case "html":
                return tag === "head" || tag === "body" || tag === "frameset";
              case "frameset":
                return tag === "frame";
              case "#document":
                return tag === "html";
            }
            switch (tag) {
              case "h1":
              case "h2":
              case "h3":
              case "h4":
              case "h5":
              case "h6":
                return parentTag !== "h1" && parentTag !== "h2" && parentTag !== "h3" && parentTag !== "h4" && parentTag !== "h5" && parentTag !== "h6";
              case "rp":
              case "rt":
                return impliedEndTags.indexOf(parentTag) === -1;
              case "body":
              case "caption":
              case "col":
              case "colgroup":
              case "frameset":
              case "frame":
              case "head":
              case "html":
              case "tbody":
              case "td":
              case "tfoot":
              case "th":
              case "thead":
              case "tr":
                return parentTag == null;
            }
            return true;
          };
          var findInvalidAncestorForTag = function(tag, ancestorInfo) {
            switch (tag) {
              case "address":
              case "article":
              case "aside":
              case "blockquote":
              case "center":
              case "details":
              case "dialog":
              case "dir":
              case "div":
              case "dl":
              case "fieldset":
              case "figcaption":
              case "figure":
              case "footer":
              case "header":
              case "hgroup":
              case "main":
              case "menu":
              case "nav":
              case "ol":
              case "p":
              case "section":
              case "summary":
              case "ul":
              case "pre":
              case "listing":
              case "table":
              case "hr":
              case "xmp":
              case "h1":
              case "h2":
              case "h3":
              case "h4":
              case "h5":
              case "h6":
                return ancestorInfo.pTagInButtonScope;
              case "form":
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
              case "li":
                return ancestorInfo.listItemTagAutoclosing;
              case "dd":
              case "dt":
                return ancestorInfo.dlItemTagAutoclosing;
              case "button":
                return ancestorInfo.buttonTagInScope;
              case "a":
                return ancestorInfo.aTagInScope;
              case "nobr":
                return ancestorInfo.nobrTagInScope;
            }
            return null;
          };
          var didWarn$1 = {};
          validateDOMNesting = function(childTag, childText, ancestorInfo) {
            ancestorInfo = ancestorInfo || emptyAncestorInfo;
            var parentInfo = ancestorInfo.current;
            var parentTag = parentInfo && parentInfo.tag;
            if (childText != null) {
              if (childTag != null) {
                error("validateDOMNesting: when childText is passed, childTag should be null");
              }
              childTag = "#text";
            }
            var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
            var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
            var invalidParentOrAncestor = invalidParent || invalidAncestor;
            if (!invalidParentOrAncestor) {
              return;
            }
            var ancestorTag = invalidParentOrAncestor.tag;
            var warnKey = !!invalidParent + "|" + childTag + "|" + ancestorTag;
            if (didWarn$1[warnKey]) {
              return;
            }
            didWarn$1[warnKey] = true;
            var tagDisplayName = childTag;
            var whitespaceInfo = "";
            if (childTag === "#text") {
              if (/\S/.test(childText)) {
                tagDisplayName = "Text nodes";
              } else {
                tagDisplayName = "Whitespace text nodes";
                whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.";
              }
            } else {
              tagDisplayName = "<" + childTag + ">";
            }
            if (invalidParent) {
              var info = "";
              if (ancestorTag === "table" && childTag === "tr") {
                info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.";
              }
              error("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", tagDisplayName, ancestorTag, whitespaceInfo, info);
            } else {
              error("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
            }
          };
        }
        var SUPPRESS_HYDRATION_WARNING$1 = "suppressHydrationWarning";
        var SUSPENSE_START_DATA = "$";
        var SUSPENSE_END_DATA = "/$";
        var SUSPENSE_PENDING_START_DATA = "$?";
        var SUSPENSE_FALLBACK_START_DATA = "$!";
        var STYLE$1 = "style";
        var eventsEnabled = null;
        var selectionInformation = null;
        function getRootHostContext(rootContainerInstance) {
          var type2;
          var namespace;
          var nodeType = rootContainerInstance.nodeType;
          switch (nodeType) {
            case DOCUMENT_NODE:
            case DOCUMENT_FRAGMENT_NODE: {
              type2 = nodeType === DOCUMENT_NODE ? "#document" : "#fragment";
              var root3 = rootContainerInstance.documentElement;
              namespace = root3 ? root3.namespaceURI : getChildNamespace(null, "");
              break;
            }
            default: {
              var container2 = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
              var ownNamespace = container2.namespaceURI || null;
              type2 = container2.tagName;
              namespace = getChildNamespace(ownNamespace, type2);
              break;
            }
          }
          {
            var validatedTag = type2.toLowerCase();
            var ancestorInfo = updatedAncestorInfo(null, validatedTag);
            return {
              namespace,
              ancestorInfo
            };
          }
        }
        function getChildHostContext(parentHostContext, type2, rootContainerInstance) {
          {
            var parentHostContextDev = parentHostContext;
            var namespace = getChildNamespace(parentHostContextDev.namespace, type2);
            var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type2);
            return {
              namespace,
              ancestorInfo
            };
          }
        }
        function getPublicInstance(instance) {
          return instance;
        }
        function prepareForCommit(containerInfo) {
          eventsEnabled = isEnabled();
          selectionInformation = getSelectionInformation();
          var activeInstance = null;
          setEnabled(false);
          return activeInstance;
        }
        function resetAfterCommit(containerInfo) {
          restoreSelection(selectionInformation);
          setEnabled(eventsEnabled);
          eventsEnabled = null;
          selectionInformation = null;
        }
        function createInstance(type2, props, rootContainerInstance, hostContext, internalInstanceHandle) {
          var parentNamespace;
          {
            var hostContextDev = hostContext;
            validateDOMNesting(type2, null, hostContextDev.ancestorInfo);
            if (typeof props.children === "string" || typeof props.children === "number") {
              var string = "" + props.children;
              var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type2);
              validateDOMNesting(null, string, ownAncestorInfo);
            }
            parentNamespace = hostContextDev.namespace;
          }
          var domElement = createElement5(type2, props, rootContainerInstance, parentNamespace);
          precacheFiberNode(internalInstanceHandle, domElement);
          updateFiberProps(domElement, props);
          return domElement;
        }
        function appendInitialChild(parentInstance, child) {
          parentInstance.appendChild(child);
        }
        function finalizeInitialChildren(domElement, type2, props, rootContainerInstance, hostContext) {
          setInitialProperties(domElement, type2, props, rootContainerInstance);
          switch (type2) {
            case "button":
            case "input":
            case "select":
            case "textarea":
              return !!props.autoFocus;
            case "img":
              return true;
            default:
              return false;
          }
        }
        function prepareUpdate(domElement, type2, oldProps, newProps, rootContainerInstance, hostContext) {
          {
            var hostContextDev = hostContext;
            if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === "string" || typeof newProps.children === "number")) {
              var string = "" + newProps.children;
              var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type2);
              validateDOMNesting(null, string, ownAncestorInfo);
            }
          }
          return diffProperties(domElement, type2, oldProps, newProps);
        }
        function shouldSetTextContent(type2, props) {
          return type2 === "textarea" || type2 === "noscript" || typeof props.children === "string" || typeof props.children === "number" || typeof props.dangerouslySetInnerHTML === "object" && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
        }
        function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
          {
            var hostContextDev = hostContext;
            validateDOMNesting(null, text, hostContextDev.ancestorInfo);
          }
          var textNode = createTextNode(text, rootContainerInstance);
          precacheFiberNode(internalInstanceHandle, textNode);
          return textNode;
        }
        function getCurrentEventPriority() {
          var currentEvent = window.event;
          if (currentEvent === void 0) {
            return DefaultEventPriority;
          }
          return getEventPriority(currentEvent.type);
        }
        var scheduleTimeout = typeof setTimeout === "function" ? setTimeout : void 0;
        var cancelTimeout = typeof clearTimeout === "function" ? clearTimeout : void 0;
        var noTimeout = -1;
        var localPromise = typeof Promise === "function" ? Promise : void 0;
        var scheduleMicrotask = typeof queueMicrotask === "function" ? queueMicrotask : typeof localPromise !== "undefined" ? function(callback) {
          return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
        } : scheduleTimeout;
        function handleErrorInNextTick(error2) {
          setTimeout(function() {
            throw error2;
          });
        }
        function commitMount(domElement, type2, newProps, internalInstanceHandle) {
          switch (type2) {
            case "button":
            case "input":
            case "select":
            case "textarea":
              if (newProps.autoFocus) {
                domElement.focus();
              }
              return;
            case "img": {
              if (newProps.src) {
                domElement.src = newProps.src;
              }
              return;
            }
          }
        }
        function commitUpdate(domElement, updatePayload, type2, oldProps, newProps, internalInstanceHandle) {
          updateProperties(domElement, updatePayload, type2, oldProps, newProps);
          updateFiberProps(domElement, newProps);
        }
        function resetTextContent(domElement) {
          setTextContent(domElement, "");
        }
        function commitTextUpdate(textInstance, oldText, newText) {
          textInstance.nodeValue = newText;
        }
        function appendChild(parentInstance, child) {
          parentInstance.appendChild(child);
        }
        function appendChildToContainer(container2, child) {
          var parentNode;
          if (container2.nodeType === COMMENT_NODE) {
            parentNode = container2.parentNode;
            parentNode.insertBefore(child, container2);
          } else {
            parentNode = container2;
            parentNode.appendChild(child);
          }
          var reactRootContainer = container2._reactRootContainer;
          if ((reactRootContainer === null || reactRootContainer === void 0) && parentNode.onclick === null) {
            trapClickOnNonInteractiveElement(parentNode);
          }
        }
        function insertBefore(parentInstance, child, beforeChild) {
          parentInstance.insertBefore(child, beforeChild);
        }
        function insertInContainerBefore(container2, child, beforeChild) {
          if (container2.nodeType === COMMENT_NODE) {
            container2.parentNode.insertBefore(child, beforeChild);
          } else {
            container2.insertBefore(child, beforeChild);
          }
        }
        function removeChild(parentInstance, child) {
          parentInstance.removeChild(child);
        }
        function removeChildFromContainer(container2, child) {
          if (container2.nodeType === COMMENT_NODE) {
            container2.parentNode.removeChild(child);
          } else {
            container2.removeChild(child);
          }
        }
        function clearSuspenseBoundary(parentInstance, suspenseInstance) {
          var node = suspenseInstance;
          var depth = 0;
          do {
            var nextNode = node.nextSibling;
            parentInstance.removeChild(node);
            if (nextNode && nextNode.nodeType === COMMENT_NODE) {
              var data = nextNode.data;
              if (data === SUSPENSE_END_DATA) {
                if (depth === 0) {
                  parentInstance.removeChild(nextNode);
                  retryIfBlockedOn(suspenseInstance);
                  return;
                } else {
                  depth--;
                }
              } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) {
                depth++;
              }
            }
            node = nextNode;
          } while (node);
          retryIfBlockedOn(suspenseInstance);
        }
        function clearSuspenseBoundaryFromContainer(container2, suspenseInstance) {
          if (container2.nodeType === COMMENT_NODE) {
            clearSuspenseBoundary(container2.parentNode, suspenseInstance);
          } else if (container2.nodeType === ELEMENT_NODE) {
            clearSuspenseBoundary(container2, suspenseInstance);
          }
          retryIfBlockedOn(container2);
        }
        function hideInstance(instance) {
          instance = instance;
          var style2 = instance.style;
          if (typeof style2.setProperty === "function") {
            style2.setProperty("display", "none", "important");
          } else {
            style2.display = "none";
          }
        }
        function hideTextInstance(textInstance) {
          textInstance.nodeValue = "";
        }
        function unhideInstance(instance, props) {
          instance = instance;
          var styleProp = props[STYLE$1];
          var display = styleProp !== void 0 && styleProp !== null && styleProp.hasOwnProperty("display") ? styleProp.display : null;
          instance.style.display = dangerousStyleValue2("display", display);
        }
        function unhideTextInstance(textInstance, text) {
          textInstance.nodeValue = text;
        }
        function clearContainer(container2) {
          if (container2.nodeType === ELEMENT_NODE) {
            container2.textContent = "";
          } else if (container2.nodeType === DOCUMENT_NODE) {
            if (container2.documentElement) {
              container2.removeChild(container2.documentElement);
            }
          }
        }
        function canHydrateInstance(instance, type2, props) {
          if (instance.nodeType !== ELEMENT_NODE || type2.toLowerCase() !== instance.nodeName.toLowerCase()) {
            return null;
          }
          return instance;
        }
        function canHydrateTextInstance(instance, text) {
          if (text === "" || instance.nodeType !== TEXT_NODE) {
            return null;
          }
          return instance;
        }
        function canHydrateSuspenseInstance(instance) {
          if (instance.nodeType !== COMMENT_NODE) {
            return null;
          }
          return instance;
        }
        function isSuspenseInstancePending(instance) {
          return instance.data === SUSPENSE_PENDING_START_DATA;
        }
        function isSuspenseInstanceFallback(instance) {
          return instance.data === SUSPENSE_FALLBACK_START_DATA;
        }
        function getSuspenseInstanceFallbackErrorDetails(instance) {
          var dataset = instance.nextSibling && instance.nextSibling.dataset;
          var digest, message, stack;
          if (dataset) {
            digest = dataset.dgst;
            {
              message = dataset.msg;
              stack = dataset.stck;
            }
          }
          {
            return {
              message,
              digest,
              stack
            };
          }
        }
        function registerSuspenseInstanceRetry(instance, callback) {
          instance._reactRetry = callback;
        }
        function getNextHydratable(node) {
          for (; node != null; node = node.nextSibling) {
            var nodeType = node.nodeType;
            if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
              break;
            }
            if (nodeType === COMMENT_NODE) {
              var nodeData = node.data;
              if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) {
                break;
              }
              if (nodeData === SUSPENSE_END_DATA) {
                return null;
              }
            }
          }
          return node;
        }
        function getNextHydratableSibling(instance) {
          return getNextHydratable(instance.nextSibling);
        }
        function getFirstHydratableChild(parentInstance) {
          return getNextHydratable(parentInstance.firstChild);
        }
        function getFirstHydratableChildWithinContainer(parentContainer) {
          return getNextHydratable(parentContainer.firstChild);
        }
        function getFirstHydratableChildWithinSuspenseInstance(parentInstance) {
          return getNextHydratable(parentInstance.nextSibling);
        }
        function hydrateInstance(instance, type2, props, rootContainerInstance, hostContext, internalInstanceHandle, shouldWarnDev) {
          precacheFiberNode(internalInstanceHandle, instance);
          updateFiberProps(instance, props);
          var parentNamespace;
          {
            var hostContextDev = hostContext;
            parentNamespace = hostContextDev.namespace;
          }
          var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
          return diffHydratedProperties(instance, type2, props, parentNamespace, rootContainerInstance, isConcurrentMode, shouldWarnDev);
        }
        function hydrateTextInstance(textInstance, text, internalInstanceHandle, shouldWarnDev) {
          precacheFiberNode(internalInstanceHandle, textInstance);
          var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
          return diffHydratedText(textInstance, text);
        }
        function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
          precacheFiberNode(internalInstanceHandle, suspenseInstance);
        }
        function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
          var node = suspenseInstance.nextSibling;
          var depth = 0;
          while (node) {
            if (node.nodeType === COMMENT_NODE) {
              var data = node.data;
              if (data === SUSPENSE_END_DATA) {
                if (depth === 0) {
                  return getNextHydratableSibling(node);
                } else {
                  depth--;
                }
              } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                depth++;
              }
            }
            node = node.nextSibling;
          }
          return null;
        }
        function getParentSuspenseInstance(targetInstance) {
          var node = targetInstance.previousSibling;
          var depth = 0;
          while (node) {
            if (node.nodeType === COMMENT_NODE) {
              var data = node.data;
              if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                if (depth === 0) {
                  return node;
                } else {
                  depth--;
                }
              } else if (data === SUSPENSE_END_DATA) {
                depth++;
              }
            }
            node = node.previousSibling;
          }
          return null;
        }
        function commitHydratedContainer(container2) {
          retryIfBlockedOn(container2);
        }
        function commitHydratedSuspenseInstance(suspenseInstance) {
          retryIfBlockedOn(suspenseInstance);
        }
        function shouldDeleteUnhydratedTailInstances(parentType) {
          return parentType !== "head" && parentType !== "body";
        }
        function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text, isConcurrentMode) {
          var shouldWarnDev = true;
          checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
        }
        function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text, isConcurrentMode) {
          if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            var shouldWarnDev = true;
            checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
          }
        }
        function didNotHydrateInstanceWithinContainer(parentContainer, instance) {
          {
            if (instance.nodeType === ELEMENT_NODE) {
              warnForDeletedHydratableElement(parentContainer, instance);
            } else if (instance.nodeType === COMMENT_NODE)
              ;
            else {
              warnForDeletedHydratableText(parentContainer, instance);
            }
          }
        }
        function didNotHydrateInstanceWithinSuspenseInstance(parentInstance, instance) {
          {
            var parentNode = parentInstance.parentNode;
            if (parentNode !== null) {
              if (instance.nodeType === ELEMENT_NODE) {
                warnForDeletedHydratableElement(parentNode, instance);
              } else if (instance.nodeType === COMMENT_NODE)
                ;
              else {
                warnForDeletedHydratableText(parentNode, instance);
              }
            }
          }
        }
        function didNotHydrateInstance(parentType, parentProps, parentInstance, instance, isConcurrentMode) {
          {
            if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
              if (instance.nodeType === ELEMENT_NODE) {
                warnForDeletedHydratableElement(parentInstance, instance);
              } else if (instance.nodeType === COMMENT_NODE)
                ;
              else {
                warnForDeletedHydratableText(parentInstance, instance);
              }
            }
          }
        }
        function didNotFindHydratableInstanceWithinContainer(parentContainer, type2, props) {
          {
            warnForInsertedHydratedElement(parentContainer, type2);
          }
        }
        function didNotFindHydratableTextInstanceWithinContainer(parentContainer, text) {
          {
            warnForInsertedHydratedText(parentContainer, text);
          }
        }
        function didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance, type2, props) {
          {
            var parentNode = parentInstance.parentNode;
            if (parentNode !== null)
              warnForInsertedHydratedElement(parentNode, type2);
          }
        }
        function didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance, text) {
          {
            var parentNode = parentInstance.parentNode;
            if (parentNode !== null)
              warnForInsertedHydratedText(parentNode, text);
          }
        }
        function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type2, props, isConcurrentMode) {
          {
            if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
              warnForInsertedHydratedElement(parentInstance, type2);
            }
          }
        }
        function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text, isConcurrentMode) {
          {
            if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
              warnForInsertedHydratedText(parentInstance, text);
            }
          }
        }
        function errorHydratingContainer(parentContainer) {
          {
            error("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", parentContainer.nodeName.toLowerCase());
          }
        }
        function preparePortalMount(portalInstance) {
          listenToAllSupportedEvents(portalInstance);
        }
        var randomKey = Math.random().toString(36).slice(2);
        var internalInstanceKey = "__reactFiber$" + randomKey;
        var internalPropsKey = "__reactProps$" + randomKey;
        var internalContainerInstanceKey = "__reactContainer$" + randomKey;
        var internalEventHandlersKey = "__reactEvents$" + randomKey;
        var internalEventHandlerListenersKey = "__reactListeners$" + randomKey;
        var internalEventHandlesSetKey = "__reactHandles$" + randomKey;
        function detachDeletedInstance(node) {
          delete node[internalInstanceKey];
          delete node[internalPropsKey];
          delete node[internalEventHandlersKey];
          delete node[internalEventHandlerListenersKey];
          delete node[internalEventHandlesSetKey];
        }
        function precacheFiberNode(hostInst, node) {
          node[internalInstanceKey] = hostInst;
        }
        function markContainerAsRoot(hostRoot, node) {
          node[internalContainerInstanceKey] = hostRoot;
        }
        function unmarkContainerAsRoot(node) {
          node[internalContainerInstanceKey] = null;
        }
        function isContainerMarkedAsRoot(node) {
          return !!node[internalContainerInstanceKey];
        }
        function getClosestInstanceFromNode(targetNode) {
          var targetInst = targetNode[internalInstanceKey];
          if (targetInst) {
            return targetInst;
          }
          var parentNode = targetNode.parentNode;
          while (parentNode) {
            targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];
            if (targetInst) {
              var alternate = targetInst.alternate;
              if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
                var suspenseInstance = getParentSuspenseInstance(targetNode);
                while (suspenseInstance !== null) {
                  var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                  if (targetSuspenseInst) {
                    return targetSuspenseInst;
                  }
                  suspenseInstance = getParentSuspenseInstance(suspenseInstance);
                }
              }
              return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
          }
          return null;
        }
        function getInstanceFromNode(node) {
          var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];
          if (inst) {
            if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
              return inst;
            } else {
              return null;
            }
          }
          return null;
        }
        function getNodeFromInstance(inst) {
          if (inst.tag === HostComponent || inst.tag === HostText) {
            return inst.stateNode;
          }
          throw new Error("getNodeFromInstance: Invalid argument.");
        }
        function getFiberCurrentPropsFromNode(node) {
          return node[internalPropsKey] || null;
        }
        function updateFiberProps(node, props) {
          node[internalPropsKey] = props;
        }
        function getEventListenerSet(node) {
          var elementListenerSet = node[internalEventHandlersKey];
          if (elementListenerSet === void 0) {
            elementListenerSet = node[internalEventHandlersKey] = new Set();
          }
          return elementListenerSet;
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has2 = Function.call.bind(hasOwnProperty2);
            for (var typeSpecName in typeSpecs) {
              if (has2(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var valueStack = [];
        var fiberStack;
        {
          fiberStack = [];
        }
        var index = -1;
        function createCursor(defaultValue) {
          return {
            current: defaultValue
          };
        }
        function pop(cursor, fiber) {
          if (index < 0) {
            {
              error("Unexpected pop.");
            }
            return;
          }
          {
            if (fiber !== fiberStack[index]) {
              error("Unexpected Fiber popped.");
            }
          }
          cursor.current = valueStack[index];
          valueStack[index] = null;
          {
            fiberStack[index] = null;
          }
          index--;
        }
        function push(cursor, value, fiber) {
          index++;
          valueStack[index] = cursor.current;
          {
            fiberStack[index] = fiber;
          }
          cursor.current = value;
        }
        var warnedAboutMissingGetChildContext;
        {
          warnedAboutMissingGetChildContext = {};
        }
        var emptyContextObject = {};
        {
          Object.freeze(emptyContextObject);
        }
        var contextStackCursor = createCursor(emptyContextObject);
        var didPerformWorkStackCursor = createCursor(false);
        var previousContext = emptyContextObject;
        function getUnmaskedContext(workInProgress2, Component, didPushOwnContextIfProvider) {
          {
            if (didPushOwnContextIfProvider && isContextProvider(Component)) {
              return previousContext;
            }
            return contextStackCursor.current;
          }
        }
        function cacheContext(workInProgress2, unmaskedContext, maskedContext) {
          {
            var instance = workInProgress2.stateNode;
            instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
            instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
          }
        }
        function getMaskedContext(workInProgress2, unmaskedContext) {
          {
            var type2 = workInProgress2.type;
            var contextTypes = type2.contextTypes;
            if (!contextTypes) {
              return emptyContextObject;
            }
            var instance = workInProgress2.stateNode;
            if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
              return instance.__reactInternalMemoizedMaskedChildContext;
            }
            var context = {};
            for (var key in contextTypes) {
              context[key] = unmaskedContext[key];
            }
            {
              var name = getComponentNameFromFiber(workInProgress2) || "Unknown";
              checkPropTypes(contextTypes, context, "context", name);
            }
            if (instance) {
              cacheContext(workInProgress2, unmaskedContext, context);
            }
            return context;
          }
        }
        function hasContextChanged() {
          {
            return didPerformWorkStackCursor.current;
          }
        }
        function isContextProvider(type2) {
          {
            var childContextTypes = type2.childContextTypes;
            return childContextTypes !== null && childContextTypes !== void 0;
          }
        }
        function popContext(fiber) {
          {
            pop(didPerformWorkStackCursor, fiber);
            pop(contextStackCursor, fiber);
          }
        }
        function popTopLevelContextObject(fiber) {
          {
            pop(didPerformWorkStackCursor, fiber);
            pop(contextStackCursor, fiber);
          }
        }
        function pushTopLevelContextObject(fiber, context, didChange) {
          {
            if (contextStackCursor.current !== emptyContextObject) {
              throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
            }
            push(contextStackCursor, context, fiber);
            push(didPerformWorkStackCursor, didChange, fiber);
          }
        }
        function processChildContext(fiber, type2, parentContext) {
          {
            var instance = fiber.stateNode;
            var childContextTypes = type2.childContextTypes;
            if (typeof instance.getChildContext !== "function") {
              {
                var componentName = getComponentNameFromFiber(fiber) || "Unknown";
                if (!warnedAboutMissingGetChildContext[componentName]) {
                  warnedAboutMissingGetChildContext[componentName] = true;
                  error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
                }
              }
              return parentContext;
            }
            var childContext = instance.getChildContext();
            for (var contextKey in childContext) {
              if (!(contextKey in childContextTypes)) {
                throw new Error((getComponentNameFromFiber(fiber) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
              }
            }
            {
              var name = getComponentNameFromFiber(fiber) || "Unknown";
              checkPropTypes(childContextTypes, childContext, "child context", name);
            }
            return assign3({}, parentContext, childContext);
          }
        }
        function pushContextProvider(workInProgress2) {
          {
            var instance = workInProgress2.stateNode;
            var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
            previousContext = contextStackCursor.current;
            push(contextStackCursor, memoizedMergedChildContext, workInProgress2);
            push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress2);
            return true;
          }
        }
        function invalidateContextProvider(workInProgress2, type2, didChange) {
          {
            var instance = workInProgress2.stateNode;
            if (!instance) {
              throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
            }
            if (didChange) {
              var mergedContext = processChildContext(workInProgress2, type2, previousContext);
              instance.__reactInternalMemoizedMergedChildContext = mergedContext;
              pop(didPerformWorkStackCursor, workInProgress2);
              pop(contextStackCursor, workInProgress2);
              push(contextStackCursor, mergedContext, workInProgress2);
              push(didPerformWorkStackCursor, didChange, workInProgress2);
            } else {
              pop(didPerformWorkStackCursor, workInProgress2);
              push(didPerformWorkStackCursor, didChange, workInProgress2);
            }
          }
        }
        function findCurrentUnmaskedContext(fiber) {
          {
            if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {
              throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
            }
            var node = fiber;
            do {
              switch (node.tag) {
                case HostRoot:
                  return node.stateNode.context;
                case ClassComponent: {
                  var Component = node.type;
                  if (isContextProvider(Component)) {
                    return node.stateNode.__reactInternalMemoizedMergedChildContext;
                  }
                  break;
                }
              }
              node = node.return;
            } while (node !== null);
            throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
        var LegacyRoot = 0;
        var ConcurrentRoot = 1;
        var syncQueue = null;
        var includesLegacySyncCallbacks = false;
        var isFlushingSyncQueue = false;
        function scheduleSyncCallback(callback) {
          if (syncQueue === null) {
            syncQueue = [callback];
          } else {
            syncQueue.push(callback);
          }
        }
        function scheduleLegacySyncCallback(callback) {
          includesLegacySyncCallbacks = true;
          scheduleSyncCallback(callback);
        }
        function flushSyncCallbacksOnlyInLegacyMode() {
          if (includesLegacySyncCallbacks) {
            flushSyncCallbacks();
          }
        }
        function flushSyncCallbacks() {
          if (!isFlushingSyncQueue && syncQueue !== null) {
            isFlushingSyncQueue = true;
            var i9 = 0;
            var previousUpdatePriority = getCurrentUpdatePriority();
            try {
              var isSync = true;
              var queue = syncQueue;
              setCurrentUpdatePriority(DiscreteEventPriority);
              for (; i9 < queue.length; i9++) {
                var callback = queue[i9];
                do {
                  callback = callback(isSync);
                } while (callback !== null);
              }
              syncQueue = null;
              includesLegacySyncCallbacks = false;
            } catch (error2) {
              if (syncQueue !== null) {
                syncQueue = syncQueue.slice(i9 + 1);
              }
              scheduleCallback(ImmediatePriority, flushSyncCallbacks);
              throw error2;
            } finally {
              setCurrentUpdatePriority(previousUpdatePriority);
              isFlushingSyncQueue = false;
            }
          }
          return null;
        }
        var forkStack = [];
        var forkStackIndex = 0;
        var treeForkProvider = null;
        var treeForkCount = 0;
        var idStack = [];
        var idStackIndex = 0;
        var treeContextProvider = null;
        var treeContextId = 1;
        var treeContextOverflow = "";
        function isForkedChild(workInProgress2) {
          warnIfNotHydrating();
          return (workInProgress2.flags & Forked) !== NoFlags;
        }
        function getForksAtLevel(workInProgress2) {
          warnIfNotHydrating();
          return treeForkCount;
        }
        function getTreeId() {
          var overflow = treeContextOverflow;
          var idWithLeadingBit = treeContextId;
          var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
          return id.toString(32) + overflow;
        }
        function pushTreeFork(workInProgress2, totalChildren) {
          warnIfNotHydrating();
          forkStack[forkStackIndex++] = treeForkCount;
          forkStack[forkStackIndex++] = treeForkProvider;
          treeForkProvider = workInProgress2;
          treeForkCount = totalChildren;
        }
        function pushTreeId(workInProgress2, totalChildren, index2) {
          warnIfNotHydrating();
          idStack[idStackIndex++] = treeContextId;
          idStack[idStackIndex++] = treeContextOverflow;
          idStack[idStackIndex++] = treeContextProvider;
          treeContextProvider = workInProgress2;
          var baseIdWithLeadingBit = treeContextId;
          var baseOverflow = treeContextOverflow;
          var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
          var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
          var slot = index2 + 1;
          var length = getBitLength(totalChildren) + baseLength;
          if (length > 30) {
            var numberOfOverflowBits = baseLength - baseLength % 5;
            var newOverflowBits = (1 << numberOfOverflowBits) - 1;
            var newOverflow = (baseId & newOverflowBits).toString(32);
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits;
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            treeContextId = 1 << restOfLength | id;
            treeContextOverflow = overflow;
          } else {
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            treeContextId = 1 << length | _id;
            treeContextOverflow = _overflow;
          }
        }
        function pushMaterializedTreeId(workInProgress2) {
          warnIfNotHydrating();
          var returnFiber = workInProgress2.return;
          if (returnFiber !== null) {
            var numberOfForks = 1;
            var slotIndex = 0;
            pushTreeFork(workInProgress2, numberOfForks);
            pushTreeId(workInProgress2, numberOfForks, slotIndex);
          }
        }
        function getBitLength(number3) {
          return 32 - clz32(number3);
        }
        function getLeadingBit(id) {
          return 1 << getBitLength(id) - 1;
        }
        function popTreeContext(workInProgress2) {
          while (workInProgress2 === treeForkProvider) {
            treeForkProvider = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
            treeForkCount = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
          }
          while (workInProgress2 === treeContextProvider) {
            treeContextProvider = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextOverflow = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextId = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
          }
        }
        function getSuspendedTreeContext() {
          warnIfNotHydrating();
          if (treeContextProvider !== null) {
            return {
              id: treeContextId,
              overflow: treeContextOverflow
            };
          } else {
            return null;
          }
        }
        function restoreSuspendedTreeContext(workInProgress2, suspendedContext) {
          warnIfNotHydrating();
          idStack[idStackIndex++] = treeContextId;
          idStack[idStackIndex++] = treeContextOverflow;
          idStack[idStackIndex++] = treeContextProvider;
          treeContextId = suspendedContext.id;
          treeContextOverflow = suspendedContext.overflow;
          treeContextProvider = workInProgress2;
        }
        function warnIfNotHydrating() {
          {
            if (!getIsHydrating()) {
              error("Expected to be hydrating. This is a bug in React. Please file an issue.");
            }
          }
        }
        var hydrationParentFiber = null;
        var nextHydratableInstance = null;
        var isHydrating = false;
        var didSuspendOrErrorDEV = false;
        var hydrationErrors = null;
        function warnIfHydrating() {
          {
            if (isHydrating) {
              error("We should not be hydrating here. This is a bug in React. Please file a bug.");
            }
          }
        }
        function markDidThrowWhileHydratingDEV() {
          {
            didSuspendOrErrorDEV = true;
          }
        }
        function didSuspendOrErrorWhileHydratingDEV() {
          {
            return didSuspendOrErrorDEV;
          }
        }
        function enterHydrationState(fiber) {
          var parentInstance = fiber.stateNode.containerInfo;
          nextHydratableInstance = getFirstHydratableChildWithinContainer(parentInstance);
          hydrationParentFiber = fiber;
          isHydrating = true;
          hydrationErrors = null;
          didSuspendOrErrorDEV = false;
          return true;
        }
        function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {
          nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);
          hydrationParentFiber = fiber;
          isHydrating = true;
          hydrationErrors = null;
          didSuspendOrErrorDEV = false;
          if (treeContext !== null) {
            restoreSuspendedTreeContext(fiber, treeContext);
          }
          return true;
        }
        function warnUnhydratedInstance(returnFiber, instance) {
          {
            switch (returnFiber.tag) {
              case HostRoot: {
                didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo, instance);
                break;
              }
              case HostComponent: {
                var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance, isConcurrentMode);
                break;
              }
              case SuspenseComponent: {
                var suspenseState = returnFiber.memoizedState;
                if (suspenseState.dehydrated !== null)
                  didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated, instance);
                break;
              }
            }
          }
        }
        function deleteHydratableInstance(returnFiber, instance) {
          warnUnhydratedInstance(returnFiber, instance);
          var childToDelete = createFiberFromHostInstanceForDeletion();
          childToDelete.stateNode = instance;
          childToDelete.return = returnFiber;
          var deletions = returnFiber.deletions;
          if (deletions === null) {
            returnFiber.deletions = [childToDelete];
            returnFiber.flags |= ChildDeletion;
          } else {
            deletions.push(childToDelete);
          }
        }
        function warnNonhydratedInstance(returnFiber, fiber) {
          {
            if (didSuspendOrErrorDEV) {
              return;
            }
            switch (returnFiber.tag) {
              case HostRoot: {
                var parentContainer = returnFiber.stateNode.containerInfo;
                switch (fiber.tag) {
                  case HostComponent:
                    var type2 = fiber.type;
                    var props = fiber.pendingProps;
                    didNotFindHydratableInstanceWithinContainer(parentContainer, type2);
                    break;
                  case HostText:
                    var text = fiber.pendingProps;
                    didNotFindHydratableTextInstanceWithinContainer(parentContainer, text);
                    break;
                }
                break;
              }
              case HostComponent: {
                var parentType = returnFiber.type;
                var parentProps = returnFiber.memoizedProps;
                var parentInstance = returnFiber.stateNode;
                switch (fiber.tag) {
                  case HostComponent: {
                    var _type = fiber.type;
                    var _props = fiber.pendingProps;
                    var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props, isConcurrentMode);
                    break;
                  }
                  case HostText: {
                    var _text = fiber.pendingProps;
                    var _isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text, _isConcurrentMode);
                    break;
                  }
                }
                break;
              }
              case SuspenseComponent: {
                var suspenseState = returnFiber.memoizedState;
                var _parentInstance = suspenseState.dehydrated;
                if (_parentInstance !== null)
                  switch (fiber.tag) {
                    case HostComponent:
                      var _type2 = fiber.type;
                      var _props2 = fiber.pendingProps;
                      didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance, _type2);
                      break;
                    case HostText:
                      var _text2 = fiber.pendingProps;
                      didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance, _text2);
                      break;
                  }
                break;
              }
              default:
                return;
            }
          }
        }
        function insertNonHydratedInstance(returnFiber, fiber) {
          fiber.flags = fiber.flags & ~Hydrating | Placement;
          warnNonhydratedInstance(returnFiber, fiber);
        }
        function tryHydrate(fiber, nextInstance) {
          switch (fiber.tag) {
            case HostComponent: {
              var type2 = fiber.type;
              var props = fiber.pendingProps;
              var instance = canHydrateInstance(nextInstance, type2);
              if (instance !== null) {
                fiber.stateNode = instance;
                hydrationParentFiber = fiber;
                nextHydratableInstance = getFirstHydratableChild(instance);
                return true;
              }
              return false;
            }
            case HostText: {
              var text = fiber.pendingProps;
              var textInstance = canHydrateTextInstance(nextInstance, text);
              if (textInstance !== null) {
                fiber.stateNode = textInstance;
                hydrationParentFiber = fiber;
                nextHydratableInstance = null;
                return true;
              }
              return false;
            }
            case SuspenseComponent: {
              var suspenseInstance = canHydrateSuspenseInstance(nextInstance);
              if (suspenseInstance !== null) {
                var suspenseState = {
                  dehydrated: suspenseInstance,
                  treeContext: getSuspendedTreeContext(),
                  retryLane: OffscreenLane
                };
                fiber.memoizedState = suspenseState;
                var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
                dehydratedFragment.return = fiber;
                fiber.child = dehydratedFragment;
                hydrationParentFiber = fiber;
                nextHydratableInstance = null;
                return true;
              }
              return false;
            }
            default:
              return false;
          }
        }
        function shouldClientRenderOnMismatch(fiber) {
          return (fiber.mode & ConcurrentMode) !== NoMode && (fiber.flags & DidCapture) === NoFlags;
        }
        function throwOnHydrationMismatch(fiber) {
          throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
        }
        function tryToClaimNextHydratableInstance(fiber) {
          if (!isHydrating) {
            return;
          }
          var nextInstance = nextHydratableInstance;
          if (!nextInstance) {
            if (shouldClientRenderOnMismatch(fiber)) {
              warnNonhydratedInstance(hydrationParentFiber, fiber);
              throwOnHydrationMismatch();
            }
            insertNonHydratedInstance(hydrationParentFiber, fiber);
            isHydrating = false;
            hydrationParentFiber = fiber;
            return;
          }
          var firstAttemptedInstance = nextInstance;
          if (!tryHydrate(fiber, nextInstance)) {
            if (shouldClientRenderOnMismatch(fiber)) {
              warnNonhydratedInstance(hydrationParentFiber, fiber);
              throwOnHydrationMismatch();
            }
            nextInstance = getNextHydratableSibling(firstAttemptedInstance);
            var prevHydrationParentFiber = hydrationParentFiber;
            if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
              insertNonHydratedInstance(hydrationParentFiber, fiber);
              isHydrating = false;
              hydrationParentFiber = fiber;
              return;
            }
            deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);
          }
        }
        function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
          var instance = fiber.stateNode;
          var shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;
          var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber, shouldWarnIfMismatchDev);
          fiber.updateQueue = updatePayload;
          if (updatePayload !== null) {
            return true;
          }
          return false;
        }
        function prepareToHydrateHostTextInstance(fiber) {
          var textInstance = fiber.stateNode;
          var textContent = fiber.memoizedProps;
          var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
          if (shouldUpdate) {
            var returnFiber = hydrationParentFiber;
            if (returnFiber !== null) {
              switch (returnFiber.tag) {
                case HostRoot: {
                  var parentContainer = returnFiber.stateNode.containerInfo;
                  var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                  didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent, isConcurrentMode);
                  break;
                }
                case HostComponent: {
                  var parentType = returnFiber.type;
                  var parentProps = returnFiber.memoizedProps;
                  var parentInstance = returnFiber.stateNode;
                  var _isConcurrentMode2 = (returnFiber.mode & ConcurrentMode) !== NoMode;
                  didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent, _isConcurrentMode2);
                  break;
                }
              }
            }
          }
          return shouldUpdate;
        }
        function prepareToHydrateHostSuspenseInstance(fiber) {
          var suspenseState = fiber.memoizedState;
          var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
          if (!suspenseInstance) {
            throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
          }
          hydrateSuspenseInstance(suspenseInstance, fiber);
        }
        function skipPastDehydratedSuspenseInstance(fiber) {
          var suspenseState = fiber.memoizedState;
          var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
          if (!suspenseInstance) {
            throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
          }
          return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
        }
        function popToNextHostParent(fiber) {
          var parent = fiber.return;
          while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
            parent = parent.return;
          }
          hydrationParentFiber = parent;
        }
        function popHydrationState(fiber) {
          if (fiber !== hydrationParentFiber) {
            return false;
          }
          if (!isHydrating) {
            popToNextHostParent(fiber);
            isHydrating = true;
            return false;
          }
          if (fiber.tag !== HostRoot && (fiber.tag !== HostComponent || shouldDeleteUnhydratedTailInstances(fiber.type) && !shouldSetTextContent(fiber.type, fiber.memoizedProps))) {
            var nextInstance = nextHydratableInstance;
            if (nextInstance) {
              if (shouldClientRenderOnMismatch(fiber)) {
                warnIfUnhydratedTailNodes(fiber);
                throwOnHydrationMismatch();
              } else {
                while (nextInstance) {
                  deleteHydratableInstance(fiber, nextInstance);
                  nextInstance = getNextHydratableSibling(nextInstance);
                }
              }
            }
          }
          popToNextHostParent(fiber);
          if (fiber.tag === SuspenseComponent) {
            nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
          } else {
            nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
          }
          return true;
        }
        function hasUnhydratedTailNodes() {
          return isHydrating && nextHydratableInstance !== null;
        }
        function warnIfUnhydratedTailNodes(fiber) {
          var nextInstance = nextHydratableInstance;
          while (nextInstance) {
            warnUnhydratedInstance(fiber, nextInstance);
            nextInstance = getNextHydratableSibling(nextInstance);
          }
        }
        function resetHydrationState() {
          hydrationParentFiber = null;
          nextHydratableInstance = null;
          isHydrating = false;
          didSuspendOrErrorDEV = false;
        }
        function upgradeHydrationErrorsToRecoverable() {
          if (hydrationErrors !== null) {
            queueRecoverableErrors(hydrationErrors);
            hydrationErrors = null;
          }
        }
        function getIsHydrating() {
          return isHydrating;
        }
        function queueHydrationError(error2) {
          if (hydrationErrors === null) {
            hydrationErrors = [error2];
          } else {
            hydrationErrors.push(error2);
          }
        }
        var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
        var NoTransition = null;
        function requestCurrentTransition() {
          return ReactCurrentBatchConfig$1.transition;
        }
        var ReactStrictModeWarnings = {
          recordUnsafeLifecycleWarnings: function(fiber, instance) {
          },
          flushPendingUnsafeLifecycleWarnings: function() {
          },
          recordLegacyContextWarning: function(fiber, instance) {
          },
          flushLegacyContextWarning: function() {
          },
          discardPendingWarnings: function() {
          }
        };
        {
          var findStrictRoot = function(fiber) {
            var maybeStrictRoot = null;
            var node = fiber;
            while (node !== null) {
              if (node.mode & StrictLegacyMode) {
                maybeStrictRoot = node;
              }
              node = node.return;
            }
            return maybeStrictRoot;
          };
          var setToSortedString = function(set2) {
            var array2 = [];
            set2.forEach(function(value) {
              array2.push(value);
            });
            return array2.sort().join(", ");
          };
          var pendingComponentWillMountWarnings = [];
          var pendingUNSAFE_ComponentWillMountWarnings = [];
          var pendingComponentWillReceivePropsWarnings = [];
          var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
          var pendingComponentWillUpdateWarnings = [];
          var pendingUNSAFE_ComponentWillUpdateWarnings = [];
          var didWarnAboutUnsafeLifecycles = new Set();
          ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
            if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
              return;
            }
            if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
              pendingComponentWillMountWarnings.push(fiber);
            }
            if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === "function") {
              pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
            }
            if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
              pendingComponentWillReceivePropsWarnings.push(fiber);
            }
            if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === "function") {
              pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
            }
            if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
              pendingComponentWillUpdateWarnings.push(fiber);
            }
            if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === "function") {
              pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
            }
          };
          ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
            var componentWillMountUniqueNames = new Set();
            if (pendingComponentWillMountWarnings.length > 0) {
              pendingComponentWillMountWarnings.forEach(function(fiber) {
                componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingComponentWillMountWarnings = [];
            }
            var UNSAFE_componentWillMountUniqueNames = new Set();
            if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
              pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingUNSAFE_ComponentWillMountWarnings = [];
            }
            var componentWillReceivePropsUniqueNames = new Set();
            if (pendingComponentWillReceivePropsWarnings.length > 0) {
              pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingComponentWillReceivePropsWarnings = [];
            }
            var UNSAFE_componentWillReceivePropsUniqueNames = new Set();
            if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
              pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
            }
            var componentWillUpdateUniqueNames = new Set();
            if (pendingComponentWillUpdateWarnings.length > 0) {
              pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingComponentWillUpdateWarnings = [];
            }
            var UNSAFE_componentWillUpdateUniqueNames = new Set();
            if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
              pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingUNSAFE_ComponentWillUpdateWarnings = [];
            }
            if (UNSAFE_componentWillMountUniqueNames.size > 0) {
              var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
              error("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
            }
            if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
              var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
              error("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", _sortedNames);
            }
            if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
              var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
              error("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
            }
            if (componentWillMountUniqueNames.size > 0) {
              var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
              warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
            }
            if (componentWillReceivePropsUniqueNames.size > 0) {
              var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
              warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
            }
            if (componentWillUpdateUniqueNames.size > 0) {
              var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
              warn("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
            }
          };
          var pendingLegacyContextWarning = new Map();
          var didWarnAboutLegacyContext = new Set();
          ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
            var strictRoot = findStrictRoot(fiber);
            if (strictRoot === null) {
              error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
              return;
            }
            if (didWarnAboutLegacyContext.has(fiber.type)) {
              return;
            }
            var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
            if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === "function") {
              if (warningsForRoot === void 0) {
                warningsForRoot = [];
                pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
              }
              warningsForRoot.push(fiber);
            }
          };
          ReactStrictModeWarnings.flushLegacyContextWarning = function() {
            pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
              if (fiberArray.length === 0) {
                return;
              }
              var firstFiber = fiberArray[0];
              var uniqueNames = new Set();
              fiberArray.forEach(function(fiber) {
                uniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutLegacyContext.add(fiber.type);
              });
              var sortedNames = setToSortedString(uniqueNames);
              try {
                setCurrentFiber(firstFiber);
                error("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", sortedNames);
              } finally {
                resetCurrentFiber();
              }
            });
          };
          ReactStrictModeWarnings.discardPendingWarnings = function() {
            pendingComponentWillMountWarnings = [];
            pendingUNSAFE_ComponentWillMountWarnings = [];
            pendingComponentWillReceivePropsWarnings = [];
            pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
            pendingComponentWillUpdateWarnings = [];
            pendingUNSAFE_ComponentWillUpdateWarnings = [];
            pendingLegacyContextWarning = new Map();
          };
        }
        function resolveDefaultProps(Component, baseProps) {
          if (Component && Component.defaultProps) {
            var props = assign3({}, baseProps);
            var defaultProps = Component.defaultProps;
            for (var propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
            return props;
          }
          return baseProps;
        }
        var valueCursor = createCursor(null);
        var rendererSigil;
        {
          rendererSigil = {};
        }
        var currentlyRenderingFiber = null;
        var lastContextDependency = null;
        var lastFullyObservedContext = null;
        var isDisallowedContextReadInDEV = false;
        function resetContextDependencies() {
          currentlyRenderingFiber = null;
          lastContextDependency = null;
          lastFullyObservedContext = null;
          {
            isDisallowedContextReadInDEV = false;
          }
        }
        function enterDisallowedContextReadInDEV() {
          {
            isDisallowedContextReadInDEV = true;
          }
        }
        function exitDisallowedContextReadInDEV() {
          {
            isDisallowedContextReadInDEV = false;
          }
        }
        function pushProvider(providerFiber, context, nextValue) {
          {
            push(valueCursor, context._currentValue, providerFiber);
            context._currentValue = nextValue;
            {
              if (context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
                error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context._currentRenderer = rendererSigil;
            }
          }
        }
        function popProvider(context, providerFiber) {
          var currentValue = valueCursor.current;
          pop(valueCursor, providerFiber);
          {
            {
              context._currentValue = currentValue;
            }
          }
        }
        function scheduleContextWorkOnParentPath(parent, renderLanes2, propagationRoot) {
          var node = parent;
          while (node !== null) {
            var alternate = node.alternate;
            if (!isSubsetOfLanes(node.childLanes, renderLanes2)) {
              node.childLanes = mergeLanes(node.childLanes, renderLanes2);
              if (alternate !== null) {
                alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2);
              }
            } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes2)) {
              alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2);
            }
            if (node === propagationRoot) {
              break;
            }
            node = node.return;
          }
          {
            if (node !== propagationRoot) {
              error("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
        }
        function propagateContextChange(workInProgress2, context, renderLanes2) {
          {
            propagateContextChange_eager(workInProgress2, context, renderLanes2);
          }
        }
        function propagateContextChange_eager(workInProgress2, context, renderLanes2) {
          var fiber = workInProgress2.child;
          if (fiber !== null) {
            fiber.return = workInProgress2;
          }
          while (fiber !== null) {
            var nextFiber = void 0;
            var list = fiber.dependencies;
            if (list !== null) {
              nextFiber = fiber.child;
              var dependency = list.firstContext;
              while (dependency !== null) {
                if (dependency.context === context) {
                  if (fiber.tag === ClassComponent) {
                    var lane = pickArbitraryLane(renderLanes2);
                    var update3 = createUpdate2(NoTimestamp, lane);
                    update3.tag = ForceUpdate;
                    var updateQueue2 = fiber.updateQueue;
                    if (updateQueue2 === null)
                      ;
                    else {
                      var sharedQueue = updateQueue2.shared;
                      var pending = sharedQueue.pending;
                      if (pending === null) {
                        update3.next = update3;
                      } else {
                        update3.next = pending.next;
                        pending.next = update3;
                      }
                      sharedQueue.pending = update3;
                    }
                  }
                  fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
                  var alternate = fiber.alternate;
                  if (alternate !== null) {
                    alternate.lanes = mergeLanes(alternate.lanes, renderLanes2);
                  }
                  scheduleContextWorkOnParentPath(fiber.return, renderLanes2, workInProgress2);
                  list.lanes = mergeLanes(list.lanes, renderLanes2);
                  break;
                }
                dependency = dependency.next;
              }
            } else if (fiber.tag === ContextProvider) {
              nextFiber = fiber.type === workInProgress2.type ? null : fiber.child;
            } else if (fiber.tag === DehydratedFragment) {
              var parentSuspense = fiber.return;
              if (parentSuspense === null) {
                throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
              }
              parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes2);
              var _alternate = parentSuspense.alternate;
              if (_alternate !== null) {
                _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes2);
              }
              scheduleContextWorkOnParentPath(parentSuspense, renderLanes2, workInProgress2);
              nextFiber = fiber.sibling;
            } else {
              nextFiber = fiber.child;
            }
            if (nextFiber !== null) {
              nextFiber.return = fiber;
            } else {
              nextFiber = fiber;
              while (nextFiber !== null) {
                if (nextFiber === workInProgress2) {
                  nextFiber = null;
                  break;
                }
                var sibling = nextFiber.sibling;
                if (sibling !== null) {
                  sibling.return = nextFiber.return;
                  nextFiber = sibling;
                  break;
                }
                nextFiber = nextFiber.return;
              }
            }
            fiber = nextFiber;
          }
        }
        function prepareToReadContext(workInProgress2, renderLanes2) {
          currentlyRenderingFiber = workInProgress2;
          lastContextDependency = null;
          lastFullyObservedContext = null;
          var dependencies = workInProgress2.dependencies;
          if (dependencies !== null) {
            {
              var firstContext = dependencies.firstContext;
              if (firstContext !== null) {
                if (includesSomeLane(dependencies.lanes, renderLanes2)) {
                  markWorkInProgressReceivedUpdate();
                }
                dependencies.firstContext = null;
              }
            }
          }
        }
        function readContext(context) {
          {
            if (isDisallowedContextReadInDEV) {
              error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            }
          }
          var value = context._currentValue;
          if (lastFullyObservedContext === context)
            ;
          else {
            var contextItem = {
              context,
              memoizedValue: value,
              next: null
            };
            if (lastContextDependency === null) {
              if (currentlyRenderingFiber === null) {
                throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
              }
              lastContextDependency = contextItem;
              currentlyRenderingFiber.dependencies = {
                lanes: NoLanes,
                firstContext: contextItem
              };
            } else {
              lastContextDependency = lastContextDependency.next = contextItem;
            }
          }
          return value;
        }
        var concurrentQueues = null;
        function pushConcurrentUpdateQueue(queue) {
          if (concurrentQueues === null) {
            concurrentQueues = [queue];
          } else {
            concurrentQueues.push(queue);
          }
        }
        function finishQueueingConcurrentUpdates() {
          if (concurrentQueues !== null) {
            for (var i9 = 0; i9 < concurrentQueues.length; i9++) {
              var queue = concurrentQueues[i9];
              var lastInterleavedUpdate = queue.interleaved;
              if (lastInterleavedUpdate !== null) {
                queue.interleaved = null;
                var firstInterleavedUpdate = lastInterleavedUpdate.next;
                var lastPendingUpdate = queue.pending;
                if (lastPendingUpdate !== null) {
                  var firstPendingUpdate = lastPendingUpdate.next;
                  lastPendingUpdate.next = firstInterleavedUpdate;
                  lastInterleavedUpdate.next = firstPendingUpdate;
                }
                queue.pending = lastInterleavedUpdate;
              }
            }
            concurrentQueues = null;
          }
        }
        function enqueueConcurrentHookUpdate(fiber, queue, update3, lane) {
          var interleaved = queue.interleaved;
          if (interleaved === null) {
            update3.next = update3;
            pushConcurrentUpdateQueue(queue);
          } else {
            update3.next = interleaved.next;
            interleaved.next = update3;
          }
          queue.interleaved = update3;
          return markUpdateLaneFromFiberToRoot(fiber, lane);
        }
        function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update3, lane) {
          var interleaved = queue.interleaved;
          if (interleaved === null) {
            update3.next = update3;
            pushConcurrentUpdateQueue(queue);
          } else {
            update3.next = interleaved.next;
            interleaved.next = update3;
          }
          queue.interleaved = update3;
        }
        function enqueueConcurrentClassUpdate(fiber, queue, update3, lane) {
          var interleaved = queue.interleaved;
          if (interleaved === null) {
            update3.next = update3;
            pushConcurrentUpdateQueue(queue);
          } else {
            update3.next = interleaved.next;
            interleaved.next = update3;
          }
          queue.interleaved = update3;
          return markUpdateLaneFromFiberToRoot(fiber, lane);
        }
        function enqueueConcurrentRenderForLane(fiber, lane) {
          return markUpdateLaneFromFiberToRoot(fiber, lane);
        }
        var unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;
        function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
          var alternate = sourceFiber.alternate;
          if (alternate !== null) {
            alternate.lanes = mergeLanes(alternate.lanes, lane);
          }
          {
            if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {
              warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
            }
          }
          var node = sourceFiber;
          var parent = sourceFiber.return;
          while (parent !== null) {
            parent.childLanes = mergeLanes(parent.childLanes, lane);
            alternate = parent.alternate;
            if (alternate !== null) {
              alternate.childLanes = mergeLanes(alternate.childLanes, lane);
            } else {
              {
                if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {
                  warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
                }
              }
            }
            node = parent;
            parent = parent.return;
          }
          if (node.tag === HostRoot) {
            var root3 = node.stateNode;
            return root3;
          } else {
            return null;
          }
        }
        var UpdateState = 0;
        var ReplaceState = 1;
        var ForceUpdate = 2;
        var CaptureUpdate = 3;
        var hasForceUpdate = false;
        var didWarnUpdateInsideUpdate;
        var currentlyProcessingQueue;
        {
          didWarnUpdateInsideUpdate = false;
          currentlyProcessingQueue = null;
        }
        function initializeUpdateQueue(fiber) {
          var queue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
              pending: null,
              interleaved: null,
              lanes: NoLanes
            },
            effects: null
          };
          fiber.updateQueue = queue;
        }
        function cloneUpdateQueue(current2, workInProgress2) {
          var queue = workInProgress2.updateQueue;
          var currentQueue = current2.updateQueue;
          if (queue === currentQueue) {
            var clone = {
              baseState: currentQueue.baseState,
              firstBaseUpdate: currentQueue.firstBaseUpdate,
              lastBaseUpdate: currentQueue.lastBaseUpdate,
              shared: currentQueue.shared,
              effects: currentQueue.effects
            };
            workInProgress2.updateQueue = clone;
          }
        }
        function createUpdate2(eventTime, lane) {
          var update3 = {
            eventTime,
            lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
          };
          return update3;
        }
        function enqueueUpdate(fiber, update3, lane) {
          var updateQueue2 = fiber.updateQueue;
          if (updateQueue2 === null) {
            return null;
          }
          var sharedQueue = updateQueue2.shared;
          {
            if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
              error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
              didWarnUpdateInsideUpdate = true;
            }
          }
          if (isUnsafeClassRenderPhaseUpdate()) {
            var pending = sharedQueue.pending;
            if (pending === null) {
              update3.next = update3;
            } else {
              update3.next = pending.next;
              pending.next = update3;
            }
            sharedQueue.pending = update3;
            return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);
          } else {
            return enqueueConcurrentClassUpdate(fiber, sharedQueue, update3, lane);
          }
        }
        function entangleTransitions(root3, fiber, lane) {
          var updateQueue2 = fiber.updateQueue;
          if (updateQueue2 === null) {
            return;
          }
          var sharedQueue = updateQueue2.shared;
          if (isTransitionLane(lane)) {
            var queueLanes = sharedQueue.lanes;
            queueLanes = intersectLanes(queueLanes, root3.pendingLanes);
            var newQueueLanes = mergeLanes(queueLanes, lane);
            sharedQueue.lanes = newQueueLanes;
            markRootEntangled(root3, newQueueLanes);
          }
        }
        function enqueueCapturedUpdate(workInProgress2, capturedUpdate) {
          var queue = workInProgress2.updateQueue;
          var current2 = workInProgress2.alternate;
          if (current2 !== null) {
            var currentQueue = current2.updateQueue;
            if (queue === currentQueue) {
              var newFirst = null;
              var newLast = null;
              var firstBaseUpdate = queue.firstBaseUpdate;
              if (firstBaseUpdate !== null) {
                var update3 = firstBaseUpdate;
                do {
                  var clone = {
                    eventTime: update3.eventTime,
                    lane: update3.lane,
                    tag: update3.tag,
                    payload: update3.payload,
                    callback: update3.callback,
                    next: null
                  };
                  if (newLast === null) {
                    newFirst = newLast = clone;
                  } else {
                    newLast.next = clone;
                    newLast = clone;
                  }
                  update3 = update3.next;
                } while (update3 !== null);
                if (newLast === null) {
                  newFirst = newLast = capturedUpdate;
                } else {
                  newLast.next = capturedUpdate;
                  newLast = capturedUpdate;
                }
              } else {
                newFirst = newLast = capturedUpdate;
              }
              queue = {
                baseState: currentQueue.baseState,
                firstBaseUpdate: newFirst,
                lastBaseUpdate: newLast,
                shared: currentQueue.shared,
                effects: currentQueue.effects
              };
              workInProgress2.updateQueue = queue;
              return;
            }
          }
          var lastBaseUpdate = queue.lastBaseUpdate;
          if (lastBaseUpdate === null) {
            queue.firstBaseUpdate = capturedUpdate;
          } else {
            lastBaseUpdate.next = capturedUpdate;
          }
          queue.lastBaseUpdate = capturedUpdate;
        }
        function getStateFromUpdate(workInProgress2, queue, update3, prevState, nextProps, instance) {
          switch (update3.tag) {
            case ReplaceState: {
              var payload = update3.payload;
              if (typeof payload === "function") {
                {
                  enterDisallowedContextReadInDEV();
                }
                var nextState = payload.call(instance, prevState, nextProps);
                {
                  if (workInProgress2.mode & StrictLegacyMode) {
                    setIsStrictModeForDevtools(true);
                    try {
                      payload.call(instance, prevState, nextProps);
                    } finally {
                      setIsStrictModeForDevtools(false);
                    }
                  }
                  exitDisallowedContextReadInDEV();
                }
                return nextState;
              }
              return payload;
            }
            case CaptureUpdate: {
              workInProgress2.flags = workInProgress2.flags & ~ShouldCapture | DidCapture;
            }
            case UpdateState: {
              var _payload = update3.payload;
              var partialState;
              if (typeof _payload === "function") {
                {
                  enterDisallowedContextReadInDEV();
                }
                partialState = _payload.call(instance, prevState, nextProps);
                {
                  if (workInProgress2.mode & StrictLegacyMode) {
                    setIsStrictModeForDevtools(true);
                    try {
                      _payload.call(instance, prevState, nextProps);
                    } finally {
                      setIsStrictModeForDevtools(false);
                    }
                  }
                  exitDisallowedContextReadInDEV();
                }
              } else {
                partialState = _payload;
              }
              if (partialState === null || partialState === void 0) {
                return prevState;
              }
              return assign3({}, prevState, partialState);
            }
            case ForceUpdate: {
              hasForceUpdate = true;
              return prevState;
            }
          }
          return prevState;
        }
        function processUpdateQueue(workInProgress2, props, instance, renderLanes2) {
          var queue = workInProgress2.updateQueue;
          hasForceUpdate = false;
          {
            currentlyProcessingQueue = queue.shared;
          }
          var firstBaseUpdate = queue.firstBaseUpdate;
          var lastBaseUpdate = queue.lastBaseUpdate;
          var pendingQueue = queue.shared.pending;
          if (pendingQueue !== null) {
            queue.shared.pending = null;
            var lastPendingUpdate = pendingQueue;
            var firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null;
            if (lastBaseUpdate === null) {
              firstBaseUpdate = firstPendingUpdate;
            } else {
              lastBaseUpdate.next = firstPendingUpdate;
            }
            lastBaseUpdate = lastPendingUpdate;
            var current2 = workInProgress2.alternate;
            if (current2 !== null) {
              var currentQueue = current2.updateQueue;
              var currentLastBaseUpdate = currentQueue.lastBaseUpdate;
              if (currentLastBaseUpdate !== lastBaseUpdate) {
                if (currentLastBaseUpdate === null) {
                  currentQueue.firstBaseUpdate = firstPendingUpdate;
                } else {
                  currentLastBaseUpdate.next = firstPendingUpdate;
                }
                currentQueue.lastBaseUpdate = lastPendingUpdate;
              }
            }
          }
          if (firstBaseUpdate !== null) {
            var newState = queue.baseState;
            var newLanes = NoLanes;
            var newBaseState = null;
            var newFirstBaseUpdate = null;
            var newLastBaseUpdate = null;
            var update3 = firstBaseUpdate;
            do {
              var updateLane = update3.lane;
              var updateEventTime = update3.eventTime;
              if (!isSubsetOfLanes(renderLanes2, updateLane)) {
                var clone = {
                  eventTime: updateEventTime,
                  lane: updateLane,
                  tag: update3.tag,
                  payload: update3.payload,
                  callback: update3.callback,
                  next: null
                };
                if (newLastBaseUpdate === null) {
                  newFirstBaseUpdate = newLastBaseUpdate = clone;
                  newBaseState = newState;
                } else {
                  newLastBaseUpdate = newLastBaseUpdate.next = clone;
                }
                newLanes = mergeLanes(newLanes, updateLane);
              } else {
                if (newLastBaseUpdate !== null) {
                  var _clone2 = {
                    eventTime: updateEventTime,
                    lane: NoLane,
                    tag: update3.tag,
                    payload: update3.payload,
                    callback: update3.callback,
                    next: null
                  };
                  newLastBaseUpdate = newLastBaseUpdate.next = _clone2;
                }
                newState = getStateFromUpdate(workInProgress2, queue, update3, newState, props, instance);
                var callback = update3.callback;
                if (callback !== null && update3.lane !== NoLane) {
                  workInProgress2.flags |= Callback;
                  var effects = queue.effects;
                  if (effects === null) {
                    queue.effects = [update3];
                  } else {
                    effects.push(update3);
                  }
                }
              }
              update3 = update3.next;
              if (update3 === null) {
                pendingQueue = queue.shared.pending;
                if (pendingQueue === null) {
                  break;
                } else {
                  var _lastPendingUpdate = pendingQueue;
                  var _firstPendingUpdate = _lastPendingUpdate.next;
                  _lastPendingUpdate.next = null;
                  update3 = _firstPendingUpdate;
                  queue.lastBaseUpdate = _lastPendingUpdate;
                  queue.shared.pending = null;
                }
              }
            } while (true);
            if (newLastBaseUpdate === null) {
              newBaseState = newState;
            }
            queue.baseState = newBaseState;
            queue.firstBaseUpdate = newFirstBaseUpdate;
            queue.lastBaseUpdate = newLastBaseUpdate;
            var lastInterleaved = queue.shared.interleaved;
            if (lastInterleaved !== null) {
              var interleaved = lastInterleaved;
              do {
                newLanes = mergeLanes(newLanes, interleaved.lane);
                interleaved = interleaved.next;
              } while (interleaved !== lastInterleaved);
            } else if (firstBaseUpdate === null) {
              queue.shared.lanes = NoLanes;
            }
            markSkippedUpdateLanes(newLanes);
            workInProgress2.lanes = newLanes;
            workInProgress2.memoizedState = newState;
          }
          {
            currentlyProcessingQueue = null;
          }
        }
        function callCallback(callback, context) {
          if (typeof callback !== "function") {
            throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + callback));
          }
          callback.call(context);
        }
        function resetHasForceUpdateBeforeProcessing() {
          hasForceUpdate = false;
        }
        function checkHasForceUpdateAfterProcessing() {
          return hasForceUpdate;
        }
        function commitUpdateQueue(finishedWork, finishedQueue, instance) {
          var effects = finishedQueue.effects;
          finishedQueue.effects = null;
          if (effects !== null) {
            for (var i9 = 0; i9 < effects.length; i9++) {
              var effect = effects[i9];
              var callback = effect.callback;
              if (callback !== null) {
                effect.callback = null;
                callCallback(callback, instance);
              }
            }
          }
        }
        var fakeInternalInstance = {};
        var emptyRefsObject = new React52.Component().refs;
        var didWarnAboutStateAssignmentForComponent;
        var didWarnAboutUninitializedState;
        var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
        var didWarnAboutLegacyLifecyclesAndDerivedState;
        var didWarnAboutUndefinedDerivedState;
        var warnOnUndefinedDerivedState;
        var warnOnInvalidCallback;
        var didWarnAboutDirectlyAssigningPropsToState;
        var didWarnAboutContextTypeAndContextTypes;
        var didWarnAboutInvalidateContextType;
        {
          didWarnAboutStateAssignmentForComponent = new Set();
          didWarnAboutUninitializedState = new Set();
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
          didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
          didWarnAboutDirectlyAssigningPropsToState = new Set();
          didWarnAboutUndefinedDerivedState = new Set();
          didWarnAboutContextTypeAndContextTypes = new Set();
          didWarnAboutInvalidateContextType = new Set();
          var didWarnOnInvalidCallback = new Set();
          warnOnInvalidCallback = function(callback, callerName) {
            if (callback === null || typeof callback === "function") {
              return;
            }
            var key = callerName + "_" + callback;
            if (!didWarnOnInvalidCallback.has(key)) {
              didWarnOnInvalidCallback.add(key);
              error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
            }
          };
          warnOnUndefinedDerivedState = function(type2, partialState) {
            if (partialState === void 0) {
              var componentName = getComponentNameFromType(type2) || "Component";
              if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
              }
            }
          };
          Object.defineProperty(fakeInternalInstance, "_processChildContext", {
            enumerable: false,
            value: function() {
              throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
            }
          });
          Object.freeze(fakeInternalInstance);
        }
        function applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, nextProps) {
          var prevState = workInProgress2.memoizedState;
          var partialState = getDerivedStateFromProps(nextProps, prevState);
          {
            if (workInProgress2.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(true);
              try {
                partialState = getDerivedStateFromProps(nextProps, prevState);
              } finally {
                setIsStrictModeForDevtools(false);
              }
            }
            warnOnUndefinedDerivedState(ctor, partialState);
          }
          var memoizedState = partialState === null || partialState === void 0 ? prevState : assign3({}, prevState, partialState);
          workInProgress2.memoizedState = memoizedState;
          if (workInProgress2.lanes === NoLanes) {
            var updateQueue2 = workInProgress2.updateQueue;
            updateQueue2.baseState = memoizedState;
          }
        }
        var classComponentUpdater = {
          isMounted,
          enqueueSetState: function(inst, payload, callback) {
            var fiber = get5(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update3 = createUpdate2(eventTime, lane);
            update3.payload = payload;
            if (callback !== void 0 && callback !== null) {
              {
                warnOnInvalidCallback(callback, "setState");
              }
              update3.callback = callback;
            }
            var root3 = enqueueUpdate(fiber, update3, lane);
            if (root3 !== null) {
              scheduleUpdateOnFiber(root3, fiber, lane, eventTime);
              entangleTransitions(root3, fiber, lane);
            }
            {
              markStateUpdateScheduled(fiber, lane);
            }
          },
          enqueueReplaceState: function(inst, payload, callback) {
            var fiber = get5(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update3 = createUpdate2(eventTime, lane);
            update3.tag = ReplaceState;
            update3.payload = payload;
            if (callback !== void 0 && callback !== null) {
              {
                warnOnInvalidCallback(callback, "replaceState");
              }
              update3.callback = callback;
            }
            var root3 = enqueueUpdate(fiber, update3, lane);
            if (root3 !== null) {
              scheduleUpdateOnFiber(root3, fiber, lane, eventTime);
              entangleTransitions(root3, fiber, lane);
            }
            {
              markStateUpdateScheduled(fiber, lane);
            }
          },
          enqueueForceUpdate: function(inst, callback) {
            var fiber = get5(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update3 = createUpdate2(eventTime, lane);
            update3.tag = ForceUpdate;
            if (callback !== void 0 && callback !== null) {
              {
                warnOnInvalidCallback(callback, "forceUpdate");
              }
              update3.callback = callback;
            }
            var root3 = enqueueUpdate(fiber, update3, lane);
            if (root3 !== null) {
              scheduleUpdateOnFiber(root3, fiber, lane, eventTime);
              entangleTransitions(root3, fiber, lane);
            }
            {
              markForceUpdateScheduled(fiber, lane);
            }
          }
        };
        function checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext) {
          var instance = workInProgress2.stateNode;
          if (typeof instance.shouldComponentUpdate === "function") {
            var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
            {
              if (workInProgress2.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                  shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
                } finally {
                  setIsStrictModeForDevtools(false);
                }
              }
              if (shouldUpdate === void 0) {
                error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentNameFromType(ctor) || "Component");
              }
            }
            return shouldUpdate;
          }
          if (ctor.prototype && ctor.prototype.isPureReactComponent) {
            return !shallowEqual2(oldProps, newProps) || !shallowEqual2(oldState, newState);
          }
          return true;
        }
        function checkClassInstance(workInProgress2, ctor, newProps) {
          var instance = workInProgress2.stateNode;
          {
            var name = getComponentNameFromType(ctor) || "Component";
            var renderPresent = instance.render;
            if (!renderPresent) {
              if (ctor.prototype && typeof ctor.prototype.render === "function") {
                error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
              } else {
                error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
              }
            }
            if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
              error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
            }
            if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
              error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
            }
            if (instance.propTypes) {
              error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
            }
            if (instance.contextType) {
              error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
            }
            {
              if (instance.contextTypes) {
                error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
              }
              if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
                didWarnAboutContextTypeAndContextTypes.add(ctor);
                error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
              }
            }
            if (typeof instance.componentShouldUpdate === "function") {
              error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
            }
            if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== "undefined") {
              error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component");
            }
            if (typeof instance.componentDidUnmount === "function") {
              error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
            }
            if (typeof instance.componentDidReceiveProps === "function") {
              error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
            }
            if (typeof instance.componentWillRecieveProps === "function") {
              error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
            }
            if (typeof instance.UNSAFE_componentWillRecieveProps === "function") {
              error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
            }
            var hasMutatedProps = instance.props !== newProps;
            if (instance.props !== void 0 && hasMutatedProps) {
              error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
            }
            if (instance.defaultProps) {
              error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function" && typeof instance.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
              didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
              error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
            }
            if (typeof instance.getDerivedStateFromProps === "function") {
              error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof instance.getDerivedStateFromError === "function") {
              error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof ctor.getSnapshotBeforeUpdate === "function") {
              error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
            }
            var _state = instance.state;
            if (_state && (typeof _state !== "object" || isArray2(_state))) {
              error("%s.state: must be set to an object or null", name);
            }
            if (typeof instance.getChildContext === "function" && typeof ctor.childContextTypes !== "object") {
              error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
            }
          }
        }
        function adoptClassInstance(workInProgress2, instance) {
          instance.updater = classComponentUpdater;
          workInProgress2.stateNode = instance;
          set(instance, workInProgress2);
          {
            instance._reactInternalInstance = fakeInternalInstance;
          }
        }
        function constructClassInstance(workInProgress2, ctor, props) {
          var isLegacyContextConsumer = false;
          var unmaskedContext = emptyContextObject;
          var context = emptyContextObject;
          var contextType = ctor.contextType;
          {
            if ("contextType" in ctor) {
              var isValid2 = contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0;
              if (!isValid2 && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = "";
                if (contextType === void 0) {
                  addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                } else if (typeof contextType !== "object") {
                  addendum = " However, it is set to a " + typeof contextType + ".";
                } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                  addendum = " Did you accidentally pass the Context.Provider instead?";
                } else if (contextType._context !== void 0) {
                  addendum = " Did you accidentally pass the Context.Consumer instead?";
                } else {
                  addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                }
                error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
              }
            }
          }
          if (typeof contextType === "object" && contextType !== null) {
            context = readContext(contextType);
          } else {
            unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            var contextTypes = ctor.contextTypes;
            isLegacyContextConsumer = contextTypes !== null && contextTypes !== void 0;
            context = isLegacyContextConsumer ? getMaskedContext(workInProgress2, unmaskedContext) : emptyContextObject;
          }
          var instance = new ctor(props, context);
          {
            if (workInProgress2.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(true);
              try {
                instance = new ctor(props, context);
              } finally {
                setIsStrictModeForDevtools(false);
              }
            }
          }
          var state = workInProgress2.memoizedState = instance.state !== null && instance.state !== void 0 ? instance.state : null;
          adoptClassInstance(workInProgress2, instance);
          {
            if (typeof ctor.getDerivedStateFromProps === "function" && state === null) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName);
              }
            }
            if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function") {
              var foundWillMountName = null;
              var foundWillReceivePropsName = null;
              var foundWillUpdateName = null;
              if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                foundWillMountName = "componentWillMount";
              } else if (typeof instance.UNSAFE_componentWillMount === "function") {
                foundWillMountName = "UNSAFE_componentWillMount";
              }
              if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                foundWillReceivePropsName = "componentWillReceiveProps";
              } else if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
                foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
              }
              if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                foundWillUpdateName = "componentWillUpdate";
              } else if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                foundWillUpdateName = "UNSAFE_componentWillUpdate";
              }
              if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentNameFromType(ctor) || "Component";
                var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                  didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                  error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                }
              }
            }
          }
          if (isLegacyContextConsumer) {
            cacheContext(workInProgress2, unmaskedContext, context);
          }
          return instance;
        }
        function callComponentWillMount(workInProgress2, instance) {
          var oldState = instance.state;
          if (typeof instance.componentWillMount === "function") {
            instance.componentWillMount();
          }
          if (typeof instance.UNSAFE_componentWillMount === "function") {
            instance.UNSAFE_componentWillMount();
          }
          if (oldState !== instance.state) {
            {
              error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromFiber(workInProgress2) || "Component");
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
          }
        }
        function callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext) {
          var oldState = instance.state;
          if (typeof instance.componentWillReceiveProps === "function") {
            instance.componentWillReceiveProps(newProps, nextContext);
          }
          if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
            instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
          }
          if (instance.state !== oldState) {
            {
              var componentName = getComponentNameFromFiber(workInProgress2) || "Component";
              if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                didWarnAboutStateAssignmentForComponent.add(componentName);
                error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
              }
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
          }
        }
        function mountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
          {
            checkClassInstance(workInProgress2, ctor, newProps);
          }
          var instance = workInProgress2.stateNode;
          instance.props = newProps;
          instance.state = workInProgress2.memoizedState;
          instance.refs = emptyRefsObject;
          initializeUpdateQueue(workInProgress2);
          var contextType = ctor.contextType;
          if (typeof contextType === "object" && contextType !== null) {
            instance.context = readContext(contextType);
          } else {
            var unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            instance.context = getMaskedContext(workInProgress2, unmaskedContext);
          }
          {
            if (instance.state === newProps) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
              }
            }
            if (workInProgress2.mode & StrictLegacyMode) {
              ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, instance);
            }
            {
              ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress2, instance);
            }
          }
          instance.state = workInProgress2.memoizedState;
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
            instance.state = workInProgress2.memoizedState;
          }
          if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance.getSnapshotBeforeUpdate !== "function" && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
            callComponentWillMount(workInProgress2, instance);
            processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
            instance.state = workInProgress2.memoizedState;
          }
          if (typeof instance.componentDidMount === "function") {
            var fiberFlags = Update;
            {
              fiberFlags |= LayoutStatic;
            }
            if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
              fiberFlags |= MountLayoutDev;
            }
            workInProgress2.flags |= fiberFlags;
          }
        }
        function resumeMountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
          var instance = workInProgress2.stateNode;
          var oldProps = workInProgress2.memoizedProps;
          instance.props = oldProps;
          var oldContext = instance.context;
          var contextType = ctor.contextType;
          var nextContext = emptyContextObject;
          if (typeof contextType === "object" && contextType !== null) {
            nextContext = readContext(contextType);
          } else {
            var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            nextContext = getMaskedContext(workInProgress2, nextLegacyUnmaskedContext);
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function";
          if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
            if (oldProps !== newProps || oldContext !== nextContext) {
              callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext);
            }
          }
          resetHasForceUpdateBeforeProcessing();
          var oldState = workInProgress2.memoizedState;
          var newState = instance.state = oldState;
          processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
          newState = workInProgress2.memoizedState;
          if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            if (typeof instance.componentDidMount === "function") {
              var fiberFlags = Update;
              {
                fiberFlags |= LayoutStatic;
              }
              if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                fiberFlags |= MountLayoutDev;
              }
              workInProgress2.flags |= fiberFlags;
            }
            return false;
          }
          if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress2.memoizedState;
          }
          var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext);
          if (shouldUpdate) {
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
              if (typeof instance.componentWillMount === "function") {
                instance.componentWillMount();
              }
              if (typeof instance.UNSAFE_componentWillMount === "function") {
                instance.UNSAFE_componentWillMount();
              }
            }
            if (typeof instance.componentDidMount === "function") {
              var _fiberFlags = Update;
              {
                _fiberFlags |= LayoutStatic;
              }
              if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                _fiberFlags |= MountLayoutDev;
              }
              workInProgress2.flags |= _fiberFlags;
            }
          } else {
            if (typeof instance.componentDidMount === "function") {
              var _fiberFlags2 = Update;
              {
                _fiberFlags2 |= LayoutStatic;
              }
              if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                _fiberFlags2 |= MountLayoutDev;
              }
              workInProgress2.flags |= _fiberFlags2;
            }
            workInProgress2.memoizedProps = newProps;
            workInProgress2.memoizedState = newState;
          }
          instance.props = newProps;
          instance.state = newState;
          instance.context = nextContext;
          return shouldUpdate;
        }
        function updateClassInstance(current2, workInProgress2, ctor, newProps, renderLanes2) {
          var instance = workInProgress2.stateNode;
          cloneUpdateQueue(current2, workInProgress2);
          var unresolvedOldProps = workInProgress2.memoizedProps;
          var oldProps = workInProgress2.type === workInProgress2.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress2.type, unresolvedOldProps);
          instance.props = oldProps;
          var unresolvedNewProps = workInProgress2.pendingProps;
          var oldContext = instance.context;
          var contextType = ctor.contextType;
          var nextContext = emptyContextObject;
          if (typeof contextType === "object" && contextType !== null) {
            nextContext = readContext(contextType);
          } else {
            var nextUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            nextContext = getMaskedContext(workInProgress2, nextUnmaskedContext);
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function";
          if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
            if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {
              callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext);
            }
          }
          resetHasForceUpdateBeforeProcessing();
          var oldState = workInProgress2.memoizedState;
          var newState = instance.state = oldState;
          processUpdateQueue(workInProgress2, newProps, instance, renderLanes2);
          newState = workInProgress2.memoizedState;
          if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !enableLazyContextPropagation) {
            if (typeof instance.componentDidUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Update;
              }
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Snapshot;
              }
            }
            return false;
          }
          if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress2.memoizedState;
          }
          var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext) || enableLazyContextPropagation;
          if (shouldUpdate) {
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === "function" || typeof instance.componentWillUpdate === "function")) {
              if (typeof instance.componentWillUpdate === "function") {
                instance.componentWillUpdate(newProps, newState, nextContext);
              }
              if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
              }
            }
            if (typeof instance.componentDidUpdate === "function") {
              workInProgress2.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
              workInProgress2.flags |= Snapshot;
            }
          } else {
            if (typeof instance.componentDidUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Update;
              }
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Snapshot;
              }
            }
            workInProgress2.memoizedProps = newProps;
            workInProgress2.memoizedState = newState;
          }
          instance.props = newProps;
          instance.state = newState;
          instance.context = nextContext;
          return shouldUpdate;
        }
        var didWarnAboutMaps;
        var didWarnAboutGenerators;
        var didWarnAboutStringRefs;
        var ownerHasKeyUseWarning;
        var ownerHasFunctionTypeWarning;
        var warnForMissingKey = function(child, returnFiber) {
        };
        {
          didWarnAboutMaps = false;
          didWarnAboutGenerators = false;
          didWarnAboutStringRefs = {};
          ownerHasKeyUseWarning = {};
          ownerHasFunctionTypeWarning = {};
          warnForMissingKey = function(child, returnFiber) {
            if (child === null || typeof child !== "object") {
              return;
            }
            if (!child._store || child._store.validated || child.key != null) {
              return;
            }
            if (typeof child._store !== "object") {
              throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
            }
            child._store.validated = true;
            var componentName = getComponentNameFromFiber(returnFiber) || "Component";
            if (ownerHasKeyUseWarning[componentName]) {
              return;
            }
            ownerHasKeyUseWarning[componentName] = true;
            error('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.');
          };
        }
        function coerceRef(returnFiber, current2, element) {
          var mixedRef = element.ref;
          if (mixedRef !== null && typeof mixedRef !== "function" && typeof mixedRef !== "object") {
            {
              if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && !(element._owner && element._self && element._owner.stateNode !== element._self)) {
                var componentName = getComponentNameFromFiber(returnFiber) || "Component";
                if (!didWarnAboutStringRefs[componentName]) {
                  {
                    error('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', mixedRef);
                  }
                  didWarnAboutStringRefs[componentName] = true;
                }
              }
            }
            if (element._owner) {
              var owner = element._owner;
              var inst;
              if (owner) {
                var ownerFiber = owner;
                if (ownerFiber.tag !== ClassComponent) {
                  throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
                }
                inst = ownerFiber.stateNode;
              }
              if (!inst) {
                throw new Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue.");
              }
              var resolvedInst = inst;
              {
                checkPropStringCoercion(mixedRef, "ref");
              }
              var stringRef = "" + mixedRef;
              if (current2 !== null && current2.ref !== null && typeof current2.ref === "function" && current2.ref._stringRef === stringRef) {
                return current2.ref;
              }
              var ref = function(value) {
                var refs = resolvedInst.refs;
                if (refs === emptyRefsObject) {
                  refs = resolvedInst.refs = {};
                }
                if (value === null) {
                  delete refs[stringRef];
                } else {
                  refs[stringRef] = value;
                }
              };
              ref._stringRef = stringRef;
              return ref;
            } else {
              if (typeof mixedRef !== "string") {
                throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
              }
              if (!element._owner) {
                throw new Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://reactjs.org/link/refs-must-have-owner for more information.");
              }
            }
          }
          return mixedRef;
        }
        function throwOnInvalidObjectType(returnFiber, newChild) {
          var childString = Object.prototype.toString.call(newChild);
          throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : childString) + "). If you meant to render a collection of children, use an array instead.");
        }
        function warnOnFunctionType(returnFiber) {
          {
            var componentName = getComponentNameFromFiber(returnFiber) || "Component";
            if (ownerHasFunctionTypeWarning[componentName]) {
              return;
            }
            ownerHasFunctionTypeWarning[componentName] = true;
            error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
          }
        }
        function resolveLazy(lazyType) {
          var payload = lazyType._payload;
          var init = lazyType._init;
          return init(payload);
        }
        function ChildReconciler(shouldTrackSideEffects) {
          function deleteChild(returnFiber, childToDelete) {
            if (!shouldTrackSideEffects) {
              return;
            }
            var deletions = returnFiber.deletions;
            if (deletions === null) {
              returnFiber.deletions = [childToDelete];
              returnFiber.flags |= ChildDeletion;
            } else {
              deletions.push(childToDelete);
            }
          }
          function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) {
              return null;
            }
            var childToDelete = currentFirstChild;
            while (childToDelete !== null) {
              deleteChild(returnFiber, childToDelete);
              childToDelete = childToDelete.sibling;
            }
            return null;
          }
          function mapRemainingChildren(returnFiber, currentFirstChild) {
            var existingChildren = new Map();
            var existingChild = currentFirstChild;
            while (existingChild !== null) {
              if (existingChild.key !== null) {
                existingChildren.set(existingChild.key, existingChild);
              } else {
                existingChildren.set(existingChild.index, existingChild);
              }
              existingChild = existingChild.sibling;
            }
            return existingChildren;
          }
          function useFiber(fiber, pendingProps) {
            var clone = createWorkInProgress(fiber, pendingProps);
            clone.index = 0;
            clone.sibling = null;
            return clone;
          }
          function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) {
              newFiber.flags |= Forked;
              return lastPlacedIndex;
            }
            var current2 = newFiber.alternate;
            if (current2 !== null) {
              var oldIndex = current2.index;
              if (oldIndex < lastPlacedIndex) {
                newFiber.flags |= Placement;
                return lastPlacedIndex;
              } else {
                return oldIndex;
              }
            } else {
              newFiber.flags |= Placement;
              return lastPlacedIndex;
            }
          }
          function placeSingleChild(newFiber) {
            if (shouldTrackSideEffects && newFiber.alternate === null) {
              newFiber.flags |= Placement;
            }
            return newFiber;
          }
          function updateTextNode(returnFiber, current2, textContent, lanes) {
            if (current2 === null || current2.tag !== HostText) {
              var created = createFiberFromText(textContent, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current2, textContent);
              existing.return = returnFiber;
              return existing;
            }
          }
          function updateElement(returnFiber, current2, element, lanes) {
            var elementType = element.type;
            if (elementType === REACT_FRAGMENT_TYPE) {
              return updateFragment2(returnFiber, current2, element.props.children, lanes, element.key);
            }
            if (current2 !== null) {
              if (current2.elementType === elementType || isCompatibleFamilyForHotReloading(current2, element) || typeof elementType === "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current2.type) {
                var existing = useFiber(current2, element.props);
                existing.ref = coerceRef(returnFiber, current2, element);
                existing.return = returnFiber;
                {
                  existing._debugSource = element._source;
                  existing._debugOwner = element._owner;
                }
                return existing;
              }
            }
            var created = createFiberFromElement(element, returnFiber.mode, lanes);
            created.ref = coerceRef(returnFiber, current2, element);
            created.return = returnFiber;
            return created;
          }
          function updatePortal(returnFiber, current2, portal, lanes) {
            if (current2 === null || current2.tag !== HostPortal || current2.stateNode.containerInfo !== portal.containerInfo || current2.stateNode.implementation !== portal.implementation) {
              var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current2, portal.children || []);
              existing.return = returnFiber;
              return existing;
            }
          }
          function updateFragment2(returnFiber, current2, fragment, lanes, key) {
            if (current2 === null || current2.tag !== Fragment2) {
              var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current2, fragment);
              existing.return = returnFiber;
              return existing;
            }
          }
          function createChild(returnFiber, newChild, lanes) {
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
              var created = createFiberFromText("" + newChild, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE: {
                  var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                  _created.ref = coerceRef(returnFiber, null, newChild);
                  _created.return = returnFiber;
                  return _created;
                }
                case REACT_PORTAL_TYPE: {
                  var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                  _created2.return = returnFiber;
                  return _created2;
                }
                case REACT_LAZY_TYPE: {
                  var payload = newChild._payload;
                  var init = newChild._init;
                  return createChild(returnFiber, init(payload), lanes);
                }
              }
              if (isArray2(newChild) || getIteratorFn(newChild)) {
                var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
                _created3.return = returnFiber;
                return _created3;
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return null;
          }
          function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            var key = oldFiber !== null ? oldFiber.key : null;
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
              if (key !== null) {
                return null;
              }
              return updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE: {
                  if (newChild.key === key) {
                    return updateElement(returnFiber, oldFiber, newChild, lanes);
                  } else {
                    return null;
                  }
                }
                case REACT_PORTAL_TYPE: {
                  if (newChild.key === key) {
                    return updatePortal(returnFiber, oldFiber, newChild, lanes);
                  } else {
                    return null;
                  }
                }
                case REACT_LAZY_TYPE: {
                  var payload = newChild._payload;
                  var init = newChild._init;
                  return updateSlot(returnFiber, oldFiber, init(payload), lanes);
                }
              }
              if (isArray2(newChild) || getIteratorFn(newChild)) {
                if (key !== null) {
                  return null;
                }
                return updateFragment2(returnFiber, oldFiber, newChild, lanes, null);
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return null;
          }
          function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
              var matchedFiber = existingChildren.get(newIdx) || null;
              return updateTextNode(returnFiber, matchedFiber, "" + newChild, lanes);
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE: {
                  var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                  return updateElement(returnFiber, _matchedFiber, newChild, lanes);
                }
                case REACT_PORTAL_TYPE: {
                  var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                  return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
                }
                case REACT_LAZY_TYPE:
                  var payload = newChild._payload;
                  var init = newChild._init;
                  return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);
              }
              if (isArray2(newChild) || getIteratorFn(newChild)) {
                var _matchedFiber3 = existingChildren.get(newIdx) || null;
                return updateFragment2(returnFiber, _matchedFiber3, newChild, lanes, null);
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return null;
          }
          function warnOnInvalidKey(child, knownKeys, returnFiber) {
            {
              if (typeof child !== "object" || child === null) {
                return knownKeys;
              }
              switch (child.$$typeof) {
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                  warnForMissingKey(child, returnFiber);
                  var key = child.key;
                  if (typeof key !== "string") {
                    break;
                  }
                  if (knownKeys === null) {
                    knownKeys = new Set();
                    knownKeys.add(key);
                    break;
                  }
                  if (!knownKeys.has(key)) {
                    knownKeys.add(key);
                    break;
                  }
                  error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                  break;
                case REACT_LAZY_TYPE:
                  var payload = child._payload;
                  var init = child._init;
                  warnOnInvalidKey(init(payload), knownKeys, returnFiber);
                  break;
              }
            }
            return knownKeys;
          }
          function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            {
              var knownKeys = null;
              for (var i9 = 0; i9 < newChildren.length; i9++) {
                var child = newChildren[i9];
                knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
              }
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
              if (oldFiber.index > newIdx) {
                nextOldFiber = oldFiber;
                oldFiber = null;
              } else {
                nextOldFiber = oldFiber.sibling;
              }
              var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
              if (newFiber === null) {
                if (oldFiber === null) {
                  oldFiber = nextOldFiber;
                }
                break;
              }
              if (shouldTrackSideEffects) {
                if (oldFiber && newFiber.alternate === null) {
                  deleteChild(returnFiber, oldFiber);
                }
              }
              lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
              if (previousNewFiber === null) {
                resultingFirstChild = newFiber;
              } else {
                previousNewFiber.sibling = newFiber;
              }
              previousNewFiber = newFiber;
              oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) {
              deleteRemainingChildren(returnFiber, oldFiber);
              if (getIsHydrating()) {
                var numberOfForks = newIdx;
                pushTreeFork(returnFiber, numberOfForks);
              }
              return resultingFirstChild;
            }
            if (oldFiber === null) {
              for (; newIdx < newChildren.length; newIdx++) {
                var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
                if (_newFiber === null) {
                  continue;
                }
                lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber;
                } else {
                  previousNewFiber.sibling = _newFiber;
                }
                previousNewFiber = _newFiber;
              }
              if (getIsHydrating()) {
                var _numberOfForks = newIdx;
                pushTreeFork(returnFiber, _numberOfForks);
              }
              return resultingFirstChild;
            }
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
            for (; newIdx < newChildren.length; newIdx++) {
              var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
              if (_newFiber2 !== null) {
                if (shouldTrackSideEffects) {
                  if (_newFiber2.alternate !== null) {
                    existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                  }
                }
                lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber2;
                } else {
                  previousNewFiber.sibling = _newFiber2;
                }
                previousNewFiber = _newFiber2;
              }
            }
            if (shouldTrackSideEffects) {
              existingChildren.forEach(function(child2) {
                return deleteChild(returnFiber, child2);
              });
            }
            if (getIsHydrating()) {
              var _numberOfForks2 = newIdx;
              pushTreeFork(returnFiber, _numberOfForks2);
            }
            return resultingFirstChild;
          }
          function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if (typeof iteratorFn !== "function") {
              throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
            }
            {
              if (typeof Symbol === "function" && newChildrenIterable[Symbol.toStringTag] === "Generator") {
                if (!didWarnAboutGenerators) {
                  error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
                }
                didWarnAboutGenerators = true;
              }
              if (newChildrenIterable.entries === iteratorFn) {
                if (!didWarnAboutMaps) {
                  error("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                }
                didWarnAboutMaps = true;
              }
              var _newChildren = iteratorFn.call(newChildrenIterable);
              if (_newChildren) {
                var knownKeys = null;
                var _step = _newChildren.next();
                for (; !_step.done; _step = _newChildren.next()) {
                  var child = _step.value;
                  knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                }
              }
            }
            var newChildren = iteratorFn.call(newChildrenIterable);
            if (newChildren == null) {
              throw new Error("An iterable object provided no iterator.");
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            var step = newChildren.next();
            for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
              if (oldFiber.index > newIdx) {
                nextOldFiber = oldFiber;
                oldFiber = null;
              } else {
                nextOldFiber = oldFiber.sibling;
              }
              var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
              if (newFiber === null) {
                if (oldFiber === null) {
                  oldFiber = nextOldFiber;
                }
                break;
              }
              if (shouldTrackSideEffects) {
                if (oldFiber && newFiber.alternate === null) {
                  deleteChild(returnFiber, oldFiber);
                }
              }
              lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
              if (previousNewFiber === null) {
                resultingFirstChild = newFiber;
              } else {
                previousNewFiber.sibling = newFiber;
              }
              previousNewFiber = newFiber;
              oldFiber = nextOldFiber;
            }
            if (step.done) {
              deleteRemainingChildren(returnFiber, oldFiber);
              if (getIsHydrating()) {
                var numberOfForks = newIdx;
                pushTreeFork(returnFiber, numberOfForks);
              }
              return resultingFirstChild;
            }
            if (oldFiber === null) {
              for (; !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber3 = createChild(returnFiber, step.value, lanes);
                if (_newFiber3 === null) {
                  continue;
                }
                lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber3;
                } else {
                  previousNewFiber.sibling = _newFiber3;
                }
                previousNewFiber = _newFiber3;
              }
              if (getIsHydrating()) {
                var _numberOfForks3 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks3);
              }
              return resultingFirstChild;
            }
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
            for (; !step.done; newIdx++, step = newChildren.next()) {
              var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
              if (_newFiber4 !== null) {
                if (shouldTrackSideEffects) {
                  if (_newFiber4.alternate !== null) {
                    existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                  }
                }
                lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber4;
                } else {
                  previousNewFiber.sibling = _newFiber4;
                }
                previousNewFiber = _newFiber4;
              }
            }
            if (shouldTrackSideEffects) {
              existingChildren.forEach(function(child2) {
                return deleteChild(returnFiber, child2);
              });
            }
            if (getIsHydrating()) {
              var _numberOfForks4 = newIdx;
              pushTreeFork(returnFiber, _numberOfForks4);
            }
            return resultingFirstChild;
          }
          function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
            if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
              deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
              var existing = useFiber(currentFirstChild, textContent);
              existing.return = returnFiber;
              return existing;
            }
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText(textContent, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
          }
          function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
            var key = element.key;
            var child = currentFirstChild;
            while (child !== null) {
              if (child.key === key) {
                var elementType = element.type;
                if (elementType === REACT_FRAGMENT_TYPE) {
                  if (child.tag === Fragment2) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, element.props.children);
                    existing.return = returnFiber;
                    {
                      existing._debugSource = element._source;
                      existing._debugOwner = element._owner;
                    }
                    return existing;
                  }
                } else {
                  if (child.elementType === elementType || isCompatibleFamilyForHotReloading(child, element) || typeof elementType === "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var _existing = useFiber(child, element.props);
                    _existing.ref = coerceRef(returnFiber, child, element);
                    _existing.return = returnFiber;
                    {
                      _existing._debugSource = element._source;
                      _existing._debugOwner = element._owner;
                    }
                    return _existing;
                  }
                }
                deleteRemainingChildren(returnFiber, child);
                break;
              } else {
                deleteChild(returnFiber, child);
              }
              child = child.sibling;
            }
            if (element.type === REACT_FRAGMENT_TYPE) {
              var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
              created.return = returnFiber;
              return created;
            } else {
              var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);
              _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
              _created4.return = returnFiber;
              return _created4;
            }
          }
          function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
            var key = portal.key;
            var child = currentFirstChild;
            while (child !== null) {
              if (child.key === key) {
                if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                  deleteRemainingChildren(returnFiber, child.sibling);
                  var existing = useFiber(child, portal.children || []);
                  existing.return = returnFiber;
                  return existing;
                } else {
                  deleteRemainingChildren(returnFiber, child);
                  break;
                }
              } else {
                deleteChild(returnFiber, child);
              }
              child = child.sibling;
            }
            var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
          }
          function reconcileChildFibers2(returnFiber, currentFirstChild, newChild, lanes) {
            var isUnkeyedTopLevelFragment = typeof newChild === "object" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
            if (isUnkeyedTopLevelFragment) {
              newChild = newChild.props.children;
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                  return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
                case REACT_PORTAL_TYPE:
                  return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
                case REACT_LAZY_TYPE:
                  var payload = newChild._payload;
                  var init = newChild._init;
                  return reconcileChildFibers2(returnFiber, currentFirstChild, init(payload), lanes);
              }
              if (isArray2(newChild)) {
                return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
              }
              if (getIteratorFn(newChild)) {
                return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
              return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, lanes));
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return deleteRemainingChildren(returnFiber, currentFirstChild);
          }
          return reconcileChildFibers2;
        }
        var reconcileChildFibers = ChildReconciler(true);
        var mountChildFibers = ChildReconciler(false);
        function cloneChildFibers(current2, workInProgress2) {
          if (current2 !== null && workInProgress2.child !== current2.child) {
            throw new Error("Resuming work not yet implemented.");
          }
          if (workInProgress2.child === null) {
            return;
          }
          var currentChild = workInProgress2.child;
          var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
          workInProgress2.child = newChild;
          newChild.return = workInProgress2;
          while (currentChild.sibling !== null) {
            currentChild = currentChild.sibling;
            newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
            newChild.return = workInProgress2;
          }
          newChild.sibling = null;
        }
        function resetChildFibers(workInProgress2, lanes) {
          var child = workInProgress2.child;
          while (child !== null) {
            resetWorkInProgress(child, lanes);
            child = child.sibling;
          }
        }
        var NO_CONTEXT = {};
        var contextStackCursor$1 = createCursor(NO_CONTEXT);
        var contextFiberStackCursor = createCursor(NO_CONTEXT);
        var rootInstanceStackCursor = createCursor(NO_CONTEXT);
        function requiredContext(c6) {
          if (c6 === NO_CONTEXT) {
            throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
          }
          return c6;
        }
        function getRootHostContainer() {
          var rootInstance = requiredContext(rootInstanceStackCursor.current);
          return rootInstance;
        }
        function pushHostContainer(fiber, nextRootInstance) {
          push(rootInstanceStackCursor, nextRootInstance, fiber);
          push(contextFiberStackCursor, fiber, fiber);
          push(contextStackCursor$1, NO_CONTEXT, fiber);
          var nextRootContext = getRootHostContext(nextRootInstance);
          pop(contextStackCursor$1, fiber);
          push(contextStackCursor$1, nextRootContext, fiber);
        }
        function popHostContainer(fiber) {
          pop(contextStackCursor$1, fiber);
          pop(contextFiberStackCursor, fiber);
          pop(rootInstanceStackCursor, fiber);
        }
        function getHostContext() {
          var context = requiredContext(contextStackCursor$1.current);
          return context;
        }
        function pushHostContext(fiber) {
          var rootInstance = requiredContext(rootInstanceStackCursor.current);
          var context = requiredContext(contextStackCursor$1.current);
          var nextContext = getChildHostContext(context, fiber.type);
          if (context === nextContext) {
            return;
          }
          push(contextFiberStackCursor, fiber, fiber);
          push(contextStackCursor$1, nextContext, fiber);
        }
        function popHostContext(fiber) {
          if (contextFiberStackCursor.current !== fiber) {
            return;
          }
          pop(contextStackCursor$1, fiber);
          pop(contextFiberStackCursor, fiber);
        }
        var DefaultSuspenseContext = 0;
        var SubtreeSuspenseContextMask = 1;
        var InvisibleParentSuspenseContext = 1;
        var ForceSuspenseFallback = 2;
        var suspenseStackCursor = createCursor(DefaultSuspenseContext);
        function hasSuspenseContext(parentContext, flag) {
          return (parentContext & flag) !== 0;
        }
        function setDefaultShallowSuspenseContext(parentContext) {
          return parentContext & SubtreeSuspenseContextMask;
        }
        function setShallowSuspenseContext(parentContext, shallowContext) {
          return parentContext & SubtreeSuspenseContextMask | shallowContext;
        }
        function addSubtreeSuspenseContext(parentContext, subtreeContext) {
          return parentContext | subtreeContext;
        }
        function pushSuspenseContext(fiber, newContext) {
          push(suspenseStackCursor, newContext, fiber);
        }
        function popSuspenseContext(fiber) {
          pop(suspenseStackCursor, fiber);
        }
        function shouldCaptureSuspense(workInProgress2, hasInvisibleParent) {
          var nextState = workInProgress2.memoizedState;
          if (nextState !== null) {
            if (nextState.dehydrated !== null) {
              return true;
            }
            return false;
          }
          var props = workInProgress2.memoizedProps;
          {
            return true;
          }
        }
        function findFirstSuspended(row) {
          var node = row;
          while (node !== null) {
            if (node.tag === SuspenseComponent) {
              var state = node.memoizedState;
              if (state !== null) {
                var dehydrated = state.dehydrated;
                if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
                  return node;
                }
              }
            } else if (node.tag === SuspenseListComponent && node.memoizedProps.revealOrder !== void 0) {
              var didSuspend = (node.flags & DidCapture) !== NoFlags;
              if (didSuspend) {
                return node;
              }
            } else if (node.child !== null) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === row) {
              return null;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === row) {
                return null;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
          return null;
        }
        var NoFlags$1 = 0;
        var HasEffect = 1;
        var Insertion = 2;
        var Layout = 4;
        var Passive$1 = 8;
        var workInProgressSources = [];
        function resetWorkInProgressVersions() {
          for (var i9 = 0; i9 < workInProgressSources.length; i9++) {
            var mutableSource = workInProgressSources[i9];
            {
              mutableSource._workInProgressVersionPrimary = null;
            }
          }
          workInProgressSources.length = 0;
        }
        function registerMutableSourceForHydration(root3, mutableSource) {
          var getVersion = mutableSource._getVersion;
          var version = getVersion(mutableSource._source);
          if (root3.mutableSourceEagerHydrationData == null) {
            root3.mutableSourceEagerHydrationData = [mutableSource, version];
          } else {
            root3.mutableSourceEagerHydrationData.push(mutableSource, version);
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig;
        var didWarnAboutMismatchedHooksForComponent;
        var didWarnUncachedGetSnapshot;
        {
          didWarnAboutMismatchedHooksForComponent = new Set();
        }
        var renderLanes = NoLanes;
        var currentlyRenderingFiber$1 = null;
        var currentHook = null;
        var workInProgressHook = null;
        var didScheduleRenderPhaseUpdate = false;
        var didScheduleRenderPhaseUpdateDuringThisPass = false;
        var localIdCounter = 0;
        var globalClientIdCounter = 0;
        var RE_RENDER_LIMIT = 25;
        var currentHookNameInDev = null;
        var hookTypesDev = null;
        var hookTypesUpdateIndexDev = -1;
        var ignorePreviousDependencies = false;
        function mountHookTypesDev() {
          {
            var hookName = currentHookNameInDev;
            if (hookTypesDev === null) {
              hookTypesDev = [hookName];
            } else {
              hookTypesDev.push(hookName);
            }
          }
        }
        function updateHookTypesDev() {
          {
            var hookName = currentHookNameInDev;
            if (hookTypesDev !== null) {
              hookTypesUpdateIndexDev++;
              if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
                warnOnHookMismatchInDev(hookName);
              }
            }
          }
        }
        function checkDepsAreArrayDev(deps) {
          {
            if (deps !== void 0 && deps !== null && !isArray2(deps)) {
              error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
            }
          }
        }
        function warnOnHookMismatchInDev(currentHookName) {
          {
            var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);
            if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
              didWarnAboutMismatchedHooksForComponent.add(componentName);
              if (hookTypesDev !== null) {
                var table = "";
                var secondColumnStart = 30;
                for (var i9 = 0; i9 <= hookTypesUpdateIndexDev; i9++) {
                  var oldHookName = hookTypesDev[i9];
                  var newHookName = i9 === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                  var row = i9 + 1 + ". " + oldHookName;
                  while (row.length < secondColumnStart) {
                    row += " ";
                  }
                  row += newHookName + "\n";
                  table += row;
                }
                error("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
              }
            }
          }
        }
        function throwInvalidHookError() {
          throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
        }
        function areHookInputsEqual(nextDeps, prevDeps) {
          {
            if (ignorePreviousDependencies) {
              return false;
            }
          }
          if (prevDeps === null) {
            {
              error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            }
            return false;
          }
          {
            if (nextDeps.length !== prevDeps.length) {
              error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
            }
          }
          for (var i9 = 0; i9 < prevDeps.length && i9 < nextDeps.length; i9++) {
            if (objectIs(nextDeps[i9], prevDeps[i9])) {
              continue;
            }
            return false;
          }
          return true;
        }
        function renderWithHooks(current2, workInProgress2, Component, props, secondArg, nextRenderLanes) {
          renderLanes = nextRenderLanes;
          currentlyRenderingFiber$1 = workInProgress2;
          {
            hookTypesDev = current2 !== null ? current2._debugHookTypes : null;
            hookTypesUpdateIndexDev = -1;
            ignorePreviousDependencies = current2 !== null && current2.type !== workInProgress2.type;
          }
          workInProgress2.memoizedState = null;
          workInProgress2.updateQueue = null;
          workInProgress2.lanes = NoLanes;
          {
            if (current2 !== null && current2.memoizedState !== null) {
              ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
            } else if (hookTypesDev !== null) {
              ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
            } else {
              ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
            }
          }
          var children = Component(props, secondArg);
          if (didScheduleRenderPhaseUpdateDuringThisPass) {
            var numberOfReRenders = 0;
            do {
              didScheduleRenderPhaseUpdateDuringThisPass = false;
              localIdCounter = 0;
              if (numberOfReRenders >= RE_RENDER_LIMIT) {
                throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
              }
              numberOfReRenders += 1;
              {
                ignorePreviousDependencies = false;
              }
              currentHook = null;
              workInProgressHook = null;
              workInProgress2.updateQueue = null;
              {
                hookTypesUpdateIndexDev = -1;
              }
              ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
              children = Component(props, secondArg);
            } while (didScheduleRenderPhaseUpdateDuringThisPass);
          }
          ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
          {
            workInProgress2._debugHookTypes = hookTypesDev;
          }
          var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
          renderLanes = NoLanes;
          currentlyRenderingFiber$1 = null;
          currentHook = null;
          workInProgressHook = null;
          {
            currentHookNameInDev = null;
            hookTypesDev = null;
            hookTypesUpdateIndexDev = -1;
            if (current2 !== null && (current2.flags & StaticMask) !== (workInProgress2.flags & StaticMask) && (current2.mode & ConcurrentMode) !== NoMode) {
              error("Internal React error: Expected static flag was missing. Please notify the React team.");
            }
          }
          didScheduleRenderPhaseUpdate = false;
          if (didRenderTooFewHooks) {
            throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
          }
          return children;
        }
        function checkDidRenderIdHook() {
          var didRenderIdHook = localIdCounter !== 0;
          localIdCounter = 0;
          return didRenderIdHook;
        }
        function bailoutHooks(current2, workInProgress2, lanes) {
          workInProgress2.updateQueue = current2.updateQueue;
          if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
            workInProgress2.flags &= ~(MountPassiveDev | MountLayoutDev | Passive | Update);
          } else {
            workInProgress2.flags &= ~(Passive | Update);
          }
          current2.lanes = removeLanes(current2.lanes, lanes);
        }
        function resetHooksAfterThrow() {
          ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
          if (didScheduleRenderPhaseUpdate) {
            var hook = currentlyRenderingFiber$1.memoizedState;
            while (hook !== null) {
              var queue = hook.queue;
              if (queue !== null) {
                queue.pending = null;
              }
              hook = hook.next;
            }
            didScheduleRenderPhaseUpdate = false;
          }
          renderLanes = NoLanes;
          currentlyRenderingFiber$1 = null;
          currentHook = null;
          workInProgressHook = null;
          {
            hookTypesDev = null;
            hookTypesUpdateIndexDev = -1;
            currentHookNameInDev = null;
            isUpdatingOpaqueValueInRenderPhase = false;
          }
          didScheduleRenderPhaseUpdateDuringThisPass = false;
          localIdCounter = 0;
        }
        function mountWorkInProgressHook() {
          var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
          };
          if (workInProgressHook === null) {
            currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
          } else {
            workInProgressHook = workInProgressHook.next = hook;
          }
          return workInProgressHook;
        }
        function updateWorkInProgressHook() {
          var nextCurrentHook;
          if (currentHook === null) {
            var current2 = currentlyRenderingFiber$1.alternate;
            if (current2 !== null) {
              nextCurrentHook = current2.memoizedState;
            } else {
              nextCurrentHook = null;
            }
          } else {
            nextCurrentHook = currentHook.next;
          }
          var nextWorkInProgressHook;
          if (workInProgressHook === null) {
            nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
          } else {
            nextWorkInProgressHook = workInProgressHook.next;
          }
          if (nextWorkInProgressHook !== null) {
            workInProgressHook = nextWorkInProgressHook;
            nextWorkInProgressHook = workInProgressHook.next;
            currentHook = nextCurrentHook;
          } else {
            if (nextCurrentHook === null) {
              throw new Error("Rendered more hooks than during the previous render.");
            }
            currentHook = nextCurrentHook;
            var newHook = {
              memoizedState: currentHook.memoizedState,
              baseState: currentHook.baseState,
              baseQueue: currentHook.baseQueue,
              queue: currentHook.queue,
              next: null
            };
            if (workInProgressHook === null) {
              currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
            } else {
              workInProgressHook = workInProgressHook.next = newHook;
            }
          }
          return workInProgressHook;
        }
        function createFunctionComponentUpdateQueue() {
          return {
            lastEffect: null,
            stores: null
          };
        }
        function basicStateReducer(state, action) {
          return typeof action === "function" ? action(state) : action;
        }
        function mountReducer(reducer, initialArg, init) {
          var hook = mountWorkInProgressHook();
          var initialState;
          if (init !== void 0) {
            initialState = init(initialArg);
          } else {
            initialState = initialArg;
          }
          hook.memoizedState = hook.baseState = initialState;
          var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
          };
          hook.queue = queue;
          var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);
          return [hook.memoizedState, dispatch];
        }
        function updateReducer(reducer, initialArg, init) {
          var hook = updateWorkInProgressHook();
          var queue = hook.queue;
          if (queue === null) {
            throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
          }
          queue.lastRenderedReducer = reducer;
          var current2 = currentHook;
          var baseQueue = current2.baseQueue;
          var pendingQueue = queue.pending;
          if (pendingQueue !== null) {
            if (baseQueue !== null) {
              var baseFirst = baseQueue.next;
              var pendingFirst = pendingQueue.next;
              baseQueue.next = pendingFirst;
              pendingQueue.next = baseFirst;
            }
            {
              if (current2.baseQueue !== baseQueue) {
                error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
              }
            }
            current2.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
          }
          if (baseQueue !== null) {
            var first = baseQueue.next;
            var newState = current2.baseState;
            var newBaseState = null;
            var newBaseQueueFirst = null;
            var newBaseQueueLast = null;
            var update3 = first;
            do {
              var updateLane = update3.lane;
              if (!isSubsetOfLanes(renderLanes, updateLane)) {
                var clone = {
                  lane: updateLane,
                  action: update3.action,
                  hasEagerState: update3.hasEagerState,
                  eagerState: update3.eagerState,
                  next: null
                };
                if (newBaseQueueLast === null) {
                  newBaseQueueFirst = newBaseQueueLast = clone;
                  newBaseState = newState;
                } else {
                  newBaseQueueLast = newBaseQueueLast.next = clone;
                }
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
                markSkippedUpdateLanes(updateLane);
              } else {
                if (newBaseQueueLast !== null) {
                  var _clone2 = {
                    lane: NoLane,
                    action: update3.action,
                    hasEagerState: update3.hasEagerState,
                    eagerState: update3.eagerState,
                    next: null
                  };
                  newBaseQueueLast = newBaseQueueLast.next = _clone2;
                }
                if (update3.hasEagerState) {
                  newState = update3.eagerState;
                } else {
                  var action = update3.action;
                  newState = reducer(newState, action);
                }
              }
              update3 = update3.next;
            } while (update3 !== null && update3 !== first);
            if (newBaseQueueLast === null) {
              newBaseState = newState;
            } else {
              newBaseQueueLast.next = newBaseQueueFirst;
            }
            if (!objectIs(newState, hook.memoizedState)) {
              markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = newState;
            hook.baseState = newBaseState;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = newState;
          }
          var lastInterleaved = queue.interleaved;
          if (lastInterleaved !== null) {
            var interleaved = lastInterleaved;
            do {
              var interleavedLane = interleaved.lane;
              currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);
              markSkippedUpdateLanes(interleavedLane);
              interleaved = interleaved.next;
            } while (interleaved !== lastInterleaved);
          } else if (baseQueue === null) {
            queue.lanes = NoLanes;
          }
          var dispatch = queue.dispatch;
          return [hook.memoizedState, dispatch];
        }
        function rerenderReducer(reducer, initialArg, init) {
          var hook = updateWorkInProgressHook();
          var queue = hook.queue;
          if (queue === null) {
            throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
          }
          queue.lastRenderedReducer = reducer;
          var dispatch = queue.dispatch;
          var lastRenderPhaseUpdate = queue.pending;
          var newState = hook.memoizedState;
          if (lastRenderPhaseUpdate !== null) {
            queue.pending = null;
            var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            var update3 = firstRenderPhaseUpdate;
            do {
              var action = update3.action;
              newState = reducer(newState, action);
              update3 = update3.next;
            } while (update3 !== firstRenderPhaseUpdate);
            if (!objectIs(newState, hook.memoizedState)) {
              markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = newState;
            if (hook.baseQueue === null) {
              hook.baseState = newState;
            }
            queue.lastRenderedState = newState;
          }
          return [newState, dispatch];
        }
        function mountMutableSource(source, getSnapshot, subscribe) {
          {
            return void 0;
          }
        }
        function updateMutableSource(source, getSnapshot, subscribe) {
          {
            return void 0;
          }
        }
        function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          var fiber = currentlyRenderingFiber$1;
          var hook = mountWorkInProgressHook();
          var nextSnapshot;
          var isHydrating2 = getIsHydrating();
          if (isHydrating2) {
            if (getServerSnapshot === void 0) {
              throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            }
            nextSnapshot = getServerSnapshot();
            {
              if (!didWarnUncachedGetSnapshot) {
                if (nextSnapshot !== getServerSnapshot()) {
                  error("The result of getServerSnapshot should be cached to avoid an infinite loop");
                  didWarnUncachedGetSnapshot = true;
                }
              }
            }
          } else {
            nextSnapshot = getSnapshot();
            {
              if (!didWarnUncachedGetSnapshot) {
                var cachedSnapshot = getSnapshot();
                if (!objectIs(nextSnapshot, cachedSnapshot)) {
                  error("The result of getSnapshot should be cached to avoid an infinite loop");
                  didWarnUncachedGetSnapshot = true;
                }
              }
            }
            var root3 = getWorkInProgressRoot();
            if (root3 === null) {
              throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            }
            if (!includesBlockingLane(root3, renderLanes)) {
              pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
            }
          }
          hook.memoizedState = nextSnapshot;
          var inst = {
            value: nextSnapshot,
            getSnapshot
          };
          hook.queue = inst;
          mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);
          fiber.flags |= Passive;
          pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), void 0, null);
          return nextSnapshot;
        }
        function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          var fiber = currentlyRenderingFiber$1;
          var hook = updateWorkInProgressHook();
          var nextSnapshot = getSnapshot();
          {
            if (!didWarnUncachedGetSnapshot) {
              var cachedSnapshot = getSnapshot();
              if (!objectIs(nextSnapshot, cachedSnapshot)) {
                error("The result of getSnapshot should be cached to avoid an infinite loop");
                didWarnUncachedGetSnapshot = true;
              }
            }
          }
          var prevSnapshot = hook.memoizedState;
          var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);
          if (snapshotChanged) {
            hook.memoizedState = nextSnapshot;
            markWorkInProgressReceivedUpdate();
          }
          var inst = hook.queue;
          updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);
          if (inst.getSnapshot !== getSnapshot || snapshotChanged || workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {
            fiber.flags |= Passive;
            pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), void 0, null);
            var root3 = getWorkInProgressRoot();
            if (root3 === null) {
              throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            }
            if (!includesBlockingLane(root3, renderLanes)) {
              pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
            }
          }
          return nextSnapshot;
        }
        function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
          fiber.flags |= StoreConsistency;
          var check = {
            getSnapshot,
            value: renderedSnapshot
          };
          var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
          if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.stores = [check];
          } else {
            var stores = componentUpdateQueue.stores;
            if (stores === null) {
              componentUpdateQueue.stores = [check];
            } else {
              stores.push(check);
            }
          }
        }
        function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
          inst.value = nextSnapshot;
          inst.getSnapshot = getSnapshot;
          if (checkIfSnapshotChanged(inst)) {
            forceStoreRerender(fiber);
          }
        }
        function subscribeToStore(fiber, inst, subscribe) {
          var handleStoreChange = function() {
            if (checkIfSnapshotChanged(inst)) {
              forceStoreRerender(fiber);
            }
          };
          return subscribe(handleStoreChange);
        }
        function checkIfSnapshotChanged(inst) {
          var latestGetSnapshot = inst.getSnapshot;
          var prevValue = inst.value;
          try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
          } catch (error2) {
            return true;
          }
        }
        function forceStoreRerender(fiber) {
          var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
          if (root3 !== null) {
            scheduleUpdateOnFiber(root3, fiber, SyncLane, NoTimestamp);
          }
        }
        function mountState(initialState) {
          var hook = mountWorkInProgressHook();
          if (typeof initialState === "function") {
            initialState = initialState();
          }
          hook.memoizedState = hook.baseState = initialState;
          var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
          };
          hook.queue = queue;
          var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
          return [hook.memoizedState, dispatch];
        }
        function updateState(initialState) {
          return updateReducer(basicStateReducer);
        }
        function rerenderState(initialState) {
          return rerenderReducer(basicStateReducer);
        }
        function pushEffect(tag, create, destroy, deps) {
          var effect = {
            tag,
            create,
            destroy,
            deps,
            next: null
          };
          var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
          if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.lastEffect = effect.next = effect;
          } else {
            var lastEffect = componentUpdateQueue.lastEffect;
            if (lastEffect === null) {
              componentUpdateQueue.lastEffect = effect.next = effect;
            } else {
              var firstEffect = lastEffect.next;
              lastEffect.next = effect;
              effect.next = firstEffect;
              componentUpdateQueue.lastEffect = effect;
            }
          }
          return effect;
        }
        function mountRef(initialValue) {
          var hook = mountWorkInProgressHook();
          {
            var _ref2 = {
              current: initialValue
            };
            hook.memoizedState = _ref2;
            return _ref2;
          }
        }
        function updateRef2(initialValue) {
          var hook = updateWorkInProgressHook();
          return hook.memoizedState;
        }
        function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
          var hook = mountWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          currentlyRenderingFiber$1.flags |= fiberFlags;
          hook.memoizedState = pushEffect(HasEffect | hookFlags, create, void 0, nextDeps);
        }
        function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
          var hook = updateWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var destroy = void 0;
          if (currentHook !== null) {
            var prevEffect = currentHook.memoizedState;
            destroy = prevEffect.destroy;
            if (nextDeps !== null) {
              var prevDeps = prevEffect.deps;
              if (areHookInputsEqual(nextDeps, prevDeps)) {
                hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);
                return;
              }
            }
          }
          currentlyRenderingFiber$1.flags |= fiberFlags;
          hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
        }
        function mountEffect(create, deps) {
          if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
            return mountEffectImpl(MountPassiveDev | Passive | PassiveStatic, Passive$1, create, deps);
          } else {
            return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);
          }
        }
        function updateEffect(create, deps) {
          return updateEffectImpl(Passive, Passive$1, create, deps);
        }
        function mountInsertionEffect(create, deps) {
          return mountEffectImpl(Update, Insertion, create, deps);
        }
        function updateInsertionEffect(create, deps) {
          return updateEffectImpl(Update, Insertion, create, deps);
        }
        function mountLayoutEffect(create, deps) {
          var fiberFlags = Update;
          {
            fiberFlags |= LayoutStatic;
          }
          if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
            fiberFlags |= MountLayoutDev;
          }
          return mountEffectImpl(fiberFlags, Layout, create, deps);
        }
        function updateLayoutEffect(create, deps) {
          return updateEffectImpl(Update, Layout, create, deps);
        }
        function imperativeHandleEffect(create, ref) {
          if (typeof ref === "function") {
            var refCallback = ref;
            var _inst = create();
            refCallback(_inst);
            return function() {
              refCallback(null);
            };
          } else if (ref !== null && ref !== void 0) {
            var refObject = ref;
            {
              if (!refObject.hasOwnProperty("current")) {
                error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(refObject).join(", ") + "}");
              }
            }
            var _inst2 = create();
            refObject.current = _inst2;
            return function() {
              refObject.current = null;
            };
          }
        }
        function mountImperativeHandle(ref, create, deps) {
          {
            if (typeof create !== "function") {
              error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
            }
          }
          var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
          var fiberFlags = Update;
          {
            fiberFlags |= LayoutStatic;
          }
          if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
            fiberFlags |= MountLayoutDev;
          }
          return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
        }
        function updateImperativeHandle(ref, create, deps) {
          {
            if (typeof create !== "function") {
              error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
            }
          }
          var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
          return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
        }
        function mountDebugValue(value, formatterFn) {
        }
        var updateDebugValue = mountDebugValue;
        function mountCallback(callback, deps) {
          var hook = mountWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          hook.memoizedState = [callback, nextDeps];
          return callback;
        }
        function updateCallback(callback, deps) {
          var hook = updateWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var prevState = hook.memoizedState;
          if (prevState !== null) {
            if (nextDeps !== null) {
              var prevDeps = prevState[1];
              if (areHookInputsEqual(nextDeps, prevDeps)) {
                return prevState[0];
              }
            }
          }
          hook.memoizedState = [callback, nextDeps];
          return callback;
        }
        function mountMemo(nextCreate, deps) {
          var hook = mountWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var nextValue = nextCreate();
          hook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function updateMemo(nextCreate, deps) {
          var hook = updateWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var prevState = hook.memoizedState;
          if (prevState !== null) {
            if (nextDeps !== null) {
              var prevDeps = prevState[1];
              if (areHookInputsEqual(nextDeps, prevDeps)) {
                return prevState[0];
              }
            }
          }
          var nextValue = nextCreate();
          hook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function mountDeferredValue(value) {
          var hook = mountWorkInProgressHook();
          hook.memoizedState = value;
          return value;
        }
        function updateDeferredValue(value) {
          var hook = updateWorkInProgressHook();
          var resolvedCurrentHook = currentHook;
          var prevValue = resolvedCurrentHook.memoizedState;
          return updateDeferredValueImpl(hook, prevValue, value);
        }
        function rerenderDeferredValue(value) {
          var hook = updateWorkInProgressHook();
          if (currentHook === null) {
            hook.memoizedState = value;
            return value;
          } else {
            var prevValue = currentHook.memoizedState;
            return updateDeferredValueImpl(hook, prevValue, value);
          }
        }
        function updateDeferredValueImpl(hook, prevValue, value) {
          var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);
          if (shouldDeferValue) {
            if (!objectIs(value, prevValue)) {
              var deferredLane = claimNextTransitionLane();
              currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);
              markSkippedUpdateLanes(deferredLane);
              hook.baseState = true;
            }
            return prevValue;
          } else {
            if (hook.baseState) {
              hook.baseState = false;
              markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = value;
            return value;
          }
        }
        function startTransition(setPending, callback, options2) {
          var previousPriority = getCurrentUpdatePriority();
          setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));
          setPending(true);
          var prevTransition = ReactCurrentBatchConfig$2.transition;
          ReactCurrentBatchConfig$2.transition = {};
          var currentTransition = ReactCurrentBatchConfig$2.transition;
          {
            ReactCurrentBatchConfig$2.transition._updatedFibers = new Set();
          }
          try {
            setPending(false);
            callback();
          } finally {
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$2.transition = prevTransition;
            {
              if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) {
                  warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                }
                currentTransition._updatedFibers.clear();
              }
            }
          }
        }
        function mountTransition() {
          var _mountState = mountState(false), isPending = _mountState[0], setPending = _mountState[1];
          var start2 = startTransition.bind(null, setPending);
          var hook = mountWorkInProgressHook();
          hook.memoizedState = start2;
          return [isPending, start2];
        }
        function updateTransition() {
          var _updateState = updateState(), isPending = _updateState[0];
          var hook = updateWorkInProgressHook();
          var start2 = hook.memoizedState;
          return [isPending, start2];
        }
        function rerenderTransition() {
          var _rerenderState = rerenderState(), isPending = _rerenderState[0];
          var hook = updateWorkInProgressHook();
          var start2 = hook.memoizedState;
          return [isPending, start2];
        }
        var isUpdatingOpaqueValueInRenderPhase = false;
        function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
          {
            return isUpdatingOpaqueValueInRenderPhase;
          }
        }
        function mountId() {
          var hook = mountWorkInProgressHook();
          var root3 = getWorkInProgressRoot();
          var identifierPrefix = root3.identifierPrefix;
          var id;
          if (getIsHydrating()) {
            var treeId = getTreeId();
            id = ":" + identifierPrefix + "R" + treeId;
            var localId = localIdCounter++;
            if (localId > 0) {
              id += "H" + localId.toString(32);
            }
            id += ":";
          } else {
            var globalClientId = globalClientIdCounter++;
            id = ":" + identifierPrefix + "r" + globalClientId.toString(32) + ":";
          }
          hook.memoizedState = id;
          return id;
        }
        function updateId() {
          var hook = updateWorkInProgressHook();
          var id = hook.memoizedState;
          return id;
        }
        function dispatchReducerAction(fiber, queue, action) {
          {
            if (typeof arguments[3] === "function") {
              error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
            }
          }
          var lane = requestUpdateLane(fiber);
          var update3 = {
            lane,
            action,
            hasEagerState: false,
            eagerState: null,
            next: null
          };
          if (isRenderPhaseUpdate(fiber)) {
            enqueueRenderPhaseUpdate(queue, update3);
          } else {
            var root3 = enqueueConcurrentHookUpdate(fiber, queue, update3, lane);
            if (root3 !== null) {
              var eventTime = requestEventTime();
              scheduleUpdateOnFiber(root3, fiber, lane, eventTime);
              entangleTransitionUpdate(root3, queue, lane);
            }
          }
          markUpdateInDevTools(fiber, lane);
        }
        function dispatchSetState(fiber, queue, action) {
          {
            if (typeof arguments[3] === "function") {
              error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
            }
          }
          var lane = requestUpdateLane(fiber);
          var update3 = {
            lane,
            action,
            hasEagerState: false,
            eagerState: null,
            next: null
          };
          if (isRenderPhaseUpdate(fiber)) {
            enqueueRenderPhaseUpdate(queue, update3);
          } else {
            var alternate = fiber.alternate;
            if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
              var lastRenderedReducer = queue.lastRenderedReducer;
              if (lastRenderedReducer !== null) {
                var prevDispatcher;
                {
                  prevDispatcher = ReactCurrentDispatcher$1.current;
                  ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                }
                try {
                  var currentState = queue.lastRenderedState;
                  var eagerState = lastRenderedReducer(currentState, action);
                  update3.hasEagerState = true;
                  update3.eagerState = eagerState;
                  if (objectIs(eagerState, currentState)) {
                    enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update3, lane);
                    return;
                  }
                } catch (error2) {
                } finally {
                  {
                    ReactCurrentDispatcher$1.current = prevDispatcher;
                  }
                }
              }
            }
            var root3 = enqueueConcurrentHookUpdate(fiber, queue, update3, lane);
            if (root3 !== null) {
              var eventTime = requestEventTime();
              scheduleUpdateOnFiber(root3, fiber, lane, eventTime);
              entangleTransitionUpdate(root3, queue, lane);
            }
          }
          markUpdateInDevTools(fiber, lane);
        }
        function isRenderPhaseUpdate(fiber) {
          var alternate = fiber.alternate;
          return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;
        }
        function enqueueRenderPhaseUpdate(queue, update3) {
          didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
          var pending = queue.pending;
          if (pending === null) {
            update3.next = update3;
          } else {
            update3.next = pending.next;
            pending.next = update3;
          }
          queue.pending = update3;
        }
        function entangleTransitionUpdate(root3, queue, lane) {
          if (isTransitionLane(lane)) {
            var queueLanes = queue.lanes;
            queueLanes = intersectLanes(queueLanes, root3.pendingLanes);
            var newQueueLanes = mergeLanes(queueLanes, lane);
            queue.lanes = newQueueLanes;
            markRootEntangled(root3, newQueueLanes);
          }
        }
        function markUpdateInDevTools(fiber, lane, action) {
          {
            markStateUpdateScheduled(fiber, lane);
          }
        }
        var ContextOnlyDispatcher = {
          readContext,
          useCallback: throwInvalidHookError,
          useContext: throwInvalidHookError,
          useEffect: throwInvalidHookError,
          useImperativeHandle: throwInvalidHookError,
          useInsertionEffect: throwInvalidHookError,
          useLayoutEffect: throwInvalidHookError,
          useMemo: throwInvalidHookError,
          useReducer: throwInvalidHookError,
          useRef: throwInvalidHookError,
          useState: throwInvalidHookError,
          useDebugValue: throwInvalidHookError,
          useDeferredValue: throwInvalidHookError,
          useTransition: throwInvalidHookError,
          useMutableSource: throwInvalidHookError,
          useSyncExternalStore: throwInvalidHookError,
          useId: throwInvalidHookError,
          unstable_isNewReconciler: enableNewReconciler
        };
        var HooksDispatcherOnMountInDEV = null;
        var HooksDispatcherOnMountWithHookTypesInDEV = null;
        var HooksDispatcherOnUpdateInDEV = null;
        var HooksDispatcherOnRerenderInDEV = null;
        var InvalidNestedHooksDispatcherOnMountInDEV = null;
        var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
        var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
        {
          var warnInvalidContextAccess = function() {
            error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
          };
          var warnInvalidHookAccess = function() {
            error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
          };
          HooksDispatcherOnMountInDEV = {
            readContext: function(context) {
              return readContext(context);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountCallback(callback, deps);
            },
            useContext: function(context) {
              currentHookNameInDev = "useContext";
              mountHookTypesDev();
              return readContext(context);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              mountHookTypesDev();
              return mountRef(initialValue);
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              mountHookTypesDev();
              return mountDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              mountHookTypesDev();
              return mountDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              mountHookTypesDev();
              return mountTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              mountHookTypesDev();
              return mountMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              mountHookTypesDev();
              return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              mountHookTypesDev();
              return mountId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          HooksDispatcherOnMountWithHookTypesInDEV = {
            readContext: function(context) {
              return readContext(context);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              updateHookTypesDev();
              return mountCallback(callback, deps);
            },
            useContext: function(context) {
              currentHookNameInDev = "useContext";
              updateHookTypesDev();
              return readContext(context);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              updateHookTypesDev();
              return mountEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              updateHookTypesDev();
              return mountImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              updateHookTypesDev();
              return mountInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              updateHookTypesDev();
              return mountLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              updateHookTypesDev();
              return mountRef(initialValue);
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              updateHookTypesDev();
              return mountDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              updateHookTypesDev();
              return mountDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              updateHookTypesDev();
              return mountTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              updateHookTypesDev();
              return mountMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              updateHookTypesDev();
              return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              updateHookTypesDev();
              return mountId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          HooksDispatcherOnUpdateInDEV = {
            readContext: function(context) {
              return readContext(context);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context) {
              currentHookNameInDev = "useContext";
              updateHookTypesDev();
              return readContext(context);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              updateHookTypesDev();
              return updateInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              updateHookTypesDev();
              return updateRef2();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              updateHookTypesDev();
              return updateDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              updateHookTypesDev();
              return updateTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              updateHookTypesDev();
              return updateMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              updateHookTypesDev();
              return updateSyncExternalStore(subscribe, getSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              updateHookTypesDev();
              return updateId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          HooksDispatcherOnRerenderInDEV = {
            readContext: function(context) {
              return readContext(context);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context) {
              currentHookNameInDev = "useContext";
              updateHookTypesDev();
              return readContext(context);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              updateHookTypesDev();
              return updateInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
              try {
                return rerenderReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              updateHookTypesDev();
              return updateRef2();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
              try {
                return rerenderState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              updateHookTypesDev();
              return rerenderDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              updateHookTypesDev();
              return rerenderTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              updateHookTypesDev();
              return updateMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              updateHookTypesDev();
              return updateSyncExternalStore(subscribe, getSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              updateHookTypesDev();
              return updateId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          InvalidNestedHooksDispatcherOnMountInDEV = {
            readContext: function(context) {
              warnInvalidContextAccess();
              return readContext(context);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountCallback(callback, deps);
            },
            useContext: function(context) {
              currentHookNameInDev = "useContext";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return readContext(context);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              warnInvalidHookAccess();
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              warnInvalidHookAccess();
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountRef(initialValue);
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              warnInvalidHookAccess();
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          InvalidNestedHooksDispatcherOnUpdateInDEV = {
            readContext: function(context) {
              warnInvalidContextAccess();
              return readContext(context);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context) {
              currentHookNameInDev = "useContext";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return readContext(context);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateRef2();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateSyncExternalStore(subscribe, getSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          InvalidNestedHooksDispatcherOnRerenderInDEV = {
            readContext: function(context) {
              warnInvalidContextAccess();
              return readContext(context);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context) {
              currentHookNameInDev = "useContext";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return readContext(context);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return rerenderReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateRef2();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return rerenderState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value) {
              currentHookNameInDev = "useDeferredValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return rerenderDeferredValue(value);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return rerenderTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateSyncExternalStore(subscribe, getSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
        }
        var now$1 = Scheduler2.unstable_now;
        var commitTime = 0;
        var layoutEffectStartTime = -1;
        var profilerStartTime = -1;
        var passiveEffectStartTime = -1;
        var currentUpdateIsNested = false;
        var nestedUpdateScheduled = false;
        function isCurrentUpdateNested() {
          return currentUpdateIsNested;
        }
        function markNestedUpdateScheduled() {
          {
            nestedUpdateScheduled = true;
          }
        }
        function resetNestedUpdateFlag() {
          {
            currentUpdateIsNested = false;
            nestedUpdateScheduled = false;
          }
        }
        function syncNestedUpdateFlag() {
          {
            currentUpdateIsNested = nestedUpdateScheduled;
            nestedUpdateScheduled = false;
          }
        }
        function getCommitTime() {
          return commitTime;
        }
        function recordCommitTime() {
          commitTime = now$1();
        }
        function startProfilerTimer(fiber) {
          profilerStartTime = now$1();
          if (fiber.actualStartTime < 0) {
            fiber.actualStartTime = now$1();
          }
        }
        function stopProfilerTimerIfRunning(fiber) {
          profilerStartTime = -1;
        }
        function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
          if (profilerStartTime >= 0) {
            var elapsedTime = now$1() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            if (overrideBaseTime) {
              fiber.selfBaseDuration = elapsedTime;
            }
            profilerStartTime = -1;
          }
        }
        function recordLayoutEffectDuration(fiber) {
          if (layoutEffectStartTime >= 0) {
            var elapsedTime = now$1() - layoutEffectStartTime;
            layoutEffectStartTime = -1;
            var parentFiber = fiber.return;
            while (parentFiber !== null) {
              switch (parentFiber.tag) {
                case HostRoot:
                  var root3 = parentFiber.stateNode;
                  root3.effectDuration += elapsedTime;
                  return;
                case Profiler:
                  var parentStateNode = parentFiber.stateNode;
                  parentStateNode.effectDuration += elapsedTime;
                  return;
              }
              parentFiber = parentFiber.return;
            }
          }
        }
        function recordPassiveEffectDuration(fiber) {
          if (passiveEffectStartTime >= 0) {
            var elapsedTime = now$1() - passiveEffectStartTime;
            passiveEffectStartTime = -1;
            var parentFiber = fiber.return;
            while (parentFiber !== null) {
              switch (parentFiber.tag) {
                case HostRoot:
                  var root3 = parentFiber.stateNode;
                  if (root3 !== null) {
                    root3.passiveEffectDuration += elapsedTime;
                  }
                  return;
                case Profiler:
                  var parentStateNode = parentFiber.stateNode;
                  if (parentStateNode !== null) {
                    parentStateNode.passiveEffectDuration += elapsedTime;
                  }
                  return;
              }
              parentFiber = parentFiber.return;
            }
          }
        }
        function startLayoutEffectTimer() {
          layoutEffectStartTime = now$1();
        }
        function startPassiveEffectTimer() {
          passiveEffectStartTime = now$1();
        }
        function transferActualDuration(fiber) {
          var child = fiber.child;
          while (child) {
            fiber.actualDuration += child.actualDuration;
            child = child.sibling;
          }
        }
        function createCapturedValueAtFiber(value, source) {
          return {
            value,
            source,
            stack: getStackByFiberInDevAndProd(source),
            digest: null
          };
        }
        function createCapturedValue(value, digest, stack) {
          return {
            value,
            source: null,
            stack: stack != null ? stack : null,
            digest: digest != null ? digest : null
          };
        }
        function showErrorDialog(boundary, errorInfo) {
          return true;
        }
        function logCapturedError(boundary, errorInfo) {
          try {
            var logError = showErrorDialog(boundary, errorInfo);
            if (logError === false) {
              return;
            }
            var error2 = errorInfo.value;
            if (true) {
              var source = errorInfo.source;
              var stack = errorInfo.stack;
              var componentStack = stack !== null ? stack : "";
              if (error2 != null && error2._suppressLogging) {
                if (boundary.tag === ClassComponent) {
                  return;
                }
                console["error"](error2);
              }
              var componentName = source ? getComponentNameFromFiber(source) : null;
              var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : "The above error occurred in one of your React components:";
              var errorBoundaryMessage;
              if (boundary.tag === HostRoot) {
                errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries.";
              } else {
                var errorBoundaryName = getComponentNameFromFiber(boundary) || "Anonymous";
                errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
              }
              var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage);
              console["error"](combinedMessage);
            } else {
              console["error"](error2);
            }
          } catch (e15) {
            setTimeout(function() {
              throw e15;
            });
          }
        }
        var PossiblyWeakMap$1 = typeof WeakMap === "function" ? WeakMap : Map;
        function createRootErrorUpdate(fiber, errorInfo, lane) {
          var update3 = createUpdate2(NoTimestamp, lane);
          update3.tag = CaptureUpdate;
          update3.payload = {
            element: null
          };
          var error2 = errorInfo.value;
          update3.callback = function() {
            onUncaughtError(error2);
            logCapturedError(fiber, errorInfo);
          };
          return update3;
        }
        function createClassErrorUpdate(fiber, errorInfo, lane) {
          var update3 = createUpdate2(NoTimestamp, lane);
          update3.tag = CaptureUpdate;
          var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
          if (typeof getDerivedStateFromError === "function") {
            var error$1 = errorInfo.value;
            update3.payload = function() {
              return getDerivedStateFromError(error$1);
            };
            update3.callback = function() {
              {
                markFailedErrorBoundaryForHotReloading(fiber);
              }
              logCapturedError(fiber, errorInfo);
            };
          }
          var inst = fiber.stateNode;
          if (inst !== null && typeof inst.componentDidCatch === "function") {
            update3.callback = function callback() {
              {
                markFailedErrorBoundaryForHotReloading(fiber);
              }
              logCapturedError(fiber, errorInfo);
              if (typeof getDerivedStateFromError !== "function") {
                markLegacyErrorBoundaryAsFailed(this);
              }
              var error$12 = errorInfo.value;
              var stack = errorInfo.stack;
              this.componentDidCatch(error$12, {
                componentStack: stack !== null ? stack : ""
              });
              {
                if (typeof getDerivedStateFromError !== "function") {
                  if (!includesSomeLane(fiber.lanes, SyncLane)) {
                    error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentNameFromFiber(fiber) || "Unknown");
                  }
                }
              }
            };
          }
          return update3;
        }
        function attachPingListener(root3, wakeable, lanes) {
          var pingCache = root3.pingCache;
          var threadIDs;
          if (pingCache === null) {
            pingCache = root3.pingCache = new PossiblyWeakMap$1();
            threadIDs = new Set();
            pingCache.set(wakeable, threadIDs);
          } else {
            threadIDs = pingCache.get(wakeable);
            if (threadIDs === void 0) {
              threadIDs = new Set();
              pingCache.set(wakeable, threadIDs);
            }
          }
          if (!threadIDs.has(lanes)) {
            threadIDs.add(lanes);
            var ping = pingSuspendedRoot.bind(null, root3, wakeable, lanes);
            {
              if (isDevToolsPresent) {
                restorePendingUpdaters(root3, lanes);
              }
            }
            wakeable.then(ping, ping);
          }
        }
        function attachRetryListener(suspenseBoundary, root3, wakeable, lanes) {
          var wakeables = suspenseBoundary.updateQueue;
          if (wakeables === null) {
            var updateQueue2 = new Set();
            updateQueue2.add(wakeable);
            suspenseBoundary.updateQueue = updateQueue2;
          } else {
            wakeables.add(wakeable);
          }
        }
        function resetSuspendedComponent(sourceFiber, rootRenderLanes) {
          var tag = sourceFiber.tag;
          if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {
            var currentSource = sourceFiber.alternate;
            if (currentSource) {
              sourceFiber.updateQueue = currentSource.updateQueue;
              sourceFiber.memoizedState = currentSource.memoizedState;
              sourceFiber.lanes = currentSource.lanes;
            } else {
              sourceFiber.updateQueue = null;
              sourceFiber.memoizedState = null;
            }
          }
        }
        function getNearestSuspenseBoundaryToCapture(returnFiber) {
          var node = returnFiber;
          do {
            if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {
              return node;
            }
            node = node.return;
          } while (node !== null);
          return null;
        }
        function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root3, rootRenderLanes) {
          if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {
            if (suspenseBoundary === returnFiber) {
              suspenseBoundary.flags |= ShouldCapture;
            } else {
              suspenseBoundary.flags |= DidCapture;
              sourceFiber.flags |= ForceUpdateForLegacySuspense;
              sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);
              if (sourceFiber.tag === ClassComponent) {
                var currentSourceFiber = sourceFiber.alternate;
                if (currentSourceFiber === null) {
                  sourceFiber.tag = IncompleteClassComponent;
                } else {
                  var update3 = createUpdate2(NoTimestamp, SyncLane);
                  update3.tag = ForceUpdate;
                  enqueueUpdate(sourceFiber, update3, SyncLane);
                }
              }
              sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
            }
            return suspenseBoundary;
          }
          suspenseBoundary.flags |= ShouldCapture;
          suspenseBoundary.lanes = rootRenderLanes;
          return suspenseBoundary;
        }
        function throwException(root3, returnFiber, sourceFiber, value, rootRenderLanes) {
          sourceFiber.flags |= Incomplete;
          {
            if (isDevToolsPresent) {
              restorePendingUpdaters(root3, rootRenderLanes);
            }
          }
          if (value !== null && typeof value === "object" && typeof value.then === "function") {
            var wakeable = value;
            resetSuspendedComponent(sourceFiber);
            {
              if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
                markDidThrowWhileHydratingDEV();
              }
            }
            var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
            if (suspenseBoundary !== null) {
              suspenseBoundary.flags &= ~ForceClientRender;
              markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root3, rootRenderLanes);
              if (suspenseBoundary.mode & ConcurrentMode) {
                attachPingListener(root3, wakeable, rootRenderLanes);
              }
              attachRetryListener(suspenseBoundary, root3, wakeable);
              return;
            } else {
              if (!includesSyncLane(rootRenderLanes)) {
                attachPingListener(root3, wakeable, rootRenderLanes);
                renderDidSuspendDelayIfPossible();
                return;
              }
              var uncaughtSuspenseError = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
              value = uncaughtSuspenseError;
            }
          } else {
            if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
              markDidThrowWhileHydratingDEV();
              var _suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
              if (_suspenseBoundary !== null) {
                if ((_suspenseBoundary.flags & ShouldCapture) === NoFlags) {
                  _suspenseBoundary.flags |= ForceClientRender;
                }
                markSuspenseBoundaryShouldCapture(_suspenseBoundary, returnFiber, sourceFiber, root3, rootRenderLanes);
                queueHydrationError(createCapturedValueAtFiber(value, sourceFiber));
                return;
              }
            }
          }
          value = createCapturedValueAtFiber(value, sourceFiber);
          renderDidError(value);
          var workInProgress2 = returnFiber;
          do {
            switch (workInProgress2.tag) {
              case HostRoot: {
                var _errorInfo = value;
                workInProgress2.flags |= ShouldCapture;
                var lane = pickArbitraryLane(rootRenderLanes);
                workInProgress2.lanes = mergeLanes(workInProgress2.lanes, lane);
                var update3 = createRootErrorUpdate(workInProgress2, _errorInfo, lane);
                enqueueCapturedUpdate(workInProgress2, update3);
                return;
              }
              case ClassComponent:
                var errorInfo = value;
                var ctor = workInProgress2.type;
                var instance = workInProgress2.stateNode;
                if ((workInProgress2.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === "function" || instance !== null && typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                  workInProgress2.flags |= ShouldCapture;
                  var _lane = pickArbitraryLane(rootRenderLanes);
                  workInProgress2.lanes = mergeLanes(workInProgress2.lanes, _lane);
                  var _update = createClassErrorUpdate(workInProgress2, errorInfo, _lane);
                  enqueueCapturedUpdate(workInProgress2, _update);
                  return;
                }
                break;
            }
            workInProgress2 = workInProgress2.return;
          } while (workInProgress2 !== null);
        }
        function getSuspendedCache() {
          {
            return null;
          }
        }
        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
        var didReceiveUpdate = false;
        var didWarnAboutBadClass;
        var didWarnAboutModulePatternComponent;
        var didWarnAboutContextTypeOnFunctionComponent;
        var didWarnAboutGetDerivedStateOnFunctionComponent;
        var didWarnAboutFunctionRefs;
        var didWarnAboutReassigningProps;
        var didWarnAboutRevealOrder;
        var didWarnAboutTailOptions;
        {
          didWarnAboutBadClass = {};
          didWarnAboutModulePatternComponent = {};
          didWarnAboutContextTypeOnFunctionComponent = {};
          didWarnAboutGetDerivedStateOnFunctionComponent = {};
          didWarnAboutFunctionRefs = {};
          didWarnAboutReassigningProps = false;
          didWarnAboutRevealOrder = {};
          didWarnAboutTailOptions = {};
        }
        function reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2) {
          if (current2 === null) {
            workInProgress2.child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
          } else {
            workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, nextChildren, renderLanes2);
          }
        }
        function forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2) {
          workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
          workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
        }
        function updateForwardRef(current2, workInProgress2, Component, nextProps, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var innerPropTypes = Component.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(Component));
              }
            }
          }
          var render2 = Component.render;
          var ref = workInProgress2.ref;
          var nextChildren;
          var hasId;
          prepareToReadContext(workInProgress2, renderLanes2);
          {
            markComponentRenderStarted(workInProgress2);
          }
          {
            ReactCurrentOwner$1.current = workInProgress2;
            setIsRendering(true);
            nextChildren = renderWithHooks(current2, workInProgress2, render2, nextProps, ref, renderLanes2);
            hasId = checkDidRenderIdHook();
            if (workInProgress2.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(true);
              try {
                nextChildren = renderWithHooks(current2, workInProgress2, render2, nextProps, ref, renderLanes2);
                hasId = checkDidRenderIdHook();
              } finally {
                setIsStrictModeForDevtools(false);
              }
            }
            setIsRendering(false);
          }
          {
            markComponentRenderStopped();
          }
          if (current2 !== null && !didReceiveUpdate) {
            bailoutHooks(current2, workInProgress2, renderLanes2);
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          if (getIsHydrating() && hasId) {
            pushMaterializedTreeId(workInProgress2);
          }
          workInProgress2.flags |= PerformedWork;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateMemoComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
          if (current2 === null) {
            var type2 = Component.type;
            if (isSimpleFunctionComponent(type2) && Component.compare === null && Component.defaultProps === void 0) {
              var resolvedType = type2;
              {
                resolvedType = resolveFunctionForHotReloading(type2);
              }
              workInProgress2.tag = SimpleMemoComponent;
              workInProgress2.type = resolvedType;
              {
                validateFunctionComponentInDev(workInProgress2, type2);
              }
              return updateSimpleMemoComponent(current2, workInProgress2, resolvedType, nextProps, renderLanes2);
            }
            {
              var innerPropTypes = type2.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(type2));
              }
            }
            var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress2, workInProgress2.mode, renderLanes2);
            child.ref = workInProgress2.ref;
            child.return = workInProgress2;
            workInProgress2.child = child;
            return child;
          }
          {
            var _type = Component.type;
            var _innerPropTypes = _type.propTypes;
            if (_innerPropTypes) {
              checkPropTypes(_innerPropTypes, nextProps, "prop", getComponentNameFromType(_type));
            }
          }
          var currentChild = current2.child;
          var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current2, renderLanes2);
          if (!hasScheduledUpdateOrContext) {
            var prevProps = currentChild.memoizedProps;
            var compare = Component.compare;
            compare = compare !== null ? compare : shallowEqual2;
            if (compare(prevProps, nextProps) && current2.ref === workInProgress2.ref) {
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            }
          }
          workInProgress2.flags |= PerformedWork;
          var newChild = createWorkInProgress(currentChild, nextProps);
          newChild.ref = workInProgress2.ref;
          newChild.return = workInProgress2;
          workInProgress2.child = newChild;
          return newChild;
        }
        function updateSimpleMemoComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var outerMemoType = workInProgress2.elementType;
              if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                var lazyComponent = outerMemoType;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  outerMemoType = init(payload);
                } catch (x7) {
                  outerMemoType = null;
                }
                var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                if (outerPropTypes) {
                  checkPropTypes(outerPropTypes, nextProps, "prop", getComponentNameFromType(outerMemoType));
                }
              }
            }
          }
          if (current2 !== null) {
            var prevProps = current2.memoizedProps;
            if (shallowEqual2(prevProps, nextProps) && current2.ref === workInProgress2.ref && workInProgress2.type === current2.type) {
              didReceiveUpdate = false;
              workInProgress2.pendingProps = nextProps = prevProps;
              if (!checkScheduledUpdateOrContext(current2, renderLanes2)) {
                workInProgress2.lanes = current2.lanes;
                return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
              } else if ((current2.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
                didReceiveUpdate = true;
              }
            }
          }
          return updateFunctionComponent(current2, workInProgress2, Component, nextProps, renderLanes2);
        }
        function updateOffscreenComponent(current2, workInProgress2, renderLanes2) {
          var nextProps = workInProgress2.pendingProps;
          var nextChildren = nextProps.children;
          var prevState = current2 !== null ? current2.memoizedState : null;
          if (nextProps.mode === "hidden" || enableLegacyHidden) {
            if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
              var nextState = {
                baseLanes: NoLanes,
                cachePool: null,
                transitions: null
              };
              workInProgress2.memoizedState = nextState;
              pushRenderLanes(workInProgress2, renderLanes2);
            } else if (!includesSomeLane(renderLanes2, OffscreenLane)) {
              var spawnedCachePool = null;
              var nextBaseLanes;
              if (prevState !== null) {
                var prevBaseLanes = prevState.baseLanes;
                nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes2);
              } else {
                nextBaseLanes = renderLanes2;
              }
              workInProgress2.lanes = workInProgress2.childLanes = laneToLanes(OffscreenLane);
              var _nextState = {
                baseLanes: nextBaseLanes,
                cachePool: spawnedCachePool,
                transitions: null
              };
              workInProgress2.memoizedState = _nextState;
              workInProgress2.updateQueue = null;
              pushRenderLanes(workInProgress2, nextBaseLanes);
              return null;
            } else {
              var _nextState2 = {
                baseLanes: NoLanes,
                cachePool: null,
                transitions: null
              };
              workInProgress2.memoizedState = _nextState2;
              var subtreeRenderLanes2 = prevState !== null ? prevState.baseLanes : renderLanes2;
              pushRenderLanes(workInProgress2, subtreeRenderLanes2);
            }
          } else {
            var _subtreeRenderLanes;
            if (prevState !== null) {
              _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes2);
              workInProgress2.memoizedState = null;
            } else {
              _subtreeRenderLanes = renderLanes2;
            }
            pushRenderLanes(workInProgress2, _subtreeRenderLanes);
          }
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateFragment(current2, workInProgress2, renderLanes2) {
          var nextChildren = workInProgress2.pendingProps;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateMode(current2, workInProgress2, renderLanes2) {
          var nextChildren = workInProgress2.pendingProps.children;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateProfiler(current2, workInProgress2, renderLanes2) {
          {
            workInProgress2.flags |= Update;
            {
              var stateNode = workInProgress2.stateNode;
              stateNode.effectDuration = 0;
              stateNode.passiveEffectDuration = 0;
            }
          }
          var nextProps = workInProgress2.pendingProps;
          var nextChildren = nextProps.children;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function markRef(current2, workInProgress2) {
          var ref = workInProgress2.ref;
          if (current2 === null && ref !== null || current2 !== null && current2.ref !== ref) {
            workInProgress2.flags |= Ref;
            {
              workInProgress2.flags |= RefStatic;
            }
          }
        }
        function updateFunctionComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var innerPropTypes = Component.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(Component));
              }
            }
          }
          var context;
          {
            var unmaskedContext = getUnmaskedContext(workInProgress2, Component, true);
            context = getMaskedContext(workInProgress2, unmaskedContext);
          }
          var nextChildren;
          var hasId;
          prepareToReadContext(workInProgress2, renderLanes2);
          {
            markComponentRenderStarted(workInProgress2);
          }
          {
            ReactCurrentOwner$1.current = workInProgress2;
            setIsRendering(true);
            nextChildren = renderWithHooks(current2, workInProgress2, Component, nextProps, context, renderLanes2);
            hasId = checkDidRenderIdHook();
            if (workInProgress2.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(true);
              try {
                nextChildren = renderWithHooks(current2, workInProgress2, Component, nextProps, context, renderLanes2);
                hasId = checkDidRenderIdHook();
              } finally {
                setIsStrictModeForDevtools(false);
              }
            }
            setIsRendering(false);
          }
          {
            markComponentRenderStopped();
          }
          if (current2 !== null && !didReceiveUpdate) {
            bailoutHooks(current2, workInProgress2, renderLanes2);
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          if (getIsHydrating() && hasId) {
            pushMaterializedTreeId(workInProgress2);
          }
          workInProgress2.flags |= PerformedWork;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateClassComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
          {
            switch (shouldError(workInProgress2)) {
              case false: {
                var _instance = workInProgress2.stateNode;
                var ctor = workInProgress2.type;
                var tempInstance = new ctor(workInProgress2.memoizedProps, _instance.context);
                var state = tempInstance.state;
                _instance.updater.enqueueSetState(_instance, state, null);
                break;
              }
              case true: {
                workInProgress2.flags |= DidCapture;
                workInProgress2.flags |= ShouldCapture;
                var error$1 = new Error("Simulated error coming from DevTools");
                var lane = pickArbitraryLane(renderLanes2);
                workInProgress2.lanes = mergeLanes(workInProgress2.lanes, lane);
                var update3 = createClassErrorUpdate(workInProgress2, createCapturedValueAtFiber(error$1, workInProgress2), lane);
                enqueueCapturedUpdate(workInProgress2, update3);
                break;
              }
            }
            if (workInProgress2.type !== workInProgress2.elementType) {
              var innerPropTypes = Component.propTypes;
              if (innerPropTypes) {
                checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(Component));
              }
            }
          }
          var hasContext;
          if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress2);
          } else {
            hasContext = false;
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          var instance = workInProgress2.stateNode;
          var shouldUpdate;
          if (instance === null) {
            resetSuspendedCurrentOnMountInLegacyMode(current2, workInProgress2);
            constructClassInstance(workInProgress2, Component, nextProps);
            mountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
            shouldUpdate = true;
          } else if (current2 === null) {
            shouldUpdate = resumeMountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
          } else {
            shouldUpdate = updateClassInstance(current2, workInProgress2, Component, nextProps, renderLanes2);
          }
          var nextUnitOfWork = finishClassComponent(current2, workInProgress2, Component, shouldUpdate, hasContext, renderLanes2);
          {
            var inst = workInProgress2.stateNode;
            if (shouldUpdate && inst.props !== nextProps) {
              if (!didWarnAboutReassigningProps) {
                error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromFiber(workInProgress2) || "a component");
              }
              didWarnAboutReassigningProps = true;
            }
          }
          return nextUnitOfWork;
        }
        function finishClassComponent(current2, workInProgress2, Component, shouldUpdate, hasContext, renderLanes2) {
          markRef(current2, workInProgress2);
          var didCaptureError = (workInProgress2.flags & DidCapture) !== NoFlags;
          if (!shouldUpdate && !didCaptureError) {
            if (hasContext) {
              invalidateContextProvider(workInProgress2, Component, false);
            }
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          var instance = workInProgress2.stateNode;
          ReactCurrentOwner$1.current = workInProgress2;
          var nextChildren;
          if (didCaptureError && typeof Component.getDerivedStateFromError !== "function") {
            nextChildren = null;
            {
              stopProfilerTimerIfRunning();
            }
          } else {
            {
              markComponentRenderStarted(workInProgress2);
            }
            {
              setIsRendering(true);
              nextChildren = instance.render();
              if (workInProgress2.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                  instance.render();
                } finally {
                  setIsStrictModeForDevtools(false);
                }
              }
              setIsRendering(false);
            }
            {
              markComponentRenderStopped();
            }
          }
          workInProgress2.flags |= PerformedWork;
          if (current2 !== null && didCaptureError) {
            forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2);
          } else {
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          }
          workInProgress2.memoizedState = instance.state;
          if (hasContext) {
            invalidateContextProvider(workInProgress2, Component, true);
          }
          return workInProgress2.child;
        }
        function pushHostRootContext(workInProgress2) {
          var root3 = workInProgress2.stateNode;
          if (root3.pendingContext) {
            pushTopLevelContextObject(workInProgress2, root3.pendingContext, root3.pendingContext !== root3.context);
          } else if (root3.context) {
            pushTopLevelContextObject(workInProgress2, root3.context, false);
          }
          pushHostContainer(workInProgress2, root3.containerInfo);
        }
        function updateHostRoot(current2, workInProgress2, renderLanes2) {
          pushHostRootContext(workInProgress2);
          if (current2 === null) {
            throw new Error("Should have a current fiber. This is a bug in React.");
          }
          var nextProps = workInProgress2.pendingProps;
          var prevState = workInProgress2.memoizedState;
          var prevChildren = prevState.element;
          cloneUpdateQueue(current2, workInProgress2);
          processUpdateQueue(workInProgress2, nextProps, null, renderLanes2);
          var nextState = workInProgress2.memoizedState;
          var root3 = workInProgress2.stateNode;
          var nextChildren = nextState.element;
          if (prevState.isDehydrated) {
            var overrideState = {
              element: nextChildren,
              isDehydrated: false,
              cache: nextState.cache,
              pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,
              transitions: nextState.transitions
            };
            var updateQueue2 = workInProgress2.updateQueue;
            updateQueue2.baseState = overrideState;
            workInProgress2.memoizedState = overrideState;
            if (workInProgress2.flags & ForceClientRender) {
              var recoverableError = createCapturedValueAtFiber(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), workInProgress2);
              return mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, recoverableError);
            } else if (nextChildren !== prevChildren) {
              var _recoverableError = createCapturedValueAtFiber(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), workInProgress2);
              return mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, _recoverableError);
            } else {
              enterHydrationState(workInProgress2);
              var child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
              workInProgress2.child = child;
              var node = child;
              while (node) {
                node.flags = node.flags & ~Placement | Hydrating;
                node = node.sibling;
              }
            }
          } else {
            resetHydrationState();
            if (nextChildren === prevChildren) {
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            }
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          }
          return workInProgress2.child;
        }
        function mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, recoverableError) {
          resetHydrationState();
          queueHydrationError(recoverableError);
          workInProgress2.flags |= ForceClientRender;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateHostComponent(current2, workInProgress2, renderLanes2) {
          pushHostContext(workInProgress2);
          if (current2 === null) {
            tryToClaimNextHydratableInstance(workInProgress2);
          }
          var type2 = workInProgress2.type;
          var nextProps = workInProgress2.pendingProps;
          var prevProps = current2 !== null ? current2.memoizedProps : null;
          var nextChildren = nextProps.children;
          var isDirectTextChild = shouldSetTextContent(type2, nextProps);
          if (isDirectTextChild) {
            nextChildren = null;
          } else if (prevProps !== null && shouldSetTextContent(type2, prevProps)) {
            workInProgress2.flags |= ContentReset;
          }
          markRef(current2, workInProgress2);
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateHostText(current2, workInProgress2) {
          if (current2 === null) {
            tryToClaimNextHydratableInstance(workInProgress2);
          }
          return null;
        }
        function mountLazyComponent(_current, workInProgress2, elementType, renderLanes2) {
          resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
          var props = workInProgress2.pendingProps;
          var lazyComponent = elementType;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;
          var Component = init(payload);
          workInProgress2.type = Component;
          var resolvedTag = workInProgress2.tag = resolveLazyComponentTag(Component);
          var resolvedProps = resolveDefaultProps(Component, props);
          var child;
          switch (resolvedTag) {
            case FunctionComponent: {
              {
                validateFunctionComponentInDev(workInProgress2, Component);
                workInProgress2.type = Component = resolveFunctionForHotReloading(Component);
              }
              child = updateFunctionComponent(null, workInProgress2, Component, resolvedProps, renderLanes2);
              return child;
            }
            case ClassComponent: {
              {
                workInProgress2.type = Component = resolveClassForHotReloading(Component);
              }
              child = updateClassComponent(null, workInProgress2, Component, resolvedProps, renderLanes2);
              return child;
            }
            case ForwardRef: {
              {
                workInProgress2.type = Component = resolveForwardRefForHotReloading(Component);
              }
              child = updateForwardRef(null, workInProgress2, Component, resolvedProps, renderLanes2);
              return child;
            }
            case MemoComponent: {
              {
                if (workInProgress2.type !== workInProgress2.elementType) {
                  var outerPropTypes = Component.propTypes;
                  if (outerPropTypes) {
                    checkPropTypes(outerPropTypes, resolvedProps, "prop", getComponentNameFromType(Component));
                  }
                }
              }
              child = updateMemoComponent(null, workInProgress2, Component, resolveDefaultProps(Component.type, resolvedProps), renderLanes2);
              return child;
            }
          }
          var hint = "";
          {
            if (Component !== null && typeof Component === "object" && Component.$$typeof === REACT_LAZY_TYPE) {
              hint = " Did you wrap a component in React.lazy() more than once?";
            }
          }
          throw new Error("Element type is invalid. Received a promise that resolves to: " + Component + ". " + ("Lazy element type must resolve to a class or function." + hint));
        }
        function mountIncompleteClassComponent(_current, workInProgress2, Component, nextProps, renderLanes2) {
          resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
          workInProgress2.tag = ClassComponent;
          var hasContext;
          if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress2);
          } else {
            hasContext = false;
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          constructClassInstance(workInProgress2, Component, nextProps);
          mountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
          return finishClassComponent(null, workInProgress2, Component, true, hasContext, renderLanes2);
        }
        function mountIndeterminateComponent(_current, workInProgress2, Component, renderLanes2) {
          resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
          var props = workInProgress2.pendingProps;
          var context;
          {
            var unmaskedContext = getUnmaskedContext(workInProgress2, Component, false);
            context = getMaskedContext(workInProgress2, unmaskedContext);
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          var value;
          var hasId;
          {
            markComponentRenderStarted(workInProgress2);
          }
          {
            if (Component.prototype && typeof Component.prototype.render === "function") {
              var componentName = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutBadClass[componentName]) {
                error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
              }
            }
            if (workInProgress2.mode & StrictLegacyMode) {
              ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, null);
            }
            setIsRendering(true);
            ReactCurrentOwner$1.current = workInProgress2;
            value = renderWithHooks(null, workInProgress2, Component, props, context, renderLanes2);
            hasId = checkDidRenderIdHook();
            setIsRendering(false);
          }
          {
            markComponentRenderStopped();
          }
          workInProgress2.flags |= PerformedWork;
          {
            if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
              var _componentName = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
              }
            }
          }
          if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
            {
              var _componentName2 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
              }
            }
            workInProgress2.tag = ClassComponent;
            workInProgress2.memoizedState = null;
            workInProgress2.updateQueue = null;
            var hasContext = false;
            if (isContextProvider(Component)) {
              hasContext = true;
              pushContextProvider(workInProgress2);
            } else {
              hasContext = false;
            }
            workInProgress2.memoizedState = value.state !== null && value.state !== void 0 ? value.state : null;
            initializeUpdateQueue(workInProgress2);
            adoptClassInstance(workInProgress2, value);
            mountClassInstance(workInProgress2, Component, props, renderLanes2);
            return finishClassComponent(null, workInProgress2, Component, true, hasContext, renderLanes2);
          } else {
            workInProgress2.tag = FunctionComponent;
            {
              if (workInProgress2.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                  value = renderWithHooks(null, workInProgress2, Component, props, context, renderLanes2);
                  hasId = checkDidRenderIdHook();
                } finally {
                  setIsStrictModeForDevtools(false);
                }
              }
            }
            if (getIsHydrating() && hasId) {
              pushMaterializedTreeId(workInProgress2);
            }
            reconcileChildren(null, workInProgress2, value, renderLanes2);
            {
              validateFunctionComponentInDev(workInProgress2, Component);
            }
            return workInProgress2.child;
          }
        }
        function validateFunctionComponentInDev(workInProgress2, Component) {
          {
            if (Component) {
              if (Component.childContextTypes) {
                error("%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component");
              }
            }
            if (workInProgress2.ref !== null) {
              var info = "";
              var ownerName = getCurrentFiberOwnerNameInDevOrNull();
              if (ownerName) {
                info += "\n\nCheck the render method of `" + ownerName + "`.";
              }
              var warningKey = ownerName || "";
              var debugSource = workInProgress2._debugSource;
              if (debugSource) {
                warningKey = debugSource.fileName + ":" + debugSource.lineNumber;
              }
              if (!didWarnAboutFunctionRefs[warningKey]) {
                didWarnAboutFunctionRefs[warningKey] = true;
                error("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
              }
            }
            if (typeof Component.getDerivedStateFromProps === "function") {
              var _componentName3 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
              }
            }
            if (typeof Component.contextType === "object" && Component.contextType !== null) {
              var _componentName4 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error("%s: Function components do not support contextType.", _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
              }
            }
          }
        }
        var SUSPENDED_MARKER = {
          dehydrated: null,
          treeContext: null,
          retryLane: NoLane
        };
        function mountSuspenseOffscreenState(renderLanes2) {
          return {
            baseLanes: renderLanes2,
            cachePool: getSuspendedCache(),
            transitions: null
          };
        }
        function updateSuspenseOffscreenState(prevOffscreenState, renderLanes2) {
          var cachePool = null;
          return {
            baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes2),
            cachePool,
            transitions: prevOffscreenState.transitions
          };
        }
        function shouldRemainOnFallback(suspenseContext, current2, workInProgress2, renderLanes2) {
          if (current2 !== null) {
            var suspenseState = current2.memoizedState;
            if (suspenseState === null) {
              return false;
            }
          }
          return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
        }
        function getRemainingWorkInPrimaryTree(current2, renderLanes2) {
          return removeLanes(current2.childLanes, renderLanes2);
        }
        function updateSuspenseComponent(current2, workInProgress2, renderLanes2) {
          var nextProps = workInProgress2.pendingProps;
          {
            if (shouldSuspend(workInProgress2)) {
              workInProgress2.flags |= DidCapture;
            }
          }
          var suspenseContext = suspenseStackCursor.current;
          var showFallback = false;
          var didSuspend = (workInProgress2.flags & DidCapture) !== NoFlags;
          if (didSuspend || shouldRemainOnFallback(suspenseContext, current2)) {
            showFallback = true;
            workInProgress2.flags &= ~DidCapture;
          } else {
            if (current2 === null || current2.memoizedState !== null) {
              {
                suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
              }
            }
          }
          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          pushSuspenseContext(workInProgress2, suspenseContext);
          if (current2 === null) {
            tryToClaimNextHydratableInstance(workInProgress2);
            var suspenseState = workInProgress2.memoizedState;
            if (suspenseState !== null) {
              var dehydrated = suspenseState.dehydrated;
              if (dehydrated !== null) {
                return mountDehydratedSuspenseComponent(workInProgress2, dehydrated);
              }
            }
            var nextPrimaryChildren = nextProps.children;
            var nextFallbackChildren = nextProps.fallback;
            if (showFallback) {
              var fallbackFragment = mountSuspenseFallbackChildren(workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2);
              var primaryChildFragment = workInProgress2.child;
              primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes2);
              workInProgress2.memoizedState = SUSPENDED_MARKER;
              return fallbackFragment;
            } else {
              return mountSuspensePrimaryChildren(workInProgress2, nextPrimaryChildren);
            }
          } else {
            var prevState = current2.memoizedState;
            if (prevState !== null) {
              var _dehydrated = prevState.dehydrated;
              if (_dehydrated !== null) {
                return updateDehydratedSuspenseComponent(current2, workInProgress2, didSuspend, nextProps, _dehydrated, prevState, renderLanes2);
              }
            }
            if (showFallback) {
              var _nextFallbackChildren = nextProps.fallback;
              var _nextPrimaryChildren = nextProps.children;
              var fallbackChildFragment = updateSuspenseFallbackChildren(current2, workInProgress2, _nextPrimaryChildren, _nextFallbackChildren, renderLanes2);
              var _primaryChildFragment2 = workInProgress2.child;
              var prevOffscreenState = current2.child.memoizedState;
              _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes2) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes2);
              _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current2, renderLanes2);
              workInProgress2.memoizedState = SUSPENDED_MARKER;
              return fallbackChildFragment;
            } else {
              var _nextPrimaryChildren2 = nextProps.children;
              var _primaryChildFragment3 = updateSuspensePrimaryChildren(current2, workInProgress2, _nextPrimaryChildren2, renderLanes2);
              workInProgress2.memoizedState = null;
              return _primaryChildFragment3;
            }
          }
        }
        function mountSuspensePrimaryChildren(workInProgress2, primaryChildren, renderLanes2) {
          var mode = workInProgress2.mode;
          var primaryChildProps = {
            mode: "visible",
            children: primaryChildren
          };
          var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
          primaryChildFragment.return = workInProgress2;
          workInProgress2.child = primaryChildFragment;
          return primaryChildFragment;
        }
        function mountSuspenseFallbackChildren(workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
          var mode = workInProgress2.mode;
          var progressedPrimaryFragment = workInProgress2.child;
          var primaryChildProps = {
            mode: "hidden",
            children: primaryChildren
          };
          var primaryChildFragment;
          var fallbackChildFragment;
          if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress2.mode & ProfileMode) {
              primaryChildFragment.actualDuration = 0;
              primaryChildFragment.actualStartTime = -1;
              primaryChildFragment.selfBaseDuration = 0;
              primaryChildFragment.treeBaseDuration = 0;
            }
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
          } else {
            primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
          }
          primaryChildFragment.return = workInProgress2;
          fallbackChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = fallbackChildFragment;
          workInProgress2.child = primaryChildFragment;
          return fallbackChildFragment;
        }
        function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes2) {
          return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);
        }
        function updateWorkInProgressOffscreenFiber(current2, offscreenProps) {
          return createWorkInProgress(current2, offscreenProps);
        }
        function updateSuspensePrimaryChildren(current2, workInProgress2, primaryChildren, renderLanes2) {
          var currentPrimaryChildFragment = current2.child;
          var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
          var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
            mode: "visible",
            children: primaryChildren
          });
          if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
            primaryChildFragment.lanes = renderLanes2;
          }
          primaryChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = null;
          if (currentFallbackChildFragment !== null) {
            var deletions = workInProgress2.deletions;
            if (deletions === null) {
              workInProgress2.deletions = [currentFallbackChildFragment];
              workInProgress2.flags |= ChildDeletion;
            } else {
              deletions.push(currentFallbackChildFragment);
            }
          }
          workInProgress2.child = primaryChildFragment;
          return primaryChildFragment;
        }
        function updateSuspenseFallbackChildren(current2, workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
          var mode = workInProgress2.mode;
          var currentPrimaryChildFragment = current2.child;
          var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
          var primaryChildProps = {
            mode: "hidden",
            children: primaryChildren
          };
          var primaryChildFragment;
          if ((mode & ConcurrentMode) === NoMode && workInProgress2.child !== currentPrimaryChildFragment) {
            var progressedPrimaryFragment = workInProgress2.child;
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress2.mode & ProfileMode) {
              primaryChildFragment.actualDuration = 0;
              primaryChildFragment.actualStartTime = -1;
              primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
              primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
            }
            workInProgress2.deletions = null;
          } else {
            primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);
            primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;
          }
          var fallbackChildFragment;
          if (currentFallbackChildFragment !== null) {
            fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
          } else {
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
            fallbackChildFragment.flags |= Placement;
          }
          fallbackChildFragment.return = workInProgress2;
          primaryChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = fallbackChildFragment;
          workInProgress2.child = primaryChildFragment;
          return fallbackChildFragment;
        }
        function retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, recoverableError) {
          if (recoverableError !== null) {
            queueHydrationError(recoverableError);
          }
          reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
          var nextProps = workInProgress2.pendingProps;
          var primaryChildren = nextProps.children;
          var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress2, primaryChildren);
          primaryChildFragment.flags |= Placement;
          workInProgress2.memoizedState = null;
          return primaryChildFragment;
        }
        function mountSuspenseFallbackAfterRetryWithoutHydrating(current2, workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
          var fiberMode = workInProgress2.mode;
          var primaryChildProps = {
            mode: "visible",
            children: primaryChildren
          };
          var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);
          var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes2, null);
          fallbackChildFragment.flags |= Placement;
          primaryChildFragment.return = workInProgress2;
          fallbackChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = fallbackChildFragment;
          workInProgress2.child = primaryChildFragment;
          if ((workInProgress2.mode & ConcurrentMode) !== NoMode) {
            reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
          }
          return fallbackChildFragment;
        }
        function mountDehydratedSuspenseComponent(workInProgress2, suspenseInstance, renderLanes2) {
          if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
            {
              error("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components.");
            }
            workInProgress2.lanes = laneToLanes(SyncLane);
          } else if (isSuspenseInstanceFallback(suspenseInstance)) {
            workInProgress2.lanes = laneToLanes(DefaultHydrationLane);
          } else {
            workInProgress2.lanes = laneToLanes(OffscreenLane);
          }
          return null;
        }
        function updateDehydratedSuspenseComponent(current2, workInProgress2, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes2) {
          if (!didSuspend) {
            warnIfHydrating();
            if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
              return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, null);
            }
            if (isSuspenseInstanceFallback(suspenseInstance)) {
              var digest, message, stack;
              {
                var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(suspenseInstance);
                digest = _getSuspenseInstanceF.digest;
                message = _getSuspenseInstanceF.message;
                stack = _getSuspenseInstanceF.stack;
              }
              var error2;
              if (message) {
                error2 = new Error(message);
              } else {
                error2 = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
              }
              var capturedValue = createCapturedValue(error2, digest, stack);
              return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, capturedValue);
            }
            var hasContextChanged2 = includesSomeLane(renderLanes2, current2.childLanes);
            if (didReceiveUpdate || hasContextChanged2) {
              var root3 = getWorkInProgressRoot();
              if (root3 !== null) {
                var attemptHydrationAtLane = getBumpedLaneForHydration(root3, renderLanes2);
                if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {
                  suspenseState.retryLane = attemptHydrationAtLane;
                  var eventTime = NoTimestamp;
                  enqueueConcurrentRenderForLane(current2, attemptHydrationAtLane);
                  scheduleUpdateOnFiber(root3, current2, attemptHydrationAtLane, eventTime);
                }
              }
              renderDidSuspendDelayIfPossible();
              var _capturedValue = createCapturedValue(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
              return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, _capturedValue);
            } else if (isSuspenseInstancePending(suspenseInstance)) {
              workInProgress2.flags |= DidCapture;
              workInProgress2.child = current2.child;
              var retry = retryDehydratedSuspenseBoundary.bind(null, current2);
              registerSuspenseInstanceRetry(suspenseInstance, retry);
              return null;
            } else {
              reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress2, suspenseInstance, suspenseState.treeContext);
              var primaryChildren = nextProps.children;
              var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress2, primaryChildren);
              primaryChildFragment.flags |= Hydrating;
              return primaryChildFragment;
            }
          } else {
            if (workInProgress2.flags & ForceClientRender) {
              workInProgress2.flags &= ~ForceClientRender;
              var _capturedValue2 = createCapturedValue(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
              return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, _capturedValue2);
            } else if (workInProgress2.memoizedState !== null) {
              workInProgress2.child = current2.child;
              workInProgress2.flags |= DidCapture;
              return null;
            } else {
              var nextPrimaryChildren = nextProps.children;
              var nextFallbackChildren = nextProps.fallback;
              var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current2, workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2);
              var _primaryChildFragment4 = workInProgress2.child;
              _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes2);
              workInProgress2.memoizedState = SUSPENDED_MARKER;
              return fallbackChildFragment;
            }
          }
        }
        function scheduleSuspenseWorkOnFiber(fiber, renderLanes2, propagationRoot) {
          fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
          var alternate = fiber.alternate;
          if (alternate !== null) {
            alternate.lanes = mergeLanes(alternate.lanes, renderLanes2);
          }
          scheduleContextWorkOnParentPath(fiber.return, renderLanes2, propagationRoot);
        }
        function propagateSuspenseContextChange(workInProgress2, firstChild, renderLanes2) {
          var node = firstChild;
          while (node !== null) {
            if (node.tag === SuspenseComponent) {
              var state = node.memoizedState;
              if (state !== null) {
                scheduleSuspenseWorkOnFiber(node, renderLanes2, workInProgress2);
              }
            } else if (node.tag === SuspenseListComponent) {
              scheduleSuspenseWorkOnFiber(node, renderLanes2, workInProgress2);
            } else if (node.child !== null) {
              node.child.return = node;
              node = node.child;
              continue;
            }
            if (node === workInProgress2) {
              return;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === workInProgress2) {
                return;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
        }
        function findLastContentRow(firstChild) {
          var row = firstChild;
          var lastContentRow = null;
          while (row !== null) {
            var currentRow = row.alternate;
            if (currentRow !== null && findFirstSuspended(currentRow) === null) {
              lastContentRow = row;
            }
            row = row.sibling;
          }
          return lastContentRow;
        }
        function validateRevealOrder(revealOrder) {
          {
            if (revealOrder !== void 0 && revealOrder !== "forwards" && revealOrder !== "backwards" && revealOrder !== "together" && !didWarnAboutRevealOrder[revealOrder]) {
              didWarnAboutRevealOrder[revealOrder] = true;
              if (typeof revealOrder === "string") {
                switch (revealOrder.toLowerCase()) {
                  case "together":
                  case "forwards":
                  case "backwards": {
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                  }
                  case "forward":
                  case "backward": {
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                  }
                  default:
                    error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                    break;
                }
              } else {
                error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
              }
            }
          }
        }
        function validateTailOptions(tailMode, revealOrder) {
          {
            if (tailMode !== void 0 && !didWarnAboutTailOptions[tailMode]) {
              if (tailMode !== "collapsed" && tailMode !== "hidden") {
                didWarnAboutTailOptions[tailMode] = true;
                error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode);
              } else if (revealOrder !== "forwards" && revealOrder !== "backwards") {
                didWarnAboutTailOptions[tailMode] = true;
                error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode);
              }
            }
          }
        }
        function validateSuspenseListNestedChild(childSlot, index2) {
          {
            var isAnArray = isArray2(childSlot);
            var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === "function";
            if (isAnArray || isIterable) {
              var type2 = isAnArray ? "array" : "iterable";
              error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type2, index2, type2);
              return false;
            }
          }
          return true;
        }
        function validateSuspenseListChildren(children, revealOrder) {
          {
            if ((revealOrder === "forwards" || revealOrder === "backwards") && children !== void 0 && children !== null && children !== false) {
              if (isArray2(children)) {
                for (var i9 = 0; i9 < children.length; i9++) {
                  if (!validateSuspenseListNestedChild(children[i9], i9)) {
                    return;
                  }
                }
              } else {
                var iteratorFn = getIteratorFn(children);
                if (typeof iteratorFn === "function") {
                  var childrenIterator = iteratorFn.call(children);
                  if (childrenIterator) {
                    var step = childrenIterator.next();
                    var _i = 0;
                    for (; !step.done; step = childrenIterator.next()) {
                      if (!validateSuspenseListNestedChild(step.value, _i)) {
                        return;
                      }
                      _i++;
                    }
                  }
                } else {
                  error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
                }
              }
            }
          }
        }
        function initSuspenseListRenderState(workInProgress2, isBackwards, tail, lastContentRow, tailMode) {
          var renderState = workInProgress2.memoizedState;
          if (renderState === null) {
            workInProgress2.memoizedState = {
              isBackwards,
              rendering: null,
              renderingStartTime: 0,
              last: lastContentRow,
              tail,
              tailMode
            };
          } else {
            renderState.isBackwards = isBackwards;
            renderState.rendering = null;
            renderState.renderingStartTime = 0;
            renderState.last = lastContentRow;
            renderState.tail = tail;
            renderState.tailMode = tailMode;
          }
        }
        function updateSuspenseListComponent(current2, workInProgress2, renderLanes2) {
          var nextProps = workInProgress2.pendingProps;
          var revealOrder = nextProps.revealOrder;
          var tailMode = nextProps.tail;
          var newChildren = nextProps.children;
          validateRevealOrder(revealOrder);
          validateTailOptions(tailMode, revealOrder);
          validateSuspenseListChildren(newChildren, revealOrder);
          reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
          var suspenseContext = suspenseStackCursor.current;
          var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
          if (shouldForceFallback) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
            workInProgress2.flags |= DidCapture;
          } else {
            var didSuspendBefore = current2 !== null && (current2.flags & DidCapture) !== NoFlags;
            if (didSuspendBefore) {
              propagateSuspenseContextChange(workInProgress2, workInProgress2.child, renderLanes2);
            }
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          }
          pushSuspenseContext(workInProgress2, suspenseContext);
          if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
            workInProgress2.memoizedState = null;
          } else {
            switch (revealOrder) {
              case "forwards": {
                var lastContentRow = findLastContentRow(workInProgress2.child);
                var tail;
                if (lastContentRow === null) {
                  tail = workInProgress2.child;
                  workInProgress2.child = null;
                } else {
                  tail = lastContentRow.sibling;
                  lastContentRow.sibling = null;
                }
                initSuspenseListRenderState(workInProgress2, false, tail, lastContentRow, tailMode);
                break;
              }
              case "backwards": {
                var _tail = null;
                var row = workInProgress2.child;
                workInProgress2.child = null;
                while (row !== null) {
                  var currentRow = row.alternate;
                  if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                    workInProgress2.child = row;
                    break;
                  }
                  var nextRow = row.sibling;
                  row.sibling = _tail;
                  _tail = row;
                  row = nextRow;
                }
                initSuspenseListRenderState(workInProgress2, true, _tail, null, tailMode);
                break;
              }
              case "together": {
                initSuspenseListRenderState(workInProgress2, false, null, null, void 0);
                break;
              }
              default: {
                workInProgress2.memoizedState = null;
              }
            }
          }
          return workInProgress2.child;
        }
        function updatePortalComponent(current2, workInProgress2, renderLanes2) {
          pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
          var nextChildren = workInProgress2.pendingProps;
          if (current2 === null) {
            workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
          } else {
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          }
          return workInProgress2.child;
        }
        var hasWarnedAboutUsingNoValuePropOnContextProvider = false;
        function updateContextProvider(current2, workInProgress2, renderLanes2) {
          var providerType = workInProgress2.type;
          var context = providerType._context;
          var newProps = workInProgress2.pendingProps;
          var oldProps = workInProgress2.memoizedProps;
          var newValue = newProps.value;
          {
            if (!("value" in newProps)) {
              if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
                hasWarnedAboutUsingNoValuePropOnContextProvider = true;
                error("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?");
              }
            }
            var providerPropTypes = workInProgress2.type.propTypes;
            if (providerPropTypes) {
              checkPropTypes(providerPropTypes, newProps, "prop", "Context.Provider");
            }
          }
          pushProvider(workInProgress2, context, newValue);
          {
            if (oldProps !== null) {
              var oldValue = oldProps.value;
              if (objectIs(oldValue, newValue)) {
                if (oldProps.children === newProps.children && !hasContextChanged()) {
                  return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                }
              } else {
                propagateContextChange(workInProgress2, context, renderLanes2);
              }
            }
          }
          var newChildren = newProps.children;
          reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
          return workInProgress2.child;
        }
        var hasWarnedAboutUsingContextAsConsumer = false;
        function updateContextConsumer(current2, workInProgress2, renderLanes2) {
          var context = workInProgress2.type;
          {
            if (context._context === void 0) {
              if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                  hasWarnedAboutUsingContextAsConsumer = true;
                  error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
              }
            } else {
              context = context._context;
            }
          }
          var newProps = workInProgress2.pendingProps;
          var render2 = newProps.children;
          {
            if (typeof render2 !== "function") {
              error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
            }
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          var newValue = readContext(context);
          {
            markComponentRenderStarted(workInProgress2);
          }
          var newChildren;
          {
            ReactCurrentOwner$1.current = workInProgress2;
            setIsRendering(true);
            newChildren = render2(newValue);
            setIsRendering(false);
          }
          {
            markComponentRenderStopped();
          }
          workInProgress2.flags |= PerformedWork;
          reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
          return workInProgress2.child;
        }
        function markWorkInProgressReceivedUpdate() {
          didReceiveUpdate = true;
        }
        function resetSuspendedCurrentOnMountInLegacyMode(current2, workInProgress2) {
          if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
            if (current2 !== null) {
              current2.alternate = null;
              workInProgress2.alternate = null;
              workInProgress2.flags |= Placement;
            }
          }
        }
        function bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2) {
          if (current2 !== null) {
            workInProgress2.dependencies = current2.dependencies;
          }
          {
            stopProfilerTimerIfRunning();
          }
          markSkippedUpdateLanes(workInProgress2.lanes);
          if (!includesSomeLane(renderLanes2, workInProgress2.childLanes)) {
            {
              return null;
            }
          }
          cloneChildFibers(current2, workInProgress2);
          return workInProgress2.child;
        }
        function remountFiber(current2, oldWorkInProgress, newWorkInProgress) {
          {
            var returnFiber = oldWorkInProgress.return;
            if (returnFiber === null) {
              throw new Error("Cannot swap the root fiber.");
            }
            current2.alternate = null;
            oldWorkInProgress.alternate = null;
            newWorkInProgress.index = oldWorkInProgress.index;
            newWorkInProgress.sibling = oldWorkInProgress.sibling;
            newWorkInProgress.return = oldWorkInProgress.return;
            newWorkInProgress.ref = oldWorkInProgress.ref;
            if (oldWorkInProgress === returnFiber.child) {
              returnFiber.child = newWorkInProgress;
            } else {
              var prevSibling = returnFiber.child;
              if (prevSibling === null) {
                throw new Error("Expected parent to have a child.");
              }
              while (prevSibling.sibling !== oldWorkInProgress) {
                prevSibling = prevSibling.sibling;
                if (prevSibling === null) {
                  throw new Error("Expected to find the previous sibling.");
                }
              }
              prevSibling.sibling = newWorkInProgress;
            }
            var deletions = returnFiber.deletions;
            if (deletions === null) {
              returnFiber.deletions = [current2];
              returnFiber.flags |= ChildDeletion;
            } else {
              deletions.push(current2);
            }
            newWorkInProgress.flags |= Placement;
            return newWorkInProgress;
          }
        }
        function checkScheduledUpdateOrContext(current2, renderLanes2) {
          var updateLanes = current2.lanes;
          if (includesSomeLane(updateLanes, renderLanes2)) {
            return true;
          }
          return false;
        }
        function attemptEarlyBailoutIfNoScheduledUpdate(current2, workInProgress2, renderLanes2) {
          switch (workInProgress2.tag) {
            case HostRoot:
              pushHostRootContext(workInProgress2);
              var root3 = workInProgress2.stateNode;
              resetHydrationState();
              break;
            case HostComponent:
              pushHostContext(workInProgress2);
              break;
            case ClassComponent: {
              var Component = workInProgress2.type;
              if (isContextProvider(Component)) {
                pushContextProvider(workInProgress2);
              }
              break;
            }
            case HostPortal:
              pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
              break;
            case ContextProvider: {
              var newValue = workInProgress2.memoizedProps.value;
              var context = workInProgress2.type._context;
              pushProvider(workInProgress2, context, newValue);
              break;
            }
            case Profiler:
              {
                var hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
                if (hasChildWork) {
                  workInProgress2.flags |= Update;
                }
                {
                  var stateNode = workInProgress2.stateNode;
                  stateNode.effectDuration = 0;
                  stateNode.passiveEffectDuration = 0;
                }
              }
              break;
            case SuspenseComponent: {
              var state = workInProgress2.memoizedState;
              if (state !== null) {
                if (state.dehydrated !== null) {
                  pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                  workInProgress2.flags |= DidCapture;
                  return null;
                }
                var primaryChildFragment = workInProgress2.child;
                var primaryChildLanes = primaryChildFragment.childLanes;
                if (includesSomeLane(renderLanes2, primaryChildLanes)) {
                  return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
                } else {
                  pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                  var child = bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                  if (child !== null) {
                    return child.sibling;
                  } else {
                    return null;
                  }
                }
              } else {
                pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
              }
              break;
            }
            case SuspenseListComponent: {
              var didSuspendBefore = (current2.flags & DidCapture) !== NoFlags;
              var _hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
              if (didSuspendBefore) {
                if (_hasChildWork) {
                  return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
                }
                workInProgress2.flags |= DidCapture;
              }
              var renderState = workInProgress2.memoizedState;
              if (renderState !== null) {
                renderState.rendering = null;
                renderState.tail = null;
                renderState.lastEffect = null;
              }
              pushSuspenseContext(workInProgress2, suspenseStackCursor.current);
              if (_hasChildWork) {
                break;
              } else {
                return null;
              }
            }
            case OffscreenComponent:
            case LegacyHiddenComponent: {
              workInProgress2.lanes = NoLanes;
              return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
            }
          }
          return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
        }
        function beginWork(current2, workInProgress2, renderLanes2) {
          {
            if (workInProgress2._debugNeedsRemount && current2 !== null) {
              return remountFiber(current2, workInProgress2, createFiberFromTypeAndProps(workInProgress2.type, workInProgress2.key, workInProgress2.pendingProps, workInProgress2._debugOwner || null, workInProgress2.mode, workInProgress2.lanes));
            }
          }
          if (current2 !== null) {
            var oldProps = current2.memoizedProps;
            var newProps = workInProgress2.pendingProps;
            if (oldProps !== newProps || hasContextChanged() || workInProgress2.type !== current2.type) {
              didReceiveUpdate = true;
            } else {
              var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current2, renderLanes2);
              if (!hasScheduledUpdateOrContext && (workInProgress2.flags & DidCapture) === NoFlags) {
                didReceiveUpdate = false;
                return attemptEarlyBailoutIfNoScheduledUpdate(current2, workInProgress2, renderLanes2);
              }
              if ((current2.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
                didReceiveUpdate = true;
              } else {
                didReceiveUpdate = false;
              }
            }
          } else {
            didReceiveUpdate = false;
            if (getIsHydrating() && isForkedChild(workInProgress2)) {
              var slotIndex = workInProgress2.index;
              var numberOfForks = getForksAtLevel();
              pushTreeId(workInProgress2, numberOfForks, slotIndex);
            }
          }
          workInProgress2.lanes = NoLanes;
          switch (workInProgress2.tag) {
            case IndeterminateComponent: {
              return mountIndeterminateComponent(current2, workInProgress2, workInProgress2.type, renderLanes2);
            }
            case LazyComponent: {
              var elementType = workInProgress2.elementType;
              return mountLazyComponent(current2, workInProgress2, elementType, renderLanes2);
            }
            case FunctionComponent: {
              var Component = workInProgress2.type;
              var unresolvedProps = workInProgress2.pendingProps;
              var resolvedProps = workInProgress2.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);
              return updateFunctionComponent(current2, workInProgress2, Component, resolvedProps, renderLanes2);
            }
            case ClassComponent: {
              var _Component = workInProgress2.type;
              var _unresolvedProps = workInProgress2.pendingProps;
              var _resolvedProps = workInProgress2.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);
              return updateClassComponent(current2, workInProgress2, _Component, _resolvedProps, renderLanes2);
            }
            case HostRoot:
              return updateHostRoot(current2, workInProgress2, renderLanes2);
            case HostComponent:
              return updateHostComponent(current2, workInProgress2, renderLanes2);
            case HostText:
              return updateHostText(current2, workInProgress2);
            case SuspenseComponent:
              return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
            case HostPortal:
              return updatePortalComponent(current2, workInProgress2, renderLanes2);
            case ForwardRef: {
              var type2 = workInProgress2.type;
              var _unresolvedProps2 = workInProgress2.pendingProps;
              var _resolvedProps2 = workInProgress2.elementType === type2 ? _unresolvedProps2 : resolveDefaultProps(type2, _unresolvedProps2);
              return updateForwardRef(current2, workInProgress2, type2, _resolvedProps2, renderLanes2);
            }
            case Fragment2:
              return updateFragment(current2, workInProgress2, renderLanes2);
            case Mode:
              return updateMode(current2, workInProgress2, renderLanes2);
            case Profiler:
              return updateProfiler(current2, workInProgress2, renderLanes2);
            case ContextProvider:
              return updateContextProvider(current2, workInProgress2, renderLanes2);
            case ContextConsumer:
              return updateContextConsumer(current2, workInProgress2, renderLanes2);
            case MemoComponent: {
              var _type2 = workInProgress2.type;
              var _unresolvedProps3 = workInProgress2.pendingProps;
              var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
              {
                if (workInProgress2.type !== workInProgress2.elementType) {
                  var outerPropTypes = _type2.propTypes;
                  if (outerPropTypes) {
                    checkPropTypes(outerPropTypes, _resolvedProps3, "prop", getComponentNameFromType(_type2));
                  }
                }
              }
              _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
              return updateMemoComponent(current2, workInProgress2, _type2, _resolvedProps3, renderLanes2);
            }
            case SimpleMemoComponent: {
              return updateSimpleMemoComponent(current2, workInProgress2, workInProgress2.type, workInProgress2.pendingProps, renderLanes2);
            }
            case IncompleteClassComponent: {
              var _Component2 = workInProgress2.type;
              var _unresolvedProps4 = workInProgress2.pendingProps;
              var _resolvedProps4 = workInProgress2.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);
              return mountIncompleteClassComponent(current2, workInProgress2, _Component2, _resolvedProps4, renderLanes2);
            }
            case SuspenseListComponent: {
              return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
            }
            case ScopeComponent: {
              break;
            }
            case OffscreenComponent: {
              return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
            }
          }
          throw new Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
        }
        function markUpdate(workInProgress2) {
          workInProgress2.flags |= Update;
        }
        function markRef$1(workInProgress2) {
          workInProgress2.flags |= Ref;
          {
            workInProgress2.flags |= RefStatic;
          }
        }
        var appendAllChildren;
        var updateHostContainer;
        var updateHostComponent$1;
        var updateHostText$1;
        {
          appendAllChildren = function(parent, workInProgress2, needsVisibilityToggle, isHidden2) {
            var node = workInProgress2.child;
            while (node !== null) {
              if (node.tag === HostComponent || node.tag === HostText) {
                appendInitialChild(parent, node.stateNode);
              } else if (node.tag === HostPortal)
                ;
              else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === workInProgress2) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === workInProgress2) {
                  return;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          };
          updateHostContainer = function(current2, workInProgress2) {
          };
          updateHostComponent$1 = function(current2, workInProgress2, type2, newProps, rootContainerInstance) {
            var oldProps = current2.memoizedProps;
            if (oldProps === newProps) {
              return;
            }
            var instance = workInProgress2.stateNode;
            var currentHostContext = getHostContext();
            var updatePayload = prepareUpdate(instance, type2, oldProps, newProps, rootContainerInstance, currentHostContext);
            workInProgress2.updateQueue = updatePayload;
            if (updatePayload) {
              markUpdate(workInProgress2);
            }
          };
          updateHostText$1 = function(current2, workInProgress2, oldText, newText) {
            if (oldText !== newText) {
              markUpdate(workInProgress2);
            }
          };
        }
        function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
          if (getIsHydrating()) {
            return;
          }
          switch (renderState.tailMode) {
            case "hidden": {
              var tailNode = renderState.tail;
              var lastTailNode = null;
              while (tailNode !== null) {
                if (tailNode.alternate !== null) {
                  lastTailNode = tailNode;
                }
                tailNode = tailNode.sibling;
              }
              if (lastTailNode === null) {
                renderState.tail = null;
              } else {
                lastTailNode.sibling = null;
              }
              break;
            }
            case "collapsed": {
              var _tailNode = renderState.tail;
              var _lastTailNode = null;
              while (_tailNode !== null) {
                if (_tailNode.alternate !== null) {
                  _lastTailNode = _tailNode;
                }
                _tailNode = _tailNode.sibling;
              }
              if (_lastTailNode === null) {
                if (!hasRenderedATailFallback && renderState.tail !== null) {
                  renderState.tail.sibling = null;
                } else {
                  renderState.tail = null;
                }
              } else {
                _lastTailNode.sibling = null;
              }
              break;
            }
          }
        }
        function bubbleProperties(completedWork) {
          var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;
          var newChildLanes = NoLanes;
          var subtreeFlags = NoFlags;
          if (!didBailout) {
            if ((completedWork.mode & ProfileMode) !== NoMode) {
              var actualDuration = completedWork.actualDuration;
              var treeBaseDuration = completedWork.selfBaseDuration;
              var child = completedWork.child;
              while (child !== null) {
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
                subtreeFlags |= child.subtreeFlags;
                subtreeFlags |= child.flags;
                actualDuration += child.actualDuration;
                treeBaseDuration += child.treeBaseDuration;
                child = child.sibling;
              }
              completedWork.actualDuration = actualDuration;
              completedWork.treeBaseDuration = treeBaseDuration;
            } else {
              var _child = completedWork.child;
              while (_child !== null) {
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
                subtreeFlags |= _child.subtreeFlags;
                subtreeFlags |= _child.flags;
                _child.return = completedWork;
                _child = _child.sibling;
              }
            }
            completedWork.subtreeFlags |= subtreeFlags;
          } else {
            if ((completedWork.mode & ProfileMode) !== NoMode) {
              var _treeBaseDuration = completedWork.selfBaseDuration;
              var _child2 = completedWork.child;
              while (_child2 !== null) {
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes));
                subtreeFlags |= _child2.subtreeFlags & StaticMask;
                subtreeFlags |= _child2.flags & StaticMask;
                _treeBaseDuration += _child2.treeBaseDuration;
                _child2 = _child2.sibling;
              }
              completedWork.treeBaseDuration = _treeBaseDuration;
            } else {
              var _child3 = completedWork.child;
              while (_child3 !== null) {
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes));
                subtreeFlags |= _child3.subtreeFlags & StaticMask;
                subtreeFlags |= _child3.flags & StaticMask;
                _child3.return = completedWork;
                _child3 = _child3.sibling;
              }
            }
            completedWork.subtreeFlags |= subtreeFlags;
          }
          completedWork.childLanes = newChildLanes;
          return didBailout;
        }
        function completeDehydratedSuspenseBoundary(current2, workInProgress2, nextState) {
          if (hasUnhydratedTailNodes() && (workInProgress2.mode & ConcurrentMode) !== NoMode && (workInProgress2.flags & DidCapture) === NoFlags) {
            warnIfUnhydratedTailNodes(workInProgress2);
            resetHydrationState();
            workInProgress2.flags |= ForceClientRender | Incomplete | ShouldCapture;
            return false;
          }
          var wasHydrated = popHydrationState(workInProgress2);
          if (nextState !== null && nextState.dehydrated !== null) {
            if (current2 === null) {
              if (!wasHydrated) {
                throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
              }
              prepareToHydrateHostSuspenseInstance(workInProgress2);
              bubbleProperties(workInProgress2);
              {
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  var isTimedOutSuspense = nextState !== null;
                  if (isTimedOutSuspense) {
                    var primaryChildFragment = workInProgress2.child;
                    if (primaryChildFragment !== null) {
                      workInProgress2.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                    }
                  }
                }
              }
              return false;
            } else {
              resetHydrationState();
              if ((workInProgress2.flags & DidCapture) === NoFlags) {
                workInProgress2.memoizedState = null;
              }
              workInProgress2.flags |= Update;
              bubbleProperties(workInProgress2);
              {
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  var _isTimedOutSuspense = nextState !== null;
                  if (_isTimedOutSuspense) {
                    var _primaryChildFragment = workInProgress2.child;
                    if (_primaryChildFragment !== null) {
                      workInProgress2.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;
                    }
                  }
                }
              }
              return false;
            }
          } else {
            upgradeHydrationErrorsToRecoverable();
            return true;
          }
        }
        function completeWork(current2, workInProgress2, renderLanes2) {
          var newProps = workInProgress2.pendingProps;
          popTreeContext(workInProgress2);
          switch (workInProgress2.tag) {
            case IndeterminateComponent:
            case LazyComponent:
            case SimpleMemoComponent:
            case FunctionComponent:
            case ForwardRef:
            case Fragment2:
            case Mode:
            case Profiler:
            case ContextConsumer:
            case MemoComponent:
              bubbleProperties(workInProgress2);
              return null;
            case ClassComponent: {
              var Component = workInProgress2.type;
              if (isContextProvider(Component)) {
                popContext(workInProgress2);
              }
              bubbleProperties(workInProgress2);
              return null;
            }
            case HostRoot: {
              var fiberRoot = workInProgress2.stateNode;
              popHostContainer(workInProgress2);
              popTopLevelContextObject(workInProgress2);
              resetWorkInProgressVersions();
              if (fiberRoot.pendingContext) {
                fiberRoot.context = fiberRoot.pendingContext;
                fiberRoot.pendingContext = null;
              }
              if (current2 === null || current2.child === null) {
                var wasHydrated = popHydrationState(workInProgress2);
                if (wasHydrated) {
                  markUpdate(workInProgress2);
                } else {
                  if (current2 !== null) {
                    var prevState = current2.memoizedState;
                    if (!prevState.isDehydrated || (workInProgress2.flags & ForceClientRender) !== NoFlags) {
                      workInProgress2.flags |= Snapshot;
                      upgradeHydrationErrorsToRecoverable();
                    }
                  }
                }
              }
              updateHostContainer(current2, workInProgress2);
              bubbleProperties(workInProgress2);
              return null;
            }
            case HostComponent: {
              popHostContext(workInProgress2);
              var rootContainerInstance = getRootHostContainer();
              var type2 = workInProgress2.type;
              if (current2 !== null && workInProgress2.stateNode != null) {
                updateHostComponent$1(current2, workInProgress2, type2, newProps, rootContainerInstance);
                if (current2.ref !== workInProgress2.ref) {
                  markRef$1(workInProgress2);
                }
              } else {
                if (!newProps) {
                  if (workInProgress2.stateNode === null) {
                    throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                  }
                  bubbleProperties(workInProgress2);
                  return null;
                }
                var currentHostContext = getHostContext();
                var _wasHydrated = popHydrationState(workInProgress2);
                if (_wasHydrated) {
                  if (prepareToHydrateHostInstance(workInProgress2, rootContainerInstance, currentHostContext)) {
                    markUpdate(workInProgress2);
                  }
                } else {
                  var instance = createInstance(type2, newProps, rootContainerInstance, currentHostContext, workInProgress2);
                  appendAllChildren(instance, workInProgress2, false, false);
                  workInProgress2.stateNode = instance;
                  if (finalizeInitialChildren(instance, type2, newProps, rootContainerInstance)) {
                    markUpdate(workInProgress2);
                  }
                }
                if (workInProgress2.ref !== null) {
                  markRef$1(workInProgress2);
                }
              }
              bubbleProperties(workInProgress2);
              return null;
            }
            case HostText: {
              var newText = newProps;
              if (current2 && workInProgress2.stateNode != null) {
                var oldText = current2.memoizedProps;
                updateHostText$1(current2, workInProgress2, oldText, newText);
              } else {
                if (typeof newText !== "string") {
                  if (workInProgress2.stateNode === null) {
                    throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                  }
                }
                var _rootContainerInstance = getRootHostContainer();
                var _currentHostContext = getHostContext();
                var _wasHydrated2 = popHydrationState(workInProgress2);
                if (_wasHydrated2) {
                  if (prepareToHydrateHostTextInstance(workInProgress2)) {
                    markUpdate(workInProgress2);
                  }
                } else {
                  workInProgress2.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress2);
                }
              }
              bubbleProperties(workInProgress2);
              return null;
            }
            case SuspenseComponent: {
              popSuspenseContext(workInProgress2);
              var nextState = workInProgress2.memoizedState;
              if (current2 === null || current2.memoizedState !== null && current2.memoizedState.dehydrated !== null) {
                var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current2, workInProgress2, nextState);
                if (!fallthroughToNormalSuspensePath) {
                  if (workInProgress2.flags & ShouldCapture) {
                    return workInProgress2;
                  } else {
                    return null;
                  }
                }
              }
              if ((workInProgress2.flags & DidCapture) !== NoFlags) {
                workInProgress2.lanes = renderLanes2;
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  transferActualDuration(workInProgress2);
                }
                return workInProgress2;
              }
              var nextDidTimeout = nextState !== null;
              var prevDidTimeout = current2 !== null && current2.memoizedState !== null;
              if (nextDidTimeout !== prevDidTimeout) {
                if (nextDidTimeout) {
                  var _offscreenFiber2 = workInProgress2.child;
                  _offscreenFiber2.flags |= Visibility;
                  if ((workInProgress2.mode & ConcurrentMode) !== NoMode) {
                    var hasInvisibleChildContext = current2 === null && (workInProgress2.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);
                    if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
                      renderDidSuspend();
                    } else {
                      renderDidSuspendDelayIfPossible();
                    }
                  }
                }
              }
              var wakeables = workInProgress2.updateQueue;
              if (wakeables !== null) {
                workInProgress2.flags |= Update;
              }
              bubbleProperties(workInProgress2);
              {
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  if (nextDidTimeout) {
                    var primaryChildFragment = workInProgress2.child;
                    if (primaryChildFragment !== null) {
                      workInProgress2.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                    }
                  }
                }
              }
              return null;
            }
            case HostPortal:
              popHostContainer(workInProgress2);
              updateHostContainer(current2, workInProgress2);
              if (current2 === null) {
                preparePortalMount(workInProgress2.stateNode.containerInfo);
              }
              bubbleProperties(workInProgress2);
              return null;
            case ContextProvider:
              var context = workInProgress2.type._context;
              popProvider(context, workInProgress2);
              bubbleProperties(workInProgress2);
              return null;
            case IncompleteClassComponent: {
              var _Component = workInProgress2.type;
              if (isContextProvider(_Component)) {
                popContext(workInProgress2);
              }
              bubbleProperties(workInProgress2);
              return null;
            }
            case SuspenseListComponent: {
              popSuspenseContext(workInProgress2);
              var renderState = workInProgress2.memoizedState;
              if (renderState === null) {
                bubbleProperties(workInProgress2);
                return null;
              }
              var didSuspendAlready = (workInProgress2.flags & DidCapture) !== NoFlags;
              var renderedTail = renderState.rendering;
              if (renderedTail === null) {
                if (!didSuspendAlready) {
                  var cannotBeSuspended = renderHasNotSuspendedYet() && (current2 === null || (current2.flags & DidCapture) === NoFlags);
                  if (!cannotBeSuspended) {
                    var row = workInProgress2.child;
                    while (row !== null) {
                      var suspended = findFirstSuspended(row);
                      if (suspended !== null) {
                        didSuspendAlready = true;
                        workInProgress2.flags |= DidCapture;
                        cutOffTailIfNeeded(renderState, false);
                        var newThenables = suspended.updateQueue;
                        if (newThenables !== null) {
                          workInProgress2.updateQueue = newThenables;
                          workInProgress2.flags |= Update;
                        }
                        workInProgress2.subtreeFlags = NoFlags;
                        resetChildFibers(workInProgress2, renderLanes2);
                        pushSuspenseContext(workInProgress2, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                        return workInProgress2.child;
                      }
                      row = row.sibling;
                    }
                  }
                  if (renderState.tail !== null && now() > getRenderTargetTime()) {
                    workInProgress2.flags |= DidCapture;
                    didSuspendAlready = true;
                    cutOffTailIfNeeded(renderState, false);
                    workInProgress2.lanes = SomeRetryLane;
                  }
                } else {
                  cutOffTailIfNeeded(renderState, false);
                }
              } else {
                if (!didSuspendAlready) {
                  var _suspended = findFirstSuspended(renderedTail);
                  if (_suspended !== null) {
                    workInProgress2.flags |= DidCapture;
                    didSuspendAlready = true;
                    var _newThenables = _suspended.updateQueue;
                    if (_newThenables !== null) {
                      workInProgress2.updateQueue = _newThenables;
                      workInProgress2.flags |= Update;
                    }
                    cutOffTailIfNeeded(renderState, true);
                    if (renderState.tail === null && renderState.tailMode === "hidden" && !renderedTail.alternate && !getIsHydrating()) {
                      bubbleProperties(workInProgress2);
                      return null;
                    }
                  } else if (now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes2 !== OffscreenLane) {
                    workInProgress2.flags |= DidCapture;
                    didSuspendAlready = true;
                    cutOffTailIfNeeded(renderState, false);
                    workInProgress2.lanes = SomeRetryLane;
                  }
                }
                if (renderState.isBackwards) {
                  renderedTail.sibling = workInProgress2.child;
                  workInProgress2.child = renderedTail;
                } else {
                  var previousSibling = renderState.last;
                  if (previousSibling !== null) {
                    previousSibling.sibling = renderedTail;
                  } else {
                    workInProgress2.child = renderedTail;
                  }
                  renderState.last = renderedTail;
                }
              }
              if (renderState.tail !== null) {
                var next = renderState.tail;
                renderState.rendering = next;
                renderState.tail = next.sibling;
                renderState.renderingStartTime = now();
                next.sibling = null;
                var suspenseContext = suspenseStackCursor.current;
                if (didSuspendAlready) {
                  suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                } else {
                  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                }
                pushSuspenseContext(workInProgress2, suspenseContext);
                return next;
              }
              bubbleProperties(workInProgress2);
              return null;
            }
            case ScopeComponent: {
              break;
            }
            case OffscreenComponent:
            case LegacyHiddenComponent: {
              popRenderLanes(workInProgress2);
              var _nextState = workInProgress2.memoizedState;
              var nextIsHidden = _nextState !== null;
              if (current2 !== null) {
                var _prevState = current2.memoizedState;
                var prevIsHidden = _prevState !== null;
                if (prevIsHidden !== nextIsHidden && !enableLegacyHidden) {
                  workInProgress2.flags |= Visibility;
                }
              }
              if (!nextIsHidden || (workInProgress2.mode & ConcurrentMode) === NoMode) {
                bubbleProperties(workInProgress2);
              } else {
                if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {
                  bubbleProperties(workInProgress2);
                  {
                    if (workInProgress2.subtreeFlags & (Placement | Update)) {
                      workInProgress2.flags |= Visibility;
                    }
                  }
                }
              }
              return null;
            }
            case CacheComponent: {
              return null;
            }
            case TracingMarkerComponent: {
              return null;
            }
          }
          throw new Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
        }
        function unwindWork(current2, workInProgress2, renderLanes2) {
          popTreeContext(workInProgress2);
          switch (workInProgress2.tag) {
            case ClassComponent: {
              var Component = workInProgress2.type;
              if (isContextProvider(Component)) {
                popContext(workInProgress2);
              }
              var flags = workInProgress2.flags;
              if (flags & ShouldCapture) {
                workInProgress2.flags = flags & ~ShouldCapture | DidCapture;
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  transferActualDuration(workInProgress2);
                }
                return workInProgress2;
              }
              return null;
            }
            case HostRoot: {
              var root3 = workInProgress2.stateNode;
              popHostContainer(workInProgress2);
              popTopLevelContextObject(workInProgress2);
              resetWorkInProgressVersions();
              var _flags = workInProgress2.flags;
              if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {
                workInProgress2.flags = _flags & ~ShouldCapture | DidCapture;
                return workInProgress2;
              }
              return null;
            }
            case HostComponent: {
              popHostContext(workInProgress2);
              return null;
            }
            case SuspenseComponent: {
              popSuspenseContext(workInProgress2);
              var suspenseState = workInProgress2.memoizedState;
              if (suspenseState !== null && suspenseState.dehydrated !== null) {
                if (workInProgress2.alternate === null) {
                  throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                }
                resetHydrationState();
              }
              var _flags2 = workInProgress2.flags;
              if (_flags2 & ShouldCapture) {
                workInProgress2.flags = _flags2 & ~ShouldCapture | DidCapture;
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  transferActualDuration(workInProgress2);
                }
                return workInProgress2;
              }
              return null;
            }
            case SuspenseListComponent: {
              popSuspenseContext(workInProgress2);
              return null;
            }
            case HostPortal:
              popHostContainer(workInProgress2);
              return null;
            case ContextProvider:
              var context = workInProgress2.type._context;
              popProvider(context, workInProgress2);
              return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
              popRenderLanes(workInProgress2);
              return null;
            case CacheComponent:
              return null;
            default:
              return null;
          }
        }
        function unwindInterruptedWork(current2, interruptedWork, renderLanes2) {
          popTreeContext(interruptedWork);
          switch (interruptedWork.tag) {
            case ClassComponent: {
              var childContextTypes = interruptedWork.type.childContextTypes;
              if (childContextTypes !== null && childContextTypes !== void 0) {
                popContext(interruptedWork);
              }
              break;
            }
            case HostRoot: {
              var root3 = interruptedWork.stateNode;
              popHostContainer(interruptedWork);
              popTopLevelContextObject(interruptedWork);
              resetWorkInProgressVersions();
              break;
            }
            case HostComponent: {
              popHostContext(interruptedWork);
              break;
            }
            case HostPortal:
              popHostContainer(interruptedWork);
              break;
            case SuspenseComponent:
              popSuspenseContext(interruptedWork);
              break;
            case SuspenseListComponent:
              popSuspenseContext(interruptedWork);
              break;
            case ContextProvider:
              var context = interruptedWork.type._context;
              popProvider(context, interruptedWork);
              break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
              popRenderLanes(interruptedWork);
              break;
          }
        }
        var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
        {
          didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
        }
        var offscreenSubtreeIsHidden = false;
        var offscreenSubtreeWasHidden = false;
        var PossiblyWeakSet = typeof WeakSet === "function" ? WeakSet : Set;
        var nextEffect = null;
        var inProgressLanes = null;
        var inProgressRoot = null;
        function reportUncaughtErrorInDEV(error2) {
          {
            invokeGuardedCallback(null, function() {
              throw error2;
            });
            clearCaughtError();
          }
        }
        var callComponentWillUnmountWithTimer = function(current2, instance) {
          instance.props = current2.memoizedProps;
          instance.state = current2.memoizedState;
          if (current2.mode & ProfileMode) {
            try {
              startLayoutEffectTimer();
              instance.componentWillUnmount();
            } finally {
              recordLayoutEffectDuration(current2);
            }
          } else {
            instance.componentWillUnmount();
          }
        };
        function safelyCallCommitHookLayoutEffectListMount(current2, nearestMountedAncestor) {
          try {
            commitHookEffectListMount(Layout, current2);
          } catch (error2) {
            captureCommitPhaseError(current2, nearestMountedAncestor, error2);
          }
        }
        function safelyCallComponentWillUnmount(current2, nearestMountedAncestor, instance) {
          try {
            callComponentWillUnmountWithTimer(current2, instance);
          } catch (error2) {
            captureCommitPhaseError(current2, nearestMountedAncestor, error2);
          }
        }
        function safelyCallComponentDidMount(current2, nearestMountedAncestor, instance) {
          try {
            instance.componentDidMount();
          } catch (error2) {
            captureCommitPhaseError(current2, nearestMountedAncestor, error2);
          }
        }
        function safelyAttachRef(current2, nearestMountedAncestor) {
          try {
            commitAttachRef(current2);
          } catch (error2) {
            captureCommitPhaseError(current2, nearestMountedAncestor, error2);
          }
        }
        function safelyDetachRef(current2, nearestMountedAncestor) {
          var ref = current2.ref;
          if (ref !== null) {
            if (typeof ref === "function") {
              var retVal;
              try {
                if (enableProfilerTimer && enableProfilerCommitHooks && current2.mode & ProfileMode) {
                  try {
                    startLayoutEffectTimer();
                    retVal = ref(null);
                  } finally {
                    recordLayoutEffectDuration(current2);
                  }
                } else {
                  retVal = ref(null);
                }
              } catch (error2) {
                captureCommitPhaseError(current2, nearestMountedAncestor, error2);
              }
              {
                if (typeof retVal === "function") {
                  error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(current2));
                }
              }
            } else {
              ref.current = null;
            }
          }
        }
        function safelyCallDestroy(current2, nearestMountedAncestor, destroy) {
          try {
            destroy();
          } catch (error2) {
            captureCommitPhaseError(current2, nearestMountedAncestor, error2);
          }
        }
        var focusedInstanceHandle = null;
        var shouldFireAfterActiveInstanceBlur = false;
        function commitBeforeMutationEffects(root3, firstChild) {
          focusedInstanceHandle = prepareForCommit(root3.containerInfo);
          nextEffect = firstChild;
          commitBeforeMutationEffects_begin();
          var shouldFire = shouldFireAfterActiveInstanceBlur;
          shouldFireAfterActiveInstanceBlur = false;
          focusedInstanceHandle = null;
          return shouldFire;
        }
        function commitBeforeMutationEffects_begin() {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var child = fiber.child;
            if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {
              child.return = fiber;
              nextEffect = child;
            } else {
              commitBeforeMutationEffects_complete();
            }
          }
        }
        function commitBeforeMutationEffects_complete() {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            setCurrentFiber(fiber);
            try {
              commitBeforeMutationEffectsOnFiber(fiber);
            } catch (error2) {
              captureCommitPhaseError(fiber, fiber.return, error2);
            }
            resetCurrentFiber();
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function commitBeforeMutationEffectsOnFiber(finishedWork) {
          var current2 = finishedWork.alternate;
          var flags = finishedWork.flags;
          if ((flags & Snapshot) !== NoFlags) {
            setCurrentFiber(finishedWork);
            switch (finishedWork.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                break;
              }
              case ClassComponent: {
                if (current2 !== null) {
                  var prevProps = current2.memoizedProps;
                  var prevState = current2.memoizedState;
                  var instance = finishedWork.stateNode;
                  {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                      if (instance.props !== finishedWork.memoizedProps) {
                        error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                      }
                      if (instance.state !== finishedWork.memoizedState) {
                        error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                      }
                    }
                  }
                  var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                  {
                    var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                    if (snapshot === void 0 && !didWarnSet.has(finishedWork.type)) {
                      didWarnSet.add(finishedWork.type);
                      error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentNameFromFiber(finishedWork));
                    }
                  }
                  instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                }
                break;
              }
              case HostRoot: {
                {
                  var root3 = finishedWork.stateNode;
                  clearContainer(root3.containerInfo);
                }
                break;
              }
              case HostComponent:
              case HostText:
              case HostPortal:
              case IncompleteClassComponent:
                break;
              default: {
                throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            resetCurrentFiber();
          }
        }
        function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
          var updateQueue2 = finishedWork.updateQueue;
          var lastEffect = updateQueue2 !== null ? updateQueue2.lastEffect : null;
          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
              if ((effect.tag & flags) === flags) {
                var destroy = effect.destroy;
                effect.destroy = void 0;
                if (destroy !== void 0) {
                  {
                    if ((flags & Passive$1) !== NoFlags$1) {
                      markComponentPassiveEffectUnmountStarted(finishedWork);
                    } else if ((flags & Layout) !== NoFlags$1) {
                      markComponentLayoutEffectUnmountStarted(finishedWork);
                    }
                  }
                  {
                    if ((flags & Insertion) !== NoFlags$1) {
                      setIsRunningInsertionEffect(true);
                    }
                  }
                  safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);
                  {
                    if ((flags & Insertion) !== NoFlags$1) {
                      setIsRunningInsertionEffect(false);
                    }
                  }
                  {
                    if ((flags & Passive$1) !== NoFlags$1) {
                      markComponentPassiveEffectUnmountStopped();
                    } else if ((flags & Layout) !== NoFlags$1) {
                      markComponentLayoutEffectUnmountStopped();
                    }
                  }
                }
              }
              effect = effect.next;
            } while (effect !== firstEffect);
          }
        }
        function commitHookEffectListMount(flags, finishedWork) {
          var updateQueue2 = finishedWork.updateQueue;
          var lastEffect = updateQueue2 !== null ? updateQueue2.lastEffect : null;
          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
              if ((effect.tag & flags) === flags) {
                {
                  if ((flags & Passive$1) !== NoFlags$1) {
                    markComponentPassiveEffectMountStarted(finishedWork);
                  } else if ((flags & Layout) !== NoFlags$1) {
                    markComponentLayoutEffectMountStarted(finishedWork);
                  }
                }
                var create = effect.create;
                {
                  if ((flags & Insertion) !== NoFlags$1) {
                    setIsRunningInsertionEffect(true);
                  }
                }
                effect.destroy = create();
                {
                  if ((flags & Insertion) !== NoFlags$1) {
                    setIsRunningInsertionEffect(false);
                  }
                }
                {
                  if ((flags & Passive$1) !== NoFlags$1) {
                    markComponentPassiveEffectMountStopped();
                  } else if ((flags & Layout) !== NoFlags$1) {
                    markComponentLayoutEffectMountStopped();
                  }
                }
                {
                  var destroy = effect.destroy;
                  if (destroy !== void 0 && typeof destroy !== "function") {
                    var hookName = void 0;
                    if ((effect.tag & Layout) !== NoFlags) {
                      hookName = "useLayoutEffect";
                    } else if ((effect.tag & Insertion) !== NoFlags) {
                      hookName = "useInsertionEffect";
                    } else {
                      hookName = "useEffect";
                    }
                    var addendum = void 0;
                    if (destroy === null) {
                      addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                    } else if (typeof destroy.then === "function") {
                      addendum = "\n\nIt looks like you wrote " + hookName + "(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\n" + hookName + "(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching";
                    } else {
                      addendum = " You returned: " + destroy;
                    }
                    error("%s must not return anything besides a function, which is used for clean-up.%s", hookName, addendum);
                  }
                }
              }
              effect = effect.next;
            } while (effect !== firstEffect);
          }
        }
        function commitPassiveEffectDurations(finishedRoot, finishedWork) {
          {
            if ((finishedWork.flags & Update) !== NoFlags) {
              switch (finishedWork.tag) {
                case Profiler: {
                  var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;
                  var _finishedWork$memoize = finishedWork.memoizedProps, id = _finishedWork$memoize.id, onPostCommit = _finishedWork$memoize.onPostCommit;
                  var commitTime2 = getCommitTime();
                  var phase = finishedWork.alternate === null ? "mount" : "update";
                  {
                    if (isCurrentUpdateNested()) {
                      phase = "nested-update";
                    }
                  }
                  if (typeof onPostCommit === "function") {
                    onPostCommit(id, phase, passiveEffectDuration, commitTime2);
                  }
                  var parentFiber = finishedWork.return;
                  outer:
                    while (parentFiber !== null) {
                      switch (parentFiber.tag) {
                        case HostRoot:
                          var root3 = parentFiber.stateNode;
                          root3.passiveEffectDuration += passiveEffectDuration;
                          break outer;
                        case Profiler:
                          var parentStateNode = parentFiber.stateNode;
                          parentStateNode.passiveEffectDuration += passiveEffectDuration;
                          break outer;
                      }
                      parentFiber = parentFiber.return;
                    }
                  break;
                }
              }
            }
          }
        }
        function commitLayoutEffectOnFiber(finishedRoot, current2, finishedWork, committedLanes) {
          if ((finishedWork.flags & LayoutMask) !== NoFlags) {
            switch (finishedWork.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                if (!offscreenSubtreeWasHidden) {
                  if (finishedWork.mode & ProfileMode) {
                    try {
                      startLayoutEffectTimer();
                      commitHookEffectListMount(Layout | HasEffect, finishedWork);
                    } finally {
                      recordLayoutEffectDuration(finishedWork);
                    }
                  } else {
                    commitHookEffectListMount(Layout | HasEffect, finishedWork);
                  }
                }
                break;
              }
              case ClassComponent: {
                var instance = finishedWork.stateNode;
                if (finishedWork.flags & Update) {
                  if (!offscreenSubtreeWasHidden) {
                    if (current2 === null) {
                      {
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                          if (instance.props !== finishedWork.memoizedProps) {
                            error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                          }
                          if (instance.state !== finishedWork.memoizedState) {
                            error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                          }
                        }
                      }
                      if (finishedWork.mode & ProfileMode) {
                        try {
                          startLayoutEffectTimer();
                          instance.componentDidMount();
                        } finally {
                          recordLayoutEffectDuration(finishedWork);
                        }
                      } else {
                        instance.componentDidMount();
                      }
                    } else {
                      var prevProps = finishedWork.elementType === finishedWork.type ? current2.memoizedProps : resolveDefaultProps(finishedWork.type, current2.memoizedProps);
                      var prevState = current2.memoizedState;
                      {
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                          if (instance.props !== finishedWork.memoizedProps) {
                            error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                          }
                          if (instance.state !== finishedWork.memoizedState) {
                            error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                          }
                        }
                      }
                      if (finishedWork.mode & ProfileMode) {
                        try {
                          startLayoutEffectTimer();
                          instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                        } finally {
                          recordLayoutEffectDuration(finishedWork);
                        }
                      } else {
                        instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                      }
                    }
                  }
                }
                var updateQueue2 = finishedWork.updateQueue;
                if (updateQueue2 !== null) {
                  {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                      if (instance.props !== finishedWork.memoizedProps) {
                        error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                      }
                      if (instance.state !== finishedWork.memoizedState) {
                        error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                      }
                    }
                  }
                  commitUpdateQueue(finishedWork, updateQueue2, instance);
                }
                break;
              }
              case HostRoot: {
                var _updateQueue = finishedWork.updateQueue;
                if (_updateQueue !== null) {
                  var _instance = null;
                  if (finishedWork.child !== null) {
                    switch (finishedWork.child.tag) {
                      case HostComponent:
                        _instance = getPublicInstance(finishedWork.child.stateNode);
                        break;
                      case ClassComponent:
                        _instance = finishedWork.child.stateNode;
                        break;
                    }
                  }
                  commitUpdateQueue(finishedWork, _updateQueue, _instance);
                }
                break;
              }
              case HostComponent: {
                var _instance2 = finishedWork.stateNode;
                if (current2 === null && finishedWork.flags & Update) {
                  var type2 = finishedWork.type;
                  var props = finishedWork.memoizedProps;
                  commitMount(_instance2, type2, props);
                }
                break;
              }
              case HostText: {
                break;
              }
              case HostPortal: {
                break;
              }
              case Profiler: {
                {
                  var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender;
                  var effectDuration = finishedWork.stateNode.effectDuration;
                  var commitTime2 = getCommitTime();
                  var phase = current2 === null ? "mount" : "update";
                  {
                    if (isCurrentUpdateNested()) {
                      phase = "nested-update";
                    }
                  }
                  if (typeof onRender === "function") {
                    onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime2);
                  }
                  {
                    if (typeof onCommit === "function") {
                      onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime2);
                    }
                    enqueuePendingPassiveProfilerEffect(finishedWork);
                    var parentFiber = finishedWork.return;
                    outer:
                      while (parentFiber !== null) {
                        switch (parentFiber.tag) {
                          case HostRoot:
                            var root3 = parentFiber.stateNode;
                            root3.effectDuration += effectDuration;
                            break outer;
                          case Profiler:
                            var parentStateNode = parentFiber.stateNode;
                            parentStateNode.effectDuration += effectDuration;
                            break outer;
                        }
                        parentFiber = parentFiber.return;
                      }
                  }
                }
                break;
              }
              case SuspenseComponent: {
                commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                break;
              }
              case SuspenseListComponent:
              case IncompleteClassComponent:
              case ScopeComponent:
              case OffscreenComponent:
              case LegacyHiddenComponent:
              case TracingMarkerComponent: {
                break;
              }
              default:
                throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          if (!offscreenSubtreeWasHidden) {
            {
              if (finishedWork.flags & Ref) {
                commitAttachRef(finishedWork);
              }
            }
          }
        }
        function reappearLayoutEffectsOnFiber(node) {
          switch (node.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent: {
              if (node.mode & ProfileMode) {
                try {
                  startLayoutEffectTimer();
                  safelyCallCommitHookLayoutEffectListMount(node, node.return);
                } finally {
                  recordLayoutEffectDuration(node);
                }
              } else {
                safelyCallCommitHookLayoutEffectListMount(node, node.return);
              }
              break;
            }
            case ClassComponent: {
              var instance = node.stateNode;
              if (typeof instance.componentDidMount === "function") {
                safelyCallComponentDidMount(node, node.return, instance);
              }
              safelyAttachRef(node, node.return);
              break;
            }
            case HostComponent: {
              safelyAttachRef(node, node.return);
              break;
            }
          }
        }
        function hideOrUnhideAllChildren(finishedWork, isHidden2) {
          var hostSubtreeRoot = null;
          {
            var node = finishedWork;
            while (true) {
              if (node.tag === HostComponent) {
                if (hostSubtreeRoot === null) {
                  hostSubtreeRoot = node;
                  try {
                    var instance = node.stateNode;
                    if (isHidden2) {
                      hideInstance(instance);
                    } else {
                      unhideInstance(node.stateNode, node.memoizedProps);
                    }
                  } catch (error2) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                  }
                }
              } else if (node.tag === HostText) {
                if (hostSubtreeRoot === null) {
                  try {
                    var _instance3 = node.stateNode;
                    if (isHidden2) {
                      hideTextInstance(_instance3);
                    } else {
                      unhideTextInstance(_instance3, node.memoizedProps);
                    }
                  } catch (error2) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                  }
                }
              } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork)
                ;
              else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === finishedWork) {
                return;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === finishedWork) {
                  return;
                }
                if (hostSubtreeRoot === node) {
                  hostSubtreeRoot = null;
                }
                node = node.return;
              }
              if (hostSubtreeRoot === node) {
                hostSubtreeRoot = null;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
        }
        function commitAttachRef(finishedWork) {
          var ref = finishedWork.ref;
          if (ref !== null) {
            var instance = finishedWork.stateNode;
            var instanceToUse;
            switch (finishedWork.tag) {
              case HostComponent:
                instanceToUse = getPublicInstance(instance);
                break;
              default:
                instanceToUse = instance;
            }
            if (typeof ref === "function") {
              var retVal;
              if (finishedWork.mode & ProfileMode) {
                try {
                  startLayoutEffectTimer();
                  retVal = ref(instanceToUse);
                } finally {
                  recordLayoutEffectDuration(finishedWork);
                }
              } else {
                retVal = ref(instanceToUse);
              }
              {
                if (typeof retVal === "function") {
                  error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(finishedWork));
                }
              }
            } else {
              {
                if (!ref.hasOwnProperty("current")) {
                  error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentNameFromFiber(finishedWork));
                }
              }
              ref.current = instanceToUse;
            }
          }
        }
        function detachFiberMutation(fiber) {
          var alternate = fiber.alternate;
          if (alternate !== null) {
            alternate.return = null;
          }
          fiber.return = null;
        }
        function detachFiberAfterEffects(fiber) {
          var alternate = fiber.alternate;
          if (alternate !== null) {
            fiber.alternate = null;
            detachFiberAfterEffects(alternate);
          }
          {
            fiber.child = null;
            fiber.deletions = null;
            fiber.sibling = null;
            if (fiber.tag === HostComponent) {
              var hostInstance = fiber.stateNode;
              if (hostInstance !== null) {
                detachDeletedInstance(hostInstance);
              }
            }
            fiber.stateNode = null;
            {
              fiber._debugOwner = null;
            }
            {
              fiber.return = null;
              fiber.dependencies = null;
              fiber.memoizedProps = null;
              fiber.memoizedState = null;
              fiber.pendingProps = null;
              fiber.stateNode = null;
              fiber.updateQueue = null;
            }
          }
        }
        function getHostParentFiber(fiber) {
          var parent = fiber.return;
          while (parent !== null) {
            if (isHostParent(parent)) {
              return parent;
            }
            parent = parent.return;
          }
          throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        }
        function isHostParent(fiber) {
          return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
        }
        function getHostSibling(fiber) {
          var node = fiber;
          siblings:
            while (true) {
              while (node.sibling === null) {
                if (node.return === null || isHostParent(node.return)) {
                  return null;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
              while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
                if (node.flags & Placement) {
                  continue siblings;
                }
                if (node.child === null || node.tag === HostPortal) {
                  continue siblings;
                } else {
                  node.child.return = node;
                  node = node.child;
                }
              }
              if (!(node.flags & Placement)) {
                return node.stateNode;
              }
            }
        }
        function commitPlacement(finishedWork) {
          var parentFiber = getHostParentFiber(finishedWork);
          switch (parentFiber.tag) {
            case HostComponent: {
              var parent = parentFiber.stateNode;
              if (parentFiber.flags & ContentReset) {
                resetTextContent(parent);
                parentFiber.flags &= ~ContentReset;
              }
              var before = getHostSibling(finishedWork);
              insertOrAppendPlacementNode(finishedWork, before, parent);
              break;
            }
            case HostRoot:
            case HostPortal: {
              var _parent = parentFiber.stateNode.containerInfo;
              var _before = getHostSibling(finishedWork);
              insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);
              break;
            }
            default:
              throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
        function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
          var tag = node.tag;
          var isHost = tag === HostComponent || tag === HostText;
          if (isHost) {
            var stateNode = node.stateNode;
            if (before) {
              insertInContainerBefore(parent, stateNode, before);
            } else {
              appendChildToContainer(parent, stateNode);
            }
          } else if (tag === HostPortal)
            ;
          else {
            var child = node.child;
            if (child !== null) {
              insertOrAppendPlacementNodeIntoContainer(child, before, parent);
              var sibling = child.sibling;
              while (sibling !== null) {
                insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
                sibling = sibling.sibling;
              }
            }
          }
        }
        function insertOrAppendPlacementNode(node, before, parent) {
          var tag = node.tag;
          var isHost = tag === HostComponent || tag === HostText;
          if (isHost) {
            var stateNode = node.stateNode;
            if (before) {
              insertBefore(parent, stateNode, before);
            } else {
              appendChild(parent, stateNode);
            }
          } else if (tag === HostPortal)
            ;
          else {
            var child = node.child;
            if (child !== null) {
              insertOrAppendPlacementNode(child, before, parent);
              var sibling = child.sibling;
              while (sibling !== null) {
                insertOrAppendPlacementNode(sibling, before, parent);
                sibling = sibling.sibling;
              }
            }
          }
        }
        var hostParent = null;
        var hostParentIsContainer = false;
        function commitDeletionEffects(root3, returnFiber, deletedFiber) {
          {
            var parent = returnFiber;
            findParent:
              while (parent !== null) {
                switch (parent.tag) {
                  case HostComponent: {
                    hostParent = parent.stateNode;
                    hostParentIsContainer = false;
                    break findParent;
                  }
                  case HostRoot: {
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
                  }
                  case HostPortal: {
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
                  }
                }
                parent = parent.return;
              }
            if (hostParent === null) {
              throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
            }
            commitDeletionEffectsOnFiber(root3, returnFiber, deletedFiber);
            hostParent = null;
            hostParentIsContainer = false;
          }
          detachFiberMutation(deletedFiber);
        }
        function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
          var child = parent.child;
          while (child !== null) {
            commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);
            child = child.sibling;
          }
        }
        function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
          onCommitUnmount(deletedFiber);
          switch (deletedFiber.tag) {
            case HostComponent: {
              if (!offscreenSubtreeWasHidden) {
                safelyDetachRef(deletedFiber, nearestMountedAncestor);
              }
            }
            case HostText: {
              {
                var prevHostParent = hostParent;
                var prevHostParentIsContainer = hostParentIsContainer;
                hostParent = null;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                if (hostParent !== null) {
                  if (hostParentIsContainer) {
                    removeChildFromContainer(hostParent, deletedFiber.stateNode);
                  } else {
                    removeChild(hostParent, deletedFiber.stateNode);
                  }
                }
              }
              return;
            }
            case DehydratedFragment: {
              {
                if (hostParent !== null) {
                  if (hostParentIsContainer) {
                    clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);
                  } else {
                    clearSuspenseBoundary(hostParent, deletedFiber.stateNode);
                  }
                }
              }
              return;
            }
            case HostPortal: {
              {
                var _prevHostParent = hostParent;
                var _prevHostParentIsContainer = hostParentIsContainer;
                hostParent = deletedFiber.stateNode.containerInfo;
                hostParentIsContainer = true;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = _prevHostParent;
                hostParentIsContainer = _prevHostParentIsContainer;
              }
              return;
            }
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent: {
              if (!offscreenSubtreeWasHidden) {
                var updateQueue2 = deletedFiber.updateQueue;
                if (updateQueue2 !== null) {
                  var lastEffect = updateQueue2.lastEffect;
                  if (lastEffect !== null) {
                    var firstEffect = lastEffect.next;
                    var effect = firstEffect;
                    do {
                      var _effect = effect, destroy = _effect.destroy, tag = _effect.tag;
                      if (destroy !== void 0) {
                        if ((tag & Insertion) !== NoFlags$1) {
                          safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                        } else if ((tag & Layout) !== NoFlags$1) {
                          {
                            markComponentLayoutEffectUnmountStarted(deletedFiber);
                          }
                          if (deletedFiber.mode & ProfileMode) {
                            startLayoutEffectTimer();
                            safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                            recordLayoutEffectDuration(deletedFiber);
                          } else {
                            safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                          }
                          {
                            markComponentLayoutEffectUnmountStopped();
                          }
                        }
                      }
                      effect = effect.next;
                    } while (effect !== firstEffect);
                  }
                }
              }
              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
              return;
            }
            case ClassComponent: {
              if (!offscreenSubtreeWasHidden) {
                safelyDetachRef(deletedFiber, nearestMountedAncestor);
                var instance = deletedFiber.stateNode;
                if (typeof instance.componentWillUnmount === "function") {
                  safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);
                }
              }
              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
              return;
            }
            case ScopeComponent: {
              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
              return;
            }
            case OffscreenComponent: {
              if (deletedFiber.mode & ConcurrentMode) {
                var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
              } else {
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
              }
              break;
            }
            default: {
              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
              return;
            }
          }
        }
        function commitSuspenseCallback(finishedWork) {
          var newState = finishedWork.memoizedState;
        }
        function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
          var newState = finishedWork.memoizedState;
          if (newState === null) {
            var current2 = finishedWork.alternate;
            if (current2 !== null) {
              var prevState = current2.memoizedState;
              if (prevState !== null) {
                var suspenseInstance = prevState.dehydrated;
                if (suspenseInstance !== null) {
                  commitHydratedSuspenseInstance(suspenseInstance);
                }
              }
            }
          }
        }
        function attachSuspenseRetryListeners(finishedWork) {
          var wakeables = finishedWork.updateQueue;
          if (wakeables !== null) {
            finishedWork.updateQueue = null;
            var retryCache = finishedWork.stateNode;
            if (retryCache === null) {
              retryCache = finishedWork.stateNode = new PossiblyWeakSet();
            }
            wakeables.forEach(function(wakeable) {
              var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
              if (!retryCache.has(wakeable)) {
                retryCache.add(wakeable);
                {
                  if (isDevToolsPresent) {
                    if (inProgressLanes !== null && inProgressRoot !== null) {
                      restorePendingUpdaters(inProgressRoot, inProgressLanes);
                    } else {
                      throw Error("Expected finished root and lanes to be set. This is a bug in React.");
                    }
                  }
                }
                wakeable.then(retry, retry);
              }
            });
          }
        }
        function commitMutationEffects(root3, finishedWork, committedLanes) {
          inProgressLanes = committedLanes;
          inProgressRoot = root3;
          setCurrentFiber(finishedWork);
          commitMutationEffectsOnFiber(finishedWork, root3);
          setCurrentFiber(finishedWork);
          inProgressLanes = null;
          inProgressRoot = null;
        }
        function recursivelyTraverseMutationEffects(root3, parentFiber, lanes) {
          var deletions = parentFiber.deletions;
          if (deletions !== null) {
            for (var i9 = 0; i9 < deletions.length; i9++) {
              var childToDelete = deletions[i9];
              try {
                commitDeletionEffects(root3, parentFiber, childToDelete);
              } catch (error2) {
                captureCommitPhaseError(childToDelete, parentFiber, error2);
              }
            }
          }
          var prevDebugFiber = getCurrentFiber();
          if (parentFiber.subtreeFlags & MutationMask) {
            var child = parentFiber.child;
            while (child !== null) {
              setCurrentFiber(child);
              commitMutationEffectsOnFiber(child, root3);
              child = child.sibling;
            }
          }
          setCurrentFiber(prevDebugFiber);
        }
        function commitMutationEffectsOnFiber(finishedWork, root3, lanes) {
          var current2 = finishedWork.alternate;
          var flags = finishedWork.flags;
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Update) {
                try {
                  commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);
                  commitHookEffectListMount(Insertion | HasEffect, finishedWork);
                } catch (error2) {
                  captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                }
                if (finishedWork.mode & ProfileMode) {
                  try {
                    startLayoutEffectTimer();
                    commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                  } catch (error2) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                  }
                  recordLayoutEffectDuration(finishedWork);
                } else {
                  try {
                    commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                  } catch (error2) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                  }
                }
              }
              return;
            }
            case ClassComponent: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Ref) {
                if (current2 !== null) {
                  safelyDetachRef(current2, current2.return);
                }
              }
              return;
            }
            case HostComponent: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Ref) {
                if (current2 !== null) {
                  safelyDetachRef(current2, current2.return);
                }
              }
              {
                if (finishedWork.flags & ContentReset) {
                  var instance = finishedWork.stateNode;
                  try {
                    resetTextContent(instance);
                  } catch (error2) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                  }
                }
                if (flags & Update) {
                  var _instance4 = finishedWork.stateNode;
                  if (_instance4 != null) {
                    var newProps = finishedWork.memoizedProps;
                    var oldProps = current2 !== null ? current2.memoizedProps : newProps;
                    var type2 = finishedWork.type;
                    var updatePayload = finishedWork.updateQueue;
                    finishedWork.updateQueue = null;
                    if (updatePayload !== null) {
                      try {
                        commitUpdate(_instance4, updatePayload, type2, oldProps, newProps, finishedWork);
                      } catch (error2) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                      }
                    }
                  }
                }
              }
              return;
            }
            case HostText: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Update) {
                {
                  if (finishedWork.stateNode === null) {
                    throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                  }
                  var textInstance = finishedWork.stateNode;
                  var newText = finishedWork.memoizedProps;
                  var oldText = current2 !== null ? current2.memoizedProps : newText;
                  try {
                    commitTextUpdate(textInstance, oldText, newText);
                  } catch (error2) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                  }
                }
              }
              return;
            }
            case HostRoot: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Update) {
                {
                  if (current2 !== null) {
                    var prevRootState = current2.memoizedState;
                    if (prevRootState.isDehydrated) {
                      try {
                        commitHydratedContainer(root3.containerInfo);
                      } catch (error2) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                      }
                    }
                  }
                }
              }
              return;
            }
            case HostPortal: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              return;
            }
            case SuspenseComponent: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              var offscreenFiber = finishedWork.child;
              if (offscreenFiber.flags & Visibility) {
                var offscreenInstance = offscreenFiber.stateNode;
                var newState = offscreenFiber.memoizedState;
                var isHidden2 = newState !== null;
                offscreenInstance.isHidden = isHidden2;
                if (isHidden2) {
                  var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;
                  if (!wasHidden) {
                    markCommitTimeOfFallback();
                  }
                }
              }
              if (flags & Update) {
                try {
                  commitSuspenseCallback(finishedWork);
                } catch (error2) {
                  captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                }
                attachSuspenseRetryListeners(finishedWork);
              }
              return;
            }
            case OffscreenComponent: {
              var _wasHidden = current2 !== null && current2.memoizedState !== null;
              if (finishedWork.mode & ConcurrentMode) {
                var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || _wasHidden;
                recursivelyTraverseMutationEffects(root3, finishedWork);
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
              } else {
                recursivelyTraverseMutationEffects(root3, finishedWork);
              }
              commitReconciliationEffects(finishedWork);
              if (flags & Visibility) {
                var _offscreenInstance = finishedWork.stateNode;
                var _newState = finishedWork.memoizedState;
                var _isHidden = _newState !== null;
                var offscreenBoundary = finishedWork;
                _offscreenInstance.isHidden = _isHidden;
                {
                  if (_isHidden) {
                    if (!_wasHidden) {
                      if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {
                        nextEffect = offscreenBoundary;
                        var offscreenChild = offscreenBoundary.child;
                        while (offscreenChild !== null) {
                          nextEffect = offscreenChild;
                          disappearLayoutEffects_begin(offscreenChild);
                          offscreenChild = offscreenChild.sibling;
                        }
                      }
                    }
                  }
                }
                {
                  hideOrUnhideAllChildren(offscreenBoundary, _isHidden);
                }
              }
              return;
            }
            case SuspenseListComponent: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Update) {
                attachSuspenseRetryListeners(finishedWork);
              }
              return;
            }
            case ScopeComponent: {
              return;
            }
            default: {
              recursivelyTraverseMutationEffects(root3, finishedWork);
              commitReconciliationEffects(finishedWork);
              return;
            }
          }
        }
        function commitReconciliationEffects(finishedWork) {
          var flags = finishedWork.flags;
          if (flags & Placement) {
            try {
              commitPlacement(finishedWork);
            } catch (error2) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error2);
            }
            finishedWork.flags &= ~Placement;
          }
          if (flags & Hydrating) {
            finishedWork.flags &= ~Hydrating;
          }
        }
        function commitLayoutEffects(finishedWork, root3, committedLanes) {
          inProgressLanes = committedLanes;
          inProgressRoot = root3;
          nextEffect = finishedWork;
          commitLayoutEffects_begin(finishedWork, root3, committedLanes);
          inProgressLanes = null;
          inProgressRoot = null;
        }
        function commitLayoutEffects_begin(subtreeRoot, root3, committedLanes) {
          var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent && isModernRoot) {
              var isHidden2 = fiber.memoizedState !== null;
              var newOffscreenSubtreeIsHidden = isHidden2 || offscreenSubtreeIsHidden;
              if (newOffscreenSubtreeIsHidden) {
                commitLayoutMountEffects_complete(subtreeRoot, root3, committedLanes);
                continue;
              } else {
                var current2 = fiber.alternate;
                var wasHidden = current2 !== null && current2.memoizedState !== null;
                var newOffscreenSubtreeWasHidden = wasHidden || offscreenSubtreeWasHidden;
                var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;
                var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;
                offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;
                if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {
                  nextEffect = fiber;
                  reappearLayoutEffects_begin(fiber);
                }
                var child = firstChild;
                while (child !== null) {
                  nextEffect = child;
                  commitLayoutEffects_begin(child, root3, committedLanes);
                  child = child.sibling;
                }
                nextEffect = fiber;
                offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                commitLayoutMountEffects_complete(subtreeRoot, root3, committedLanes);
                continue;
              }
            }
            if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {
              firstChild.return = fiber;
              nextEffect = firstChild;
            } else {
              commitLayoutMountEffects_complete(subtreeRoot, root3, committedLanes);
            }
          }
        }
        function commitLayoutMountEffects_complete(subtreeRoot, root3, committedLanes) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            if ((fiber.flags & LayoutMask) !== NoFlags) {
              var current2 = fiber.alternate;
              setCurrentFiber(fiber);
              try {
                commitLayoutEffectOnFiber(root3, current2, fiber, committedLanes);
              } catch (error2) {
                captureCommitPhaseError(fiber, fiber.return, error2);
              }
              resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
              nextEffect = null;
              return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function disappearLayoutEffects_begin(subtreeRoot) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var firstChild = fiber.child;
            switch (fiber.tag) {
              case FunctionComponent:
              case ForwardRef:
              case MemoComponent:
              case SimpleMemoComponent: {
                if (fiber.mode & ProfileMode) {
                  try {
                    startLayoutEffectTimer();
                    commitHookEffectListUnmount(Layout, fiber, fiber.return);
                  } finally {
                    recordLayoutEffectDuration(fiber);
                  }
                } else {
                  commitHookEffectListUnmount(Layout, fiber, fiber.return);
                }
                break;
              }
              case ClassComponent: {
                safelyDetachRef(fiber, fiber.return);
                var instance = fiber.stateNode;
                if (typeof instance.componentWillUnmount === "function") {
                  safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                }
                break;
              }
              case HostComponent: {
                safelyDetachRef(fiber, fiber.return);
                break;
              }
              case OffscreenComponent: {
                var isHidden2 = fiber.memoizedState !== null;
                if (isHidden2) {
                  disappearLayoutEffects_complete(subtreeRoot);
                  continue;
                }
                break;
              }
            }
            if (firstChild !== null) {
              firstChild.return = fiber;
              nextEffect = firstChild;
            } else {
              disappearLayoutEffects_complete(subtreeRoot);
            }
          }
        }
        function disappearLayoutEffects_complete(subtreeRoot) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            if (fiber === subtreeRoot) {
              nextEffect = null;
              return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function reappearLayoutEffects_begin(subtreeRoot) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent) {
              var isHidden2 = fiber.memoizedState !== null;
              if (isHidden2) {
                reappearLayoutEffects_complete(subtreeRoot);
                continue;
              }
            }
            if (firstChild !== null) {
              firstChild.return = fiber;
              nextEffect = firstChild;
            } else {
              reappearLayoutEffects_complete(subtreeRoot);
            }
          }
        }
        function reappearLayoutEffects_complete(subtreeRoot) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            setCurrentFiber(fiber);
            try {
              reappearLayoutEffectsOnFiber(fiber);
            } catch (error2) {
              captureCommitPhaseError(fiber, fiber.return, error2);
            }
            resetCurrentFiber();
            if (fiber === subtreeRoot) {
              nextEffect = null;
              return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function commitPassiveMountEffects(root3, finishedWork, committedLanes, committedTransitions) {
          nextEffect = finishedWork;
          commitPassiveMountEffects_begin(finishedWork, root3, committedLanes, committedTransitions);
        }
        function commitPassiveMountEffects_begin(subtreeRoot, root3, committedLanes, committedTransitions) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {
              firstChild.return = fiber;
              nextEffect = firstChild;
            } else {
              commitPassiveMountEffects_complete(subtreeRoot, root3, committedLanes, committedTransitions);
            }
          }
        }
        function commitPassiveMountEffects_complete(subtreeRoot, root3, committedLanes, committedTransitions) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
              setCurrentFiber(fiber);
              try {
                commitPassiveMountOnFiber(root3, fiber, committedLanes, committedTransitions);
              } catch (error2) {
                captureCommitPhaseError(fiber, fiber.return, error2);
              }
              resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
              nextEffect = null;
              return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent: {
              if (finishedWork.mode & ProfileMode) {
                startPassiveEffectTimer();
                try {
                  commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                } finally {
                  recordPassiveEffectDuration(finishedWork);
                }
              } else {
                commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
              }
              break;
            }
          }
        }
        function commitPassiveUnmountEffects(firstChild) {
          nextEffect = firstChild;
          commitPassiveUnmountEffects_begin();
        }
        function commitPassiveUnmountEffects_begin() {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var child = fiber.child;
            if ((nextEffect.flags & ChildDeletion) !== NoFlags) {
              var deletions = fiber.deletions;
              if (deletions !== null) {
                for (var i9 = 0; i9 < deletions.length; i9++) {
                  var fiberToDelete = deletions[i9];
                  nextEffect = fiberToDelete;
                  commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);
                }
                {
                  var previousFiber = fiber.alternate;
                  if (previousFiber !== null) {
                    var detachedChild = previousFiber.child;
                    if (detachedChild !== null) {
                      previousFiber.child = null;
                      do {
                        var detachedSibling = detachedChild.sibling;
                        detachedChild.sibling = null;
                        detachedChild = detachedSibling;
                      } while (detachedChild !== null);
                    }
                  }
                }
                nextEffect = fiber;
              }
            }
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {
              child.return = fiber;
              nextEffect = child;
            } else {
              commitPassiveUnmountEffects_complete();
            }
          }
        }
        function commitPassiveUnmountEffects_complete() {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
              setCurrentFiber(fiber);
              commitPassiveUnmountOnFiber(fiber);
              resetCurrentFiber();
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function commitPassiveUnmountOnFiber(finishedWork) {
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent: {
              if (finishedWork.mode & ProfileMode) {
                startPassiveEffectTimer();
                commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                recordPassiveEffectDuration(finishedWork);
              } else {
                commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
              }
              break;
            }
          }
        }
        function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            setCurrentFiber(fiber);
            commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);
            resetCurrentFiber();
            var child = fiber.child;
            if (child !== null) {
              child.return = fiber;
              nextEffect = child;
            } else {
              commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);
            }
          }
        }
        function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var sibling = fiber.sibling;
            var returnFiber = fiber.return;
            {
              detachFiberAfterEffects(fiber);
              if (fiber === deletedSubtreeRoot) {
                nextEffect = null;
                return;
              }
            }
            if (sibling !== null) {
              sibling.return = returnFiber;
              nextEffect = sibling;
              return;
            }
            nextEffect = returnFiber;
          }
        }
        function commitPassiveUnmountInsideDeletedTreeOnFiber(current2, nearestMountedAncestor) {
          switch (current2.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent: {
              if (current2.mode & ProfileMode) {
                startPassiveEffectTimer();
                commitHookEffectListUnmount(Passive$1, current2, nearestMountedAncestor);
                recordPassiveEffectDuration(current2);
              } else {
                commitHookEffectListUnmount(Passive$1, current2, nearestMountedAncestor);
              }
              break;
            }
          }
        }
        function invokeLayoutEffectMountInDEV(fiber) {
          {
            switch (fiber.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                try {
                  commitHookEffectListMount(Layout | HasEffect, fiber);
                } catch (error2) {
                  captureCommitPhaseError(fiber, fiber.return, error2);
                }
                break;
              }
              case ClassComponent: {
                var instance = fiber.stateNode;
                try {
                  instance.componentDidMount();
                } catch (error2) {
                  captureCommitPhaseError(fiber, fiber.return, error2);
                }
                break;
              }
            }
          }
        }
        function invokePassiveEffectMountInDEV(fiber) {
          {
            switch (fiber.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                try {
                  commitHookEffectListMount(Passive$1 | HasEffect, fiber);
                } catch (error2) {
                  captureCommitPhaseError(fiber, fiber.return, error2);
                }
                break;
              }
            }
          }
        }
        function invokeLayoutEffectUnmountInDEV(fiber) {
          {
            switch (fiber.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                try {
                  commitHookEffectListUnmount(Layout | HasEffect, fiber, fiber.return);
                } catch (error2) {
                  captureCommitPhaseError(fiber, fiber.return, error2);
                }
                break;
              }
              case ClassComponent: {
                var instance = fiber.stateNode;
                if (typeof instance.componentWillUnmount === "function") {
                  safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                }
                break;
              }
            }
          }
        }
        function invokePassiveEffectUnmountInDEV(fiber) {
          {
            switch (fiber.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                try {
                  commitHookEffectListUnmount(Passive$1 | HasEffect, fiber, fiber.return);
                } catch (error2) {
                  captureCommitPhaseError(fiber, fiber.return, error2);
                }
              }
            }
          }
        }
        var COMPONENT_TYPE = 0;
        var HAS_PSEUDO_CLASS_TYPE = 1;
        var ROLE_TYPE = 2;
        var TEST_NAME_TYPE = 3;
        var TEXT_TYPE = 4;
        if (typeof Symbol === "function" && Symbol.for) {
          var symbolFor = Symbol.for;
          COMPONENT_TYPE = symbolFor("selector.component");
          HAS_PSEUDO_CLASS_TYPE = symbolFor("selector.has_pseudo_class");
          ROLE_TYPE = symbolFor("selector.role");
          TEST_NAME_TYPE = symbolFor("selector.test_id");
          TEXT_TYPE = symbolFor("selector.text");
        }
        var commitHooks = [];
        function onCommitRoot$1() {
          {
            commitHooks.forEach(function(commitHook) {
              return commitHook();
            });
          }
        }
        var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;
        function isLegacyActEnvironment(fiber) {
          {
            var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== "undefined" ? IS_REACT_ACT_ENVIRONMENT : void 0;
            var jestIsDefined = typeof jest !== "undefined";
            return jestIsDefined && isReactActEnvironmentGlobal !== false;
          }
        }
        function isConcurrentActEnvironment() {
          {
            var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== "undefined" ? IS_REACT_ACT_ENVIRONMENT : void 0;
            if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {
              error("The current testing environment is not configured to support act(...)");
            }
            return isReactActEnvironmentGlobal;
          }
        }
        var ceil2 = Math.ceil;
        var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, ReactCurrentBatchConfig$3 = ReactSharedInternals.ReactCurrentBatchConfig, ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;
        var NoContext = 0;
        var BatchedContext = 1;
        var RenderContext = 2;
        var CommitContext = 4;
        var RootInProgress = 0;
        var RootFatalErrored = 1;
        var RootErrored = 2;
        var RootSuspended = 3;
        var RootSuspendedWithDelay = 4;
        var RootCompleted = 5;
        var RootDidNotComplete = 6;
        var executionContext = NoContext;
        var workInProgressRoot = null;
        var workInProgress = null;
        var workInProgressRootRenderLanes = NoLanes;
        var subtreeRenderLanes = NoLanes;
        var subtreeRenderLanesCursor = createCursor(NoLanes);
        var workInProgressRootExitStatus = RootInProgress;
        var workInProgressRootFatalError = null;
        var workInProgressRootIncludedLanes = NoLanes;
        var workInProgressRootSkippedLanes = NoLanes;
        var workInProgressRootInterleavedUpdatedLanes = NoLanes;
        var workInProgressRootPingedLanes = NoLanes;
        var workInProgressRootConcurrentErrors = null;
        var workInProgressRootRecoverableErrors = null;
        var globalMostRecentFallbackTime = 0;
        var FALLBACK_THROTTLE_MS = 500;
        var workInProgressRootRenderTargetTime = Infinity;
        var RENDER_TIMEOUT_MS = 500;
        var workInProgressTransitions = null;
        function resetRenderTimer() {
          workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
        }
        function getRenderTargetTime() {
          return workInProgressRootRenderTargetTime;
        }
        var hasUncaughtError = false;
        var firstUncaughtError = null;
        var legacyErrorBoundariesThatAlreadyFailed = null;
        var rootDoesHavePassiveEffects = false;
        var rootWithPendingPassiveEffects = null;
        var pendingPassiveEffectsLanes = NoLanes;
        var pendingPassiveProfilerEffects = [];
        var pendingPassiveTransitions = null;
        var NESTED_UPDATE_LIMIT = 50;
        var nestedUpdateCount = 0;
        var rootWithNestedUpdates = null;
        var isFlushingPassiveEffects = false;
        var didScheduleUpdateDuringPassiveEffects = false;
        var NESTED_PASSIVE_UPDATE_LIMIT = 50;
        var nestedPassiveUpdateCount = 0;
        var rootWithPassiveNestedUpdates = null;
        var currentEventTime = NoTimestamp;
        var currentEventTransitionLane = NoLanes;
        var isRunningInsertionEffect = false;
        function getWorkInProgressRoot() {
          return workInProgressRoot;
        }
        function requestEventTime() {
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            return now();
          }
          if (currentEventTime !== NoTimestamp) {
            return currentEventTime;
          }
          currentEventTime = now();
          return currentEventTime;
        }
        function requestUpdateLane(fiber) {
          var mode = fiber.mode;
          if ((mode & ConcurrentMode) === NoMode) {
            return SyncLane;
          } else if ((executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) {
            return pickArbitraryLane(workInProgressRootRenderLanes);
          }
          var isTransition = requestCurrentTransition() !== NoTransition;
          if (isTransition) {
            if (ReactCurrentBatchConfig$3.transition !== null) {
              var transition = ReactCurrentBatchConfig$3.transition;
              if (!transition._updatedFibers) {
                transition._updatedFibers = new Set();
              }
              transition._updatedFibers.add(fiber);
            }
            if (currentEventTransitionLane === NoLane) {
              currentEventTransitionLane = claimNextTransitionLane();
            }
            return currentEventTransitionLane;
          }
          var updateLane = getCurrentUpdatePriority();
          if (updateLane !== NoLane) {
            return updateLane;
          }
          var eventLane = getCurrentEventPriority();
          return eventLane;
        }
        function requestRetryLane(fiber) {
          var mode = fiber.mode;
          if ((mode & ConcurrentMode) === NoMode) {
            return SyncLane;
          }
          return claimNextRetryLane();
        }
        function scheduleUpdateOnFiber(root3, fiber, lane, eventTime) {
          checkForNestedUpdates();
          {
            if (isRunningInsertionEffect) {
              error("useInsertionEffect must not schedule updates.");
            }
          }
          {
            if (isFlushingPassiveEffects) {
              didScheduleUpdateDuringPassiveEffects = true;
            }
          }
          markRootUpdated(root3, lane, eventTime);
          if ((executionContext & RenderContext) !== NoLanes && root3 === workInProgressRoot) {
            warnAboutRenderPhaseUpdatesInDEV(fiber);
          } else {
            {
              if (isDevToolsPresent) {
                addFiberToLanesMap(root3, fiber, lane);
              }
            }
            warnIfUpdatesNotWrappedWithActDEV(fiber);
            if (root3 === workInProgressRoot) {
              if ((executionContext & RenderContext) === NoContext) {
                workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);
              }
              if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
                markRootSuspended$1(root3, workInProgressRootRenderLanes);
              }
            }
            ensureRootIsScheduled(root3, eventTime);
            if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && !ReactCurrentActQueue$1.isBatchingLegacy) {
              resetRenderTimer();
              flushSyncCallbacksOnlyInLegacyMode();
            }
          }
        }
        function scheduleInitialHydrationOnRoot(root3, lane, eventTime) {
          var current2 = root3.current;
          current2.lanes = lane;
          markRootUpdated(root3, lane, eventTime);
          ensureRootIsScheduled(root3, eventTime);
        }
        function isUnsafeClassRenderPhaseUpdate(fiber) {
          return (executionContext & RenderContext) !== NoContext;
        }
        function ensureRootIsScheduled(root3, currentTime) {
          var existingCallbackNode = root3.callbackNode;
          markStarvedLanesAsExpired(root3, currentTime);
          var nextLanes = getNextLanes(root3, root3 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
          if (nextLanes === NoLanes) {
            if (existingCallbackNode !== null) {
              cancelCallback$1(existingCallbackNode);
            }
            root3.callbackNode = null;
            root3.callbackPriority = NoLane;
            return;
          }
          var newCallbackPriority = getHighestPriorityLane(nextLanes);
          var existingCallbackPriority = root3.callbackPriority;
          if (existingCallbackPriority === newCallbackPriority && !(ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {
            {
              if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) {
                error("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            return;
          }
          if (existingCallbackNode != null) {
            cancelCallback$1(existingCallbackNode);
          }
          var newCallbackNode;
          if (newCallbackPriority === SyncLane) {
            if (root3.tag === LegacyRoot) {
              if (ReactCurrentActQueue$1.isBatchingLegacy !== null) {
                ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;
              }
              scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root3));
            } else {
              scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root3));
            }
            {
              if (ReactCurrentActQueue$1.current !== null) {
                ReactCurrentActQueue$1.current.push(flushSyncCallbacks);
              } else {
                scheduleMicrotask(function() {
                  if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
                    flushSyncCallbacks();
                  }
                });
              }
            }
            newCallbackNode = null;
          } else {
            var schedulerPriorityLevel;
            switch (lanesToEventPriority(nextLanes)) {
              case DiscreteEventPriority:
                schedulerPriorityLevel = ImmediatePriority;
                break;
              case ContinuousEventPriority:
                schedulerPriorityLevel = UserBlockingPriority;
                break;
              case DefaultEventPriority:
                schedulerPriorityLevel = NormalPriority;
                break;
              case IdleEventPriority:
                schedulerPriorityLevel = IdlePriority;
                break;
              default:
                schedulerPriorityLevel = NormalPriority;
                break;
            }
            newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root3));
          }
          root3.callbackPriority = newCallbackPriority;
          root3.callbackNode = newCallbackNode;
        }
        function performConcurrentWorkOnRoot(root3, didTimeout) {
          {
            resetNestedUpdateFlag();
          }
          currentEventTime = NoTimestamp;
          currentEventTransitionLane = NoLanes;
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            throw new Error("Should not already be working.");
          }
          var originalCallbackNode = root3.callbackNode;
          var didFlushPassiveEffects = flushPassiveEffects();
          if (didFlushPassiveEffects) {
            if (root3.callbackNode !== originalCallbackNode) {
              return null;
            }
          }
          var lanes = getNextLanes(root3, root3 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
          if (lanes === NoLanes) {
            return null;
          }
          var shouldTimeSlice = !includesBlockingLane(root3, lanes) && !includesExpiredLane(root3, lanes) && !didTimeout;
          var exitStatus = shouldTimeSlice ? renderRootConcurrent(root3, lanes) : renderRootSync(root3, lanes);
          if (exitStatus !== RootInProgress) {
            if (exitStatus === RootErrored) {
              var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root3);
              if (errorRetryLanes !== NoLanes) {
                lanes = errorRetryLanes;
                exitStatus = recoverFromConcurrentError(root3, errorRetryLanes);
              }
            }
            if (exitStatus === RootFatalErrored) {
              var fatalError = workInProgressRootFatalError;
              prepareFreshStack(root3, NoLanes);
              markRootSuspended$1(root3, lanes);
              ensureRootIsScheduled(root3, now());
              throw fatalError;
            }
            if (exitStatus === RootDidNotComplete) {
              markRootSuspended$1(root3, lanes);
            } else {
              var renderWasConcurrent = !includesBlockingLane(root3, lanes);
              var finishedWork = root3.current.alternate;
              if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {
                exitStatus = renderRootSync(root3, lanes);
                if (exitStatus === RootErrored) {
                  var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root3);
                  if (_errorRetryLanes !== NoLanes) {
                    lanes = _errorRetryLanes;
                    exitStatus = recoverFromConcurrentError(root3, _errorRetryLanes);
                  }
                }
                if (exitStatus === RootFatalErrored) {
                  var _fatalError = workInProgressRootFatalError;
                  prepareFreshStack(root3, NoLanes);
                  markRootSuspended$1(root3, lanes);
                  ensureRootIsScheduled(root3, now());
                  throw _fatalError;
                }
              }
              root3.finishedWork = finishedWork;
              root3.finishedLanes = lanes;
              finishConcurrentRender(root3, exitStatus, lanes);
            }
          }
          ensureRootIsScheduled(root3, now());
          if (root3.callbackNode === originalCallbackNode) {
            return performConcurrentWorkOnRoot.bind(null, root3);
          }
          return null;
        }
        function recoverFromConcurrentError(root3, errorRetryLanes) {
          var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;
          if (isRootDehydrated(root3)) {
            var rootWorkInProgress = prepareFreshStack(root3, errorRetryLanes);
            rootWorkInProgress.flags |= ForceClientRender;
            {
              errorHydratingContainer(root3.containerInfo);
            }
          }
          var exitStatus = renderRootSync(root3, errorRetryLanes);
          if (exitStatus !== RootErrored) {
            var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;
            workInProgressRootRecoverableErrors = errorsFromFirstAttempt;
            if (errorsFromSecondAttempt !== null) {
              queueRecoverableErrors(errorsFromSecondAttempt);
            }
          }
          return exitStatus;
        }
        function queueRecoverableErrors(errors) {
          if (workInProgressRootRecoverableErrors === null) {
            workInProgressRootRecoverableErrors = errors;
          } else {
            workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);
          }
        }
        function finishConcurrentRender(root3, exitStatus, lanes) {
          switch (exitStatus) {
            case RootInProgress:
            case RootFatalErrored: {
              throw new Error("Root did not complete. This is a bug in React.");
            }
            case RootErrored: {
              commitRoot(root3, workInProgressRootRecoverableErrors, workInProgressTransitions);
              break;
            }
            case RootSuspended: {
              markRootSuspended$1(root3, lanes);
              if (includesOnlyRetries(lanes) && !shouldForceFlushFallbacksInDEV()) {
                var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();
                if (msUntilTimeout > 10) {
                  var nextLanes = getNextLanes(root3, NoLanes);
                  if (nextLanes !== NoLanes) {
                    break;
                  }
                  var suspendedLanes = root3.suspendedLanes;
                  if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                    var eventTime = requestEventTime();
                    markRootPinged(root3, suspendedLanes);
                    break;
                  }
                  root3.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root3, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);
                  break;
                }
              }
              commitRoot(root3, workInProgressRootRecoverableErrors, workInProgressTransitions);
              break;
            }
            case RootSuspendedWithDelay: {
              markRootSuspended$1(root3, lanes);
              if (includesOnlyTransitions(lanes)) {
                break;
              }
              if (!shouldForceFlushFallbacksInDEV()) {
                var mostRecentEventTime = getMostRecentEventTime(root3, lanes);
                var eventTimeMs = mostRecentEventTime;
                var timeElapsedMs = now() - eventTimeMs;
                var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;
                if (_msUntilTimeout > 10) {
                  root3.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root3, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);
                  break;
                }
              }
              commitRoot(root3, workInProgressRootRecoverableErrors, workInProgressTransitions);
              break;
            }
            case RootCompleted: {
              commitRoot(root3, workInProgressRootRecoverableErrors, workInProgressTransitions);
              break;
            }
            default: {
              throw new Error("Unknown root exit status.");
            }
          }
        }
        function isRenderConsistentWithExternalStores(finishedWork) {
          var node = finishedWork;
          while (true) {
            if (node.flags & StoreConsistency) {
              var updateQueue2 = node.updateQueue;
              if (updateQueue2 !== null) {
                var checks = updateQueue2.stores;
                if (checks !== null) {
                  for (var i9 = 0; i9 < checks.length; i9++) {
                    var check = checks[i9];
                    var getSnapshot = check.getSnapshot;
                    var renderedValue = check.value;
                    try {
                      if (!objectIs(getSnapshot(), renderedValue)) {
                        return false;
                      }
                    } catch (error2) {
                      return false;
                    }
                  }
                }
              }
            }
            var child = node.child;
            if (node.subtreeFlags & StoreConsistency && child !== null) {
              child.return = node;
              node = child;
              continue;
            }
            if (node === finishedWork) {
              return true;
            }
            while (node.sibling === null) {
              if (node.return === null || node.return === finishedWork) {
                return true;
              }
              node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
          }
          return true;
        }
        function markRootSuspended$1(root3, suspendedLanes) {
          suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
          suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);
          markRootSuspended(root3, suspendedLanes);
        }
        function performSyncWorkOnRoot(root3) {
          {
            syncNestedUpdateFlag();
          }
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            throw new Error("Should not already be working.");
          }
          flushPassiveEffects();
          var lanes = getNextLanes(root3, NoLanes);
          if (!includesSomeLane(lanes, SyncLane)) {
            ensureRootIsScheduled(root3, now());
            return null;
          }
          var exitStatus = renderRootSync(root3, lanes);
          if (root3.tag !== LegacyRoot && exitStatus === RootErrored) {
            var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root3);
            if (errorRetryLanes !== NoLanes) {
              lanes = errorRetryLanes;
              exitStatus = recoverFromConcurrentError(root3, errorRetryLanes);
            }
          }
          if (exitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            prepareFreshStack(root3, NoLanes);
            markRootSuspended$1(root3, lanes);
            ensureRootIsScheduled(root3, now());
            throw fatalError;
          }
          if (exitStatus === RootDidNotComplete) {
            throw new Error("Root did not complete. This is a bug in React.");
          }
          var finishedWork = root3.current.alternate;
          root3.finishedWork = finishedWork;
          root3.finishedLanes = lanes;
          commitRoot(root3, workInProgressRootRecoverableErrors, workInProgressTransitions);
          ensureRootIsScheduled(root3, now());
          return null;
        }
        function flushRoot(root3, lanes) {
          if (lanes !== NoLanes) {
            markRootEntangled(root3, mergeLanes(lanes, SyncLane));
            ensureRootIsScheduled(root3, now());
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
              resetRenderTimer();
              flushSyncCallbacks();
            }
          }
        }
        function batchedUpdates$1(fn2, a7) {
          var prevExecutionContext = executionContext;
          executionContext |= BatchedContext;
          try {
            return fn2(a7);
          } finally {
            executionContext = prevExecutionContext;
            if (executionContext === NoContext && !ReactCurrentActQueue$1.isBatchingLegacy) {
              resetRenderTimer();
              flushSyncCallbacksOnlyInLegacyMode();
            }
          }
        }
        function discreteUpdates(fn2, a7, b8, c6, d4) {
          var previousPriority = getCurrentUpdatePriority();
          var prevTransition = ReactCurrentBatchConfig$3.transition;
          try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            return fn2(a7, b8, c6, d4);
          } finally {
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            if (executionContext === NoContext) {
              resetRenderTimer();
            }
          }
        }
        function flushSync(fn2) {
          if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) {
            flushPassiveEffects();
          }
          var prevExecutionContext = executionContext;
          executionContext |= BatchedContext;
          var prevTransition = ReactCurrentBatchConfig$3.transition;
          var previousPriority = getCurrentUpdatePriority();
          try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            if (fn2) {
              return fn2();
            } else {
              return void 0;
            }
          } finally {
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            executionContext = prevExecutionContext;
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
              flushSyncCallbacks();
            }
          }
        }
        function isAlreadyRendering() {
          return (executionContext & (RenderContext | CommitContext)) !== NoContext;
        }
        function pushRenderLanes(fiber, lanes) {
          push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
          subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
          workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
        }
        function popRenderLanes(fiber) {
          subtreeRenderLanes = subtreeRenderLanesCursor.current;
          pop(subtreeRenderLanesCursor, fiber);
        }
        function prepareFreshStack(root3, lanes) {
          root3.finishedWork = null;
          root3.finishedLanes = NoLanes;
          var timeoutHandle = root3.timeoutHandle;
          if (timeoutHandle !== noTimeout) {
            root3.timeoutHandle = noTimeout;
            cancelTimeout(timeoutHandle);
          }
          if (workInProgress !== null) {
            var interruptedWork = workInProgress.return;
            while (interruptedWork !== null) {
              var current2 = interruptedWork.alternate;
              unwindInterruptedWork(current2, interruptedWork);
              interruptedWork = interruptedWork.return;
            }
          }
          workInProgressRoot = root3;
          var rootWorkInProgress = createWorkInProgress(root3.current, null);
          workInProgress = rootWorkInProgress;
          workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
          workInProgressRootExitStatus = RootInProgress;
          workInProgressRootFatalError = null;
          workInProgressRootSkippedLanes = NoLanes;
          workInProgressRootInterleavedUpdatedLanes = NoLanes;
          workInProgressRootPingedLanes = NoLanes;
          workInProgressRootConcurrentErrors = null;
          workInProgressRootRecoverableErrors = null;
          finishQueueingConcurrentUpdates();
          {
            ReactStrictModeWarnings.discardPendingWarnings();
          }
          return rootWorkInProgress;
        }
        function handleError(root3, thrownValue) {
          do {
            var erroredWork = workInProgress;
            try {
              resetContextDependencies();
              resetHooksAfterThrow();
              resetCurrentFiber();
              ReactCurrentOwner$2.current = null;
              if (erroredWork === null || erroredWork.return === null) {
                workInProgressRootExitStatus = RootFatalErrored;
                workInProgressRootFatalError = thrownValue;
                workInProgress = null;
                return;
              }
              if (enableProfilerTimer && erroredWork.mode & ProfileMode) {
                stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
              }
              if (enableSchedulingProfiler) {
                markComponentRenderStopped();
                if (thrownValue !== null && typeof thrownValue === "object" && typeof thrownValue.then === "function") {
                  var wakeable = thrownValue;
                  markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);
                } else {
                  markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
                }
              }
              throwException(root3, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
              completeUnitOfWork(erroredWork);
            } catch (yetAnotherThrownValue) {
              thrownValue = yetAnotherThrownValue;
              if (workInProgress === erroredWork && erroredWork !== null) {
                erroredWork = erroredWork.return;
                workInProgress = erroredWork;
              } else {
                erroredWork = workInProgress;
              }
              continue;
            }
            return;
          } while (true);
        }
        function pushDispatcher() {
          var prevDispatcher = ReactCurrentDispatcher$2.current;
          ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;
          if (prevDispatcher === null) {
            return ContextOnlyDispatcher;
          } else {
            return prevDispatcher;
          }
        }
        function popDispatcher(prevDispatcher) {
          ReactCurrentDispatcher$2.current = prevDispatcher;
        }
        function markCommitTimeOfFallback() {
          globalMostRecentFallbackTime = now();
        }
        function markSkippedUpdateLanes(lane) {
          workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
        }
        function renderDidSuspend() {
          if (workInProgressRootExitStatus === RootInProgress) {
            workInProgressRootExitStatus = RootSuspended;
          }
        }
        function renderDidSuspendDelayIfPossible() {
          if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) {
            workInProgressRootExitStatus = RootSuspendedWithDelay;
          }
          if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) {
            markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
          }
        }
        function renderDidError(error2) {
          if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {
            workInProgressRootExitStatus = RootErrored;
          }
          if (workInProgressRootConcurrentErrors === null) {
            workInProgressRootConcurrentErrors = [error2];
          } else {
            workInProgressRootConcurrentErrors.push(error2);
          }
        }
        function renderHasNotSuspendedYet() {
          return workInProgressRootExitStatus === RootInProgress;
        }
        function renderRootSync(root3, lanes) {
          var prevExecutionContext = executionContext;
          executionContext |= RenderContext;
          var prevDispatcher = pushDispatcher();
          if (workInProgressRoot !== root3 || workInProgressRootRenderLanes !== lanes) {
            {
              if (isDevToolsPresent) {
                var memoizedUpdaters = root3.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                  restorePendingUpdaters(root3, workInProgressRootRenderLanes);
                  memoizedUpdaters.clear();
                }
                movePendingFibersToMemoized(root3, lanes);
              }
            }
            workInProgressTransitions = getTransitionsForLanes();
            prepareFreshStack(root3, lanes);
          }
          {
            markRenderStarted(lanes);
          }
          do {
            try {
              workLoopSync();
              break;
            } catch (thrownValue) {
              handleError(root3, thrownValue);
            }
          } while (true);
          resetContextDependencies();
          executionContext = prevExecutionContext;
          popDispatcher(prevDispatcher);
          if (workInProgress !== null) {
            throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
          }
          {
            markRenderStopped();
          }
          workInProgressRoot = null;
          workInProgressRootRenderLanes = NoLanes;
          return workInProgressRootExitStatus;
        }
        function workLoopSync() {
          while (workInProgress !== null) {
            performUnitOfWork(workInProgress);
          }
        }
        function renderRootConcurrent(root3, lanes) {
          var prevExecutionContext = executionContext;
          executionContext |= RenderContext;
          var prevDispatcher = pushDispatcher();
          if (workInProgressRoot !== root3 || workInProgressRootRenderLanes !== lanes) {
            {
              if (isDevToolsPresent) {
                var memoizedUpdaters = root3.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                  restorePendingUpdaters(root3, workInProgressRootRenderLanes);
                  memoizedUpdaters.clear();
                }
                movePendingFibersToMemoized(root3, lanes);
              }
            }
            workInProgressTransitions = getTransitionsForLanes();
            resetRenderTimer();
            prepareFreshStack(root3, lanes);
          }
          {
            markRenderStarted(lanes);
          }
          do {
            try {
              workLoopConcurrent();
              break;
            } catch (thrownValue) {
              handleError(root3, thrownValue);
            }
          } while (true);
          resetContextDependencies();
          popDispatcher(prevDispatcher);
          executionContext = prevExecutionContext;
          if (workInProgress !== null) {
            {
              markRenderYielded();
            }
            return RootInProgress;
          } else {
            {
              markRenderStopped();
            }
            workInProgressRoot = null;
            workInProgressRootRenderLanes = NoLanes;
            return workInProgressRootExitStatus;
          }
        }
        function workLoopConcurrent() {
          while (workInProgress !== null && !shouldYield()) {
            performUnitOfWork(workInProgress);
          }
        }
        function performUnitOfWork(unitOfWork) {
          var current2 = unitOfWork.alternate;
          setCurrentFiber(unitOfWork);
          var next;
          if ((unitOfWork.mode & ProfileMode) !== NoMode) {
            startProfilerTimer(unitOfWork);
            next = beginWork$1(current2, unitOfWork, subtreeRenderLanes);
            stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
          } else {
            next = beginWork$1(current2, unitOfWork, subtreeRenderLanes);
          }
          resetCurrentFiber();
          unitOfWork.memoizedProps = unitOfWork.pendingProps;
          if (next === null) {
            completeUnitOfWork(unitOfWork);
          } else {
            workInProgress = next;
          }
          ReactCurrentOwner$2.current = null;
        }
        function completeUnitOfWork(unitOfWork) {
          var completedWork = unitOfWork;
          do {
            var current2 = completedWork.alternate;
            var returnFiber = completedWork.return;
            if ((completedWork.flags & Incomplete) === NoFlags) {
              setCurrentFiber(completedWork);
              var next = void 0;
              if ((completedWork.mode & ProfileMode) === NoMode) {
                next = completeWork(current2, completedWork, subtreeRenderLanes);
              } else {
                startProfilerTimer(completedWork);
                next = completeWork(current2, completedWork, subtreeRenderLanes);
                stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
              }
              resetCurrentFiber();
              if (next !== null) {
                workInProgress = next;
                return;
              }
            } else {
              var _next = unwindWork(current2, completedWork);
              if (_next !== null) {
                _next.flags &= HostEffectMask;
                workInProgress = _next;
                return;
              }
              if ((completedWork.mode & ProfileMode) !== NoMode) {
                stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                var actualDuration = completedWork.actualDuration;
                var child = completedWork.child;
                while (child !== null) {
                  actualDuration += child.actualDuration;
                  child = child.sibling;
                }
                completedWork.actualDuration = actualDuration;
              }
              if (returnFiber !== null) {
                returnFiber.flags |= Incomplete;
                returnFiber.subtreeFlags = NoFlags;
                returnFiber.deletions = null;
              } else {
                workInProgressRootExitStatus = RootDidNotComplete;
                workInProgress = null;
                return;
              }
            }
            var siblingFiber = completedWork.sibling;
            if (siblingFiber !== null) {
              workInProgress = siblingFiber;
              return;
            }
            completedWork = returnFiber;
            workInProgress = completedWork;
          } while (completedWork !== null);
          if (workInProgressRootExitStatus === RootInProgress) {
            workInProgressRootExitStatus = RootCompleted;
          }
        }
        function commitRoot(root3, recoverableErrors, transitions) {
          var previousUpdateLanePriority = getCurrentUpdatePriority();
          var prevTransition = ReactCurrentBatchConfig$3.transition;
          try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            commitRootImpl(root3, recoverableErrors, transitions, previousUpdateLanePriority);
          } finally {
            ReactCurrentBatchConfig$3.transition = prevTransition;
            setCurrentUpdatePriority(previousUpdateLanePriority);
          }
          return null;
        }
        function commitRootImpl(root3, recoverableErrors, transitions, renderPriorityLevel) {
          do {
            flushPassiveEffects();
          } while (rootWithPendingPassiveEffects !== null);
          flushRenderPhaseStrictModeWarningsInDEV();
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            throw new Error("Should not already be working.");
          }
          var finishedWork = root3.finishedWork;
          var lanes = root3.finishedLanes;
          {
            markCommitStarted(lanes);
          }
          if (finishedWork === null) {
            {
              markCommitStopped();
            }
            return null;
          } else {
            {
              if (lanes === NoLanes) {
                error("root.finishedLanes should not be empty during a commit. This is a bug in React.");
              }
            }
          }
          root3.finishedWork = null;
          root3.finishedLanes = NoLanes;
          if (finishedWork === root3.current) {
            throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
          }
          root3.callbackNode = null;
          root3.callbackPriority = NoLane;
          var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
          markRootFinished(root3, remainingLanes);
          if (root3 === workInProgressRoot) {
            workInProgressRoot = null;
            workInProgress = null;
            workInProgressRootRenderLanes = NoLanes;
          }
          if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {
            if (!rootDoesHavePassiveEffects) {
              rootDoesHavePassiveEffects = true;
              pendingPassiveTransitions = transitions;
              scheduleCallback$1(NormalPriority, function() {
                flushPassiveEffects();
                return null;
              });
            }
          }
          var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
          var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
          if (subtreeHasEffects || rootHasEffect) {
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            ReactCurrentBatchConfig$3.transition = null;
            var previousPriority = getCurrentUpdatePriority();
            setCurrentUpdatePriority(DiscreteEventPriority);
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext;
            ReactCurrentOwner$2.current = null;
            var shouldFireAfterActiveInstanceBlur2 = commitBeforeMutationEffects(root3, finishedWork);
            {
              recordCommitTime();
            }
            commitMutationEffects(root3, finishedWork, lanes);
            resetAfterCommit(root3.containerInfo);
            root3.current = finishedWork;
            {
              markLayoutEffectsStarted(lanes);
            }
            commitLayoutEffects(finishedWork, root3, lanes);
            {
              markLayoutEffectsStopped();
            }
            requestPaint();
            executionContext = prevExecutionContext;
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
          } else {
            root3.current = finishedWork;
            {
              recordCommitTime();
            }
          }
          var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
          if (rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = false;
            rootWithPendingPassiveEffects = root3;
            pendingPassiveEffectsLanes = lanes;
          } else {
            {
              nestedPassiveUpdateCount = 0;
              rootWithPassiveNestedUpdates = null;
            }
          }
          remainingLanes = root3.pendingLanes;
          if (remainingLanes === NoLanes) {
            legacyErrorBoundariesThatAlreadyFailed = null;
          }
          {
            if (!rootDidHavePassiveEffects) {
              commitDoubleInvokeEffectsInDEV(root3.current, false);
            }
          }
          onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
          {
            if (isDevToolsPresent) {
              root3.memoizedUpdaters.clear();
            }
          }
          {
            onCommitRoot$1();
          }
          ensureRootIsScheduled(root3, now());
          if (recoverableErrors !== null) {
            var onRecoverableError = root3.onRecoverableError;
            for (var i9 = 0; i9 < recoverableErrors.length; i9++) {
              var recoverableError = recoverableErrors[i9];
              var componentStack = recoverableError.stack;
              var digest = recoverableError.digest;
              onRecoverableError(recoverableError.value, {
                componentStack,
                digest
              });
            }
          }
          if (hasUncaughtError) {
            hasUncaughtError = false;
            var error$1 = firstUncaughtError;
            firstUncaughtError = null;
            throw error$1;
          }
          if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root3.tag !== LegacyRoot) {
            flushPassiveEffects();
          }
          remainingLanes = root3.pendingLanes;
          if (includesSomeLane(remainingLanes, SyncLane)) {
            {
              markNestedUpdateScheduled();
            }
            if (root3 === rootWithNestedUpdates) {
              nestedUpdateCount++;
            } else {
              nestedUpdateCount = 0;
              rootWithNestedUpdates = root3;
            }
          } else {
            nestedUpdateCount = 0;
          }
          flushSyncCallbacks();
          {
            markCommitStopped();
          }
          return null;
        }
        function flushPassiveEffects() {
          if (rootWithPendingPassiveEffects !== null) {
            var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);
            var priority2 = lowerEventPriority(DefaultEventPriority, renderPriority);
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            var previousPriority = getCurrentUpdatePriority();
            try {
              ReactCurrentBatchConfig$3.transition = null;
              setCurrentUpdatePriority(priority2);
              return flushPassiveEffectsImpl();
            } finally {
              setCurrentUpdatePriority(previousPriority);
              ReactCurrentBatchConfig$3.transition = prevTransition;
            }
          }
          return false;
        }
        function enqueuePendingPassiveProfilerEffect(fiber) {
          {
            pendingPassiveProfilerEffects.push(fiber);
            if (!rootDoesHavePassiveEffects) {
              rootDoesHavePassiveEffects = true;
              scheduleCallback$1(NormalPriority, function() {
                flushPassiveEffects();
                return null;
              });
            }
          }
        }
        function flushPassiveEffectsImpl() {
          if (rootWithPendingPassiveEffects === null) {
            return false;
          }
          var transitions = pendingPassiveTransitions;
          pendingPassiveTransitions = null;
          var root3 = rootWithPendingPassiveEffects;
          var lanes = pendingPassiveEffectsLanes;
          rootWithPendingPassiveEffects = null;
          pendingPassiveEffectsLanes = NoLanes;
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            throw new Error("Cannot flush passive effects while already rendering.");
          }
          {
            isFlushingPassiveEffects = true;
            didScheduleUpdateDuringPassiveEffects = false;
          }
          {
            markPassiveEffectsStarted(lanes);
          }
          var prevExecutionContext = executionContext;
          executionContext |= CommitContext;
          commitPassiveUnmountEffects(root3.current);
          commitPassiveMountEffects(root3, root3.current, lanes, transitions);
          {
            var profilerEffects = pendingPassiveProfilerEffects;
            pendingPassiveProfilerEffects = [];
            for (var i9 = 0; i9 < profilerEffects.length; i9++) {
              var _fiber = profilerEffects[i9];
              commitPassiveEffectDurations(root3, _fiber);
            }
          }
          {
            markPassiveEffectsStopped();
          }
          {
            commitDoubleInvokeEffectsInDEV(root3.current, true);
          }
          executionContext = prevExecutionContext;
          flushSyncCallbacks();
          {
            if (didScheduleUpdateDuringPassiveEffects) {
              if (root3 === rootWithPassiveNestedUpdates) {
                nestedPassiveUpdateCount++;
              } else {
                nestedPassiveUpdateCount = 0;
                rootWithPassiveNestedUpdates = root3;
              }
            } else {
              nestedPassiveUpdateCount = 0;
            }
            isFlushingPassiveEffects = false;
            didScheduleUpdateDuringPassiveEffects = false;
          }
          onPostCommitRoot(root3);
          {
            var stateNode = root3.current.stateNode;
            stateNode.effectDuration = 0;
            stateNode.passiveEffectDuration = 0;
          }
          return true;
        }
        function isAlreadyFailedLegacyErrorBoundary(instance) {
          return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
        }
        function markLegacyErrorBoundaryAsFailed(instance) {
          if (legacyErrorBoundariesThatAlreadyFailed === null) {
            legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
          } else {
            legacyErrorBoundariesThatAlreadyFailed.add(instance);
          }
        }
        function prepareToThrowUncaughtError(error2) {
          if (!hasUncaughtError) {
            hasUncaughtError = true;
            firstUncaughtError = error2;
          }
        }
        var onUncaughtError = prepareToThrowUncaughtError;
        function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error2) {
          var errorInfo = createCapturedValueAtFiber(error2, sourceFiber);
          var update3 = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
          var root3 = enqueueUpdate(rootFiber, update3, SyncLane);
          var eventTime = requestEventTime();
          if (root3 !== null) {
            markRootUpdated(root3, SyncLane, eventTime);
            ensureRootIsScheduled(root3, eventTime);
          }
        }
        function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {
          {
            reportUncaughtErrorInDEV(error$1);
            setIsRunningInsertionEffect(false);
          }
          if (sourceFiber.tag === HostRoot) {
            captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);
            return;
          }
          var fiber = null;
          {
            fiber = nearestMountedAncestor;
          }
          while (fiber !== null) {
            if (fiber.tag === HostRoot) {
              captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);
              return;
            } else if (fiber.tag === ClassComponent) {
              var ctor = fiber.type;
              var instance = fiber.stateNode;
              if (typeof ctor.getDerivedStateFromError === "function" || typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);
                var update3 = createClassErrorUpdate(fiber, errorInfo, SyncLane);
                var root3 = enqueueUpdate(fiber, update3, SyncLane);
                var eventTime = requestEventTime();
                if (root3 !== null) {
                  markRootUpdated(root3, SyncLane, eventTime);
                  ensureRootIsScheduled(root3, eventTime);
                }
                return;
              }
            }
            fiber = fiber.return;
          }
          {
            error("Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s", error$1);
          }
        }
        function pingSuspendedRoot(root3, wakeable, pingedLanes) {
          var pingCache = root3.pingCache;
          if (pingCache !== null) {
            pingCache.delete(wakeable);
          }
          var eventTime = requestEventTime();
          markRootPinged(root3, pingedLanes);
          warnIfSuspenseResolutionNotWrappedWithActDEV(root3);
          if (workInProgressRoot === root3 && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
            if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
              prepareFreshStack(root3, NoLanes);
            } else {
              workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
            }
          }
          ensureRootIsScheduled(root3, eventTime);
        }
        function retryTimedOutBoundary(boundaryFiber, retryLane) {
          if (retryLane === NoLane) {
            retryLane = requestRetryLane(boundaryFiber);
          }
          var eventTime = requestEventTime();
          var root3 = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
          if (root3 !== null) {
            markRootUpdated(root3, retryLane, eventTime);
            ensureRootIsScheduled(root3, eventTime);
          }
        }
        function retryDehydratedSuspenseBoundary(boundaryFiber) {
          var suspenseState = boundaryFiber.memoizedState;
          var retryLane = NoLane;
          if (suspenseState !== null) {
            retryLane = suspenseState.retryLane;
          }
          retryTimedOutBoundary(boundaryFiber, retryLane);
        }
        function resolveRetryWakeable(boundaryFiber, wakeable) {
          var retryLane = NoLane;
          var retryCache;
          switch (boundaryFiber.tag) {
            case SuspenseComponent:
              retryCache = boundaryFiber.stateNode;
              var suspenseState = boundaryFiber.memoizedState;
              if (suspenseState !== null) {
                retryLane = suspenseState.retryLane;
              }
              break;
            case SuspenseListComponent:
              retryCache = boundaryFiber.stateNode;
              break;
            default:
              throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
          }
          if (retryCache !== null) {
            retryCache.delete(wakeable);
          }
          retryTimedOutBoundary(boundaryFiber, retryLane);
        }
        function jnd(timeElapsed) {
          return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3e3 ? 3e3 : timeElapsed < 4320 ? 4320 : ceil2(timeElapsed / 1960) * 1960;
        }
        function checkForNestedUpdates() {
          if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
            nestedUpdateCount = 0;
            rootWithNestedUpdates = null;
            throw new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
          }
          {
            if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
              nestedPassiveUpdateCount = 0;
              rootWithPassiveNestedUpdates = null;
              error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
            }
          }
        }
        function flushRenderPhaseStrictModeWarningsInDEV() {
          {
            ReactStrictModeWarnings.flushLegacyContextWarning();
            {
              ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
            }
          }
        }
        function commitDoubleInvokeEffectsInDEV(fiber, hasPassiveEffects) {
          {
            setCurrentFiber(fiber);
            invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);
            if (hasPassiveEffects) {
              invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectUnmountInDEV);
            }
            invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);
            if (hasPassiveEffects) {
              invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);
            }
            resetCurrentFiber();
          }
        }
        function invokeEffectsInDev(firstChild, fiberFlags, invokeEffectFn) {
          {
            var current2 = firstChild;
            var subtreeRoot = null;
            while (current2 !== null) {
              var primarySubtreeFlag = current2.subtreeFlags & fiberFlags;
              if (current2 !== subtreeRoot && current2.child !== null && primarySubtreeFlag !== NoFlags) {
                current2 = current2.child;
              } else {
                if ((current2.flags & fiberFlags) !== NoFlags) {
                  invokeEffectFn(current2);
                }
                if (current2.sibling !== null) {
                  current2 = current2.sibling;
                } else {
                  current2 = subtreeRoot = current2.return;
                }
              }
            }
          }
        }
        var didWarnStateUpdateForNotYetMountedComponent = null;
        function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
          {
            if ((executionContext & RenderContext) !== NoContext) {
              return;
            }
            if (!(fiber.mode & ConcurrentMode)) {
              return;
            }
            var tag = fiber.tag;
            if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {
              return;
            }
            var componentName = getComponentNameFromFiber(fiber) || "ReactComponent";
            if (didWarnStateUpdateForNotYetMountedComponent !== null) {
              if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {
                return;
              }
              didWarnStateUpdateForNotYetMountedComponent.add(componentName);
            } else {
              didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);
            }
            var previousFiber = current;
            try {
              setCurrentFiber(fiber);
              error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
            } finally {
              if (previousFiber) {
                setCurrentFiber(fiber);
              } else {
                resetCurrentFiber();
              }
            }
          }
        }
        var beginWork$1;
        {
          var dummyFiber = null;
          beginWork$1 = function(current2, unitOfWork, lanes) {
            var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
            try {
              return beginWork(current2, unitOfWork, lanes);
            } catch (originalError) {
              if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === "object" && typeof originalError.then === "function") {
                throw originalError;
              }
              resetContextDependencies();
              resetHooksAfterThrow();
              unwindInterruptedWork(current2, unitOfWork);
              assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
              if (unitOfWork.mode & ProfileMode) {
                startProfilerTimer(unitOfWork);
              }
              invokeGuardedCallback(null, beginWork, null, current2, unitOfWork, lanes);
              if (hasCaughtError()) {
                var replayError = clearCaughtError();
                if (typeof replayError === "object" && replayError !== null && replayError._suppressLogging && typeof originalError === "object" && originalError !== null && !originalError._suppressLogging) {
                  originalError._suppressLogging = true;
                }
              }
              throw originalError;
            }
          };
        }
        var didWarnAboutUpdateInRender = false;
        var didWarnAboutUpdateInRenderForAnotherComponent;
        {
          didWarnAboutUpdateInRenderForAnotherComponent = new Set();
        }
        function warnAboutRenderPhaseUpdatesInDEV(fiber) {
          {
            if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {
              switch (fiber.tag) {
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent: {
                  var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || "Unknown";
                  var dedupeKey = renderingComponentName;
                  if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                    didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                    var setStateComponentName = getComponentNameFromFiber(fiber) || "Unknown";
                    error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
                  }
                  break;
                }
                case ClassComponent: {
                  if (!didWarnAboutUpdateInRender) {
                    error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                    didWarnAboutUpdateInRender = true;
                  }
                  break;
                }
              }
            }
          }
        }
        function restorePendingUpdaters(root3, lanes) {
          {
            if (isDevToolsPresent) {
              var memoizedUpdaters = root3.memoizedUpdaters;
              memoizedUpdaters.forEach(function(schedulingFiber) {
                addFiberToLanesMap(root3, schedulingFiber, lanes);
              });
            }
          }
        }
        var fakeActCallbackNode = {};
        function scheduleCallback$1(priorityLevel, callback) {
          {
            var actQueue = ReactCurrentActQueue$1.current;
            if (actQueue !== null) {
              actQueue.push(callback);
              return fakeActCallbackNode;
            } else {
              return scheduleCallback(priorityLevel, callback);
            }
          }
        }
        function cancelCallback$1(callbackNode) {
          if (callbackNode === fakeActCallbackNode) {
            return;
          }
          return cancelCallback(callbackNode);
        }
        function shouldForceFlushFallbacksInDEV() {
          return ReactCurrentActQueue$1.current !== null;
        }
        function warnIfUpdatesNotWrappedWithActDEV(fiber) {
          {
            if (fiber.mode & ConcurrentMode) {
              if (!isConcurrentActEnvironment()) {
                return;
              }
            } else {
              if (!isLegacyActEnvironment()) {
                return;
              }
              if (executionContext !== NoContext) {
                return;
              }
              if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) {
                return;
              }
            }
            if (ReactCurrentActQueue$1.current === null) {
              var previousFiber = current;
              try {
                setCurrentFiber(fiber);
                error("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentNameFromFiber(fiber));
              } finally {
                if (previousFiber) {
                  setCurrentFiber(fiber);
                } else {
                  resetCurrentFiber();
                }
              }
            }
          }
        }
        function warnIfSuspenseResolutionNotWrappedWithActDEV(root3) {
          {
            if (root3.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) {
              error("A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act");
            }
          }
        }
        function setIsRunningInsertionEffect(isRunning) {
          {
            isRunningInsertionEffect = isRunning;
          }
        }
        var resolveFamily = null;
        var failedBoundaries = null;
        var setRefreshHandler = function(handler) {
          {
            resolveFamily = handler;
          }
        };
        function resolveFunctionForHotReloading(type2) {
          {
            if (resolveFamily === null) {
              return type2;
            }
            var family = resolveFamily(type2);
            if (family === void 0) {
              return type2;
            }
            return family.current;
          }
        }
        function resolveClassForHotReloading(type2) {
          return resolveFunctionForHotReloading(type2);
        }
        function resolveForwardRefForHotReloading(type2) {
          {
            if (resolveFamily === null) {
              return type2;
            }
            var family = resolveFamily(type2);
            if (family === void 0) {
              if (type2 !== null && type2 !== void 0 && typeof type2.render === "function") {
                var currentRender = resolveFunctionForHotReloading(type2.render);
                if (type2.render !== currentRender) {
                  var syntheticType = {
                    $$typeof: REACT_FORWARD_REF_TYPE,
                    render: currentRender
                  };
                  if (type2.displayName !== void 0) {
                    syntheticType.displayName = type2.displayName;
                  }
                  return syntheticType;
                }
              }
              return type2;
            }
            return family.current;
          }
        }
        function isCompatibleFamilyForHotReloading(fiber, element) {
          {
            if (resolveFamily === null) {
              return false;
            }
            var prevType = fiber.elementType;
            var nextType = element.type;
            var needsCompareFamilies = false;
            var $$typeofNextType = typeof nextType === "object" && nextType !== null ? nextType.$$typeof : null;
            switch (fiber.tag) {
              case ClassComponent: {
                if (typeof nextType === "function") {
                  needsCompareFamilies = true;
                }
                break;
              }
              case FunctionComponent: {
                if (typeof nextType === "function") {
                  needsCompareFamilies = true;
                } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                  needsCompareFamilies = true;
                }
                break;
              }
              case ForwardRef: {
                if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
                  needsCompareFamilies = true;
                } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                  needsCompareFamilies = true;
                }
                break;
              }
              case MemoComponent:
              case SimpleMemoComponent: {
                if ($$typeofNextType === REACT_MEMO_TYPE) {
                  needsCompareFamilies = true;
                } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                  needsCompareFamilies = true;
                }
                break;
              }
              default:
                return false;
            }
            if (needsCompareFamilies) {
              var prevFamily = resolveFamily(prevType);
              if (prevFamily !== void 0 && prevFamily === resolveFamily(nextType)) {
                return true;
              }
            }
            return false;
          }
        }
        function markFailedErrorBoundaryForHotReloading(fiber) {
          {
            if (resolveFamily === null) {
              return;
            }
            if (typeof WeakSet !== "function") {
              return;
            }
            if (failedBoundaries === null) {
              failedBoundaries = new WeakSet();
            }
            failedBoundaries.add(fiber);
          }
        }
        var scheduleRefresh = function(root3, update3) {
          {
            if (resolveFamily === null) {
              return;
            }
            var staleFamilies = update3.staleFamilies, updatedFamilies = update3.updatedFamilies;
            flushPassiveEffects();
            flushSync(function() {
              scheduleFibersWithFamiliesRecursively(root3.current, updatedFamilies, staleFamilies);
            });
          }
        };
        var scheduleRoot = function(root3, element) {
          {
            if (root3.context !== emptyContextObject) {
              return;
            }
            flushPassiveEffects();
            flushSync(function() {
              updateContainer(element, root3, null, null);
            });
          }
        };
        function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
          {
            var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type2 = fiber.type;
            var candidateType = null;
            switch (tag) {
              case FunctionComponent:
              case SimpleMemoComponent:
              case ClassComponent:
                candidateType = type2;
                break;
              case ForwardRef:
                candidateType = type2.render;
                break;
            }
            if (resolveFamily === null) {
              throw new Error("Expected resolveFamily to be set during hot reload.");
            }
            var needsRender = false;
            var needsRemount = false;
            if (candidateType !== null) {
              var family = resolveFamily(candidateType);
              if (family !== void 0) {
                if (staleFamilies.has(family)) {
                  needsRemount = true;
                } else if (updatedFamilies.has(family)) {
                  if (tag === ClassComponent) {
                    needsRemount = true;
                  } else {
                    needsRender = true;
                  }
                }
              }
            }
            if (failedBoundaries !== null) {
              if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
                needsRemount = true;
              }
            }
            if (needsRemount) {
              fiber._debugNeedsRemount = true;
            }
            if (needsRemount || needsRender) {
              var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (_root !== null) {
                scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);
              }
            }
            if (child !== null && !needsRemount) {
              scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
            }
            if (sibling !== null) {
              scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
            }
          }
        }
        var findHostInstancesForRefresh = function(root3, families) {
          {
            var hostInstances = new Set();
            var types = new Set(families.map(function(family) {
              return family.current;
            }));
            findHostInstancesForMatchingFibersRecursively(root3.current, types, hostInstances);
            return hostInstances;
          }
        };
        function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
          {
            var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type2 = fiber.type;
            var candidateType = null;
            switch (tag) {
              case FunctionComponent:
              case SimpleMemoComponent:
              case ClassComponent:
                candidateType = type2;
                break;
              case ForwardRef:
                candidateType = type2.render;
                break;
            }
            var didMatch = false;
            if (candidateType !== null) {
              if (types.has(candidateType)) {
                didMatch = true;
              }
            }
            if (didMatch) {
              findHostInstancesForFiberShallowly(fiber, hostInstances);
            } else {
              if (child !== null) {
                findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
              }
            }
            if (sibling !== null) {
              findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
            }
          }
        }
        function findHostInstancesForFiberShallowly(fiber, hostInstances) {
          {
            var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
            if (foundHostInstances) {
              return;
            }
            var node = fiber;
            while (true) {
              switch (node.tag) {
                case HostComponent:
                  hostInstances.add(node.stateNode);
                  return;
                case HostPortal:
                  hostInstances.add(node.stateNode.containerInfo);
                  return;
                case HostRoot:
                  hostInstances.add(node.stateNode.containerInfo);
                  return;
              }
              if (node.return === null) {
                throw new Error("Expected to reach root first.");
              }
              node = node.return;
            }
          }
        }
        function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
          {
            var node = fiber;
            var foundHostInstances = false;
            while (true) {
              if (node.tag === HostComponent) {
                foundHostInstances = true;
                hostInstances.add(node.stateNode);
              } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
              }
              if (node === fiber) {
                return foundHostInstances;
              }
              while (node.sibling === null) {
                if (node.return === null || node.return === fiber) {
                  return foundHostInstances;
                }
                node = node.return;
              }
              node.sibling.return = node.return;
              node = node.sibling;
            }
          }
          return false;
        }
        var hasBadMapPolyfill;
        {
          hasBadMapPolyfill = false;
          try {
            var nonExtensibleObject = Object.preventExtensions({});
            new Map([[nonExtensibleObject, null]]);
            new Set([nonExtensibleObject]);
          } catch (e15) {
            hasBadMapPolyfill = true;
          }
        }
        function FiberNode(tag, pendingProps, key, mode) {
          this.tag = tag;
          this.key = key;
          this.elementType = null;
          this.type = null;
          this.stateNode = null;
          this.return = null;
          this.child = null;
          this.sibling = null;
          this.index = 0;
          this.ref = null;
          this.pendingProps = pendingProps;
          this.memoizedProps = null;
          this.updateQueue = null;
          this.memoizedState = null;
          this.dependencies = null;
          this.mode = mode;
          this.flags = NoFlags;
          this.subtreeFlags = NoFlags;
          this.deletions = null;
          this.lanes = NoLanes;
          this.childLanes = NoLanes;
          this.alternate = null;
          {
            this.actualDuration = Number.NaN;
            this.actualStartTime = Number.NaN;
            this.selfBaseDuration = Number.NaN;
            this.treeBaseDuration = Number.NaN;
            this.actualDuration = 0;
            this.actualStartTime = -1;
            this.selfBaseDuration = 0;
            this.treeBaseDuration = 0;
          }
          {
            this._debugSource = null;
            this._debugOwner = null;
            this._debugNeedsRemount = false;
            this._debugHookTypes = null;
            if (!hasBadMapPolyfill && typeof Object.preventExtensions === "function") {
              Object.preventExtensions(this);
            }
          }
        }
        var createFiber = function(tag, pendingProps, key, mode) {
          return new FiberNode(tag, pendingProps, key, mode);
        };
        function shouldConstruct$1(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function isSimpleFunctionComponent(type2) {
          return typeof type2 === "function" && !shouldConstruct$1(type2) && type2.defaultProps === void 0;
        }
        function resolveLazyComponentTag(Component) {
          if (typeof Component === "function") {
            return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
          } else if (Component !== void 0 && Component !== null) {
            var $$typeof = Component.$$typeof;
            if ($$typeof === REACT_FORWARD_REF_TYPE) {
              return ForwardRef;
            }
            if ($$typeof === REACT_MEMO_TYPE) {
              return MemoComponent;
            }
          }
          return IndeterminateComponent;
        }
        function createWorkInProgress(current2, pendingProps) {
          var workInProgress2 = current2.alternate;
          if (workInProgress2 === null) {
            workInProgress2 = createFiber(current2.tag, pendingProps, current2.key, current2.mode);
            workInProgress2.elementType = current2.elementType;
            workInProgress2.type = current2.type;
            workInProgress2.stateNode = current2.stateNode;
            {
              workInProgress2._debugSource = current2._debugSource;
              workInProgress2._debugOwner = current2._debugOwner;
              workInProgress2._debugHookTypes = current2._debugHookTypes;
            }
            workInProgress2.alternate = current2;
            current2.alternate = workInProgress2;
          } else {
            workInProgress2.pendingProps = pendingProps;
            workInProgress2.type = current2.type;
            workInProgress2.flags = NoFlags;
            workInProgress2.subtreeFlags = NoFlags;
            workInProgress2.deletions = null;
            {
              workInProgress2.actualDuration = 0;
              workInProgress2.actualStartTime = -1;
            }
          }
          workInProgress2.flags = current2.flags & StaticMask;
          workInProgress2.childLanes = current2.childLanes;
          workInProgress2.lanes = current2.lanes;
          workInProgress2.child = current2.child;
          workInProgress2.memoizedProps = current2.memoizedProps;
          workInProgress2.memoizedState = current2.memoizedState;
          workInProgress2.updateQueue = current2.updateQueue;
          var currentDependencies = current2.dependencies;
          workInProgress2.dependencies = currentDependencies === null ? null : {
            lanes: currentDependencies.lanes,
            firstContext: currentDependencies.firstContext
          };
          workInProgress2.sibling = current2.sibling;
          workInProgress2.index = current2.index;
          workInProgress2.ref = current2.ref;
          {
            workInProgress2.selfBaseDuration = current2.selfBaseDuration;
            workInProgress2.treeBaseDuration = current2.treeBaseDuration;
          }
          {
            workInProgress2._debugNeedsRemount = current2._debugNeedsRemount;
            switch (workInProgress2.tag) {
              case IndeterminateComponent:
              case FunctionComponent:
              case SimpleMemoComponent:
                workInProgress2.type = resolveFunctionForHotReloading(current2.type);
                break;
              case ClassComponent:
                workInProgress2.type = resolveClassForHotReloading(current2.type);
                break;
              case ForwardRef:
                workInProgress2.type = resolveForwardRefForHotReloading(current2.type);
                break;
            }
          }
          return workInProgress2;
        }
        function resetWorkInProgress(workInProgress2, renderLanes2) {
          workInProgress2.flags &= StaticMask | Placement;
          var current2 = workInProgress2.alternate;
          if (current2 === null) {
            workInProgress2.childLanes = NoLanes;
            workInProgress2.lanes = renderLanes2;
            workInProgress2.child = null;
            workInProgress2.subtreeFlags = NoFlags;
            workInProgress2.memoizedProps = null;
            workInProgress2.memoizedState = null;
            workInProgress2.updateQueue = null;
            workInProgress2.dependencies = null;
            workInProgress2.stateNode = null;
            {
              workInProgress2.selfBaseDuration = 0;
              workInProgress2.treeBaseDuration = 0;
            }
          } else {
            workInProgress2.childLanes = current2.childLanes;
            workInProgress2.lanes = current2.lanes;
            workInProgress2.child = current2.child;
            workInProgress2.subtreeFlags = NoFlags;
            workInProgress2.deletions = null;
            workInProgress2.memoizedProps = current2.memoizedProps;
            workInProgress2.memoizedState = current2.memoizedState;
            workInProgress2.updateQueue = current2.updateQueue;
            workInProgress2.type = current2.type;
            var currentDependencies = current2.dependencies;
            workInProgress2.dependencies = currentDependencies === null ? null : {
              lanes: currentDependencies.lanes,
              firstContext: currentDependencies.firstContext
            };
            {
              workInProgress2.selfBaseDuration = current2.selfBaseDuration;
              workInProgress2.treeBaseDuration = current2.treeBaseDuration;
            }
          }
          return workInProgress2;
        }
        function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {
          var mode;
          if (tag === ConcurrentRoot) {
            mode = ConcurrentMode;
            if (isStrictMode === true) {
              mode |= StrictLegacyMode;
              {
                mode |= StrictEffectsMode;
              }
            }
          } else {
            mode = NoMode;
          }
          if (isDevToolsPresent) {
            mode |= ProfileMode;
          }
          return createFiber(HostRoot, null, null, mode);
        }
        function createFiberFromTypeAndProps(type2, key, pendingProps, owner, mode, lanes) {
          var fiberTag = IndeterminateComponent;
          var resolvedType = type2;
          if (typeof type2 === "function") {
            if (shouldConstruct$1(type2)) {
              fiberTag = ClassComponent;
              {
                resolvedType = resolveClassForHotReloading(resolvedType);
              }
            } else {
              {
                resolvedType = resolveFunctionForHotReloading(resolvedType);
              }
            }
          } else if (typeof type2 === "string") {
            fiberTag = HostComponent;
          } else {
            getTag:
              switch (type2) {
                case REACT_FRAGMENT_TYPE:
                  return createFiberFromFragment(pendingProps.children, mode, lanes, key);
                case REACT_STRICT_MODE_TYPE:
                  fiberTag = Mode;
                  mode |= StrictLegacyMode;
                  if ((mode & ConcurrentMode) !== NoMode) {
                    mode |= StrictEffectsMode;
                  }
                  break;
                case REACT_PROFILER_TYPE:
                  return createFiberFromProfiler(pendingProps, mode, lanes, key);
                case REACT_SUSPENSE_TYPE:
                  return createFiberFromSuspense(pendingProps, mode, lanes, key);
                case REACT_SUSPENSE_LIST_TYPE:
                  return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
                case REACT_OFFSCREEN_TYPE:
                  return createFiberFromOffscreen(pendingProps, mode, lanes, key);
                case REACT_LEGACY_HIDDEN_TYPE:
                case REACT_SCOPE_TYPE:
                case REACT_CACHE_TYPE:
                case REACT_TRACING_MARKER_TYPE:
                case REACT_DEBUG_TRACING_MODE_TYPE:
                default: {
                  if (typeof type2 === "object" && type2 !== null) {
                    switch (type2.$$typeof) {
                      case REACT_PROVIDER_TYPE:
                        fiberTag = ContextProvider;
                        break getTag;
                      case REACT_CONTEXT_TYPE:
                        fiberTag = ContextConsumer;
                        break getTag;
                      case REACT_FORWARD_REF_TYPE:
                        fiberTag = ForwardRef;
                        {
                          resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        }
                        break getTag;
                      case REACT_MEMO_TYPE:
                        fiberTag = MemoComponent;
                        break getTag;
                      case REACT_LAZY_TYPE:
                        fiberTag = LazyComponent;
                        resolvedType = null;
                        break getTag;
                    }
                  }
                  var info = "";
                  {
                    if (type2 === void 0 || typeof type2 === "object" && type2 !== null && Object.keys(type2).length === 0) {
                      info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                    }
                    var ownerName = owner ? getComponentNameFromFiber(owner) : null;
                    if (ownerName) {
                      info += "\n\nCheck the render method of `" + ownerName + "`.";
                    }
                  }
                  throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type2 == null ? type2 : typeof type2) + "." + info));
                }
              }
          }
          var fiber = createFiber(fiberTag, pendingProps, key, mode);
          fiber.elementType = type2;
          fiber.type = resolvedType;
          fiber.lanes = lanes;
          {
            fiber._debugOwner = owner;
          }
          return fiber;
        }
        function createFiberFromElement(element, mode, lanes) {
          var owner = null;
          {
            owner = element._owner;
          }
          var type2 = element.type;
          var key = element.key;
          var pendingProps = element.props;
          var fiber = createFiberFromTypeAndProps(type2, key, pendingProps, owner, mode, lanes);
          {
            fiber._debugSource = element._source;
            fiber._debugOwner = element._owner;
          }
          return fiber;
        }
        function createFiberFromFragment(elements, mode, lanes, key) {
          var fiber = createFiber(Fragment2, elements, key, mode);
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromProfiler(pendingProps, mode, lanes, key) {
          {
            if (typeof pendingProps.id !== "string") {
              error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);
            }
          }
          var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
          fiber.elementType = REACT_PROFILER_TYPE;
          fiber.lanes = lanes;
          {
            fiber.stateNode = {
              effectDuration: 0,
              passiveEffectDuration: 0
            };
          }
          return fiber;
        }
        function createFiberFromSuspense(pendingProps, mode, lanes, key) {
          var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
          fiber.elementType = REACT_SUSPENSE_TYPE;
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
          var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
          fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
          var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
          fiber.elementType = REACT_OFFSCREEN_TYPE;
          fiber.lanes = lanes;
          var primaryChildInstance = {
            isHidden: false
          };
          fiber.stateNode = primaryChildInstance;
          return fiber;
        }
        function createFiberFromText(content, mode, lanes) {
          var fiber = createFiber(HostText, content, null, mode);
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromHostInstanceForDeletion() {
          var fiber = createFiber(HostComponent, null, null, NoMode);
          fiber.elementType = "DELETED";
          return fiber;
        }
        function createFiberFromDehydratedFragment(dehydratedNode) {
          var fiber = createFiber(DehydratedFragment, null, null, NoMode);
          fiber.stateNode = dehydratedNode;
          return fiber;
        }
        function createFiberFromPortal(portal, mode, lanes) {
          var pendingProps = portal.children !== null ? portal.children : [];
          var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
          fiber.lanes = lanes;
          fiber.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            implementation: portal.implementation
          };
          return fiber;
        }
        function assignFiberPropertiesInDEV(target, source) {
          if (target === null) {
            target = createFiber(IndeterminateComponent, null, null, NoMode);
          }
          target.tag = source.tag;
          target.key = source.key;
          target.elementType = source.elementType;
          target.type = source.type;
          target.stateNode = source.stateNode;
          target.return = source.return;
          target.child = source.child;
          target.sibling = source.sibling;
          target.index = source.index;
          target.ref = source.ref;
          target.pendingProps = source.pendingProps;
          target.memoizedProps = source.memoizedProps;
          target.updateQueue = source.updateQueue;
          target.memoizedState = source.memoizedState;
          target.dependencies = source.dependencies;
          target.mode = source.mode;
          target.flags = source.flags;
          target.subtreeFlags = source.subtreeFlags;
          target.deletions = source.deletions;
          target.lanes = source.lanes;
          target.childLanes = source.childLanes;
          target.alternate = source.alternate;
          {
            target.actualDuration = source.actualDuration;
            target.actualStartTime = source.actualStartTime;
            target.selfBaseDuration = source.selfBaseDuration;
            target.treeBaseDuration = source.treeBaseDuration;
          }
          target._debugSource = source._debugSource;
          target._debugOwner = source._debugOwner;
          target._debugNeedsRemount = source._debugNeedsRemount;
          target._debugHookTypes = source._debugHookTypes;
          return target;
        }
        function FiberRootNode(containerInfo, tag, hydrate2, identifierPrefix, onRecoverableError) {
          this.tag = tag;
          this.containerInfo = containerInfo;
          this.pendingChildren = null;
          this.current = null;
          this.pingCache = null;
          this.finishedWork = null;
          this.timeoutHandle = noTimeout;
          this.context = null;
          this.pendingContext = null;
          this.callbackNode = null;
          this.callbackPriority = NoLane;
          this.eventTimes = createLaneMap(NoLanes);
          this.expirationTimes = createLaneMap(NoTimestamp);
          this.pendingLanes = NoLanes;
          this.suspendedLanes = NoLanes;
          this.pingedLanes = NoLanes;
          this.expiredLanes = NoLanes;
          this.mutableReadLanes = NoLanes;
          this.finishedLanes = NoLanes;
          this.entangledLanes = NoLanes;
          this.entanglements = createLaneMap(NoLanes);
          this.identifierPrefix = identifierPrefix;
          this.onRecoverableError = onRecoverableError;
          {
            this.mutableSourceEagerHydrationData = null;
          }
          {
            this.effectDuration = 0;
            this.passiveEffectDuration = 0;
          }
          {
            this.memoizedUpdaters = new Set();
            var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];
            for (var _i = 0; _i < TotalLanes; _i++) {
              pendingUpdatersLaneMap.push(new Set());
            }
          }
          {
            switch (tag) {
              case ConcurrentRoot:
                this._debugRootType = hydrate2 ? "hydrateRoot()" : "createRoot()";
                break;
              case LegacyRoot:
                this._debugRootType = hydrate2 ? "hydrate()" : "render()";
                break;
            }
          }
        }
        function createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
          var root3 = new FiberRootNode(containerInfo, tag, hydrate2, identifierPrefix, onRecoverableError);
          var uninitializedFiber = createHostRootFiber(tag, isStrictMode);
          root3.current = uninitializedFiber;
          uninitializedFiber.stateNode = root3;
          {
            var _initialState = {
              element: initialChildren,
              isDehydrated: hydrate2,
              cache: null,
              transitions: null,
              pendingSuspenseBoundaries: null
            };
            uninitializedFiber.memoizedState = _initialState;
          }
          initializeUpdateQueue(uninitializedFiber);
          return root3;
        }
        var ReactVersion = "18.2.0";
        function createPortal2(children, containerInfo, implementation) {
          var key = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
          {
            checkKeyStringCoercion(key);
          }
          return {
            $$typeof: REACT_PORTAL_TYPE,
            key: key == null ? null : "" + key,
            children,
            containerInfo,
            implementation
          };
        }
        var didWarnAboutNestedUpdates;
        var didWarnAboutFindNodeInStrictMode;
        {
          didWarnAboutNestedUpdates = false;
          didWarnAboutFindNodeInStrictMode = {};
        }
        function getContextForSubtree(parentComponent) {
          if (!parentComponent) {
            return emptyContextObject;
          }
          var fiber = get5(parentComponent);
          var parentContext = findCurrentUnmaskedContext(fiber);
          if (fiber.tag === ClassComponent) {
            var Component = fiber.type;
            if (isContextProvider(Component)) {
              return processChildContext(fiber, Component, parentContext);
            }
          }
          return parentContext;
        }
        function findHostInstanceWithWarning(component, methodName) {
          {
            var fiber = get5(component);
            if (fiber === void 0) {
              if (typeof component.render === "function") {
                throw new Error("Unable to find node on an unmounted component.");
              } else {
                var keys = Object.keys(component).join(",");
                throw new Error("Argument appears to not be a ReactComponent. Keys: " + keys);
              }
            }
            var hostFiber = findCurrentHostFiber(fiber);
            if (hostFiber === null) {
              return null;
            }
            if (hostFiber.mode & StrictLegacyMode) {
              var componentName = getComponentNameFromFiber(fiber) || "Component";
              if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                didWarnAboutFindNodeInStrictMode[componentName] = true;
                var previousFiber = current;
                try {
                  setCurrentFiber(hostFiber);
                  if (fiber.mode & StrictLegacyMode) {
                    error("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                  } else {
                    error("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                  }
                } finally {
                  if (previousFiber) {
                    setCurrentFiber(previousFiber);
                  } else {
                    resetCurrentFiber();
                  }
                }
              }
            }
            return hostFiber.stateNode;
          }
        }
        function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
          var hydrate2 = false;
          var initialChildren = null;
          return createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        }
        function createHydrationContainer(initialChildren, callback, containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
          var hydrate2 = true;
          var root3 = createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
          root3.context = getContextForSubtree(null);
          var current2 = root3.current;
          var eventTime = requestEventTime();
          var lane = requestUpdateLane(current2);
          var update3 = createUpdate2(eventTime, lane);
          update3.callback = callback !== void 0 && callback !== null ? callback : null;
          enqueueUpdate(current2, update3, lane);
          scheduleInitialHydrationOnRoot(root3, lane, eventTime);
          return root3;
        }
        function updateContainer(element, container2, parentComponent, callback) {
          {
            onScheduleRoot(container2, element);
          }
          var current$1 = container2.current;
          var eventTime = requestEventTime();
          var lane = requestUpdateLane(current$1);
          {
            markRenderScheduled(lane);
          }
          var context = getContextForSubtree(parentComponent);
          if (container2.context === null) {
            container2.context = context;
          } else {
            container2.pendingContext = context;
          }
          {
            if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
              didWarnAboutNestedUpdates = true;
              error("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentNameFromFiber(current) || "Unknown");
            }
          }
          var update3 = createUpdate2(eventTime, lane);
          update3.payload = {
            element
          };
          callback = callback === void 0 ? null : callback;
          if (callback !== null) {
            {
              if (typeof callback !== "function") {
                error("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback);
              }
            }
            update3.callback = callback;
          }
          var root3 = enqueueUpdate(current$1, update3, lane);
          if (root3 !== null) {
            scheduleUpdateOnFiber(root3, current$1, lane, eventTime);
            entangleTransitions(root3, current$1, lane);
          }
          return lane;
        }
        function getPublicRootInstance(container2) {
          var containerFiber = container2.current;
          if (!containerFiber.child) {
            return null;
          }
          switch (containerFiber.child.tag) {
            case HostComponent:
              return getPublicInstance(containerFiber.child.stateNode);
            default:
              return containerFiber.child.stateNode;
          }
        }
        function attemptSynchronousHydration$1(fiber) {
          switch (fiber.tag) {
            case HostRoot: {
              var root3 = fiber.stateNode;
              if (isRootDehydrated(root3)) {
                var lanes = getHighestPriorityPendingLanes(root3);
                flushRoot(root3, lanes);
              }
              break;
            }
            case SuspenseComponent: {
              flushSync(function() {
                var root4 = enqueueConcurrentRenderForLane(fiber, SyncLane);
                if (root4 !== null) {
                  var eventTime = requestEventTime();
                  scheduleUpdateOnFiber(root4, fiber, SyncLane, eventTime);
                }
              });
              var retryLane = SyncLane;
              markRetryLaneIfNotHydrated(fiber, retryLane);
              break;
            }
          }
        }
        function markRetryLaneImpl(fiber, retryLane) {
          var suspenseState = fiber.memoizedState;
          if (suspenseState !== null && suspenseState.dehydrated !== null) {
            suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
          }
        }
        function markRetryLaneIfNotHydrated(fiber, retryLane) {
          markRetryLaneImpl(fiber, retryLane);
          var alternate = fiber.alternate;
          if (alternate) {
            markRetryLaneImpl(alternate, retryLane);
          }
        }
        function attemptContinuousHydration$1(fiber) {
          if (fiber.tag !== SuspenseComponent) {
            return;
          }
          var lane = SelectiveHydrationLane;
          var root3 = enqueueConcurrentRenderForLane(fiber, lane);
          if (root3 !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root3, fiber, lane, eventTime);
          }
          markRetryLaneIfNotHydrated(fiber, lane);
        }
        function attemptHydrationAtCurrentPriority$1(fiber) {
          if (fiber.tag !== SuspenseComponent) {
            return;
          }
          var lane = requestUpdateLane(fiber);
          var root3 = enqueueConcurrentRenderForLane(fiber, lane);
          if (root3 !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root3, fiber, lane, eventTime);
          }
          markRetryLaneIfNotHydrated(fiber, lane);
        }
        function findHostInstanceWithNoPortals(fiber) {
          var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
          if (hostFiber === null) {
            return null;
          }
          return hostFiber.stateNode;
        }
        var shouldErrorImpl = function(fiber) {
          return null;
        };
        function shouldError(fiber) {
          return shouldErrorImpl(fiber);
        }
        var shouldSuspendImpl = function(fiber) {
          return false;
        };
        function shouldSuspend(fiber) {
          return shouldSuspendImpl(fiber);
        }
        var overrideHookState = null;
        var overrideHookStateDeletePath = null;
        var overrideHookStateRenamePath = null;
        var overrideProps = null;
        var overridePropsDeletePath = null;
        var overridePropsRenamePath = null;
        var scheduleUpdate = null;
        var setErrorHandler = null;
        var setSuspenseHandler = null;
        {
          var copyWithDeleteImpl = function(obj, path2, index2) {
            var key = path2[index2];
            var updated = isArray2(obj) ? obj.slice() : assign3({}, obj);
            if (index2 + 1 === path2.length) {
              if (isArray2(updated)) {
                updated.splice(key, 1);
              } else {
                delete updated[key];
              }
              return updated;
            }
            updated[key] = copyWithDeleteImpl(obj[key], path2, index2 + 1);
            return updated;
          };
          var copyWithDelete = function(obj, path2) {
            return copyWithDeleteImpl(obj, path2, 0);
          };
          var copyWithRenameImpl = function(obj, oldPath, newPath, index2) {
            var oldKey = oldPath[index2];
            var updated = isArray2(obj) ? obj.slice() : assign3({}, obj);
            if (index2 + 1 === oldPath.length) {
              var newKey = newPath[index2];
              updated[newKey] = updated[oldKey];
              if (isArray2(updated)) {
                updated.splice(oldKey, 1);
              } else {
                delete updated[oldKey];
              }
            } else {
              updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index2 + 1);
            }
            return updated;
          };
          var copyWithRename = function(obj, oldPath, newPath) {
            if (oldPath.length !== newPath.length) {
              warn("copyWithRename() expects paths of the same length");
              return;
            } else {
              for (var i9 = 0; i9 < newPath.length - 1; i9++) {
                if (oldPath[i9] !== newPath[i9]) {
                  warn("copyWithRename() expects paths to be the same except for the deepest key");
                  return;
                }
              }
            }
            return copyWithRenameImpl(obj, oldPath, newPath, 0);
          };
          var copyWithSetImpl = function(obj, path2, index2, value) {
            if (index2 >= path2.length) {
              return value;
            }
            var key = path2[index2];
            var updated = isArray2(obj) ? obj.slice() : assign3({}, obj);
            updated[key] = copyWithSetImpl(obj[key], path2, index2 + 1, value);
            return updated;
          };
          var copyWithSet = function(obj, path2, value) {
            return copyWithSetImpl(obj, path2, 0, value);
          };
          var findHook = function(fiber, id) {
            var currentHook2 = fiber.memoizedState;
            while (currentHook2 !== null && id > 0) {
              currentHook2 = currentHook2.next;
              id--;
            }
            return currentHook2;
          };
          overrideHookState = function(fiber, id, path2, value) {
            var hook = findHook(fiber, id);
            if (hook !== null) {
              var newState = copyWithSet(hook.memoizedState, path2, value);
              hook.memoizedState = newState;
              hook.baseState = newState;
              fiber.memoizedProps = assign3({}, fiber.memoizedProps);
              var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (root3 !== null) {
                scheduleUpdateOnFiber(root3, fiber, SyncLane, NoTimestamp);
              }
            }
          };
          overrideHookStateDeletePath = function(fiber, id, path2) {
            var hook = findHook(fiber, id);
            if (hook !== null) {
              var newState = copyWithDelete(hook.memoizedState, path2);
              hook.memoizedState = newState;
              hook.baseState = newState;
              fiber.memoizedProps = assign3({}, fiber.memoizedProps);
              var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (root3 !== null) {
                scheduleUpdateOnFiber(root3, fiber, SyncLane, NoTimestamp);
              }
            }
          };
          overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
            var hook = findHook(fiber, id);
            if (hook !== null) {
              var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
              hook.memoizedState = newState;
              hook.baseState = newState;
              fiber.memoizedProps = assign3({}, fiber.memoizedProps);
              var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (root3 !== null) {
                scheduleUpdateOnFiber(root3, fiber, SyncLane, NoTimestamp);
              }
            }
          };
          overrideProps = function(fiber, path2, value) {
            fiber.pendingProps = copyWithSet(fiber.memoizedProps, path2, value);
            if (fiber.alternate) {
              fiber.alternate.pendingProps = fiber.pendingProps;
            }
            var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root3 !== null) {
              scheduleUpdateOnFiber(root3, fiber, SyncLane, NoTimestamp);
            }
          };
          overridePropsDeletePath = function(fiber, path2) {
            fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path2);
            if (fiber.alternate) {
              fiber.alternate.pendingProps = fiber.pendingProps;
            }
            var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root3 !== null) {
              scheduleUpdateOnFiber(root3, fiber, SyncLane, NoTimestamp);
            }
          };
          overridePropsRenamePath = function(fiber, oldPath, newPath) {
            fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
            if (fiber.alternate) {
              fiber.alternate.pendingProps = fiber.pendingProps;
            }
            var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root3 !== null) {
              scheduleUpdateOnFiber(root3, fiber, SyncLane, NoTimestamp);
            }
          };
          scheduleUpdate = function(fiber) {
            var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root3 !== null) {
              scheduleUpdateOnFiber(root3, fiber, SyncLane, NoTimestamp);
            }
          };
          setErrorHandler = function(newShouldErrorImpl) {
            shouldErrorImpl = newShouldErrorImpl;
          };
          setSuspenseHandler = function(newShouldSuspendImpl) {
            shouldSuspendImpl = newShouldSuspendImpl;
          };
        }
        function findHostInstanceByFiber(fiber) {
          var hostFiber = findCurrentHostFiber(fiber);
          if (hostFiber === null) {
            return null;
          }
          return hostFiber.stateNode;
        }
        function emptyFindFiberByHostInstance(instance) {
          return null;
        }
        function getCurrentFiberForDevTools() {
          return current;
        }
        function injectIntoDevTools(devToolsConfig) {
          var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
          var ReactCurrentDispatcher2 = ReactSharedInternals.ReactCurrentDispatcher;
          return injectInternals({
            bundleType: devToolsConfig.bundleType,
            version: devToolsConfig.version,
            rendererPackageName: devToolsConfig.rendererPackageName,
            rendererConfig: devToolsConfig.rendererConfig,
            overrideHookState,
            overrideHookStateDeletePath,
            overrideHookStateRenamePath,
            overrideProps,
            overridePropsDeletePath,
            overridePropsRenamePath,
            setErrorHandler,
            setSuspenseHandler,
            scheduleUpdate,
            currentDispatcherRef: ReactCurrentDispatcher2,
            findHostInstanceByFiber,
            findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
            findHostInstancesForRefresh,
            scheduleRefresh,
            scheduleRoot,
            setRefreshHandler,
            getCurrentFiber: getCurrentFiberForDevTools,
            reconcilerVersion: ReactVersion
          });
        }
        var defaultOnRecoverableError = typeof reportError === "function" ? reportError : function(error2) {
          console["error"](error2);
        };
        function ReactDOMRoot(internalRoot) {
          this._internalRoot = internalRoot;
        }
        ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(children) {
          var root3 = this._internalRoot;
          if (root3 === null) {
            throw new Error("Cannot update an unmounted root.");
          }
          {
            if (typeof arguments[1] === "function") {
              error("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
            } else if (isValidContainer(arguments[1])) {
              error("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.");
            } else if (typeof arguments[1] !== "undefined") {
              error("You passed a second argument to root.render(...) but it only accepts one argument.");
            }
            var container2 = root3.containerInfo;
            if (container2.nodeType !== COMMENT_NODE) {
              var hostInstance = findHostInstanceWithNoPortals(root3.current);
              if (hostInstance) {
                if (hostInstance.parentNode !== container2) {
                  error("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
                }
              }
            }
          }
          updateContainer(children, root3, null, null);
        };
        ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function() {
          {
            if (typeof arguments[0] === "function") {
              error("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
            }
          }
          var root3 = this._internalRoot;
          if (root3 !== null) {
            this._internalRoot = null;
            var container2 = root3.containerInfo;
            {
              if (isAlreadyRendering()) {
                error("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.");
              }
            }
            flushSync(function() {
              updateContainer(null, root3, null, null);
            });
            unmarkContainerAsRoot(container2);
          }
        };
        function createRoot2(container2, options2) {
          if (!isValidContainer(container2)) {
            throw new Error("createRoot(...): Target container is not a DOM element.");
          }
          warnIfReactDOMContainerInDEV(container2);
          var isStrictMode = false;
          var concurrentUpdatesByDefaultOverride = false;
          var identifierPrefix = "";
          var onRecoverableError = defaultOnRecoverableError;
          var transitionCallbacks = null;
          if (options2 !== null && options2 !== void 0) {
            {
              if (options2.hydrate) {
                warn("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.");
              } else {
                if (typeof options2 === "object" && options2 !== null && options2.$$typeof === REACT_ELEMENT_TYPE) {
                  error("You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);");
                }
              }
            }
            if (options2.unstable_strictMode === true) {
              isStrictMode = true;
            }
            if (options2.identifierPrefix !== void 0) {
              identifierPrefix = options2.identifierPrefix;
            }
            if (options2.onRecoverableError !== void 0) {
              onRecoverableError = options2.onRecoverableError;
            }
            if (options2.transitionCallbacks !== void 0) {
              transitionCallbacks = options2.transitionCallbacks;
            }
          }
          var root3 = createContainer(container2, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
          markContainerAsRoot(root3.current, container2);
          var rootContainerElement = container2.nodeType === COMMENT_NODE ? container2.parentNode : container2;
          listenToAllSupportedEvents(rootContainerElement);
          return new ReactDOMRoot(root3);
        }
        function ReactDOMHydrationRoot(internalRoot) {
          this._internalRoot = internalRoot;
        }
        function scheduleHydration(target) {
          if (target) {
            queueExplicitHydrationTarget(target);
          }
        }
        ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;
        function hydrateRoot(container2, initialChildren, options2) {
          if (!isValidContainer(container2)) {
            throw new Error("hydrateRoot(...): Target container is not a DOM element.");
          }
          warnIfReactDOMContainerInDEV(container2);
          {
            if (initialChildren === void 0) {
              error("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
            }
          }
          var hydrationCallbacks = options2 != null ? options2 : null;
          var mutableSources = options2 != null && options2.hydratedSources || null;
          var isStrictMode = false;
          var concurrentUpdatesByDefaultOverride = false;
          var identifierPrefix = "";
          var onRecoverableError = defaultOnRecoverableError;
          if (options2 !== null && options2 !== void 0) {
            if (options2.unstable_strictMode === true) {
              isStrictMode = true;
            }
            if (options2.identifierPrefix !== void 0) {
              identifierPrefix = options2.identifierPrefix;
            }
            if (options2.onRecoverableError !== void 0) {
              onRecoverableError = options2.onRecoverableError;
            }
          }
          var root3 = createHydrationContainer(initialChildren, null, container2, ConcurrentRoot, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
          markContainerAsRoot(root3.current, container2);
          listenToAllSupportedEvents(container2);
          if (mutableSources) {
            for (var i9 = 0; i9 < mutableSources.length; i9++) {
              var mutableSource = mutableSources[i9];
              registerMutableSourceForHydration(root3, mutableSource);
            }
          }
          return new ReactDOMHydrationRoot(root3);
        }
        function isValidContainer(node) {
          return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || !disableCommentsAsDOMContainers));
        }
        function isValidContainerLegacy(node) {
          return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === " react-mount-point-unstable "));
        }
        function warnIfReactDOMContainerInDEV(container2) {
          {
            if (container2.nodeType === ELEMENT_NODE && container2.tagName && container2.tagName.toUpperCase() === "BODY") {
              error("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app.");
            }
            if (isContainerMarkedAsRoot(container2)) {
              if (container2._reactRootContainer) {
                error("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.");
              } else {
                error("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it.");
              }
            }
          }
        }
        var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
        var topLevelUpdateWarnings;
        {
          topLevelUpdateWarnings = function(container2) {
            if (container2._reactRootContainer && container2.nodeType !== COMMENT_NODE) {
              var hostInstance = findHostInstanceWithNoPortals(container2._reactRootContainer.current);
              if (hostInstance) {
                if (hostInstance.parentNode !== container2) {
                  error("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
                }
              }
            }
            var isRootRenderedBySomeReact = !!container2._reactRootContainer;
            var rootEl = getReactRootElementInContainer(container2);
            var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
            if (hasNonRootReactChild && !isRootRenderedBySomeReact) {
              error("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render.");
            }
            if (container2.nodeType === ELEMENT_NODE && container2.tagName && container2.tagName.toUpperCase() === "BODY") {
              error("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
            }
          };
        }
        function getReactRootElementInContainer(container2) {
          if (!container2) {
            return null;
          }
          if (container2.nodeType === DOCUMENT_NODE) {
            return container2.documentElement;
          } else {
            return container2.firstChild;
          }
        }
        function noopOnRecoverableError() {
        }
        function legacyCreateRootFromDOMContainer(container2, initialChildren, parentComponent, callback, isHydrationContainer) {
          if (isHydrationContainer) {
            if (typeof callback === "function") {
              var originalCallback = callback;
              callback = function() {
                var instance = getPublicRootInstance(root3);
                originalCallback.call(instance);
              };
            }
            var root3 = createHydrationContainer(initialChildren, callback, container2, LegacyRoot, null, false, false, "", noopOnRecoverableError);
            container2._reactRootContainer = root3;
            markContainerAsRoot(root3.current, container2);
            var rootContainerElement = container2.nodeType === COMMENT_NODE ? container2.parentNode : container2;
            listenToAllSupportedEvents(rootContainerElement);
            flushSync();
            return root3;
          } else {
            var rootSibling;
            while (rootSibling = container2.lastChild) {
              container2.removeChild(rootSibling);
            }
            if (typeof callback === "function") {
              var _originalCallback = callback;
              callback = function() {
                var instance = getPublicRootInstance(_root);
                _originalCallback.call(instance);
              };
            }
            var _root = createContainer(container2, LegacyRoot, null, false, false, "", noopOnRecoverableError);
            container2._reactRootContainer = _root;
            markContainerAsRoot(_root.current, container2);
            var _rootContainerElement = container2.nodeType === COMMENT_NODE ? container2.parentNode : container2;
            listenToAllSupportedEvents(_rootContainerElement);
            flushSync(function() {
              updateContainer(initialChildren, _root, parentComponent, callback);
            });
            return _root;
          }
        }
        function warnOnInvalidCallback$1(callback, callerName) {
          {
            if (callback !== null && typeof callback !== "function") {
              error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
            }
          }
        }
        function legacyRenderSubtreeIntoContainer(parentComponent, children, container2, forceHydrate, callback) {
          {
            topLevelUpdateWarnings(container2);
            warnOnInvalidCallback$1(callback === void 0 ? null : callback, "render");
          }
          var maybeRoot = container2._reactRootContainer;
          var root3;
          if (!maybeRoot) {
            root3 = legacyCreateRootFromDOMContainer(container2, children, parentComponent, callback, forceHydrate);
          } else {
            root3 = maybeRoot;
            if (typeof callback === "function") {
              var originalCallback = callback;
              callback = function() {
                var instance = getPublicRootInstance(root3);
                originalCallback.call(instance);
              };
            }
            updateContainer(children, root3, parentComponent, callback);
          }
          return getPublicRootInstance(root3);
        }
        function findDOMNode2(componentOrElement) {
          {
            var owner = ReactCurrentOwner$3.current;
            if (owner !== null && owner.stateNode !== null) {
              var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
              if (!warnedAboutRefsInRender) {
                error("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromType(owner.type) || "A component");
              }
              owner.stateNode._warnedAboutRefsInRender = true;
            }
          }
          if (componentOrElement == null) {
            return null;
          }
          if (componentOrElement.nodeType === ELEMENT_NODE) {
            return componentOrElement;
          }
          {
            return findHostInstanceWithWarning(componentOrElement, "findDOMNode");
          }
        }
        function hydrate(element, container2, callback) {
          {
            error("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
          }
          if (!isValidContainerLegacy(container2)) {
            throw new Error("Target container is not a DOM element.");
          }
          {
            var isModernRoot = isContainerMarkedAsRoot(container2) && container2._reactRootContainer === void 0;
            if (isModernRoot) {
              error("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
            }
          }
          return legacyRenderSubtreeIntoContainer(null, element, container2, true, callback);
        }
        function render(element, container2, callback) {
          {
            error("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
          }
          if (!isValidContainerLegacy(container2)) {
            throw new Error("Target container is not a DOM element.");
          }
          {
            var isModernRoot = isContainerMarkedAsRoot(container2) && container2._reactRootContainer === void 0;
            if (isModernRoot) {
              error("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
            }
          }
          return legacyRenderSubtreeIntoContainer(null, element, container2, false, callback);
        }
        function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
          {
            error("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
          }
          if (!isValidContainerLegacy(containerNode)) {
            throw new Error("Target container is not a DOM element.");
          }
          if (parentComponent == null || !has(parentComponent)) {
            throw new Error("parentComponent must be a valid React Component");
          }
          return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
        }
        function unmountComponentAtNode(container2) {
          if (!isValidContainerLegacy(container2)) {
            throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
          }
          {
            var isModernRoot = isContainerMarkedAsRoot(container2) && container2._reactRootContainer === void 0;
            if (isModernRoot) {
              error("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
            }
          }
          if (container2._reactRootContainer) {
            {
              var rootEl = getReactRootElementInContainer(container2);
              var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
              if (renderedByDifferentReact) {
                error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
              }
            }
            flushSync(function() {
              legacyRenderSubtreeIntoContainer(null, null, container2, false, function() {
                container2._reactRootContainer = null;
                unmarkContainerAsRoot(container2);
              });
            });
            return true;
          } else {
            {
              var _rootEl = getReactRootElementInContainer(container2);
              var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl));
              var isContainerReactRoot = container2.nodeType === ELEMENT_NODE && isValidContainerLegacy(container2.parentNode) && !!container2.parentNode._reactRootContainer;
              if (hasNonRootReactChild) {
                error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
              }
            }
            return false;
          }
        }
        setAttemptSynchronousHydration(attemptSynchronousHydration$1);
        setAttemptContinuousHydration(attemptContinuousHydration$1);
        setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
        setGetCurrentUpdatePriority(getCurrentUpdatePriority);
        setAttemptHydrationAtPriority(runWithPriority);
        {
          if (typeof Map !== "function" || Map.prototype == null || typeof Map.prototype.forEach !== "function" || typeof Set !== "function" || Set.prototype == null || typeof Set.prototype.clear !== "function" || typeof Set.prototype.forEach !== "function") {
            error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
          }
        }
        setRestoreImplementation(restoreControlledState$3);
        setBatchingImplementation(batchedUpdates$1, discreteUpdates, flushSync);
        function createPortal$1(children, container2) {
          var key = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
          if (!isValidContainer(container2)) {
            throw new Error("Target container is not a DOM element.");
          }
          return createPortal2(children, container2, null, key);
        }
        function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
          return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
        }
        var Internals = {
          usingClientEntryPoint: false,
          Events: [getInstanceFromNode, getNodeFromInstance, getFiberCurrentPropsFromNode, enqueueStateRestore, restoreStateIfNeeded, batchedUpdates$1]
        };
        function createRoot$1(container2, options2) {
          {
            if (!Internals.usingClientEntryPoint && true) {
              error('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
            }
          }
          return createRoot2(container2, options2);
        }
        function hydrateRoot$1(container2, initialChildren, options2) {
          {
            if (!Internals.usingClientEntryPoint && true) {
              error('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
            }
          }
          return hydrateRoot(container2, initialChildren, options2);
        }
        function flushSync$1(fn2) {
          {
            if (isAlreadyRendering()) {
              error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
            }
          }
          return flushSync(fn2);
        }
        var foundDevTools = injectIntoDevTools({
          findFiberByHostInstance: getClosestInstanceFromNode,
          bundleType: 1,
          version: ReactVersion,
          rendererPackageName: "react-dom"
        });
        {
          if (!foundDevTools && canUseDOM2 && window.top === window.self) {
            if (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1) {
              var protocol = window.location.protocol;
              if (/^(https?|file):$/.test(protocol)) {
                console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === "file:" ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ""), "font-weight:bold");
              }
            }
          }
        }
        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
        exports.createPortal = createPortal$1;
        exports.createRoot = createRoot$1;
        exports.findDOMNode = findDOMNode2;
        exports.flushSync = flushSync$1;
        exports.hydrate = hydrate;
        exports.hydrateRoot = hydrateRoot$1;
        exports.render = render;
        exports.unmountComponentAtNode = unmountComponentAtNode;
        exports.unstable_batchedUpdates = batchedUpdates$1;
        exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
        exports.version = ReactVersion;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  });

  // ../../node_modules/react-dom/index.js
  var require_react_dom = __commonJS((exports, module) => {
    "use strict";
    if (false) {
      checkDCE();
      module.exports = null;
    } else {
      module.exports = require_react_dom_development();
    }
  });

  // ../../node_modules/lodash/isString.js
  var require_isString = __commonJS((exports, module) => {
    var baseGetTag = require_baseGetTag();
    var isArray2 = require_isArray();
    var isObjectLike = require_isObjectLike();
    var stringTag = "[object String]";
    function isString3(value) {
      return typeof value == "string" || !isArray2(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
    }
    module.exports = isString3;
  });

  // ../../node_modules/lodash/isNumber.js
  var require_isNumber = __commonJS((exports, module) => {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var numberTag = "[object Number]";
    function isNumber3(value) {
      return typeof value == "number" || isObjectLike(value) && baseGetTag(value) == numberTag;
    }
    module.exports = isNumber3;
  });

  // ../../node_modules/lodash/findIndex.js
  var require_findIndex = __commonJS((exports, module) => {
    var baseFindIndex = require_baseFindIndex();
    var baseIteratee = require_baseIteratee();
    var toInteger2 = require_toInteger();
    var nativeMax = Math.max;
    function findIndex4(array2, predicate, fromIndex) {
      var length = array2 == null ? 0 : array2.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger2(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array2, baseIteratee(predicate, 3), index);
    }
    module.exports = findIndex4;
  });

  // ../../node_modules/@babel/runtime/helpers/typeof.js
  var require_typeof = __commonJS((exports, module) => {
    function _typeof(obj) {
      "@babel/helpers - typeof";
      return module.exports = _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
        return typeof obj2;
      } : function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports, _typeof(obj);
    }
    module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;
  });

  // ../../node_modules/@babel/runtime/helpers/interopRequireWildcard.js
  var require_interopRequireWildcard = __commonJS((exports, module) => {
    var _typeof = require_typeof()["default"];
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = new WeakMap();
      var cacheNodeInterop = new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {
          default: obj
        };
      }
      var cache2 = _getRequireWildcardCache(nodeInterop);
      if (cache2 && cache2.has(obj)) {
        return cache2.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache2) {
        cache2.set(obj, newObj);
      }
      return newObj;
    }
    module.exports = _interopRequireWildcard, module.exports.__esModule = true, module.exports["default"] = module.exports;
  });

  // ../../node_modules/@babel/runtime/helpers/classCallCheck.js
  var require_classCallCheck = __commonJS((exports, module) => {
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;
  });

  // ../../node_modules/@babel/runtime/helpers/createClass.js
  var require_createClass = __commonJS((exports, module) => {
    function _defineProperties(target, props) {
      for (var i9 = 0; i9 < props.length; i9++) {
        var descriptor = props[i9];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", {
        writable: false
      });
      return Constructor;
    }
    module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;
  });

  // ../../node_modules/@babel/runtime/helpers/assertThisInitialized.js
  var require_assertThisInitialized = __commonJS((exports, module) => {
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;
  });

  // ../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
  var require_possibleConstructorReturn = __commonJS((exports, module) => {
    var _typeof = require_typeof()["default"];
    var assertThisInitialized = require_assertThisInitialized();
    function _possibleConstructorReturn(self2, call2) {
      if (call2 && (_typeof(call2) === "object" || typeof call2 === "function")) {
        return call2;
      } else if (call2 !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return assertThisInitialized(self2);
    }
    module.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports["default"] = module.exports;
  });

  // ../../node_modules/@babel/runtime/helpers/getPrototypeOf.js
  var require_getPrototypeOf = __commonJS((exports, module) => {
    function _getPrototypeOf(o8) {
      module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o9) {
        return o9.__proto__ || Object.getPrototypeOf(o9);
      }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      return _getPrototypeOf(o8);
    }
    module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;
  });

  // ../../node_modules/@babel/runtime/helpers/setPrototypeOf.js
  var require_setPrototypeOf = __commonJS((exports, module) => {
    function _setPrototypeOf2(o8, p6) {
      module.exports = _setPrototypeOf2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf3(o9, p7) {
        o9.__proto__ = p7;
        return o9;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      return _setPrototypeOf2(o8, p6);
    }
    module.exports = _setPrototypeOf2, module.exports.__esModule = true, module.exports["default"] = module.exports;
  });

  // ../../node_modules/@babel/runtime/helpers/inherits.js
  var require_inherits = __commonJS((exports, module) => {
    var setPrototypeOf = require_setPrototypeOf();
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      Object.defineProperty(subClass, "prototype", {
        writable: false
      });
      if (superClass)
        setPrototypeOf(subClass, superClass);
    }
    module.exports = _inherits, module.exports.__esModule = true, module.exports["default"] = module.exports;
  });

  // ../../node_modules/@babel/runtime/helpers/defineProperty.js
  var require_defineProperty2 = __commonJS((exports, module) => {
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;
  });

  // ../../node_modules/clsx/dist/clsx.js
  var require_clsx = __commonJS((exports, module) => {
    function toVal(mix) {
      var k6, y6, str = "";
      if (typeof mix === "string" || typeof mix === "number") {
        str += mix;
      } else if (typeof mix === "object") {
        if (Array.isArray(mix)) {
          for (k6 = 0; k6 < mix.length; k6++) {
            if (mix[k6]) {
              if (y6 = toVal(mix[k6])) {
                str && (str += " ");
                str += y6;
              }
            }
          }
        } else {
          for (k6 in mix) {
            if (mix[k6]) {
              str && (str += " ");
              str += k6;
            }
          }
        }
      }
      return str;
    }
    module.exports = function() {
      var i9 = 0, tmp, x7, str = "";
      while (i9 < arguments.length) {
        if (tmp = arguments[i9++]) {
          if (x7 = toVal(tmp)) {
            str && (str += " ");
            str += x7;
          }
        }
      }
      return str;
    };
  });

  // ../../node_modules/react-virtualized/dist/commonjs/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js
  var require_calculateSizeAndPositionDataAndUpdateScrollOffset = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = calculateSizeAndPositionDataAndUpdateScrollOffset;
    function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {
      var cellCount = _ref.cellCount, cellSize = _ref.cellSize, computeMetadataCallback = _ref.computeMetadataCallback, computeMetadataCallbackProps = _ref.computeMetadataCallbackProps, nextCellsCount = _ref.nextCellsCount, nextCellSize = _ref.nextCellSize, nextScrollToIndex = _ref.nextScrollToIndex, scrollToIndex = _ref.scrollToIndex, updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;
      if (cellCount !== nextCellsCount || (typeof cellSize === "number" || typeof nextCellSize === "number") && cellSize !== nextCellSize) {
        computeMetadataCallback(computeMetadataCallbackProps);
        if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {
          updateScrollOffsetForScrollToIndex();
        }
      }
    }
  });

  // ../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js
  var require_objectWithoutProperties = __commonJS((exports, module) => {
    var objectWithoutPropertiesLoose = require_objectWithoutPropertiesLoose();
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = objectWithoutPropertiesLoose(source, excluded);
      var key, i9;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i9 = 0; i9 < sourceSymbolKeys.length; i9++) {
          key = sourceSymbolKeys[i9];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    module.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports["default"] = module.exports;
  });

  // ../../node_modules/react-virtualized/dist/commonjs/Grid/types.js
  var require_types = __commonJS((exports) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _interopRequireWildcard = require_interopRequireWildcard();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.bpfrpt_proptype_VisibleCellRange = exports.bpfrpt_proptype_Alignment = exports.bpfrpt_proptype_OverscanIndicesGetter = exports.bpfrpt_proptype_OverscanIndices = exports.bpfrpt_proptype_OverscanIndicesGetterParams = exports.bpfrpt_proptype_RenderedSection = exports.bpfrpt_proptype_ScrollbarPresenceChange = exports.bpfrpt_proptype_Scroll = exports.bpfrpt_proptype_NoContentRenderer = exports.bpfrpt_proptype_CellSize = exports.bpfrpt_proptype_CellSizeGetter = exports.bpfrpt_proptype_CellRangeRenderer = exports.bpfrpt_proptype_CellRangeRendererParams = exports.bpfrpt_proptype_StyleCache = exports.bpfrpt_proptype_CellCache = exports.bpfrpt_proptype_CellRenderer = exports.bpfrpt_proptype_CellRendererParams = exports.bpfrpt_proptype_CellPosition = void 0;
    var React52 = _interopRequireWildcard(require_react());
    var _ScalingCellSizeAndPositionManager = _interopRequireDefault(require_ScalingCellSizeAndPositionManager());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var bpfrpt_proptype_CellPosition = false ? null : {
      columnIndex: _propTypes["default"].number.isRequired,
      rowIndex: _propTypes["default"].number.isRequired
    };
    exports.bpfrpt_proptype_CellPosition = bpfrpt_proptype_CellPosition;
    var bpfrpt_proptype_CellRendererParams = false ? null : {
      columnIndex: _propTypes["default"].number.isRequired,
      isScrolling: _propTypes["default"].bool.isRequired,
      isVisible: _propTypes["default"].bool.isRequired,
      key: _propTypes["default"].string.isRequired,
      parent: _propTypes["default"].object.isRequired,
      rowIndex: _propTypes["default"].number.isRequired,
      style: _propTypes["default"].object.isRequired
    };
    exports.bpfrpt_proptype_CellRendererParams = bpfrpt_proptype_CellRendererParams;
    var bpfrpt_proptype_CellRenderer = false ? null : _propTypes["default"].func;
    exports.bpfrpt_proptype_CellRenderer = bpfrpt_proptype_CellRenderer;
    var bpfrpt_proptype_CellCache = false ? null : _propTypes["default"].objectOf(_propTypes["default"].node.isRequired);
    exports.bpfrpt_proptype_CellCache = bpfrpt_proptype_CellCache;
    var bpfrpt_proptype_StyleCache = false ? null : _propTypes["default"].objectOf(_propTypes["default"].object.isRequired);
    exports.bpfrpt_proptype_StyleCache = bpfrpt_proptype_StyleCache;
    var bpfrpt_proptype_CellRangeRendererParams = false ? null : {
      cellCache: _propTypes["default"].objectOf(_propTypes["default"].node.isRequired).isRequired,
      cellRenderer: _propTypes["default"].func.isRequired,
      columnSizeAndPositionManager: function columnSizeAndPositionManager() {
        return (typeof _ScalingCellSizeAndPositionManager["default"] === "function" ? _propTypes["default"].instanceOf(_ScalingCellSizeAndPositionManager["default"]).isRequired : _propTypes["default"].any.isRequired).apply(this, arguments);
      },
      columnStartIndex: _propTypes["default"].number.isRequired,
      columnStopIndex: _propTypes["default"].number.isRequired,
      deferredMeasurementCache: _propTypes["default"].object,
      horizontalOffsetAdjustment: _propTypes["default"].number.isRequired,
      isScrolling: _propTypes["default"].bool.isRequired,
      isScrollingOptOut: _propTypes["default"].bool.isRequired,
      parent: _propTypes["default"].object.isRequired,
      rowSizeAndPositionManager: function rowSizeAndPositionManager() {
        return (typeof _ScalingCellSizeAndPositionManager["default"] === "function" ? _propTypes["default"].instanceOf(_ScalingCellSizeAndPositionManager["default"]).isRequired : _propTypes["default"].any.isRequired).apply(this, arguments);
      },
      rowStartIndex: _propTypes["default"].number.isRequired,
      rowStopIndex: _propTypes["default"].number.isRequired,
      scrollLeft: _propTypes["default"].number.isRequired,
      scrollTop: _propTypes["default"].number.isRequired,
      styleCache: _propTypes["default"].objectOf(_propTypes["default"].object.isRequired).isRequired,
      verticalOffsetAdjustment: _propTypes["default"].number.isRequired,
      visibleColumnIndices: _propTypes["default"].object.isRequired,
      visibleRowIndices: _propTypes["default"].object.isRequired
    };
    exports.bpfrpt_proptype_CellRangeRendererParams = bpfrpt_proptype_CellRangeRendererParams;
    var bpfrpt_proptype_CellRangeRenderer = false ? null : _propTypes["default"].func;
    exports.bpfrpt_proptype_CellRangeRenderer = bpfrpt_proptype_CellRangeRenderer;
    var bpfrpt_proptype_CellSizeGetter = false ? null : _propTypes["default"].func;
    exports.bpfrpt_proptype_CellSizeGetter = bpfrpt_proptype_CellSizeGetter;
    var bpfrpt_proptype_CellSize = false ? null : _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].number]);
    exports.bpfrpt_proptype_CellSize = bpfrpt_proptype_CellSize;
    var bpfrpt_proptype_NoContentRenderer = false ? null : _propTypes["default"].func;
    exports.bpfrpt_proptype_NoContentRenderer = bpfrpt_proptype_NoContentRenderer;
    var bpfrpt_proptype_Scroll = false ? null : {
      clientHeight: _propTypes["default"].number.isRequired,
      clientWidth: _propTypes["default"].number.isRequired,
      scrollHeight: _propTypes["default"].number.isRequired,
      scrollLeft: _propTypes["default"].number.isRequired,
      scrollTop: _propTypes["default"].number.isRequired,
      scrollWidth: _propTypes["default"].number.isRequired
    };
    exports.bpfrpt_proptype_Scroll = bpfrpt_proptype_Scroll;
    var bpfrpt_proptype_ScrollbarPresenceChange = false ? null : {
      horizontal: _propTypes["default"].bool.isRequired,
      vertical: _propTypes["default"].bool.isRequired,
      size: _propTypes["default"].number.isRequired
    };
    exports.bpfrpt_proptype_ScrollbarPresenceChange = bpfrpt_proptype_ScrollbarPresenceChange;
    var bpfrpt_proptype_RenderedSection = false ? null : {
      columnOverscanStartIndex: _propTypes["default"].number.isRequired,
      columnOverscanStopIndex: _propTypes["default"].number.isRequired,
      columnStartIndex: _propTypes["default"].number.isRequired,
      columnStopIndex: _propTypes["default"].number.isRequired,
      rowOverscanStartIndex: _propTypes["default"].number.isRequired,
      rowOverscanStopIndex: _propTypes["default"].number.isRequired,
      rowStartIndex: _propTypes["default"].number.isRequired,
      rowStopIndex: _propTypes["default"].number.isRequired
    };
    exports.bpfrpt_proptype_RenderedSection = bpfrpt_proptype_RenderedSection;
    var bpfrpt_proptype_OverscanIndicesGetterParams = false ? null : {
      direction: _propTypes["default"].oneOf(["horizontal", "vertical"]).isRequired,
      scrollDirection: _propTypes["default"].oneOf([-1, 1]).isRequired,
      cellCount: _propTypes["default"].number.isRequired,
      overscanCellsCount: _propTypes["default"].number.isRequired,
      startIndex: _propTypes["default"].number.isRequired,
      stopIndex: _propTypes["default"].number.isRequired
    };
    exports.bpfrpt_proptype_OverscanIndicesGetterParams = bpfrpt_proptype_OverscanIndicesGetterParams;
    var bpfrpt_proptype_OverscanIndices = false ? null : {
      overscanStartIndex: _propTypes["default"].number.isRequired,
      overscanStopIndex: _propTypes["default"].number.isRequired
    };
    exports.bpfrpt_proptype_OverscanIndices = bpfrpt_proptype_OverscanIndices;
    var bpfrpt_proptype_OverscanIndicesGetter = false ? null : _propTypes["default"].func;
    exports.bpfrpt_proptype_OverscanIndicesGetter = bpfrpt_proptype_OverscanIndicesGetter;
    var bpfrpt_proptype_Alignment = false ? null : _propTypes["default"].oneOf(["auto", "end", "start", "center"]);
    exports.bpfrpt_proptype_Alignment = bpfrpt_proptype_Alignment;
    var bpfrpt_proptype_VisibleCellRange = false ? null : {
      start: _propTypes["default"].number,
      stop: _propTypes["default"].number
    };
    exports.bpfrpt_proptype_VisibleCellRange = bpfrpt_proptype_VisibleCellRange;
  });

  // ../../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js
  var require_CellSizeAndPositionManager = __commonJS((exports) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty2());
    var _types = require_types();
    var CellSizeAndPositionManager = /* @__PURE__ */ function() {
      function CellSizeAndPositionManager2(_ref) {
        var cellCount = _ref.cellCount, cellSizeGetter = _ref.cellSizeGetter, estimatedCellSize = _ref.estimatedCellSize;
        (0, _classCallCheck2["default"])(this, CellSizeAndPositionManager2);
        (0, _defineProperty2["default"])(this, "_cellSizeAndPositionData", {});
        (0, _defineProperty2["default"])(this, "_lastMeasuredIndex", -1);
        (0, _defineProperty2["default"])(this, "_lastBatchedIndex", -1);
        (0, _defineProperty2["default"])(this, "_cellCount", void 0);
        (0, _defineProperty2["default"])(this, "_cellSizeGetter", void 0);
        (0, _defineProperty2["default"])(this, "_estimatedCellSize", void 0);
        this._cellSizeGetter = cellSizeGetter;
        this._cellCount = cellCount;
        this._estimatedCellSize = estimatedCellSize;
      }
      (0, _createClass2["default"])(CellSizeAndPositionManager2, [{
        key: "areOffsetsAdjusted",
        value: function areOffsetsAdjusted() {
          return false;
        }
      }, {
        key: "configure",
        value: function configure(_ref2) {
          var cellCount = _ref2.cellCount, estimatedCellSize = _ref2.estimatedCellSize, cellSizeGetter = _ref2.cellSizeGetter;
          this._cellCount = cellCount;
          this._estimatedCellSize = estimatedCellSize;
          this._cellSizeGetter = cellSizeGetter;
        }
      }, {
        key: "getCellCount",
        value: function getCellCount() {
          return this._cellCount;
        }
      }, {
        key: "getEstimatedCellSize",
        value: function getEstimatedCellSize() {
          return this._estimatedCellSize;
        }
      }, {
        key: "getLastMeasuredIndex",
        value: function getLastMeasuredIndex() {
          return this._lastMeasuredIndex;
        }
      }, {
        key: "getOffsetAdjustment",
        value: function getOffsetAdjustment() {
          return 0;
        }
      }, {
        key: "getSizeAndPositionOfCell",
        value: function getSizeAndPositionOfCell(index) {
          if (index < 0 || index >= this._cellCount) {
            throw Error("Requested index ".concat(index, " is outside of range 0..").concat(this._cellCount));
          }
          if (index > this._lastMeasuredIndex) {
            var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();
            var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;
            for (var i9 = this._lastMeasuredIndex + 1; i9 <= index; i9++) {
              var size2 = this._cellSizeGetter({
                index: i9
              });
              if (size2 === void 0 || isNaN(size2)) {
                throw Error("Invalid size returned for cell ".concat(i9, " of value ").concat(size2));
              } else if (size2 === null) {
                this._cellSizeAndPositionData[i9] = {
                  offset,
                  size: 0
                };
                this._lastBatchedIndex = index;
              } else {
                this._cellSizeAndPositionData[i9] = {
                  offset,
                  size: size2
                };
                offset += size2;
                this._lastMeasuredIndex = index;
              }
            }
          }
          return this._cellSizeAndPositionData[index];
        }
      }, {
        key: "getSizeAndPositionOfLastMeasuredCell",
        value: function getSizeAndPositionOfLastMeasuredCell() {
          return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {
            offset: 0,
            size: 0
          };
        }
      }, {
        key: "getTotalSize",
        value: function getTotalSize() {
          var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();
          var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;
          var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;
          var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;
          return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;
        }
      }, {
        key: "getUpdatedOffsetForIndex",
        value: function getUpdatedOffsetForIndex(_ref3) {
          var _ref3$align = _ref3.align, align = _ref3$align === void 0 ? "auto" : _ref3$align, containerSize = _ref3.containerSize, currentOffset = _ref3.currentOffset, targetIndex = _ref3.targetIndex;
          if (containerSize <= 0) {
            return 0;
          }
          var datum = this.getSizeAndPositionOfCell(targetIndex);
          var maxOffset = datum.offset;
          var minOffset = maxOffset - containerSize + datum.size;
          var idealOffset;
          switch (align) {
            case "start":
              idealOffset = maxOffset;
              break;
            case "end":
              idealOffset = minOffset;
              break;
            case "center":
              idealOffset = maxOffset - (containerSize - datum.size) / 2;
              break;
            default:
              idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));
              break;
          }
          var totalSize = this.getTotalSize();
          return Math.max(0, Math.min(totalSize - containerSize, idealOffset));
        }
      }, {
        key: "getVisibleCellRange",
        value: function getVisibleCellRange(params) {
          var containerSize = params.containerSize, offset = params.offset;
          var totalSize = this.getTotalSize();
          if (totalSize === 0) {
            return {};
          }
          var maxOffset = offset + containerSize;
          var start2 = this._findNearestCell(offset);
          var datum = this.getSizeAndPositionOfCell(start2);
          offset = datum.offset + datum.size;
          var stop = start2;
          while (offset < maxOffset && stop < this._cellCount - 1) {
            stop++;
            offset += this.getSizeAndPositionOfCell(stop).size;
          }
          return {
            start: start2,
            stop
          };
        }
      }, {
        key: "resetCell",
        value: function resetCell(index) {
          this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);
        }
      }, {
        key: "_binarySearch",
        value: function _binarySearch(high, low, offset) {
          while (low <= high) {
            var middle = low + Math.floor((high - low) / 2);
            var currentOffset = this.getSizeAndPositionOfCell(middle).offset;
            if (currentOffset === offset) {
              return middle;
            } else if (currentOffset < offset) {
              low = middle + 1;
            } else if (currentOffset > offset) {
              high = middle - 1;
            }
          }
          if (low > 0) {
            return low - 1;
          } else {
            return 0;
          }
        }
      }, {
        key: "_exponentialSearch",
        value: function _exponentialSearch(index, offset) {
          var interval = 1;
          while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {
            index += interval;
            interval *= 2;
          }
          return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);
        }
      }, {
        key: "_findNearestCell",
        value: function _findNearestCell(offset) {
          if (isNaN(offset)) {
            throw Error("Invalid offset ".concat(offset, " specified"));
          }
          offset = Math.max(0, offset);
          var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();
          var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);
          if (lastMeasuredCellSizeAndPosition.offset >= offset) {
            return this._binarySearch(lastMeasuredIndex, 0, offset);
          } else {
            return this._exponentialSearch(lastMeasuredIndex, offset);
          }
        }
      }]);
      return CellSizeAndPositionManager2;
    }();
    exports["default"] = CellSizeAndPositionManager;
  });

  // ../../node_modules/react-virtualized/dist/commonjs/Grid/utils/maxElementSize.js
  var require_maxElementSize = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getMaxElementSize = void 0;
    var DEFAULT_MAX_ELEMENT_SIZE = 15e5;
    var CHROME_MAX_ELEMENT_SIZE = 16777100;
    var isBrowser = function isBrowser2() {
      return typeof window !== "undefined";
    };
    var isChrome = function isChrome2() {
      return !!window.chrome;
    };
    var getMaxElementSize = function getMaxElementSize2() {
      if (isBrowser()) {
        if (isChrome()) {
          return CHROME_MAX_ELEMENT_SIZE;
        }
      }
      return DEFAULT_MAX_ELEMENT_SIZE;
    };
    exports.getMaxElementSize = getMaxElementSize;
  });

  // ../../node_modules/react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager.js
  var require_ScalingCellSizeAndPositionManager = __commonJS((exports) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _objectWithoutProperties2 = _interopRequireDefault(require_objectWithoutProperties());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty2());
    var _CellSizeAndPositionManager = _interopRequireDefault(require_CellSizeAndPositionManager());
    var _maxElementSize = require_maxElementSize();
    var _types = require_types();
    var ScalingCellSizeAndPositionManager = /* @__PURE__ */ function() {
      function ScalingCellSizeAndPositionManager2(_ref) {
        var _ref$maxScrollSize = _ref.maxScrollSize, maxScrollSize = _ref$maxScrollSize === void 0 ? (0, _maxElementSize.getMaxElementSize)() : _ref$maxScrollSize, params = (0, _objectWithoutProperties2["default"])(_ref, ["maxScrollSize"]);
        (0, _classCallCheck2["default"])(this, ScalingCellSizeAndPositionManager2);
        (0, _defineProperty2["default"])(this, "_cellSizeAndPositionManager", void 0);
        (0, _defineProperty2["default"])(this, "_maxScrollSize", void 0);
        this._cellSizeAndPositionManager = new _CellSizeAndPositionManager["default"](params);
        this._maxScrollSize = maxScrollSize;
      }
      (0, _createClass2["default"])(ScalingCellSizeAndPositionManager2, [{
        key: "areOffsetsAdjusted",
        value: function areOffsetsAdjusted() {
          return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;
        }
      }, {
        key: "configure",
        value: function configure(params) {
          this._cellSizeAndPositionManager.configure(params);
        }
      }, {
        key: "getCellCount",
        value: function getCellCount() {
          return this._cellSizeAndPositionManager.getCellCount();
        }
      }, {
        key: "getEstimatedCellSize",
        value: function getEstimatedCellSize() {
          return this._cellSizeAndPositionManager.getEstimatedCellSize();
        }
      }, {
        key: "getLastMeasuredIndex",
        value: function getLastMeasuredIndex() {
          return this._cellSizeAndPositionManager.getLastMeasuredIndex();
        }
      }, {
        key: "getOffsetAdjustment",
        value: function getOffsetAdjustment(_ref2) {
          var containerSize = _ref2.containerSize, offset = _ref2.offset;
          var totalSize = this._cellSizeAndPositionManager.getTotalSize();
          var safeTotalSize = this.getTotalSize();
          var offsetPercentage = this._getOffsetPercentage({
            containerSize,
            offset,
            totalSize: safeTotalSize
          });
          return Math.round(offsetPercentage * (safeTotalSize - totalSize));
        }
      }, {
        key: "getSizeAndPositionOfCell",
        value: function getSizeAndPositionOfCell(index) {
          return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);
        }
      }, {
        key: "getSizeAndPositionOfLastMeasuredCell",
        value: function getSizeAndPositionOfLastMeasuredCell() {
          return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();
        }
      }, {
        key: "getTotalSize",
        value: function getTotalSize() {
          return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());
        }
      }, {
        key: "getUpdatedOffsetForIndex",
        value: function getUpdatedOffsetForIndex(_ref3) {
          var _ref3$align = _ref3.align, align = _ref3$align === void 0 ? "auto" : _ref3$align, containerSize = _ref3.containerSize, currentOffset = _ref3.currentOffset, targetIndex = _ref3.targetIndex;
          currentOffset = this._safeOffsetToOffset({
            containerSize,
            offset: currentOffset
          });
          var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({
            align,
            containerSize,
            currentOffset,
            targetIndex
          });
          return this._offsetToSafeOffset({
            containerSize,
            offset
          });
        }
      }, {
        key: "getVisibleCellRange",
        value: function getVisibleCellRange(_ref4) {
          var containerSize = _ref4.containerSize, offset = _ref4.offset;
          offset = this._safeOffsetToOffset({
            containerSize,
            offset
          });
          return this._cellSizeAndPositionManager.getVisibleCellRange({
            containerSize,
            offset
          });
        }
      }, {
        key: "resetCell",
        value: function resetCell(index) {
          this._cellSizeAndPositionManager.resetCell(index);
        }
      }, {
        key: "_getOffsetPercentage",
        value: function _getOffsetPercentage(_ref5) {
          var containerSize = _ref5.containerSize, offset = _ref5.offset, totalSize = _ref5.totalSize;
          return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);
        }
      }, {
        key: "_offsetToSafeOffset",
        value: function _offsetToSafeOffset(_ref6) {
          var containerSize = _ref6.containerSize, offset = _ref6.offset;
          var totalSize = this._cellSizeAndPositionManager.getTotalSize();
          var safeTotalSize = this.getTotalSize();
          if (totalSize === safeTotalSize) {
            return offset;
          } else {
            var offsetPercentage = this._getOffsetPercentage({
              containerSize,
              offset,
              totalSize
            });
            return Math.round(offsetPercentage * (safeTotalSize - containerSize));
          }
        }
      }, {
        key: "_safeOffsetToOffset",
        value: function _safeOffsetToOffset(_ref7) {
          var containerSize = _ref7.containerSize, offset = _ref7.offset;
          var totalSize = this._cellSizeAndPositionManager.getTotalSize();
          var safeTotalSize = this.getTotalSize();
          if (totalSize === safeTotalSize) {
            return offset;
          } else {
            var offsetPercentage = this._getOffsetPercentage({
              containerSize,
              offset,
              totalSize: safeTotalSize
            });
            return Math.round(offsetPercentage * (totalSize - containerSize));
          }
        }
      }]);
      return ScalingCellSizeAndPositionManager2;
    }();
    exports["default"] = ScalingCellSizeAndPositionManager;
  });

  // ../../node_modules/react-virtualized/dist/commonjs/utils/createCallbackMemoizer.js
  var require_createCallbackMemoizer = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = createCallbackMemoizer;
    function createCallbackMemoizer() {
      var requireAllKeys = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
      var cachedIndices = {};
      return function(_ref) {
        var callback = _ref.callback, indices = _ref.indices;
        var keys = Object.keys(indices);
        var allInitialized = !requireAllKeys || keys.every(function(key) {
          var value = indices[key];
          return Array.isArray(value) ? value.length > 0 : value >= 0;
        });
        var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function(key) {
          var cachedValue = cachedIndices[key];
          var value = indices[key];
          return Array.isArray(value) ? cachedValue.join(",") !== value.join(",") : cachedValue !== value;
        });
        cachedIndices = indices;
        if (allInitialized && indexChanged) {
          callback(indices);
        }
      };
    }
  });

  // ../../node_modules/react-virtualized/dist/commonjs/Grid/defaultOverscanIndicesGetter.js
  var require_defaultOverscanIndicesGetter = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = defaultOverscanIndicesGetter;
    exports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;
    var _types = require_types();
    var SCROLL_DIRECTION_BACKWARD = -1;
    exports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;
    var SCROLL_DIRECTION_FORWARD = 1;
    exports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;
    var SCROLL_DIRECTION_HORIZONTAL = "horizontal";
    exports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;
    var SCROLL_DIRECTION_VERTICAL = "vertical";
    exports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;
    function defaultOverscanIndicesGetter(_ref) {
      var cellCount = _ref.cellCount, overscanCellsCount = _ref.overscanCellsCount, scrollDirection = _ref.scrollDirection, startIndex = _ref.startIndex, stopIndex = _ref.stopIndex;
      if (scrollDirection === SCROLL_DIRECTION_FORWARD) {
        return {
          overscanStartIndex: Math.max(0, startIndex),
          overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)
        };
      } else {
        return {
          overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),
          overscanStopIndex: Math.min(cellCount - 1, stopIndex)
        };
      }
    }
  });

  // ../../node_modules/react-virtualized/dist/commonjs/Grid/utils/updateScrollIndexHelper.js
  var require_updateScrollIndexHelper = __commonJS((exports) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = updateScrollIndexHelper;
    var _ScalingCellSizeAndPositionManager = _interopRequireDefault(require_ScalingCellSizeAndPositionManager());
    var _types = require_types();
    function updateScrollIndexHelper(_ref) {
      var cellSize = _ref.cellSize, cellSizeAndPositionManager = _ref.cellSizeAndPositionManager, previousCellsCount = _ref.previousCellsCount, previousCellSize = _ref.previousCellSize, previousScrollToAlignment = _ref.previousScrollToAlignment, previousScrollToIndex = _ref.previousScrollToIndex, previousSize = _ref.previousSize, scrollOffset = _ref.scrollOffset, scrollToAlignment = _ref.scrollToAlignment, scrollToIndex = _ref.scrollToIndex, size2 = _ref.size, sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero, updateScrollIndexCallback = _ref.updateScrollIndexCallback;
      var cellCount = cellSizeAndPositionManager.getCellCount();
      var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;
      var sizeHasChanged = size2 !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === "number" && cellSize !== previousCellSize;
      if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {
        updateScrollIndexCallback(scrollToIndex);
      } else if (!hasScrollToIndex && cellCount > 0 && (size2 < previousSize || cellCount < previousCellsCount)) {
        if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size2) {
          updateScrollIndexCallback(cellCount - 1);
        }
      }
    }
  });

  // ../../node_modules/react-virtualized/dist/commonjs/Grid/defaultCellRangeRenderer.js
  var require_defaultCellRangeRenderer = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = defaultCellRangeRenderer;
    var _types = require_types();
    function defaultCellRangeRenderer(_ref) {
      var cellCache = _ref.cellCache, cellRenderer = _ref.cellRenderer, columnSizeAndPositionManager = _ref.columnSizeAndPositionManager, columnStartIndex = _ref.columnStartIndex, columnStopIndex = _ref.columnStopIndex, deferredMeasurementCache = _ref.deferredMeasurementCache, horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment, isScrolling = _ref.isScrolling, isScrollingOptOut = _ref.isScrollingOptOut, parent = _ref.parent, rowSizeAndPositionManager = _ref.rowSizeAndPositionManager, rowStartIndex = _ref.rowStartIndex, rowStopIndex = _ref.rowStopIndex, styleCache = _ref.styleCache, verticalOffsetAdjustment = _ref.verticalOffsetAdjustment, visibleColumnIndices = _ref.visibleColumnIndices, visibleRowIndices = _ref.visibleRowIndices;
      var renderedCells = [];
      var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();
      var canCacheStyle = !isScrolling && !areOffsetsAdjusted;
      for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {
        var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);
        for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {
          var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);
          var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;
          var key = "".concat(rowIndex, "-").concat(columnIndex);
          var style = void 0;
          if (canCacheStyle && styleCache[key]) {
            style = styleCache[key];
          } else {
            if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {
              style = {
                height: "auto",
                left: 0,
                position: "absolute",
                top: 0,
                width: "auto"
              };
            } else {
              style = {
                height: rowDatum.size,
                left: columnDatum.offset + horizontalOffsetAdjustment,
                position: "absolute",
                top: rowDatum.offset + verticalOffsetAdjustment,
                width: columnDatum.size
              };
              styleCache[key] = style;
            }
          }
          var cellRendererParams = {
            columnIndex,
            isScrolling,
            isVisible,
            key,
            parent,
            rowIndex,
            style
          };
          var renderedCell = void 0;
          if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {
            if (!cellCache[key]) {
              cellCache[key] = cellRenderer(cellRendererParams);
            }
            renderedCell = cellCache[key];
          } else {
            renderedCell = cellRenderer(cellRendererParams);
          }
          if (renderedCell == null || renderedCell === false) {
            continue;
          }
          if (true) {
            warnAboutMissingStyle(parent, renderedCell);
          }
          renderedCells.push(renderedCell);
        }
      }
      return renderedCells;
    }
    function warnAboutMissingStyle(parent, renderedCell) {
      if (true) {
        if (renderedCell) {
          if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {
            renderedCell = renderedCell.props.children;
          }
          if (renderedCell && renderedCell.props && renderedCell.props.style === void 0 && parent.__warnedAboutMissingStyle !== true) {
            parent.__warnedAboutMissingStyle = true;
            console.warn("Rendered cell should include style property for positioning.");
          }
        }
      }
    }
  });

  // ../../node_modules/dom-helpers/cjs/canUseDOM.js
  var require_canUseDOM = __commonJS((exports, module) => {
    "use strict";
    exports.__esModule = true;
    exports.default = void 0;
    var _default = !!(typeof window !== "undefined" && window.document && window.document.createElement);
    exports.default = _default;
    module.exports = exports["default"];
  });

  // ../../node_modules/dom-helpers/cjs/scrollbarSize.js
  var require_scrollbarSize = __commonJS((exports, module) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports.default = scrollbarSize;
    var _canUseDOM = _interopRequireDefault(require_canUseDOM());
    var size2;
    function scrollbarSize(recalc) {
      if (!size2 && size2 !== 0 || recalc) {
        if (_canUseDOM.default) {
          var scrollDiv = document.createElement("div");
          scrollDiv.style.position = "absolute";
          scrollDiv.style.top = "-9999px";
          scrollDiv.style.width = "50px";
          scrollDiv.style.height = "50px";
          scrollDiv.style.overflow = "scroll";
          document.body.appendChild(scrollDiv);
          size2 = scrollDiv.offsetWidth - scrollDiv.clientWidth;
          document.body.removeChild(scrollDiv);
        }
      }
      return size2;
    }
    module.exports = exports["default"];
  });

  // ../../node_modules/react-lifecycles-compat/react-lifecycles-compat.cjs.js
  var require_react_lifecycles_compat_cjs = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {value: true});
    function componentWillMount() {
      var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
      if (state !== null && state !== void 0) {
        this.setState(state);
      }
    }
    function componentWillReceiveProps(nextProps) {
      function updater(prevState) {
        var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
        return state !== null && state !== void 0 ? state : null;
      }
      this.setState(updater.bind(this));
    }
    function componentWillUpdate(nextProps, nextState) {
      try {
        var prevProps = this.props;
        var prevState = this.state;
        this.props = nextProps;
        this.state = nextState;
        this.__reactInternalSnapshotFlag = true;
        this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);
      } finally {
        this.props = prevProps;
        this.state = prevState;
      }
    }
    componentWillMount.__suppressDeprecationWarning = true;
    componentWillReceiveProps.__suppressDeprecationWarning = true;
    componentWillUpdate.__suppressDeprecationWarning = true;
    function polyfill(Component) {
      var prototype = Component.prototype;
      if (!prototype || !prototype.isReactComponent) {
        throw new Error("Can only polyfill class components");
      }
      if (typeof Component.getDerivedStateFromProps !== "function" && typeof prototype.getSnapshotBeforeUpdate !== "function") {
        return Component;
      }
      var foundWillMountName = null;
      var foundWillReceivePropsName = null;
      var foundWillUpdateName = null;
      if (typeof prototype.componentWillMount === "function") {
        foundWillMountName = "componentWillMount";
      } else if (typeof prototype.UNSAFE_componentWillMount === "function") {
        foundWillMountName = "UNSAFE_componentWillMount";
      }
      if (typeof prototype.componentWillReceiveProps === "function") {
        foundWillReceivePropsName = "componentWillReceiveProps";
      } else if (typeof prototype.UNSAFE_componentWillReceiveProps === "function") {
        foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
      }
      if (typeof prototype.componentWillUpdate === "function") {
        foundWillUpdateName = "componentWillUpdate";
      } else if (typeof prototype.UNSAFE_componentWillUpdate === "function") {
        foundWillUpdateName = "UNSAFE_componentWillUpdate";
      }
      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
        var componentName = Component.displayName || Component.name;
        var newApiName = typeof Component.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
        throw Error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n" + componentName + " uses " + newApiName + " but also contains the following legacy lifecycles:" + (foundWillMountName !== null ? "\n  " + foundWillMountName : "") + (foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "") + (foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "") + "\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks");
      }
      if (typeof Component.getDerivedStateFromProps === "function") {
        prototype.componentWillMount = componentWillMount;
        prototype.componentWillReceiveProps = componentWillReceiveProps;
      }
      if (typeof prototype.getSnapshotBeforeUpdate === "function") {
        if (typeof prototype.componentDidUpdate !== "function") {
          throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");
        }
        prototype.componentWillUpdate = componentWillUpdate;
        var componentDidUpdate = prototype.componentDidUpdate;
        prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {
          var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;
          componentDidUpdate.call(this, prevProps, prevState, snapshot);
        };
      }
      return Component;
    }
    exports.polyfill = polyfill;
  });

  // ../../node_modules/react-virtualized/dist/commonjs/utils/animationFrame.js
  var require_animationFrame = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.caf = exports.raf = void 0;
    var win;
    if (typeof window !== "undefined") {
      win = window;
    } else if (typeof self !== "undefined") {
      win = self;
    } else {
      win = {};
    }
    var request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function(callback) {
      return win.setTimeout(callback, 1e3 / 60);
    };
    var cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function(id) {
      win.clearTimeout(id);
    };
    var raf2 = request;
    exports.raf = raf2;
    var caf = cancel;
    exports.caf = caf;
  });

  // ../../node_modules/react-virtualized/dist/commonjs/utils/requestAnimationTimeout.js
  var require_requestAnimationTimeout = __commonJS((exports) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.bpfrpt_proptype_AnimationTimeoutId = exports.requestAnimationTimeout = exports.cancelAnimationTimeout = void 0;
    var _animationFrame = require_animationFrame();
    var _propTypes = _interopRequireDefault(require_prop_types());
    var bpfrpt_proptype_AnimationTimeoutId = false ? null : {
      id: _propTypes["default"].number.isRequired
    };
    exports.bpfrpt_proptype_AnimationTimeoutId = bpfrpt_proptype_AnimationTimeoutId;
    var cancelAnimationTimeout = function cancelAnimationTimeout2(frame) {
      return (0, _animationFrame.caf)(frame.id);
    };
    exports.cancelAnimationTimeout = cancelAnimationTimeout;
    var requestAnimationTimeout = function requestAnimationTimeout2(callback, delay) {
      var start2;
      Promise.resolve().then(function() {
        start2 = Date.now();
      });
      var timeout = function timeout2() {
        if (Date.now() - start2 >= delay) {
          callback.call();
        } else {
          frame.id = (0, _animationFrame.raf)(timeout2);
        }
      };
      var frame = {
        id: (0, _animationFrame.raf)(timeout)
      };
      return frame;
    };
    exports.requestAnimationTimeout = requestAnimationTimeout;
  });

  // ../../node_modules/react-virtualized/dist/commonjs/Grid/Grid.js
  var require_Grid = __commonJS((exports) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _interopRequireWildcard = require_interopRequireWildcard();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = exports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = void 0;
    var _extends22 = _interopRequireDefault(require_extends());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf2 = _interopRequireDefault(require_getPrototypeOf());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty2());
    var React52 = _interopRequireWildcard(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _calculateSizeAndPositionDataAndUpdateScrollOffset = _interopRequireDefault(require_calculateSizeAndPositionDataAndUpdateScrollOffset());
    var _ScalingCellSizeAndPositionManager = _interopRequireDefault(require_ScalingCellSizeAndPositionManager());
    var _createCallbackMemoizer = _interopRequireDefault(require_createCallbackMemoizer());
    var _defaultOverscanIndicesGetter = _interopRequireWildcard(require_defaultOverscanIndicesGetter());
    var _updateScrollIndexHelper = _interopRequireDefault(require_updateScrollIndexHelper());
    var _defaultCellRangeRenderer = _interopRequireDefault(require_defaultCellRangeRenderer());
    var _scrollbarSize = _interopRequireDefault(require_scrollbarSize());
    var _reactLifecyclesCompat = require_react_lifecycles_compat_cjs();
    var _requestAnimationTimeout = require_requestAnimationTimeout();
    var _types = require_types();
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _class;
    var _temp;
    function ownKeys(object2, enumerableOnly) {
      var keys = Object.keys(object2);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object2);
        if (enumerableOnly)
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
          });
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i9 = 1; i9 < arguments.length; i9++) {
        var source = arguments[i9] != null ? arguments[i9] : {};
        if (i9 % 2) {
          ownKeys(source, true).forEach(function(key) {
            (0, _defineProperty2["default"])(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(source).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;
    exports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = DEFAULT_SCROLLING_RESET_TIME_INTERVAL;
    var SCROLL_POSITION_CHANGE_REASONS = {
      OBSERVED: "observed",
      REQUESTED: "requested"
    };
    var renderNull = function renderNull2() {
      return null;
    };
    var Grid = (_temp = _class = /* @__PURE__ */ function(_React$PureComponent) {
      (0, _inherits2["default"])(Grid2, _React$PureComponent);
      function Grid2(props) {
        var _this2;
        (0, _classCallCheck2["default"])(this, Grid2);
        _this2 = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(Grid2).call(this, props));
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_onGridRenderedMemoizer", (0, _createCallbackMemoizer["default"])());
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_onScrollMemoizer", (0, _createCallbackMemoizer["default"])(false));
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_deferredInvalidateColumnIndex", null);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_deferredInvalidateRowIndex", null);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_recomputeScrollLeftFlag", false);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_recomputeScrollTopFlag", false);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_horizontalScrollBarSize", 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_verticalScrollBarSize", 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_scrollbarPresenceChanged", false);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_scrollingContainer", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_childrenToDisplay", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_columnStartIndex", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_columnStopIndex", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_rowStartIndex", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_rowStopIndex", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_renderedColumnStartIndex", 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_renderedColumnStopIndex", 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_renderedRowStartIndex", 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_renderedRowStopIndex", 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_initialScrollTop", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_initialScrollLeft", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_disablePointerEventsTimeoutId", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_styleCache", {});
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_cellCache", {});
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_debounceScrollEndedCallback", function() {
          _this2._disablePointerEventsTimeoutId = null;
          _this2.setState({
            isScrolling: false,
            needToResetStyleCache: false
          });
        });
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_invokeOnGridRenderedHelper", function() {
          var onSectionRendered = _this2.props.onSectionRendered;
          _this2._onGridRenderedMemoizer({
            callback: onSectionRendered,
            indices: {
              columnOverscanStartIndex: _this2._columnStartIndex,
              columnOverscanStopIndex: _this2._columnStopIndex,
              columnStartIndex: _this2._renderedColumnStartIndex,
              columnStopIndex: _this2._renderedColumnStopIndex,
              rowOverscanStartIndex: _this2._rowStartIndex,
              rowOverscanStopIndex: _this2._rowStopIndex,
              rowStartIndex: _this2._renderedRowStartIndex,
              rowStopIndex: _this2._renderedRowStopIndex
            }
          });
        });
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_setScrollingContainerRef", function(ref) {
          _this2._scrollingContainer = ref;
        });
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_onScroll", function(event) {
          if (event.target === _this2._scrollingContainer) {
            _this2.handleScrollEvent(event.target);
          }
        });
        var columnSizeAndPositionManager = new _ScalingCellSizeAndPositionManager["default"]({
          cellCount: props.columnCount,
          cellSizeGetter: function cellSizeGetter(params) {
            return Grid2._wrapSizeGetter(props.columnWidth)(params);
          },
          estimatedCellSize: Grid2._getEstimatedColumnSize(props)
        });
        var rowSizeAndPositionManager = new _ScalingCellSizeAndPositionManager["default"]({
          cellCount: props.rowCount,
          cellSizeGetter: function cellSizeGetter(params) {
            return Grid2._wrapSizeGetter(props.rowHeight)(params);
          },
          estimatedCellSize: Grid2._getEstimatedRowSize(props)
        });
        _this2.state = {
          instanceProps: {
            columnSizeAndPositionManager,
            rowSizeAndPositionManager,
            prevColumnWidth: props.columnWidth,
            prevRowHeight: props.rowHeight,
            prevColumnCount: props.columnCount,
            prevRowCount: props.rowCount,
            prevIsScrolling: props.isScrolling === true,
            prevScrollToColumn: props.scrollToColumn,
            prevScrollToRow: props.scrollToRow,
            scrollbarSize: 0,
            scrollbarSizeMeasured: false
          },
          isScrolling: false,
          scrollDirectionHorizontal: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,
          scrollDirectionVertical: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,
          scrollLeft: 0,
          scrollTop: 0,
          scrollPositionChangeReason: null,
          needToResetStyleCache: false
        };
        if (props.scrollToRow > 0) {
          _this2._initialScrollTop = _this2._getCalculatedScrollTop(props, _this2.state);
        }
        if (props.scrollToColumn > 0) {
          _this2._initialScrollLeft = _this2._getCalculatedScrollLeft(props, _this2.state);
        }
        return _this2;
      }
      (0, _createClass2["default"])(Grid2, [{
        key: "getOffsetForCell",
        value: function getOffsetForCell() {
          var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref$alignment = _ref.alignment, alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment, _ref$columnIndex = _ref.columnIndex, columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex, _ref$rowIndex = _ref.rowIndex, rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;
          var offsetProps = _objectSpread({}, this.props, {
            scrollToAlignment: alignment,
            scrollToColumn: columnIndex,
            scrollToRow: rowIndex
          });
          return {
            scrollLeft: this._getCalculatedScrollLeft(offsetProps),
            scrollTop: this._getCalculatedScrollTop(offsetProps)
          };
        }
      }, {
        key: "getTotalRowsHeight",
        value: function getTotalRowsHeight() {
          return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();
        }
      }, {
        key: "getTotalColumnsWidth",
        value: function getTotalColumnsWidth() {
          return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();
        }
      }, {
        key: "handleScrollEvent",
        value: function handleScrollEvent(_ref2) {
          var _ref2$scrollLeft = _ref2.scrollLeft, scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft, _ref2$scrollTop = _ref2.scrollTop, scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;
          if (scrollTopParam < 0) {
            return;
          }
          this._debounceScrollEnded();
          var _this$props = this.props, autoHeight = _this$props.autoHeight, autoWidth = _this$props.autoWidth, height = _this$props.height, width = _this$props.width;
          var instanceProps = this.state.instanceProps;
          var scrollbarSize = instanceProps.scrollbarSize;
          var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();
          var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();
          var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);
          var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam);
          if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {
            var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;
            var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;
            var newState = {
              isScrolling: true,
              scrollDirectionHorizontal,
              scrollDirectionVertical,
              scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED
            };
            if (!autoHeight) {
              newState.scrollTop = scrollTop;
            }
            if (!autoWidth) {
              newState.scrollLeft = scrollLeft;
            }
            newState.needToResetStyleCache = false;
            this.setState(newState);
          }
          this._invokeOnScrollMemoizer({
            scrollLeft,
            scrollTop,
            totalColumnsWidth,
            totalRowsHeight
          });
        }
      }, {
        key: "invalidateCellSizeAfterRender",
        value: function invalidateCellSizeAfterRender(_ref3) {
          var columnIndex = _ref3.columnIndex, rowIndex = _ref3.rowIndex;
          this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === "number" ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;
          this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === "number" ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;
        }
      }, {
        key: "measureAllCells",
        value: function measureAllCells() {
          var _this$props2 = this.props, columnCount = _this$props2.columnCount, rowCount = _this$props2.rowCount;
          var instanceProps = this.state.instanceProps;
          instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);
          instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);
        }
      }, {
        key: "recomputeGridSize",
        value: function recomputeGridSize() {
          var _ref4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref4$columnIndex = _ref4.columnIndex, columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex, _ref4$rowIndex = _ref4.rowIndex, rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;
          var _this$props3 = this.props, scrollToColumn = _this$props3.scrollToColumn, scrollToRow = _this$props3.scrollToRow;
          var instanceProps = this.state.instanceProps;
          instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);
          instanceProps.rowSizeAndPositionManager.resetCell(rowIndex);
          this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);
          this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow);
          this._styleCache = {};
          this._cellCache = {};
          this.forceUpdate();
        }
      }, {
        key: "scrollToCell",
        value: function scrollToCell(_ref5) {
          var columnIndex = _ref5.columnIndex, rowIndex = _ref5.rowIndex;
          var columnCount = this.props.columnCount;
          var props = this.props;
          if (columnCount > 1 && columnIndex !== void 0) {
            this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {
              scrollToColumn: columnIndex
            }));
          }
          if (rowIndex !== void 0) {
            this._updateScrollTopForScrollToRow(_objectSpread({}, props, {
              scrollToRow: rowIndex
            }));
          }
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          var _this$props4 = this.props, getScrollbarSize = _this$props4.getScrollbarSize, height = _this$props4.height, scrollLeft = _this$props4.scrollLeft, scrollToColumn = _this$props4.scrollToColumn, scrollTop = _this$props4.scrollTop, scrollToRow = _this$props4.scrollToRow, width = _this$props4.width;
          var instanceProps = this.state.instanceProps;
          this._initialScrollTop = 0;
          this._initialScrollLeft = 0;
          this._handleInvalidatedGridSize();
          if (!instanceProps.scrollbarSizeMeasured) {
            this.setState(function(prevState) {
              var stateUpdate2 = _objectSpread({}, prevState, {
                needToResetStyleCache: false
              });
              stateUpdate2.instanceProps.scrollbarSize = getScrollbarSize();
              stateUpdate2.instanceProps.scrollbarSizeMeasured = true;
              return stateUpdate2;
            });
          }
          if (typeof scrollLeft === "number" && scrollLeft >= 0 || typeof scrollTop === "number" && scrollTop >= 0) {
            var stateUpdate = Grid2._getScrollToPositionStateUpdate({
              prevState: this.state,
              scrollLeft,
              scrollTop
            });
            if (stateUpdate) {
              stateUpdate.needToResetStyleCache = false;
              this.setState(stateUpdate);
            }
          }
          if (this._scrollingContainer) {
            if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {
              this._scrollingContainer.scrollLeft = this.state.scrollLeft;
            }
            if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {
              this._scrollingContainer.scrollTop = this.state.scrollTop;
            }
          }
          var sizeIsBiggerThanZero = height > 0 && width > 0;
          if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {
            this._updateScrollLeftForScrollToColumn();
          }
          if (scrollToRow >= 0 && sizeIsBiggerThanZero) {
            this._updateScrollTopForScrollToRow();
          }
          this._invokeOnGridRenderedHelper();
          this._invokeOnScrollMemoizer({
            scrollLeft: scrollLeft || 0,
            scrollTop: scrollTop || 0,
            totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),
            totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()
          });
          this._maybeCallOnScrollbarPresenceChange();
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps, prevState) {
          var _this2 = this;
          var _this$props5 = this.props, autoHeight = _this$props5.autoHeight, autoWidth = _this$props5.autoWidth, columnCount = _this$props5.columnCount, height = _this$props5.height, rowCount = _this$props5.rowCount, scrollToAlignment = _this$props5.scrollToAlignment, scrollToColumn = _this$props5.scrollToColumn, scrollToRow = _this$props5.scrollToRow, width = _this$props5.width;
          var _this$state = this.state, scrollLeft = _this$state.scrollLeft, scrollPositionChangeReason = _this$state.scrollPositionChangeReason, scrollTop = _this$state.scrollTop, instanceProps = _this$state.instanceProps;
          this._handleInvalidatedGridSize();
          var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0;
          if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {
            if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {
              this._scrollingContainer.scrollLeft = scrollLeft;
            }
            if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {
              this._scrollingContainer.scrollTop = scrollTop;
            }
          }
          var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0;
          if (this._recomputeScrollLeftFlag) {
            this._recomputeScrollLeftFlag = false;
            this._updateScrollLeftForScrollToColumn(this.props);
          } else {
            (0, _updateScrollIndexHelper["default"])({
              cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,
              previousCellsCount: prevProps.columnCount,
              previousCellSize: prevProps.columnWidth,
              previousScrollToAlignment: prevProps.scrollToAlignment,
              previousScrollToIndex: prevProps.scrollToColumn,
              previousSize: prevProps.width,
              scrollOffset: scrollLeft,
              scrollToAlignment,
              scrollToIndex: scrollToColumn,
              size: width,
              sizeJustIncreasedFromZero,
              updateScrollIndexCallback: function updateScrollIndexCallback() {
                return _this2._updateScrollLeftForScrollToColumn(_this2.props);
              }
            });
          }
          if (this._recomputeScrollTopFlag) {
            this._recomputeScrollTopFlag = false;
            this._updateScrollTopForScrollToRow(this.props);
          } else {
            (0, _updateScrollIndexHelper["default"])({
              cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,
              previousCellsCount: prevProps.rowCount,
              previousCellSize: prevProps.rowHeight,
              previousScrollToAlignment: prevProps.scrollToAlignment,
              previousScrollToIndex: prevProps.scrollToRow,
              previousSize: prevProps.height,
              scrollOffset: scrollTop,
              scrollToAlignment,
              scrollToIndex: scrollToRow,
              size: height,
              sizeJustIncreasedFromZero,
              updateScrollIndexCallback: function updateScrollIndexCallback() {
                return _this2._updateScrollTopForScrollToRow(_this2.props);
              }
            });
          }
          this._invokeOnGridRenderedHelper();
          if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {
            var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();
            var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();
            this._invokeOnScrollMemoizer({
              scrollLeft,
              scrollTop,
              totalColumnsWidth,
              totalRowsHeight
            });
          }
          this._maybeCallOnScrollbarPresenceChange();
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this._disablePointerEventsTimeoutId) {
            (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props6 = this.props, autoContainerWidth = _this$props6.autoContainerWidth, autoHeight = _this$props6.autoHeight, autoWidth = _this$props6.autoWidth, className = _this$props6.className, containerProps = _this$props6.containerProps, containerRole = _this$props6.containerRole, containerStyle = _this$props6.containerStyle, height = _this$props6.height, id = _this$props6.id, noContentRenderer = _this$props6.noContentRenderer, role = _this$props6.role, style = _this$props6.style, tabIndex = _this$props6.tabIndex, width = _this$props6.width;
          var _this$state2 = this.state, instanceProps = _this$state2.instanceProps, needToResetStyleCache = _this$state2.needToResetStyleCache;
          var isScrolling = this._isScrolling();
          var gridStyle = {
            boxSizing: "border-box",
            direction: "ltr",
            height: autoHeight ? "auto" : height,
            position: "relative",
            width: autoWidth ? "auto" : width,
            WebkitOverflowScrolling: "touch",
            willChange: "transform"
          };
          if (needToResetStyleCache) {
            this._styleCache = {};
          }
          if (!this.state.isScrolling) {
            this._resetStyleCache();
          }
          this._calculateChildrenToRender(this.props, this.state);
          var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();
          var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();
          var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;
          var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;
          if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {
            this._horizontalScrollBarSize = horizontalScrollBarSize;
            this._verticalScrollBarSize = verticalScrollBarSize;
            this._scrollbarPresenceChanged = true;
          }
          gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? "hidden" : "auto";
          gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? "hidden" : "auto";
          var childrenToDisplay = this._childrenToDisplay;
          var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;
          return React52.createElement("div", (0, _extends22["default"])({
            ref: this._setScrollingContainerRef
          }, containerProps, {
            "aria-label": this.props["aria-label"],
            "aria-readonly": this.props["aria-readonly"],
            className: (0, _clsx["default"])("ReactVirtualized__Grid", className),
            id,
            onScroll: this._onScroll,
            role,
            style: _objectSpread({}, gridStyle, {}, style),
            tabIndex
          }), childrenToDisplay.length > 0 && React52.createElement("div", {
            className: "ReactVirtualized__Grid__innerScrollContainer",
            role: containerRole,
            style: _objectSpread({
              width: autoContainerWidth ? "auto" : totalColumnsWidth,
              height: totalRowsHeight,
              maxWidth: totalColumnsWidth,
              maxHeight: totalRowsHeight,
              overflow: "hidden",
              pointerEvents: isScrolling ? "none" : "",
              position: "relative"
            }, containerStyle)
          }, childrenToDisplay), showNoContentRenderer && noContentRenderer());
        }
      }, {
        key: "_calculateChildrenToRender",
        value: function _calculateChildrenToRender() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props;
          var state = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.state;
          var cellRenderer = props.cellRenderer, cellRangeRenderer = props.cellRangeRenderer, columnCount = props.columnCount, deferredMeasurementCache = props.deferredMeasurementCache, height = props.height, overscanColumnCount = props.overscanColumnCount, overscanIndicesGetter = props.overscanIndicesGetter, overscanRowCount = props.overscanRowCount, rowCount = props.rowCount, width = props.width, isScrollingOptOut = props.isScrollingOptOut;
          var scrollDirectionHorizontal = state.scrollDirectionHorizontal, scrollDirectionVertical = state.scrollDirectionVertical, instanceProps = state.instanceProps;
          var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;
          var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;
          var isScrolling = this._isScrolling(props, state);
          this._childrenToDisplay = [];
          if (height > 0 && width > 0) {
            var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({
              containerSize: width,
              offset: scrollLeft
            });
            var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({
              containerSize: height,
              offset: scrollTop
            });
            var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({
              containerSize: width,
              offset: scrollLeft
            });
            var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({
              containerSize: height,
              offset: scrollTop
            });
            this._renderedColumnStartIndex = visibleColumnIndices.start;
            this._renderedColumnStopIndex = visibleColumnIndices.stop;
            this._renderedRowStartIndex = visibleRowIndices.start;
            this._renderedRowStopIndex = visibleRowIndices.stop;
            var overscanColumnIndices = overscanIndicesGetter({
              direction: "horizontal",
              cellCount: columnCount,
              overscanCellsCount: overscanColumnCount,
              scrollDirection: scrollDirectionHorizontal,
              startIndex: typeof visibleColumnIndices.start === "number" ? visibleColumnIndices.start : 0,
              stopIndex: typeof visibleColumnIndices.stop === "number" ? visibleColumnIndices.stop : -1
            });
            var overscanRowIndices = overscanIndicesGetter({
              direction: "vertical",
              cellCount: rowCount,
              overscanCellsCount: overscanRowCount,
              scrollDirection: scrollDirectionVertical,
              startIndex: typeof visibleRowIndices.start === "number" ? visibleRowIndices.start : 0,
              stopIndex: typeof visibleRowIndices.stop === "number" ? visibleRowIndices.stop : -1
            });
            var columnStartIndex = overscanColumnIndices.overscanStartIndex;
            var columnStopIndex = overscanColumnIndices.overscanStopIndex;
            var rowStartIndex = overscanRowIndices.overscanStartIndex;
            var rowStopIndex = overscanRowIndices.overscanStopIndex;
            if (deferredMeasurementCache) {
              if (!deferredMeasurementCache.hasFixedHeight()) {
                for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {
                  if (!deferredMeasurementCache.has(rowIndex, 0)) {
                    columnStartIndex = 0;
                    columnStopIndex = columnCount - 1;
                    break;
                  }
                }
              }
              if (!deferredMeasurementCache.hasFixedWidth()) {
                for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {
                  if (!deferredMeasurementCache.has(0, columnIndex)) {
                    rowStartIndex = 0;
                    rowStopIndex = rowCount - 1;
                    break;
                  }
                }
              }
            }
            this._childrenToDisplay = cellRangeRenderer({
              cellCache: this._cellCache,
              cellRenderer,
              columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,
              columnStartIndex,
              columnStopIndex,
              deferredMeasurementCache,
              horizontalOffsetAdjustment,
              isScrolling,
              isScrollingOptOut,
              parent: this,
              rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,
              rowStartIndex,
              rowStopIndex,
              scrollLeft,
              scrollTop,
              styleCache: this._styleCache,
              verticalOffsetAdjustment,
              visibleColumnIndices,
              visibleRowIndices
            });
            this._columnStartIndex = columnStartIndex;
            this._columnStopIndex = columnStopIndex;
            this._rowStartIndex = rowStartIndex;
            this._rowStopIndex = rowStopIndex;
          }
        }
      }, {
        key: "_debounceScrollEnded",
        value: function _debounceScrollEnded() {
          var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;
          if (this._disablePointerEventsTimeoutId) {
            (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);
          }
          this._disablePointerEventsTimeoutId = (0, _requestAnimationTimeout.requestAnimationTimeout)(this._debounceScrollEndedCallback, scrollingResetTimeInterval);
        }
      }, {
        key: "_handleInvalidatedGridSize",
        value: function _handleInvalidatedGridSize() {
          if (typeof this._deferredInvalidateColumnIndex === "number" && typeof this._deferredInvalidateRowIndex === "number") {
            var columnIndex = this._deferredInvalidateColumnIndex;
            var rowIndex = this._deferredInvalidateRowIndex;
            this._deferredInvalidateColumnIndex = null;
            this._deferredInvalidateRowIndex = null;
            this.recomputeGridSize({
              columnIndex,
              rowIndex
            });
          }
        }
      }, {
        key: "_invokeOnScrollMemoizer",
        value: function _invokeOnScrollMemoizer(_ref6) {
          var _this3 = this;
          var scrollLeft = _ref6.scrollLeft, scrollTop = _ref6.scrollTop, totalColumnsWidth = _ref6.totalColumnsWidth, totalRowsHeight = _ref6.totalRowsHeight;
          this._onScrollMemoizer({
            callback: function callback(_ref7) {
              var scrollLeft2 = _ref7.scrollLeft, scrollTop2 = _ref7.scrollTop;
              var _this3$props = _this3.props, height = _this3$props.height, onScroll = _this3$props.onScroll, width = _this3$props.width;
              onScroll({
                clientHeight: height,
                clientWidth: width,
                scrollHeight: totalRowsHeight,
                scrollLeft: scrollLeft2,
                scrollTop: scrollTop2,
                scrollWidth: totalColumnsWidth
              });
            },
            indices: {
              scrollLeft,
              scrollTop
            }
          });
        }
      }, {
        key: "_isScrolling",
        value: function _isScrolling() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props;
          var state = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.state;
          return Object.hasOwnProperty.call(props, "isScrolling") ? Boolean(props.isScrolling) : Boolean(state.isScrolling);
        }
      }, {
        key: "_maybeCallOnScrollbarPresenceChange",
        value: function _maybeCallOnScrollbarPresenceChange() {
          if (this._scrollbarPresenceChanged) {
            var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;
            this._scrollbarPresenceChanged = false;
            onScrollbarPresenceChange({
              horizontal: this._horizontalScrollBarSize > 0,
              size: this.state.instanceProps.scrollbarSize,
              vertical: this._verticalScrollBarSize > 0
            });
          }
        }
      }, {
        key: "scrollToPosition",
        value: function scrollToPosition(_ref8) {
          var scrollLeft = _ref8.scrollLeft, scrollTop = _ref8.scrollTop;
          var stateUpdate = Grid2._getScrollToPositionStateUpdate({
            prevState: this.state,
            scrollLeft,
            scrollTop
          });
          if (stateUpdate) {
            stateUpdate.needToResetStyleCache = false;
            this.setState(stateUpdate);
          }
        }
      }, {
        key: "_getCalculatedScrollLeft",
        value: function _getCalculatedScrollLeft() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props;
          var state = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.state;
          return Grid2._getCalculatedScrollLeft(props, state);
        }
      }, {
        key: "_updateScrollLeftForScrollToColumn",
        value: function _updateScrollLeftForScrollToColumn() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props;
          var state = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.state;
          var stateUpdate = Grid2._getScrollLeftForScrollToColumnStateUpdate(props, state);
          if (stateUpdate) {
            stateUpdate.needToResetStyleCache = false;
            this.setState(stateUpdate);
          }
        }
      }, {
        key: "_getCalculatedScrollTop",
        value: function _getCalculatedScrollTop() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props;
          var state = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.state;
          return Grid2._getCalculatedScrollTop(props, state);
        }
      }, {
        key: "_resetStyleCache",
        value: function _resetStyleCache() {
          var styleCache = this._styleCache;
          var cellCache = this._cellCache;
          var isScrollingOptOut = this.props.isScrollingOptOut;
          this._cellCache = {};
          this._styleCache = {};
          for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {
            for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {
              var key = "".concat(rowIndex, "-").concat(columnIndex);
              this._styleCache[key] = styleCache[key];
              if (isScrollingOptOut) {
                this._cellCache[key] = cellCache[key];
              }
            }
          }
        }
      }, {
        key: "_updateScrollTopForScrollToRow",
        value: function _updateScrollTopForScrollToRow() {
          var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.props;
          var state = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.state;
          var stateUpdate = Grid2._getScrollTopForScrollToRowStateUpdate(props, state);
          if (stateUpdate) {
            stateUpdate.needToResetStyleCache = false;
            this.setState(stateUpdate);
          }
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          var newState = {};
          if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {
            newState.scrollLeft = 0;
            newState.scrollTop = 0;
          } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {
            Object.assign(newState, Grid2._getScrollToPositionStateUpdate({
              prevState,
              scrollLeft: nextProps.scrollLeft,
              scrollTop: nextProps.scrollTop
            }));
          }
          var instanceProps = prevState.instanceProps;
          newState.needToResetStyleCache = false;
          if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {
            newState.needToResetStyleCache = true;
          }
          instanceProps.columnSizeAndPositionManager.configure({
            cellCount: nextProps.columnCount,
            estimatedCellSize: Grid2._getEstimatedColumnSize(nextProps),
            cellSizeGetter: Grid2._wrapSizeGetter(nextProps.columnWidth)
          });
          instanceProps.rowSizeAndPositionManager.configure({
            cellCount: nextProps.rowCount,
            estimatedCellSize: Grid2._getEstimatedRowSize(nextProps),
            cellSizeGetter: Grid2._wrapSizeGetter(nextProps.rowHeight)
          });
          if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {
            instanceProps.prevColumnCount = 0;
            instanceProps.prevRowCount = 0;
          }
          if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {
            Object.assign(newState, {
              isScrolling: false
            });
          }
          var maybeStateA;
          var maybeStateB;
          (0, _calculateSizeAndPositionDataAndUpdateScrollOffset["default"])({
            cellCount: instanceProps.prevColumnCount,
            cellSize: typeof instanceProps.prevColumnWidth === "number" ? instanceProps.prevColumnWidth : null,
            computeMetadataCallback: function computeMetadataCallback() {
              return instanceProps.columnSizeAndPositionManager.resetCell(0);
            },
            computeMetadataCallbackProps: nextProps,
            nextCellsCount: nextProps.columnCount,
            nextCellSize: typeof nextProps.columnWidth === "number" ? nextProps.columnWidth : null,
            nextScrollToIndex: nextProps.scrollToColumn,
            scrollToIndex: instanceProps.prevScrollToColumn,
            updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {
              maybeStateA = Grid2._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);
            }
          });
          (0, _calculateSizeAndPositionDataAndUpdateScrollOffset["default"])({
            cellCount: instanceProps.prevRowCount,
            cellSize: typeof instanceProps.prevRowHeight === "number" ? instanceProps.prevRowHeight : null,
            computeMetadataCallback: function computeMetadataCallback() {
              return instanceProps.rowSizeAndPositionManager.resetCell(0);
            },
            computeMetadataCallbackProps: nextProps,
            nextCellsCount: nextProps.rowCount,
            nextCellSize: typeof nextProps.rowHeight === "number" ? nextProps.rowHeight : null,
            nextScrollToIndex: nextProps.scrollToRow,
            scrollToIndex: instanceProps.prevScrollToRow,
            updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {
              maybeStateB = Grid2._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);
            }
          });
          instanceProps.prevColumnCount = nextProps.columnCount;
          instanceProps.prevColumnWidth = nextProps.columnWidth;
          instanceProps.prevIsScrolling = nextProps.isScrolling === true;
          instanceProps.prevRowCount = nextProps.rowCount;
          instanceProps.prevRowHeight = nextProps.rowHeight;
          instanceProps.prevScrollToColumn = nextProps.scrollToColumn;
          instanceProps.prevScrollToRow = nextProps.scrollToRow;
          instanceProps.scrollbarSize = nextProps.getScrollbarSize();
          if (instanceProps.scrollbarSize === void 0) {
            instanceProps.scrollbarSizeMeasured = false;
            instanceProps.scrollbarSize = 0;
          } else {
            instanceProps.scrollbarSizeMeasured = true;
          }
          newState.instanceProps = instanceProps;
          return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);
        }
      }, {
        key: "_getEstimatedColumnSize",
        value: function _getEstimatedColumnSize(props) {
          return typeof props.columnWidth === "number" ? props.columnWidth : props.estimatedColumnSize;
        }
      }, {
        key: "_getEstimatedRowSize",
        value: function _getEstimatedRowSize(props) {
          return typeof props.rowHeight === "number" ? props.rowHeight : props.estimatedRowSize;
        }
      }, {
        key: "_getScrollToPositionStateUpdate",
        value: function _getScrollToPositionStateUpdate(_ref9) {
          var prevState = _ref9.prevState, scrollLeft = _ref9.scrollLeft, scrollTop = _ref9.scrollTop;
          var newState = {
            scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED
          };
          if (typeof scrollLeft === "number" && scrollLeft >= 0) {
            newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;
            newState.scrollLeft = scrollLeft;
          }
          if (typeof scrollTop === "number" && scrollTop >= 0) {
            newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;
            newState.scrollTop = scrollTop;
          }
          if (typeof scrollLeft === "number" && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === "number" && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {
            return newState;
          }
          return {};
        }
      }, {
        key: "_wrapSizeGetter",
        value: function _wrapSizeGetter(value) {
          return typeof value === "function" ? value : function() {
            return value;
          };
        }
      }, {
        key: "_getCalculatedScrollLeft",
        value: function _getCalculatedScrollLeft(nextProps, prevState) {
          var columnCount = nextProps.columnCount, height = nextProps.height, scrollToAlignment = nextProps.scrollToAlignment, scrollToColumn = nextProps.scrollToColumn, width = nextProps.width;
          var scrollLeft = prevState.scrollLeft, instanceProps = prevState.instanceProps;
          if (columnCount > 0) {
            var finalColumn = columnCount - 1;
            var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);
            var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();
            var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;
            return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({
              align: scrollToAlignment,
              containerSize: width - scrollBarSize,
              currentOffset: scrollLeft,
              targetIndex
            });
          }
          return 0;
        }
      }, {
        key: "_getScrollLeftForScrollToColumnStateUpdate",
        value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {
          var scrollLeft = prevState.scrollLeft;
          var calculatedScrollLeft = Grid2._getCalculatedScrollLeft(nextProps, prevState);
          if (typeof calculatedScrollLeft === "number" && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {
            return Grid2._getScrollToPositionStateUpdate({
              prevState,
              scrollLeft: calculatedScrollLeft,
              scrollTop: -1
            });
          }
          return {};
        }
      }, {
        key: "_getCalculatedScrollTop",
        value: function _getCalculatedScrollTop(nextProps, prevState) {
          var height = nextProps.height, rowCount = nextProps.rowCount, scrollToAlignment = nextProps.scrollToAlignment, scrollToRow = nextProps.scrollToRow, width = nextProps.width;
          var scrollTop = prevState.scrollTop, instanceProps = prevState.instanceProps;
          if (rowCount > 0) {
            var finalRow = rowCount - 1;
            var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);
            var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();
            var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;
            return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({
              align: scrollToAlignment,
              containerSize: height - scrollBarSize,
              currentOffset: scrollTop,
              targetIndex
            });
          }
          return 0;
        }
      }, {
        key: "_getScrollTopForScrollToRowStateUpdate",
        value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {
          var scrollTop = prevState.scrollTop;
          var calculatedScrollTop = Grid2._getCalculatedScrollTop(nextProps, prevState);
          if (typeof calculatedScrollTop === "number" && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {
            return Grid2._getScrollToPositionStateUpdate({
              prevState,
              scrollLeft: -1,
              scrollTop: calculatedScrollTop
            });
          }
          return {};
        }
      }]);
      return Grid2;
    }(React52.PureComponent), (0, _defineProperty2["default"])(_class, "propTypes", false ? null : {
      "aria-label": _propTypes["default"].string.isRequired,
      "aria-readonly": _propTypes["default"].bool,
      autoContainerWidth: _propTypes["default"].bool.isRequired,
      autoHeight: _propTypes["default"].bool.isRequired,
      autoWidth: _propTypes["default"].bool.isRequired,
      cellRenderer: function cellRenderer() {
        return (typeof _types.bpfrpt_proptype_CellRenderer === "function" ? _types.bpfrpt_proptype_CellRenderer.isRequired ? _types.bpfrpt_proptype_CellRenderer.isRequired : _types.bpfrpt_proptype_CellRenderer : _propTypes["default"].shape(_types.bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);
      },
      cellRangeRenderer: function cellRangeRenderer() {
        return (typeof _types.bpfrpt_proptype_CellRangeRenderer === "function" ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired : _types.bpfrpt_proptype_CellRangeRenderer : _propTypes["default"].shape(_types.bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);
      },
      className: _propTypes["default"].string,
      columnCount: _propTypes["default"].number.isRequired,
      columnWidth: function columnWidth() {
        return (typeof _types.bpfrpt_proptype_CellSize === "function" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes["default"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);
      },
      containerProps: _propTypes["default"].object,
      containerRole: _propTypes["default"].string.isRequired,
      containerStyle: _propTypes["default"].object.isRequired,
      deferredMeasurementCache: _propTypes["default"].object,
      estimatedColumnSize: _propTypes["default"].number.isRequired,
      estimatedRowSize: _propTypes["default"].number.isRequired,
      getScrollbarSize: _propTypes["default"].func.isRequired,
      height: _propTypes["default"].number.isRequired,
      id: _propTypes["default"].string,
      isScrolling: _propTypes["default"].bool,
      isScrollingOptOut: _propTypes["default"].bool.isRequired,
      noContentRenderer: function noContentRenderer() {
        return (typeof _types.bpfrpt_proptype_NoContentRenderer === "function" ? _types.bpfrpt_proptype_NoContentRenderer.isRequired ? _types.bpfrpt_proptype_NoContentRenderer.isRequired : _types.bpfrpt_proptype_NoContentRenderer : _propTypes["default"].shape(_types.bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);
      },
      onScroll: _propTypes["default"].func.isRequired,
      onScrollbarPresenceChange: _propTypes["default"].func.isRequired,
      onSectionRendered: _propTypes["default"].func.isRequired,
      overscanColumnCount: _propTypes["default"].number.isRequired,
      overscanIndicesGetter: function overscanIndicesGetter() {
        return (typeof _types.bpfrpt_proptype_OverscanIndicesGetter === "function" ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired : _types.bpfrpt_proptype_OverscanIndicesGetter : _propTypes["default"].shape(_types.bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);
      },
      overscanRowCount: _propTypes["default"].number.isRequired,
      role: _propTypes["default"].string.isRequired,
      rowHeight: function rowHeight() {
        return (typeof _types.bpfrpt_proptype_CellSize === "function" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes["default"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);
      },
      rowCount: _propTypes["default"].number.isRequired,
      scrollingResetTimeInterval: _propTypes["default"].number.isRequired,
      scrollLeft: _propTypes["default"].number,
      scrollToAlignment: function scrollToAlignment() {
        return (typeof _types.bpfrpt_proptype_Alignment === "function" ? _types.bpfrpt_proptype_Alignment.isRequired ? _types.bpfrpt_proptype_Alignment.isRequired : _types.bpfrpt_proptype_Alignment : _propTypes["default"].shape(_types.bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);
      },
      scrollToColumn: _propTypes["default"].number.isRequired,
      scrollTop: _propTypes["default"].number,
      scrollToRow: _propTypes["default"].number.isRequired,
      style: _propTypes["default"].object.isRequired,
      tabIndex: _propTypes["default"].number,
      width: _propTypes["default"].number.isRequired
    }), _temp);
    (0, _defineProperty2["default"])(Grid, "defaultProps", {
      "aria-label": "grid",
      "aria-readonly": true,
      autoContainerWidth: false,
      autoHeight: false,
      autoWidth: false,
      cellRangeRenderer: _defaultCellRangeRenderer["default"],
      containerRole: "rowgroup",
      containerStyle: {},
      estimatedColumnSize: 100,
      estimatedRowSize: 30,
      getScrollbarSize: _scrollbarSize["default"],
      noContentRenderer: renderNull,
      onScroll: function onScroll() {
      },
      onScrollbarPresenceChange: function onScrollbarPresenceChange() {
      },
      onSectionRendered: function onSectionRendered() {
      },
      overscanColumnCount: 0,
      overscanIndicesGetter: _defaultOverscanIndicesGetter["default"],
      overscanRowCount: 10,
      role: "grid",
      scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,
      scrollToAlignment: "auto",
      scrollToColumn: -1,
      scrollToRow: -1,
      style: {},
      tabIndex: 0,
      isScrollingOptOut: false
    });
    (0, _reactLifecyclesCompat.polyfill)(Grid);
    var _default = Grid;
    exports["default"] = _default;
  });

  // ../../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js
  var require_accessibilityOverscanIndicesGetter = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = defaultOverscanIndicesGetter;
    exports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;
    var _types = require_types();
    var SCROLL_DIRECTION_BACKWARD = -1;
    exports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;
    var SCROLL_DIRECTION_FORWARD = 1;
    exports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;
    var SCROLL_DIRECTION_HORIZONTAL = "horizontal";
    exports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;
    var SCROLL_DIRECTION_VERTICAL = "vertical";
    exports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;
    function defaultOverscanIndicesGetter(_ref) {
      var cellCount = _ref.cellCount, overscanCellsCount = _ref.overscanCellsCount, scrollDirection = _ref.scrollDirection, startIndex = _ref.startIndex, stopIndex = _ref.stopIndex;
      overscanCellsCount = Math.max(1, overscanCellsCount);
      if (scrollDirection === SCROLL_DIRECTION_FORWARD) {
        return {
          overscanStartIndex: Math.max(0, startIndex - 1),
          overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)
        };
      } else {
        return {
          overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),
          overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)
        };
      }
    }
  });

  // ../../node_modules/react-virtualized/dist/commonjs/Grid/index.js
  var require_Grid2 = __commonJS((exports) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function get5() {
        return _Grid["default"];
      }
    });
    Object.defineProperty(exports, "Grid", {
      enumerable: true,
      get: function get5() {
        return _Grid["default"];
      }
    });
    Object.defineProperty(exports, "accessibilityOverscanIndicesGetter", {
      enumerable: true,
      get: function get5() {
        return _accessibilityOverscanIndicesGetter["default"];
      }
    });
    Object.defineProperty(exports, "defaultCellRangeRenderer", {
      enumerable: true,
      get: function get5() {
        return _defaultCellRangeRenderer["default"];
      }
    });
    Object.defineProperty(exports, "defaultOverscanIndicesGetter", {
      enumerable: true,
      get: function get5() {
        return _defaultOverscanIndicesGetter["default"];
      }
    });
    Object.defineProperty(exports, "bpfrpt_proptype_NoContentRenderer", {
      enumerable: true,
      get: function get5() {
        return _types.bpfrpt_proptype_NoContentRenderer;
      }
    });
    Object.defineProperty(exports, "bpfrpt_proptype_Alignment", {
      enumerable: true,
      get: function get5() {
        return _types.bpfrpt_proptype_Alignment;
      }
    });
    Object.defineProperty(exports, "bpfrpt_proptype_CellPosition", {
      enumerable: true,
      get: function get5() {
        return _types.bpfrpt_proptype_CellPosition;
      }
    });
    Object.defineProperty(exports, "bpfrpt_proptype_CellSize", {
      enumerable: true,
      get: function get5() {
        return _types.bpfrpt_proptype_CellSize;
      }
    });
    Object.defineProperty(exports, "bpfrpt_proptype_OverscanIndicesGetter", {
      enumerable: true,
      get: function get5() {
        return _types.bpfrpt_proptype_OverscanIndicesGetter;
      }
    });
    Object.defineProperty(exports, "bpfrpt_proptype_RenderedSection", {
      enumerable: true,
      get: function get5() {
        return _types.bpfrpt_proptype_RenderedSection;
      }
    });
    Object.defineProperty(exports, "bpfrpt_proptype_CellRendererParams", {
      enumerable: true,
      get: function get5() {
        return _types.bpfrpt_proptype_CellRendererParams;
      }
    });
    Object.defineProperty(exports, "bpfrpt_proptype_Scroll", {
      enumerable: true,
      get: function get5() {
        return _types.bpfrpt_proptype_Scroll;
      }
    });
    var _Grid = _interopRequireDefault(require_Grid());
    var _accessibilityOverscanIndicesGetter = _interopRequireDefault(require_accessibilityOverscanIndicesGetter());
    var _defaultCellRangeRenderer = _interopRequireDefault(require_defaultCellRangeRenderer());
    var _defaultOverscanIndicesGetter = _interopRequireDefault(require_defaultOverscanIndicesGetter());
    var _types = require_types();
  });

  // ../../node_modules/react-virtualized/dist/commonjs/List/types.js
  var require_types2 = __commonJS((exports) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _interopRequireWildcard = require_interopRequireWildcard();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.bpfrpt_proptype_Scroll = exports.bpfrpt_proptype_RenderedRows = exports.bpfrpt_proptype_RowRenderer = exports.bpfrpt_proptype_RowRendererParams = void 0;
    var React52 = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var bpfrpt_proptype_RowRendererParams = false ? null : {
      index: _propTypes["default"].number.isRequired,
      isScrolling: _propTypes["default"].bool.isRequired,
      isVisible: _propTypes["default"].bool.isRequired,
      key: _propTypes["default"].string.isRequired,
      parent: _propTypes["default"].object.isRequired,
      style: _propTypes["default"].object.isRequired
    };
    exports.bpfrpt_proptype_RowRendererParams = bpfrpt_proptype_RowRendererParams;
    var bpfrpt_proptype_RowRenderer = false ? null : _propTypes["default"].func;
    exports.bpfrpt_proptype_RowRenderer = bpfrpt_proptype_RowRenderer;
    var bpfrpt_proptype_RenderedRows = false ? null : {
      overscanStartIndex: _propTypes["default"].number.isRequired,
      overscanStopIndex: _propTypes["default"].number.isRequired,
      startIndex: _propTypes["default"].number.isRequired,
      stopIndex: _propTypes["default"].number.isRequired
    };
    exports.bpfrpt_proptype_RenderedRows = bpfrpt_proptype_RenderedRows;
    var bpfrpt_proptype_Scroll = false ? null : {
      clientHeight: _propTypes["default"].number.isRequired,
      scrollHeight: _propTypes["default"].number.isRequired,
      scrollTop: _propTypes["default"].number.isRequired
    };
    exports.bpfrpt_proptype_Scroll = bpfrpt_proptype_Scroll;
  });

  // ../../node_modules/react-virtualized/dist/commonjs/List/List.js
  var require_List = __commonJS((exports) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _interopRequireWildcard = require_interopRequireWildcard();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _extends22 = _interopRequireDefault(require_extends());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf3 = _interopRequireDefault(require_getPrototypeOf());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty2());
    var _Grid = _interopRequireWildcard(require_Grid2());
    var React52 = _interopRequireWildcard(require_react());
    var _clsx = _interopRequireDefault(require_clsx());
    var _types = require_types2();
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _class;
    var _temp;
    var List2 = (_temp = _class = /* @__PURE__ */ function(_React$PureComponent) {
      (0, _inherits2["default"])(List3, _React$PureComponent);
      function List3() {
        var _getPrototypeOf2;
        var _this2;
        (0, _classCallCheck2["default"])(this, List3);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this2 = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(List3)).call.apply(_getPrototypeOf2, [this].concat(args)));
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "Grid", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_cellRenderer", function(_ref) {
          var parent = _ref.parent, rowIndex = _ref.rowIndex, style = _ref.style, isScrolling = _ref.isScrolling, isVisible = _ref.isVisible, key = _ref.key;
          var rowRenderer = _this2.props.rowRenderer;
          var widthDescriptor = Object.getOwnPropertyDescriptor(style, "width");
          if (widthDescriptor && widthDescriptor.writable) {
            style.width = "100%";
          }
          return rowRenderer({
            index: rowIndex,
            style,
            isScrolling,
            isVisible,
            key,
            parent
          });
        });
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_setRef", function(ref) {
          _this2.Grid = ref;
        });
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_onScroll", function(_ref2) {
          var clientHeight = _ref2.clientHeight, scrollHeight = _ref2.scrollHeight, scrollTop = _ref2.scrollTop;
          var onScroll = _this2.props.onScroll;
          onScroll({
            clientHeight,
            scrollHeight,
            scrollTop
          });
        });
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_onSectionRendered", function(_ref3) {
          var rowOverscanStartIndex = _ref3.rowOverscanStartIndex, rowOverscanStopIndex = _ref3.rowOverscanStopIndex, rowStartIndex = _ref3.rowStartIndex, rowStopIndex = _ref3.rowStopIndex;
          var onRowsRendered = _this2.props.onRowsRendered;
          onRowsRendered({
            overscanStartIndex: rowOverscanStartIndex,
            overscanStopIndex: rowOverscanStopIndex,
            startIndex: rowStartIndex,
            stopIndex: rowStopIndex
          });
        });
        return _this2;
      }
      (0, _createClass2["default"])(List3, [{
        key: "forceUpdateGrid",
        value: function forceUpdateGrid() {
          if (this.Grid) {
            this.Grid.forceUpdate();
          }
        }
      }, {
        key: "getOffsetForRow",
        value: function getOffsetForRow(_ref4) {
          var alignment = _ref4.alignment, index = _ref4.index;
          if (this.Grid) {
            var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({
              alignment,
              rowIndex: index,
              columnIndex: 0
            }), scrollTop = _this$Grid$getOffsetF.scrollTop;
            return scrollTop;
          }
          return 0;
        }
      }, {
        key: "invalidateCellSizeAfterRender",
        value: function invalidateCellSizeAfterRender(_ref5) {
          var columnIndex = _ref5.columnIndex, rowIndex = _ref5.rowIndex;
          if (this.Grid) {
            this.Grid.invalidateCellSizeAfterRender({
              rowIndex,
              columnIndex
            });
          }
        }
      }, {
        key: "measureAllRows",
        value: function measureAllRows() {
          if (this.Grid) {
            this.Grid.measureAllCells();
          }
        }
      }, {
        key: "recomputeGridSize",
        value: function recomputeGridSize() {
          var _ref6 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref6$columnIndex = _ref6.columnIndex, columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex, _ref6$rowIndex = _ref6.rowIndex, rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;
          if (this.Grid) {
            this.Grid.recomputeGridSize({
              rowIndex,
              columnIndex
            });
          }
        }
      }, {
        key: "recomputeRowHeights",
        value: function recomputeRowHeights() {
          var index = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
          if (this.Grid) {
            this.Grid.recomputeGridSize({
              rowIndex: index,
              columnIndex: 0
            });
          }
        }
      }, {
        key: "scrollToPosition",
        value: function scrollToPosition() {
          var scrollTop = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
          if (this.Grid) {
            this.Grid.scrollToPosition({
              scrollTop
            });
          }
        }
      }, {
        key: "scrollToRow",
        value: function scrollToRow() {
          var index = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
          if (this.Grid) {
            this.Grid.scrollToCell({
              columnIndex: 0,
              rowIndex: index
            });
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props = this.props, className = _this$props.className, noRowsRenderer = _this$props.noRowsRenderer, scrollToIndex = _this$props.scrollToIndex, width = _this$props.width;
          var classNames7 = (0, _clsx["default"])("ReactVirtualized__List", className);
          return React52.createElement(_Grid["default"], (0, _extends22["default"])({}, this.props, {
            autoContainerWidth: true,
            cellRenderer: this._cellRenderer,
            className: classNames7,
            columnWidth: width,
            columnCount: 1,
            noContentRenderer: noRowsRenderer,
            onScroll: this._onScroll,
            onSectionRendered: this._onSectionRendered,
            ref: this._setRef,
            scrollToRow: scrollToIndex
          }));
        }
      }]);
      return List3;
    }(React52.PureComponent), (0, _defineProperty2["default"])(_class, "propTypes", false ? null : {
      "aria-label": _propTypes["default"].string,
      autoHeight: _propTypes["default"].bool.isRequired,
      className: _propTypes["default"].string,
      estimatedRowSize: _propTypes["default"].number.isRequired,
      height: _propTypes["default"].number.isRequired,
      noRowsRenderer: function noRowsRenderer() {
        return (typeof _Grid.bpfrpt_proptype_NoContentRenderer === "function" ? _Grid.bpfrpt_proptype_NoContentRenderer.isRequired ? _Grid.bpfrpt_proptype_NoContentRenderer.isRequired : _Grid.bpfrpt_proptype_NoContentRenderer : _propTypes["default"].shape(_Grid.bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);
      },
      onRowsRendered: _propTypes["default"].func.isRequired,
      onScroll: _propTypes["default"].func.isRequired,
      overscanIndicesGetter: function overscanIndicesGetter() {
        return (typeof _Grid.bpfrpt_proptype_OverscanIndicesGetter === "function" ? _Grid.bpfrpt_proptype_OverscanIndicesGetter.isRequired ? _Grid.bpfrpt_proptype_OverscanIndicesGetter.isRequired : _Grid.bpfrpt_proptype_OverscanIndicesGetter : _propTypes["default"].shape(_Grid.bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);
      },
      overscanRowCount: _propTypes["default"].number.isRequired,
      rowHeight: function rowHeight() {
        return (typeof _Grid.bpfrpt_proptype_CellSize === "function" ? _Grid.bpfrpt_proptype_CellSize.isRequired ? _Grid.bpfrpt_proptype_CellSize.isRequired : _Grid.bpfrpt_proptype_CellSize : _propTypes["default"].shape(_Grid.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);
      },
      rowRenderer: function rowRenderer() {
        return (typeof _types.bpfrpt_proptype_RowRenderer === "function" ? _types.bpfrpt_proptype_RowRenderer.isRequired ? _types.bpfrpt_proptype_RowRenderer.isRequired : _types.bpfrpt_proptype_RowRenderer : _propTypes["default"].shape(_types.bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);
      },
      rowCount: _propTypes["default"].number.isRequired,
      scrollToAlignment: function scrollToAlignment() {
        return (typeof _Grid.bpfrpt_proptype_Alignment === "function" ? _Grid.bpfrpt_proptype_Alignment.isRequired ? _Grid.bpfrpt_proptype_Alignment.isRequired : _Grid.bpfrpt_proptype_Alignment : _propTypes["default"].shape(_Grid.bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);
      },
      scrollToIndex: _propTypes["default"].number.isRequired,
      scrollTop: _propTypes["default"].number,
      style: _propTypes["default"].object.isRequired,
      tabIndex: _propTypes["default"].number,
      width: _propTypes["default"].number.isRequired
    }), _temp);
    exports["default"] = List2;
    (0, _defineProperty2["default"])(List2, "defaultProps", {
      autoHeight: false,
      estimatedRowSize: 30,
      onScroll: function onScroll() {
      },
      noRowsRenderer: function noRowsRenderer() {
        return null;
      },
      onRowsRendered: function onRowsRendered() {
      },
      overscanIndicesGetter: _Grid.accessibilityOverscanIndicesGetter,
      overscanRowCount: 10,
      scrollToAlignment: "auto",
      scrollToIndex: -1,
      style: {}
    });
  });

  // ../../node_modules/react-virtualized/dist/commonjs/List/index.js
  var require_List2 = __commonJS((exports) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function get5() {
        return _List["default"];
      }
    });
    Object.defineProperty(exports, "List", {
      enumerable: true,
      get: function get5() {
        return _List["default"];
      }
    });
    Object.defineProperty(exports, "bpfrpt_proptype_RowRendererParams", {
      enumerable: true,
      get: function get5() {
        return _types.bpfrpt_proptype_RowRendererParams;
      }
    });
    var _List = _interopRequireDefault(require_List());
    var _types = require_types2();
  });

  // ../../node_modules/react-virtualized/dist/commonjs/vendor/detectElementResize.js
  var require_detectElementResize = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = createDetectElementResize;
    function createDetectElementResize(nonce, hostWindow) {
      var _window;
      if (typeof hostWindow !== "undefined") {
        _window = hostWindow;
      } else if (typeof window !== "undefined") {
        _window = window;
      } else if (typeof self !== "undefined") {
        _window = self;
      } else {
        _window = global;
      }
      var attachEvent = typeof _window.document !== "undefined" && _window.document.attachEvent;
      if (!attachEvent) {
        var requestFrame = function() {
          var raf2 = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function(fn2) {
            return _window.setTimeout(fn2, 20);
          };
          return function(fn2) {
            return raf2(fn2);
          };
        }();
        var cancelFrame = function() {
          var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;
          return function(id) {
            return cancel(id);
          };
        }();
        var resetTriggers = function resetTriggers2(element) {
          var triggers = element.__resizeTriggers__, expand = triggers.firstElementChild, contract = triggers.lastElementChild, expandChild = expand.firstElementChild;
          contract.scrollLeft = contract.scrollWidth;
          contract.scrollTop = contract.scrollHeight;
          expandChild.style.width = expand.offsetWidth + 1 + "px";
          expandChild.style.height = expand.offsetHeight + 1 + "px";
          expand.scrollLeft = expand.scrollWidth;
          expand.scrollTop = expand.scrollHeight;
        };
        var checkTriggers = function checkTriggers2(element) {
          return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;
        };
        var scrollListener = function scrollListener2(e15) {
          if (e15.target.className && typeof e15.target.className.indexOf === "function" && e15.target.className.indexOf("contract-trigger") < 0 && e15.target.className.indexOf("expand-trigger") < 0) {
            return;
          }
          var element = this;
          resetTriggers(this);
          if (this.__resizeRAF__) {
            cancelFrame(this.__resizeRAF__);
          }
          this.__resizeRAF__ = requestFrame(function() {
            if (checkTriggers(element)) {
              element.__resizeLast__.width = element.offsetWidth;
              element.__resizeLast__.height = element.offsetHeight;
              element.__resizeListeners__.forEach(function(fn2) {
                fn2.call(element, e15);
              });
            }
          });
        };
        var animation = false, keyframeprefix = "", animationstartevent = "animationstart", domPrefixes = "Webkit Moz O ms".split(" "), startEvents = "webkitAnimationStart animationstart oAnimationStart MSAnimationStart".split(" "), pfx = "";
        {
          var elm = _window.document.createElement("fakeelement");
          if (elm.style.animationName !== void 0) {
            animation = true;
          }
          if (animation === false) {
            for (var i9 = 0; i9 < domPrefixes.length; i9++) {
              if (elm.style[domPrefixes[i9] + "AnimationName"] !== void 0) {
                pfx = domPrefixes[i9];
                keyframeprefix = "-" + pfx.toLowerCase() + "-";
                animationstartevent = startEvents[i9];
                animation = true;
                break;
              }
            }
          }
        }
        var animationName = "resizeanim";
        var animationKeyframes = "@" + keyframeprefix + "keyframes " + animationName + " { from { opacity: 0; } to { opacity: 0; } } ";
        var animationStyle = keyframeprefix + "animation: 1ms " + animationName + "; ";
      }
      var createStyles = function createStyles2(doc) {
        if (!doc.getElementById("detectElementResize")) {
          var css = (animationKeyframes ? animationKeyframes : "") + ".resize-triggers { " + (animationStyle ? animationStyle : "") + 'visibility: hidden; opacity: 0; } .resize-triggers, .resize-triggers > div, .contract-trigger:before { content: " "; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }', head = doc.head || doc.getElementsByTagName("head")[0], style = doc.createElement("style");
          style.id = "detectElementResize";
          style.type = "text/css";
          if (nonce != null) {
            style.setAttribute("nonce", nonce);
          }
          if (style.styleSheet) {
            style.styleSheet.cssText = css;
          } else {
            style.appendChild(doc.createTextNode(css));
          }
          head.appendChild(style);
        }
      };
      var addResizeListener = function addResizeListener2(element, fn2) {
        if (attachEvent) {
          element.attachEvent("onresize", fn2);
        } else {
          if (!element.__resizeTriggers__) {
            var doc = element.ownerDocument;
            var elementStyle = _window.getComputedStyle(element);
            if (elementStyle && elementStyle.position == "static") {
              element.style.position = "relative";
            }
            createStyles(doc);
            element.__resizeLast__ = {};
            element.__resizeListeners__ = [];
            (element.__resizeTriggers__ = doc.createElement("div")).className = "resize-triggers";
            var resizeTriggersHtml = '<div class="expand-trigger"><div></div></div><div class="contract-trigger"></div>';
            if (window.trustedTypes) {
              var staticPolicy = trustedTypes.createPolicy("react-virtualized-auto-sizer", {
                createHTML: function createHTML() {
                  return resizeTriggersHtml;
                }
              });
              element.__resizeTriggers__.innerHTML = staticPolicy.createHTML("");
            } else {
              element.__resizeTriggers__.innerHTML = resizeTriggersHtml;
            }
            element.appendChild(element.__resizeTriggers__);
            resetTriggers(element);
            element.addEventListener("scroll", scrollListener, true);
            if (animationstartevent) {
              element.__resizeTriggers__.__animationListener__ = function animationListener(e15) {
                if (e15.animationName == animationName) {
                  resetTriggers(element);
                }
              };
              element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);
            }
          }
          element.__resizeListeners__.push(fn2);
        }
      };
      var removeResizeListener = function removeResizeListener2(element, fn2) {
        if (attachEvent) {
          element.detachEvent("onresize", fn2);
        } else {
          element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn2), 1);
          if (!element.__resizeListeners__.length) {
            element.removeEventListener("scroll", scrollListener, true);
            if (element.__resizeTriggers__.__animationListener__) {
              element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);
              element.__resizeTriggers__.__animationListener__ = null;
            }
            try {
              element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);
            } catch (e15) {
            }
          }
        }
      };
      return {
        addResizeListener,
        removeResizeListener
      };
    }
  });

  // ../../node_modules/react-virtualized/dist/commonjs/AutoSizer/AutoSizer.js
  var require_AutoSizer = __commonJS((exports) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    var _interopRequireWildcard = require_interopRequireWildcard();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _possibleConstructorReturn2 = _interopRequireDefault(require_possibleConstructorReturn());
    var _getPrototypeOf3 = _interopRequireDefault(require_getPrototypeOf());
    var _assertThisInitialized2 = _interopRequireDefault(require_assertThisInitialized());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _defineProperty2 = _interopRequireDefault(require_defineProperty2());
    var React52 = _interopRequireWildcard(require_react());
    var _detectElementResize = _interopRequireDefault(require_detectElementResize());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _class;
    var _temp;
    function ownKeys(object2, enumerableOnly) {
      var keys = Object.keys(object2);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object2);
        if (enumerableOnly)
          symbols = symbols.filter(function(sym) {
            return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
          });
        keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread(target) {
      for (var i9 = 1; i9 < arguments.length; i9++) {
        var source = arguments[i9] != null ? arguments[i9] : {};
        if (i9 % 2) {
          ownKeys(source, true).forEach(function(key) {
            (0, _defineProperty2["default"])(target, key, source[key]);
          });
        } else if (Object.getOwnPropertyDescriptors) {
          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
        } else {
          ownKeys(source).forEach(function(key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
          });
        }
      }
      return target;
    }
    var AutoSizer2 = (_temp = _class = /* @__PURE__ */ function(_React$Component) {
      (0, _inherits2["default"])(AutoSizer3, _React$Component);
      function AutoSizer3() {
        var _getPrototypeOf2;
        var _this2;
        (0, _classCallCheck2["default"])(this, AutoSizer3);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this2 = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(AutoSizer3)).call.apply(_getPrototypeOf2, [this].concat(args)));
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "state", {
          height: _this2.props.defaultHeight || 0,
          width: _this2.props.defaultWidth || 0
        });
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_parentNode", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_autoSizer", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_window", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_detectElementResize", void 0);
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_onResize", function() {
          var _this$props = _this2.props, disableHeight = _this$props.disableHeight, disableWidth = _this$props.disableWidth, onResize = _this$props.onResize;
          if (_this2._parentNode) {
            var height = _this2._parentNode.offsetHeight || 0;
            var width = _this2._parentNode.offsetWidth || 0;
            var win = _this2._window || window;
            var style = win.getComputedStyle(_this2._parentNode) || {};
            var paddingLeft = parseInt(style.paddingLeft, 10) || 0;
            var paddingRight = parseInt(style.paddingRight, 10) || 0;
            var paddingTop = parseInt(style.paddingTop, 10) || 0;
            var paddingBottom = parseInt(style.paddingBottom, 10) || 0;
            var newHeight = height - paddingTop - paddingBottom;
            var newWidth = width - paddingLeft - paddingRight;
            if (!disableHeight && _this2.state.height !== newHeight || !disableWidth && _this2.state.width !== newWidth) {
              _this2.setState({
                height: height - paddingTop - paddingBottom,
                width: width - paddingLeft - paddingRight
              });
              onResize({
                height,
                width
              });
            }
          }
        });
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this2), "_setRef", function(autoSizer) {
          _this2._autoSizer = autoSizer;
        });
        return _this2;
      }
      (0, _createClass2["default"])(AutoSizer3, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var nonce = this.props.nonce;
          if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {
            this._parentNode = this._autoSizer.parentNode;
            this._window = this._autoSizer.parentNode.ownerDocument.defaultView;
            this._detectElementResize = (0, _detectElementResize["default"])(nonce, this._window);
            this._detectElementResize.addResizeListener(this._parentNode, this._onResize);
            this._onResize();
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this._detectElementResize && this._parentNode) {
            this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props2 = this.props, children = _this$props2.children, className = _this$props2.className, disableHeight = _this$props2.disableHeight, disableWidth = _this$props2.disableWidth, style = _this$props2.style;
          var _this$state = this.state, height = _this$state.height, width = _this$state.width;
          var outerStyle = {
            overflow: "visible"
          };
          var childParams = {};
          if (!disableHeight) {
            outerStyle.height = 0;
            childParams.height = height;
          }
          if (!disableWidth) {
            outerStyle.width = 0;
            childParams.width = width;
          }
          return React52.createElement("div", {
            className,
            ref: this._setRef,
            style: _objectSpread({}, outerStyle, {}, style)
          }, children(childParams));
        }
      }]);
      return AutoSizer3;
    }(React52.Component), (0, _defineProperty2["default"])(_class, "propTypes", false ? null : {
      children: _propTypes["default"].func.isRequired,
      className: _propTypes["default"].string,
      defaultHeight: _propTypes["default"].number,
      defaultWidth: _propTypes["default"].number,
      disableHeight: _propTypes["default"].bool.isRequired,
      disableWidth: _propTypes["default"].bool.isRequired,
      nonce: _propTypes["default"].string,
      onResize: _propTypes["default"].func.isRequired,
      style: _propTypes["default"].object
    }), _temp);
    exports["default"] = AutoSizer2;
    (0, _defineProperty2["default"])(AutoSizer2, "defaultProps", {
      onResize: function onResize() {
      },
      disableHeight: false,
      disableWidth: false,
      style: {}
    });
  });

  // ../../node_modules/react-virtualized/dist/commonjs/AutoSizer/index.js
  var require_AutoSizer2 = __commonJS((exports) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function get5() {
        return _AutoSizer["default"];
      }
    });
    Object.defineProperty(exports, "AutoSizer", {
      enumerable: true,
      get: function get5() {
        return _AutoSizer["default"];
      }
    });
    var _AutoSizer = _interopRequireDefault(require_AutoSizer());
  });

  // ../../node_modules/@rsuite/icon-font/lib/legacy/ArrowDown.js
  var require_ArrowDown = __commonJS((exports) => {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var React52 = _interopRequireWildcard(require_react());
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache2 = new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache2;
      };
      return cache2;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {default: obj};
      }
      var cache2 = _getRequireWildcardCache();
      if (cache2 && cache2.has(obj)) {
        return cache2.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache2) {
        cache2.set(obj, newObj);
      }
      return newObj;
    }
    function _extends5() {
      _extends5 = Object.assign || function(target) {
        for (var i9 = 1; i9 < arguments.length; i9++) {
          var source = arguments[i9];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends5.apply(this, arguments);
    }
    function ArrowDown3(props, svgRef) {
      return /* @__PURE__ */ React52.createElement("svg", _extends5({
        width: "1em",
        height: "1em",
        viewBox: "0 0 14 14",
        fill: "currentColor",
        ref: svgRef
      }, props), /* @__PURE__ */ React52.createElement("path", {
        d: "M0 3.5l7 7 7-7z"
      }));
    }
    var ForwardRef = /* @__PURE__ */ React52.forwardRef(ArrowDown3);
    var _default = ForwardRef;
    exports["default"] = _default;
  });

  // ../../node_modules/@rsuite/icons/lib/icons/legacy/ArrowDown.js
  var require_ArrowDown2 = __commonJS((exports, module) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _ArrowDown = _interopRequireDefault(require_ArrowDown());
    var ArrowDown3 = (0, _createSvgIcon["default"])({
      as: _ArrowDown["default"],
      ariaLabel: "arrow down",
      category: "legacy",
      displayName: "ArrowDown"
    });
    var _default = ArrowDown3;
    exports["default"] = _default;
    module.exports = exports.default;
  });

  // ../../node_modules/@rsuite/icons/legacy/ArrowDown.js
  var require_ArrowDown3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function get5() {
        return _ArrowDown["default"];
      }
    });
    var _ArrowDown = _interopRequireDefault(require_ArrowDown2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
  });

  // ../../node_modules/lodash/now.js
  var require_now = __commonJS((exports, module) => {
    var root2 = require_root();
    var now = function() {
      return root2.Date.now();
    };
    module.exports = now;
  });

  // ../../node_modules/lodash/debounce.js
  var require_debounce = __commonJS((exports, module) => {
    var isObject = require_isObject();
    var now = require_now();
    var toNumber = require_toNumber();
    var FUNC_ERROR_TEXT = "Expected a function";
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    function debounce2(func, wait, options) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = "maxWait" in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      function invokeFunc(time3) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time3;
        result = func.apply(thisArg, args);
        return result;
      }
      function leadingEdge(time3) {
        lastInvokeTime = time3;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time3) : result;
      }
      function remainingWait(time3) {
        var timeSinceLastCall = time3 - lastCallTime, timeSinceLastInvoke = time3 - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
        return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
      }
      function shouldInvoke(time3) {
        var timeSinceLastCall = time3 - lastCallTime, timeSinceLastInvoke = time3 - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time3 = now();
        if (shouldInvoke(time3)) {
          return trailingEdge(time3);
        }
        timerId = setTimeout(timerExpired, remainingWait(time3));
      }
      function trailingEdge(time3) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time3);
        }
        lastArgs = lastThis = void 0;
        return result;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush2() {
        return timerId === void 0 ? result : trailingEdge(now());
      }
      function debounced() {
        var time3 = now(), isInvoking = shouldInvoke(time3);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time3;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush2;
      return debounced;
    }
    module.exports = debounce2;
  });

  // ../../node_modules/@rsuite/icon-font/lib/legacy/AngleDown.js
  var require_AngleDown = __commonJS((exports) => {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var React52 = _interopRequireWildcard(require_react());
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache2 = new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache2;
      };
      return cache2;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {default: obj};
      }
      var cache2 = _getRequireWildcardCache();
      if (cache2 && cache2.has(obj)) {
        return cache2.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache2) {
        cache2.set(obj, newObj);
      }
      return newObj;
    }
    function _extends5() {
      _extends5 = Object.assign || function(target) {
        for (var i9 = 1; i9 < arguments.length; i9++) {
          var source = arguments[i9];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends5.apply(this, arguments);
    }
    function AngleDown(props, svgRef) {
      return /* @__PURE__ */ React52.createElement("svg", _extends5({
        width: "1em",
        height: "1em",
        viewBox: "0 0 21 32",
        fill: "currentColor",
        ref: svgRef
      }, props), /* @__PURE__ */ React52.createElement("path", {
        d: "M19.196 13.143a.612.612 0 01-.179.411l-8.321 8.321c-.107.107-.268.179-.411.179s-.304-.071-.411-.179l-8.321-8.321c-.107-.107-.179-.268-.179-.411s.071-.304.179-.411l.893-.893a.582.582 0 01.411-.179c.143 0 .304.071.411.179l7.018 7.018 7.018-7.018c.107-.107.268-.179.411-.179s.304.071.411.179l.893.893a.617.617 0 01.179.411z"
      }));
    }
    var ForwardRef = /* @__PURE__ */ React52.forwardRef(AngleDown);
    var _default = ForwardRef;
    exports["default"] = _default;
  });

  // ../../node_modules/@rsuite/icons/lib/icons/legacy/AngleDown.js
  var require_AngleDown2 = __commonJS((exports, module) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _AngleDown = _interopRequireDefault(require_AngleDown());
    var AngleDown = (0, _createSvgIcon["default"])({
      as: _AngleDown["default"],
      ariaLabel: "angle down",
      category: "legacy",
      displayName: "AngleDown"
    });
    var _default = AngleDown;
    exports["default"] = _default;
    module.exports = exports.default;
  });

  // ../../node_modules/@rsuite/icons/legacy/AngleDown.js
  var require_AngleDown3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function get5() {
        return _AngleDown["default"];
      }
    });
    var _AngleDown = _interopRequireDefault(require_AngleDown2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
  });

  // ../../node_modules/@rsuite/icon-font/lib/legacy/AngleUp.js
  var require_AngleUp = __commonJS((exports) => {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var React52 = _interopRequireWildcard(require_react());
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache2 = new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache2;
      };
      return cache2;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {default: obj};
      }
      var cache2 = _getRequireWildcardCache();
      if (cache2 && cache2.has(obj)) {
        return cache2.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache2) {
        cache2.set(obj, newObj);
      }
      return newObj;
    }
    function _extends5() {
      _extends5 = Object.assign || function(target) {
        for (var i9 = 1; i9 < arguments.length; i9++) {
          var source = arguments[i9];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends5.apply(this, arguments);
    }
    function AngleUp(props, svgRef) {
      return /* @__PURE__ */ React52.createElement("svg", _extends5({
        width: "1em",
        height: "1em",
        viewBox: "0 0 21 32",
        fill: "currentColor",
        ref: svgRef
      }, props), /* @__PURE__ */ React52.createElement("path", {
        d: "M19.196 21.143a.612.612 0 01-.179.411l-.893.893a.582.582 0 01-.411.179.612.612 0 01-.411-.179l-7.018-7.018-7.018 7.018c-.107.107-.268.179-.411.179s-.304-.071-.411-.179l-.893-.893c-.107-.107-.179-.268-.179-.411s.071-.304.179-.411l8.321-8.321c.107-.107.268-.179.411-.179s.304.071.411.179l8.321 8.321a.617.617 0 01.179.411z"
      }));
    }
    var ForwardRef = /* @__PURE__ */ React52.forwardRef(AngleUp);
    var _default = ForwardRef;
    exports["default"] = _default;
  });

  // ../../node_modules/@rsuite/icons/lib/icons/legacy/AngleUp.js
  var require_AngleUp2 = __commonJS((exports, module) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _AngleUp = _interopRequireDefault(require_AngleUp());
    var AngleUp = (0, _createSvgIcon["default"])({
      as: _AngleUp["default"],
      ariaLabel: "angle up",
      category: "legacy",
      displayName: "AngleUp"
    });
    var _default = AngleUp;
    exports["default"] = _default;
    module.exports = exports.default;
  });

  // ../../node_modules/@rsuite/icons/legacy/AngleUp.js
  var require_AngleUp3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function get5() {
        return _AngleUp["default"];
      }
    });
    var _AngleUp = _interopRequireDefault(require_AngleUp2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
  });

  // ../../node_modules/@rsuite/icon-font/lib/legacy/AngleLeft.js
  var require_AngleLeft = __commonJS((exports) => {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var React52 = _interopRequireWildcard(require_react());
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache2 = new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache2;
      };
      return cache2;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {default: obj};
      }
      var cache2 = _getRequireWildcardCache();
      if (cache2 && cache2.has(obj)) {
        return cache2.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache2) {
        cache2.set(obj, newObj);
      }
      return newObj;
    }
    function _extends5() {
      _extends5 = Object.assign || function(target) {
        for (var i9 = 1; i9 < arguments.length; i9++) {
          var source = arguments[i9];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends5.apply(this, arguments);
    }
    function AngleLeft(props, svgRef) {
      return /* @__PURE__ */ React52.createElement("svg", _extends5({
        width: "1em",
        height: "1em",
        viewBox: "0 0 12 32",
        fill: "currentColor",
        ref: svgRef
      }, props), /* @__PURE__ */ React52.createElement("path", {
        d: "M11.196 9.714a.612.612 0 01-.179.411l-7.018 7.018 7.018 7.018c.107.107.179.268.179.411s-.071.304-.179.411l-.893.893c-.107.107-.268.179-.411.179s-.304-.071-.411-.179L.981 17.555c-.107-.107-.179-.268-.179-.411s.071-.304.179-.411l8.321-8.321c.107-.107.268-.179.411-.179s.304.071.411.179l.893.893c.107.107.179.25.179.411z"
      }));
    }
    var ForwardRef = /* @__PURE__ */ React52.forwardRef(AngleLeft);
    var _default = ForwardRef;
    exports["default"] = _default;
  });

  // ../../node_modules/@rsuite/icons/lib/icons/legacy/AngleLeft.js
  var require_AngleLeft2 = __commonJS((exports, module) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _AngleLeft = _interopRequireDefault(require_AngleLeft());
    var AngleLeft = (0, _createSvgIcon["default"])({
      as: _AngleLeft["default"],
      ariaLabel: "angle left",
      category: "legacy",
      displayName: "AngleLeft"
    });
    var _default = AngleLeft;
    exports["default"] = _default;
    module.exports = exports.default;
  });

  // ../../node_modules/@rsuite/icons/legacy/AngleLeft.js
  var require_AngleLeft3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function get5() {
        return _AngleLeft["default"];
      }
    });
    var _AngleLeft = _interopRequireDefault(require_AngleLeft2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
  });

  // ../../node_modules/@rsuite/icon-font/lib/legacy/AngleRight.js
  var require_AngleRight = __commonJS((exports) => {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var React52 = _interopRequireWildcard(require_react());
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache2 = new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache2;
      };
      return cache2;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {default: obj};
      }
      var cache2 = _getRequireWildcardCache();
      if (cache2 && cache2.has(obj)) {
        return cache2.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache2) {
        cache2.set(obj, newObj);
      }
      return newObj;
    }
    function _extends5() {
      _extends5 = Object.assign || function(target) {
        for (var i9 = 1; i9 < arguments.length; i9++) {
          var source = arguments[i9];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends5.apply(this, arguments);
    }
    function AngleRight(props, svgRef) {
      return /* @__PURE__ */ React52.createElement("svg", _extends5({
        width: "1em",
        height: "1em",
        viewBox: "0 0 11 32",
        fill: "currentColor",
        ref: svgRef
      }, props), /* @__PURE__ */ React52.createElement("path", {
        d: "M10.625 17.143a.612.612 0 01-.179.411l-8.321 8.321c-.107.107-.268.179-.411.179s-.304-.071-.411-.179l-.893-.893a.582.582 0 01-.179-.411c0-.143.071-.304.179-.411l7.018-7.018L.41 10.124c-.107-.107-.179-.268-.179-.411s.071-.304.179-.411l.893-.893c.107-.107.268-.179.411-.179s.304.071.411.179l8.321 8.321a.617.617 0 01.179.411z"
      }));
    }
    var ForwardRef = /* @__PURE__ */ React52.forwardRef(AngleRight);
    var _default = ForwardRef;
    exports["default"] = _default;
  });

  // ../../node_modules/@rsuite/icons/lib/icons/legacy/AngleRight.js
  var require_AngleRight2 = __commonJS((exports, module) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _AngleRight = _interopRequireDefault(require_AngleRight());
    var AngleRight = (0, _createSvgIcon["default"])({
      as: _AngleRight["default"],
      ariaLabel: "angle right",
      category: "legacy",
      displayName: "AngleRight"
    });
    var _default = AngleRight;
    exports["default"] = _default;
    module.exports = exports.default;
  });

  // ../../node_modules/@rsuite/icons/legacy/AngleRight.js
  var require_AngleRight3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function get5() {
        return _AngleRight["default"];
      }
    });
    var _AngleRight = _interopRequireDefault(require_AngleRight2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
  });

  // ../../node_modules/@rsuite/icon-font/lib/legacy/Search.js
  var require_Search = __commonJS((exports) => {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var React52 = _interopRequireWildcard(require_react());
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache2 = new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache2;
      };
      return cache2;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {default: obj};
      }
      var cache2 = _getRequireWildcardCache();
      if (cache2 && cache2.has(obj)) {
        return cache2.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache2) {
        cache2.set(obj, newObj);
      }
      return newObj;
    }
    function _extends5() {
      _extends5 = Object.assign || function(target) {
        for (var i9 = 1; i9 < arguments.length; i9++) {
          var source = arguments[i9];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends5.apply(this, arguments);
    }
    function Search2(props, svgRef) {
      return /* @__PURE__ */ React52.createElement("svg", _extends5({
        width: "1em",
        height: "1em",
        viewBox: "0 0 14 14",
        fill: "currentColor",
        ref: svgRef
      }, props), /* @__PURE__ */ React52.createElement("path", {
        d: "M9.293 10.707a.999.999 0 111.414-1.414l3 3a.999.999 0 11-1.414 1.414l-3-3z"
      }), /* @__PURE__ */ React52.createElement("path", {
        d: "M6 10a4 4 0 100-8 4 4 0 000 8zm0 2A6 6 0 116 0a6 6 0 010 12z"
      }));
    }
    var ForwardRef = /* @__PURE__ */ React52.forwardRef(Search2);
    var _default = ForwardRef;
    exports["default"] = _default;
  });

  // ../../node_modules/@rsuite/icons/lib/icons/legacy/Search.js
  var require_Search2 = __commonJS((exports, module) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _Search = _interopRequireDefault(require_Search());
    var Search2 = (0, _createSvgIcon["default"])({
      as: _Search["default"],
      ariaLabel: "search",
      category: "legacy",
      displayName: "Search"
    });
    var _default = Search2;
    exports["default"] = _default;
    module.exports = exports.default;
  });

  // ../../node_modules/@rsuite/icons/legacy/Search.js
  var require_Search3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function get5() {
        return _Search["default"];
      }
    });
    var _Search = _interopRequireDefault(require_Search2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
  });

  // ../../node_modules/lodash/_castSlice.js
  var require_castSlice = __commonJS((exports, module) => {
    var baseSlice = require_baseSlice();
    function castSlice(array2, start2, end) {
      var length = array2.length;
      end = end === void 0 ? length : end;
      return !start2 && end >= length ? array2 : baseSlice(array2, start2, end);
    }
    module.exports = castSlice;
  });

  // ../../node_modules/lodash/_charsEndIndex.js
  var require_charsEndIndex = __commonJS((exports, module) => {
    var baseIndexOf = require_baseIndexOf();
    function charsEndIndex(strSymbols, chrSymbols) {
      var index = strSymbols.length;
      while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
      }
      return index;
    }
    module.exports = charsEndIndex;
  });

  // ../../node_modules/lodash/_charsStartIndex.js
  var require_charsStartIndex = __commonJS((exports, module) => {
    var baseIndexOf = require_baseIndexOf();
    function charsStartIndex(strSymbols, chrSymbols) {
      var index = -1, length = strSymbols.length;
      while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {
      }
      return index;
    }
    module.exports = charsStartIndex;
  });

  // ../../node_modules/lodash/_asciiToArray.js
  var require_asciiToArray = __commonJS((exports, module) => {
    function asciiToArray(string) {
      return string.split("");
    }
    module.exports = asciiToArray;
  });

  // ../../node_modules/lodash/_hasUnicode.js
  var require_hasUnicode = __commonJS((exports, module) => {
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsZWJ = "\\u200d";
    var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
    function hasUnicode(string) {
      return reHasUnicode.test(string);
    }
    module.exports = hasUnicode;
  });

  // ../../node_modules/lodash/_unicodeToArray.js
  var require_unicodeToArray = __commonJS((exports, module) => {
    var rsAstralRange = "\\ud800-\\udfff";
    var rsComboMarksRange = "\\u0300-\\u036f";
    var reComboHalfMarksRange = "\\ufe20-\\ufe2f";
    var rsComboSymbolsRange = "\\u20d0-\\u20ff";
    var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
    var rsVarRange = "\\ufe0e\\ufe0f";
    var rsAstral = "[" + rsAstralRange + "]";
    var rsCombo = "[" + rsComboRange + "]";
    var rsFitz = "\\ud83c[\\udffb-\\udfff]";
    var rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")";
    var rsNonAstral = "[^" + rsAstralRange + "]";
    var rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}";
    var rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]";
    var rsZWJ = "\\u200d";
    var reOptMod = rsModifier + "?";
    var rsOptVar = "[" + rsVarRange + "]?";
    var rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*";
    var rsSeq = rsOptVar + reOptMod + rsOptJoin;
    var rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
    var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
    function unicodeToArray(string) {
      return string.match(reUnicode) || [];
    }
    module.exports = unicodeToArray;
  });

  // ../../node_modules/lodash/_stringToArray.js
  var require_stringToArray = __commonJS((exports, module) => {
    var asciiToArray = require_asciiToArray();
    var hasUnicode = require_hasUnicode();
    var unicodeToArray = require_unicodeToArray();
    function stringToArray(string) {
      return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
    }
    module.exports = stringToArray;
  });

  // ../../node_modules/lodash/trim.js
  var require_trim = __commonJS((exports, module) => {
    var baseToString = require_baseToString();
    var baseTrim = require_baseTrim();
    var castSlice = require_castSlice();
    var charsEndIndex = require_charsEndIndex();
    var charsStartIndex = require_charsStartIndex();
    var stringToArray = require_stringToArray();
    var toString = require_toString();
    function trim2(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === void 0)) {
        return baseTrim(string);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start2 = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
      return castSlice(strSymbols, start2, end).join("");
    }
    module.exports = trim2;
  });

  // ../../node_modules/lodash/_createFind.js
  var require_createFind = __commonJS((exports, module) => {
    var baseIteratee = require_baseIteratee();
    var isArrayLike = require_isArrayLike();
    var keys = require_keys();
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = baseIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) {
            return iteratee(iterable[key], key, iterable);
          };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : void 0;
      };
    }
    module.exports = createFind;
  });

  // ../../node_modules/lodash/find.js
  var require_find = __commonJS((exports, module) => {
    var createFind = require_createFind();
    var findIndex4 = require_findIndex();
    var find3 = createFind(findIndex4);
    module.exports = find3;
  });

  // ../../node_modules/lodash/_createCaseFirst.js
  var require_createCaseFirst = __commonJS((exports, module) => {
    var castSlice = require_castSlice();
    var hasUnicode = require_hasUnicode();
    var stringToArray = require_stringToArray();
    var toString = require_toString();
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);
        var strSymbols = hasUnicode(string) ? stringToArray(string) : void 0;
        var chr = strSymbols ? strSymbols[0] : string.charAt(0);
        var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
        return chr[methodName]() + trailing;
      };
    }
    module.exports = createCaseFirst;
  });

  // ../../node_modules/lodash/upperFirst.js
  var require_upperFirst = __commonJS((exports, module) => {
    var createCaseFirst = require_createCaseFirst();
    var upperFirst = createCaseFirst("toUpperCase");
    module.exports = upperFirst;
  });

  // ../../node_modules/lodash/capitalize.js
  var require_capitalize = __commonJS((exports, module) => {
    var toString = require_toString();
    var upperFirst = require_upperFirst();
    function capitalize2(string) {
      return upperFirst(toString(string).toLowerCase());
    }
    module.exports = capitalize2;
  });

  // ../../node_modules/@rsuite/icon-font/lib/legacy/Spinner.js
  var require_Spinner = __commonJS((exports) => {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var React52 = _interopRequireWildcard(require_react());
    function _getRequireWildcardCache() {
      if (typeof WeakMap !== "function")
        return null;
      var cache2 = new WeakMap();
      _getRequireWildcardCache = function _getRequireWildcardCache2() {
        return cache2;
      };
      return cache2;
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return {default: obj};
      }
      var cache2 = _getRequireWildcardCache();
      if (cache2 && cache2.has(obj)) {
        return cache2.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache2) {
        cache2.set(obj, newObj);
      }
      return newObj;
    }
    function _extends5() {
      _extends5 = Object.assign || function(target) {
        for (var i9 = 1; i9 < arguments.length; i9++) {
          var source = arguments[i9];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends5.apply(this, arguments);
    }
    function Spinner2(props, svgRef) {
      return /* @__PURE__ */ React52.createElement("svg", _extends5({
        width: "1em",
        height: "1em",
        viewBox: "0 0 32 32",
        fill: "currentColor",
        ref: svgRef
      }, props), /* @__PURE__ */ React52.createElement("path", {
        d: "M9.393 24.893a2.29 2.29 0 01-2.286 2.286 2.302 2.302 0 01-2.286-2.286 2.29 2.29 0 012.286-2.286 2.279 2.279 0 012.286 2.286zm8.893 3.678c0 1.268-1.018 2.286-2.286 2.286s-2.286-1.018-2.286-2.286 1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zM5.714 16c0 1.268-1.018 2.286-2.286 2.286S1.142 17.268 1.142 16s1.018-2.286 2.286-2.286S5.714 14.732 5.714 16zm21.465 8.893a2.302 2.302 0 01-2.286 2.286 2.29 2.29 0 01-2.286-2.286 2.279 2.279 0 012.286-2.286 2.29 2.29 0 012.286 2.286zM9.964 7.107c0 1.571-1.286 2.857-2.857 2.857S4.25 8.678 4.25 7.107 5.536 4.25 7.107 4.25s2.857 1.286 2.857 2.857zM30.857 16c0 1.268-1.018 2.286-2.286 2.286S26.285 17.268 26.285 16s1.018-2.286 2.286-2.286 2.286 1.018 2.286 2.286zM19.429 3.429a3.43 3.43 0 01-6.858 0 3.43 3.43 0 016.858 0zm9.464 3.678c0 2.214-1.804 4-4 4-2.214 0-4-1.786-4-4 0-2.196 1.786-4 4-4 2.196 0 4 1.804 4 4z"
      }));
    }
    var ForwardRef = /* @__PURE__ */ React52.forwardRef(Spinner2);
    var _default = ForwardRef;
    exports["default"] = _default;
  });

  // ../../node_modules/@rsuite/icons/lib/icons/legacy/Spinner.js
  var require_Spinner2 = __commonJS((exports, module) => {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    exports.__esModule = true;
    exports["default"] = void 0;
    var _createSvgIcon = _interopRequireDefault(require_createSvgIcon());
    var _Spinner = _interopRequireDefault(require_Spinner());
    var Spinner2 = (0, _createSvgIcon["default"])({
      as: _Spinner["default"],
      ariaLabel: "spinner",
      category: "legacy",
      displayName: "Spinner"
    });
    var _default = Spinner2;
    exports["default"] = _default;
    module.exports = exports.default;
  });

  // ../../node_modules/@rsuite/icons/legacy/Spinner.js
  var require_Spinner3 = __commonJS((exports) => {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "default", {
      enumerable: true,
      get: function get5() {
        return _Spinner["default"];
      }
    });
    var _Spinner = _interopRequireDefault(require_Spinner2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {default: obj};
    }
  });

  // ../../node_modules/lodash/_createSet.js
  var require_createSet = __commonJS((exports, module) => {
    var Set2 = require_Set();
    var noop3 = require_noop();
    var setToArray = require_setToArray();
    var INFINITY = 1 / 0;
    var createSet = !(Set2 && 1 / setToArray(new Set2([, -0]))[1] == INFINITY) ? noop3 : function(values) {
      return new Set2(values);
    };
    module.exports = createSet;
  });

  // ../../node_modules/lodash/_baseUniq.js
  var require_baseUniq = __commonJS((exports, module) => {
    var SetCache = require_SetCache();
    var arrayIncludes = require_arrayIncludes();
    var arrayIncludesWith = require_arrayIncludesWith();
    var cacheHas = require_cacheHas();
    var createSet = require_createSet();
    var setToArray = require_setToArray();
    var LARGE_ARRAY_SIZE = 200;
    function baseUniq(array2, iteratee, comparator) {
      var index = -1, includes = arrayIncludes, length = array2.length, isCommon = true, result = [], seen = result;
      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      } else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array2);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache();
      } else {
        seen = iteratee ? [] : result;
      }
      outer:
        while (++index < length) {
          var value = array2[index], computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var seenIndex = seen.length;
            while (seenIndex--) {
              if (seen[seenIndex] === computed) {
                continue outer;
              }
            }
            if (iteratee) {
              seen.push(computed);
            }
            result.push(value);
          } else if (!includes(seen, computed, comparator)) {
            if (seen !== result) {
              seen.push(computed);
            }
            result.push(value);
          }
        }
      return result;
    }
    module.exports = baseUniq;
  });

  // ../../node_modules/lodash/uniq.js
  var require_uniq = __commonJS((exports, module) => {
    var baseUniq = require_baseUniq();
    function uniq(array2) {
      return array2 && array2.length ? baseUniq(array2) : [];
    }
    module.exports = uniq;
  });

  // ../../node_modules/lodash/_assignMergeValue.js
  var require_assignMergeValue = __commonJS((exports, module) => {
    var baseAssignValue = require_baseAssignValue();
    var eq = require_eq();
    function assignMergeValue(object2, key, value) {
      if (value !== void 0 && !eq(object2[key], value) || value === void 0 && !(key in object2)) {
        baseAssignValue(object2, key, value);
      }
    }
    module.exports = assignMergeValue;
  });

  // ../../node_modules/lodash/_createBaseFor.js
  var require_createBaseFor = __commonJS((exports, module) => {
    function createBaseFor(fromRight) {
      return function(object2, iteratee, keysFunc) {
        var index = -1, iterable = Object(object2), props = keysFunc(object2), length = props.length;
        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object2;
      };
    }
    module.exports = createBaseFor;
  });

  // ../../node_modules/lodash/_baseFor.js
  var require_baseFor = __commonJS((exports, module) => {
    var createBaseFor = require_createBaseFor();
    var baseFor = createBaseFor();
    module.exports = baseFor;
  });

  // ../../node_modules/lodash/_safeGet.js
  var require_safeGet = __commonJS((exports, module) => {
    function safeGet(object2, key) {
      if (key === "constructor" && typeof object2[key] === "function") {
        return;
      }
      if (key == "__proto__") {
        return;
      }
      return object2[key];
    }
    module.exports = safeGet;
  });

  // ../../node_modules/lodash/toPlainObject.js
  var require_toPlainObject = __commonJS((exports, module) => {
    var copyObject = require_copyObject();
    var keysIn = require_keysIn();
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }
    module.exports = toPlainObject;
  });

  // ../../node_modules/lodash/_baseMergeDeep.js
  var require_baseMergeDeep = __commonJS((exports, module) => {
    var assignMergeValue = require_assignMergeValue();
    var cloneBuffer = require_cloneBuffer();
    var cloneTypedArray = require_cloneTypedArray();
    var copyArray = require_copyArray();
    var initCloneObject = require_initCloneObject();
    var isArguments = require_isArguments();
    var isArray2 = require_isArray();
    var isArrayLikeObject = require_isArrayLikeObject();
    var isBuffer = require_isBuffer();
    var isFunction4 = require_isFunction();
    var isObject = require_isObject();
    var isPlainObject = require_isPlainObject();
    var isTypedArray = require_isTypedArray();
    var safeGet = require_safeGet();
    var toPlainObject = require_toPlainObject();
    function baseMergeDeep(object2, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object2, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
      if (stacked) {
        assignMergeValue(object2, key, stacked);
        return;
      }
      var newValue = customizer ? customizer(objValue, srcValue, key + "", object2, source, stack) : void 0;
      var isCommon = newValue === void 0;
      if (isCommon) {
        var isArr = isArray2(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray2(objValue)) {
            newValue = objValue;
          } else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          } else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          } else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          } else {
            newValue = [];
          }
        } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          } else if (!isObject(objValue) || isFunction4(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        } else {
          isCommon = false;
        }
      }
      if (isCommon) {
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack["delete"](srcValue);
      }
      assignMergeValue(object2, key, newValue);
    }
    module.exports = baseMergeDeep;
  });

  // ../../node_modules/lodash/_baseMerge.js
  var require_baseMerge = __commonJS((exports, module) => {
    var Stack = require_Stack();
    var assignMergeValue = require_assignMergeValue();
    var baseFor = require_baseFor();
    var baseMergeDeep = require_baseMergeDeep();
    var isObject = require_isObject();
    var keysIn = require_keysIn();
    var safeGet = require_safeGet();
    function baseMerge(object2, source, srcIndex, customizer, stack) {
      if (object2 === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack());
        if (isObject(srcValue)) {
          baseMergeDeep(object2, source, key, srcIndex, baseMerge, customizer, stack);
        } else {
          var newValue = customizer ? customizer(safeGet(object2, key), srcValue, key + "", object2, source, stack) : void 0;
          if (newValue === void 0) {
            newValue = srcValue;
          }
          assignMergeValue(object2, key, newValue);
        }
      }, keysIn);
    }
    module.exports = baseMerge;
  });

  // ../../node_modules/lodash/_isIterateeCall.js
  var require_isIterateeCall = __commonJS((exports, module) => {
    var eq = require_eq();
    var isArrayLike = require_isArrayLike();
    var isIndex = require_isIndex();
    var isObject = require_isObject();
    function isIterateeCall(value, index, object2) {
      if (!isObject(object2)) {
        return false;
      }
      var type2 = typeof index;
      if (type2 == "number" ? isArrayLike(object2) && isIndex(index, object2.length) : type2 == "string" && index in object2) {
        return eq(object2[index], value);
      }
      return false;
    }
    module.exports = isIterateeCall;
  });

  // ../../node_modules/lodash/_createAssigner.js
  var require_createAssigner = __commonJS((exports, module) => {
    var baseRest = require_baseRest();
    var isIterateeCall = require_isIterateeCall();
    function createAssigner(assigner) {
      return baseRest(function(object2, sources) {
        var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
        customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? void 0 : customizer;
          length = 1;
        }
        object2 = Object(object2);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object2, source, index, customizer);
          }
        }
        return object2;
      });
    }
    module.exports = createAssigner;
  });

  // ../../node_modules/lodash/merge.js
  var require_merge = __commonJS((exports, module) => {
    var baseMerge = require_baseMerge();
    var createAssigner = require_createAssigner();
    var merge = createAssigner(function(object2, source, srcIndex) {
      baseMerge(object2, source, srcIndex);
    });
    module.exports = merge;
  });

  // ../../node_modules/react/cjs/react-jsx-runtime.development.js
  var require_react_jsx_runtime_development = __commonJS((exports) => {
    /**
     * @license React
     * react-jsx-runtime.development.js
     *
     * Copyright (c) Facebook, Inc. and its affiliates.
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE file in the root directory of this source tree.
     */
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var React52 = require_react();
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var ReactSharedInternals = React52.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function error(format4) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format4, args);
            }
          }
        }
        function printWarning(level, format4, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format4 += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format4);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type2) {
          if (typeof type2 === "string" || typeof type2 === "function") {
            return true;
          }
          if (type2 === REACT_FRAGMENT_TYPE || type2 === REACT_PROFILER_TYPE || enableDebugTracing || type2 === REACT_STRICT_MODE_TYPE || type2 === REACT_SUSPENSE_TYPE || type2 === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type2 === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type2 === "object" && type2 !== null) {
            if (type2.$$typeof === REACT_LAZY_TYPE || type2.$$typeof === REACT_MEMO_TYPE || type2.$$typeof === REACT_PROVIDER_TYPE || type2.$$typeof === REACT_CONTEXT_TYPE || type2.$$typeof === REACT_FORWARD_REF_TYPE || type2.$$typeof === REACT_MODULE_REFERENCE || type2.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type2) {
          return type2.displayName || "Context";
        }
        function getComponentNameFromType(type2) {
          if (type2 == null) {
            return null;
          }
          {
            if (typeof type2.tag === "number") {
              error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type2 === "function") {
            return type2.displayName || type2.name || null;
          }
          if (typeof type2 === "string") {
            return type2;
          }
          switch (type2) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type2 === "object") {
            switch (type2.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type2;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type2;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type2, type2.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type2.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type2.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type2;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return getComponentNameFromType(init(payload));
                } catch (x7) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var assign3 = Object.assign;
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign3({}, props, {
                  value: prevLog
                }),
                info: assign3({}, props, {
                  value: prevInfo
                }),
                warn: assign3({}, props, {
                  value: prevWarn
                }),
                error: assign3({}, props, {
                  value: prevError
                }),
                group: assign3({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign3({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign3({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix3;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix3 === void 0) {
              try {
                throw Error();
              } catch (x7) {
                var match2 = x7.stack.trim().match(/\n( *(at )?)/);
                prefix3 = match2 && match2[1] || "";
              }
            }
            return "\n" + prefix3 + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn2, construct) {
          if (!fn2 || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn2);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x7) {
                  control = x7;
                }
                Reflect.construct(fn2, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x7) {
                  control = x7;
                }
                fn2.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x7) {
                control = x7;
              }
              fn2();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s4 = sampleLines.length - 1;
              var c6 = controlLines.length - 1;
              while (s4 >= 1 && c6 >= 0 && sampleLines[s4] !== controlLines[c6]) {
                c6--;
              }
              for (; s4 >= 1 && c6 >= 0; s4--, c6--) {
                if (sampleLines[s4] !== controlLines[c6]) {
                  if (s4 !== 1 || c6 !== 1) {
                    do {
                      s4--;
                      c6--;
                      if (c6 < 0 || sampleLines[s4] !== controlLines[c6]) {
                        var _frame = "\n" + sampleLines[s4].replace(" at new ", " at ");
                        if (fn2.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn2.displayName);
                        }
                        {
                          if (typeof fn2 === "function") {
                            componentFrameCache.set(fn2, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s4 >= 1 && c6 >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn2 ? fn2.displayName || fn2.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn2 === "function") {
              componentFrameCache.set(fn2, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn2, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn2, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type2, source, ownerFn) {
          if (type2 == null) {
            return "";
          }
          if (typeof type2 === "function") {
            {
              return describeNativeComponentFrame(type2, shouldConstruct(type2));
            }
          }
          if (typeof type2 === "string") {
            return describeBuiltInComponentFrame(type2);
          }
          switch (type2) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type2 === "object") {
            switch (type2.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type2.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type2.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type2;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x7) {
                }
              }
            }
          }
          return "";
        }
        var hasOwnProperty2 = Object.prototype.hasOwnProperty;
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty2);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray2(a7) {
          return isArrayImpl(a7);
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type2 = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type2;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e15) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkKeyStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
        var RESERVED_PROPS2 = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };
        var specialPropKeyWarningShown;
        var specialPropRefWarningShown;
        var didWarnAboutStringRefs;
        {
          didWarnAboutStringRefs = {};
        }
        function hasValidRef(config2) {
          {
            if (hasOwnProperty2.call(config2, "ref")) {
              var getter = Object.getOwnPropertyDescriptor(config2, "ref").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config2.ref !== void 0;
        }
        function hasValidKey(config2) {
          {
            if (hasOwnProperty2.call(config2, "key")) {
              var getter = Object.getOwnPropertyDescriptor(config2, "key").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config2.key !== void 0;
        }
        function warnIfStringRefCannotBeAutoConverted(config2, self2) {
          {
            if (typeof config2.ref === "string" && ReactCurrentOwner.current && self2 && ReactCurrentOwner.current.stateNode !== self2) {
              var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
              if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config2.ref);
                didWarnAboutStringRefs[componentName] = true;
              }
            }
          }
        }
        function defineKeyPropWarningGetter(props, displayName) {
          {
            var warnAboutAccessingKey = function() {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            };
            warnAboutAccessingKey.isReactWarning = true;
            Object.defineProperty(props, "key", {
              get: warnAboutAccessingKey,
              configurable: true
            });
          }
        }
        function defineRefPropWarningGetter(props, displayName) {
          {
            var warnAboutAccessingRef = function() {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            };
            warnAboutAccessingRef.isReactWarning = true;
            Object.defineProperty(props, "ref", {
              get: warnAboutAccessingRef,
              configurable: true
            });
          }
        }
        var ReactElement = function(type2, key, ref, self2, source, owner, props) {
          var element = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type2,
            key,
            ref,
            props,
            _owner: owner
          };
          {
            element._store = {};
            Object.defineProperty(element._store, "validated", {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element, "_self", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self2
            });
            Object.defineProperty(element, "_source", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function jsxDEV(type2, config2, maybeKey, source, self2) {
          {
            var propName;
            var props = {};
            var key = null;
            var ref = null;
            if (maybeKey !== void 0) {
              {
                checkKeyStringCoercion(maybeKey);
              }
              key = "" + maybeKey;
            }
            if (hasValidKey(config2)) {
              {
                checkKeyStringCoercion(config2.key);
              }
              key = "" + config2.key;
            }
            if (hasValidRef(config2)) {
              ref = config2.ref;
              warnIfStringRefCannotBeAutoConverted(config2, self2);
            }
            for (propName in config2) {
              if (hasOwnProperty2.call(config2, propName) && !RESERVED_PROPS2.hasOwnProperty(propName)) {
                props[propName] = config2[propName];
              }
            }
            if (type2 && type2.defaultProps) {
              var defaultProps = type2.defaultProps;
              for (propName in defaultProps) {
                if (props[propName] === void 0) {
                  props[propName] = defaultProps[propName];
                }
              }
            }
            if (key || ref) {
              var displayName = typeof type2 === "function" ? type2.displayName || type2.name || "Unknown" : type2;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
            return ReactElement(type2, key, ref, self2, source, ReactCurrentOwner.current, props);
          }
        }
        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement$1(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        var propTypesMisspellWarningShown;
        {
          propTypesMisspellWarningShown = false;
        }
        function isValidElement(object2) {
          {
            return typeof object2 === "object" && object2 !== null && object2.$$typeof === REACT_ELEMENT_TYPE;
          }
        }
        function getDeclarationErrorAddendum() {
          {
            if (ReactCurrentOwner$1.current) {
              var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
              if (name) {
                return "\n\nCheck the render method of `" + name + "`.";
              }
            }
            return "";
          }
        }
        function getSourceInfoErrorAddendum(source) {
          {
            if (source !== void 0) {
              var fileName = source.fileName.replace(/^.*[\\\/]/, "");
              var lineNumber = source.lineNumber;
              return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
            }
            return "";
          }
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          {
            var info = getDeclarationErrorAddendum();
            if (!info) {
              var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
              if (parentName) {
                info = "\n\nCheck the top-level render call using <" + parentName + ">.";
              }
            }
            return info;
          }
        }
        function validateExplicitKey(element, parentType) {
          {
            if (!element._store || element._store.validated || element.key != null) {
              return;
            }
            element._store.validated = true;
            var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
            var childOwner = "";
            if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
              childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
            }
            setCurrentlyValidatingElement$1(element);
            error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
            setCurrentlyValidatingElement$1(null);
          }
        }
        function validateChildKeys(node, parentType) {
          {
            if (typeof node !== "object") {
              return;
            }
            if (isArray2(node)) {
              for (var i9 = 0; i9 < node.length; i9++) {
                var child = node[i9];
                if (isValidElement(child)) {
                  validateExplicitKey(child, parentType);
                }
              }
            } else if (isValidElement(node)) {
              if (node._store) {
                node._store.validated = true;
              }
            } else if (node) {
              var iteratorFn = getIteratorFn(node);
              if (typeof iteratorFn === "function") {
                if (iteratorFn !== node.entries) {
                  var iterator = iteratorFn.call(node);
                  var step;
                  while (!(step = iterator.next()).done) {
                    if (isValidElement(step.value)) {
                      validateExplicitKey(step.value, parentType);
                    }
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          {
            var type2 = element.type;
            if (type2 === null || type2 === void 0 || typeof type2 === "string") {
              return;
            }
            var propTypes;
            if (typeof type2 === "function") {
              propTypes = type2.propTypes;
            } else if (typeof type2 === "object" && (type2.$$typeof === REACT_FORWARD_REF_TYPE || type2.$$typeof === REACT_MEMO_TYPE)) {
              propTypes = type2.propTypes;
            } else {
              return;
            }
            if (propTypes) {
              var name = getComponentNameFromType(type2);
              checkPropTypes(propTypes, element.props, "prop", name, element);
            } else if (type2.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
              propTypesMisspellWarningShown = true;
              var _name = getComponentNameFromType(type2);
              error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
            }
            if (typeof type2.getDefaultProps === "function" && !type2.getDefaultProps.isReactClassApproved) {
              error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
            }
          }
        }
        function validateFragmentProps(fragment) {
          {
            var keys = Object.keys(fragment.props);
            for (var i9 = 0; i9 < keys.length; i9++) {
              var key = keys[i9];
              if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
              }
            }
            if (fragment.ref !== null) {
              setCurrentlyValidatingElement$1(fragment);
              error("Invalid attribute `ref` supplied to `React.Fragment`.");
              setCurrentlyValidatingElement$1(null);
            }
          }
        }
        function jsxWithValidation(type2, props, key, isStaticChildren, source, self2) {
          {
            var validType = isValidElementType(type2);
            if (!validType) {
              var info = "";
              if (type2 === void 0 || typeof type2 === "object" && type2 !== null && Object.keys(type2).length === 0) {
                info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
              }
              var sourceInfo = getSourceInfoErrorAddendum(source);
              if (sourceInfo) {
                info += sourceInfo;
              } else {
                info += getDeclarationErrorAddendum();
              }
              var typeString;
              if (type2 === null) {
                typeString = "null";
              } else if (isArray2(type2)) {
                typeString = "array";
              } else if (type2 !== void 0 && type2.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type2.type) || "Unknown") + " />";
                info = " Did you accidentally export a JSX literal instead of a component?";
              } else {
                typeString = typeof type2;
              }
              error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
            }
            var element = jsxDEV(type2, props, key, source, self2);
            if (element == null) {
              return element;
            }
            if (validType) {
              var children = props.children;
              if (children !== void 0) {
                if (isStaticChildren) {
                  if (isArray2(children)) {
                    for (var i9 = 0; i9 < children.length; i9++) {
                      validateChildKeys(children[i9], type2);
                    }
                    if (Object.freeze) {
                      Object.freeze(children);
                    }
                  } else {
                    error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                  }
                } else {
                  validateChildKeys(children, type2);
                }
              }
            }
            if (type2 === REACT_FRAGMENT_TYPE) {
              validateFragmentProps(element);
            } else {
              validatePropTypes(element);
            }
            return element;
          }
        }
        function jsxWithValidationStatic(type2, props, key) {
          {
            return jsxWithValidation(type2, props, key, true);
          }
        }
        function jsxWithValidationDynamic(type2, props, key) {
          {
            return jsxWithValidation(type2, props, key, false);
          }
        }
        var jsx = jsxWithValidationDynamic;
        var jsxs = jsxWithValidationStatic;
        exports.Fragment = REACT_FRAGMENT_TYPE;
        exports.jsx = jsx;
        exports.jsxs = jsxs;
      })();
    }
  });

  // ../../node_modules/react/jsx-runtime.js
  var require_jsx_runtime = __commonJS((exports, module) => {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_jsx_runtime_development();
    }
  });

  // ../../node_modules/lodash/set.js
  var require_set = __commonJS((exports, module) => {
    var baseSet = require_baseSet();
    function set(object2, path2, value) {
      return object2 == null ? object2 : baseSet(object2, path2, value);
    }
    module.exports = set;
  });

  // ../../node_modules/lodash/_baseDifference.js
  var require_baseDifference = __commonJS((exports, module) => {
    var SetCache = require_SetCache();
    var arrayIncludes = require_arrayIncludes();
    var arrayIncludesWith = require_arrayIncludesWith();
    var arrayMap = require_arrayMap();
    var baseUnary = require_baseUnary();
    var cacheHas = require_cacheHas();
    var LARGE_ARRAY_SIZE = 200;
    function baseDifference(array2, values, iteratee, comparator) {
      var index = -1, includes = arrayIncludes, isCommon = true, length = array2.length, result = [], valuesLength = values.length;
      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      } else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
        while (++index < length) {
          var value = array2[index], computed = iteratee == null ? value : iteratee(value);
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var valuesIndex = valuesLength;
            while (valuesIndex--) {
              if (values[valuesIndex] === computed) {
                continue outer;
              }
            }
            result.push(value);
          } else if (!includes(values, computed, comparator)) {
            result.push(value);
          }
        }
      return result;
    }
    module.exports = baseDifference;
  });

  // ../../node_modules/lodash/without.js
  var require_without = __commonJS((exports, module) => {
    var baseDifference = require_baseDifference();
    var baseRest = require_baseRest();
    var isArrayLikeObject = require_isArrayLikeObject();
    var without = baseRest(function(array2, values) {
      return isArrayLikeObject(array2) ? baseDifference(array2, values) : [];
    });
    module.exports = without;
  });

  // ../../node_modules/lodash/isEqual.js
  var require_isEqual = __commonJS((exports, module) => {
    var baseIsEqual = require_baseIsEqual();
    function isEqual2(value, other) {
      return baseIsEqual(value, other);
    }
    module.exports = isEqual2;
  });

  // ../../node_modules/lodash/uniqBy.js
  var require_uniqBy = __commonJS((exports, module) => {
    var baseIteratee = require_baseIteratee();
    var baseUniq = require_baseUniq();
    function uniqBy(array2, iteratee) {
      return array2 && array2.length ? baseUniq(array2, baseIteratee(iteratee, 2)) : [];
    }
    module.exports = uniqBy;
  });

  // ../../node_modules/lodash/_baseForOwn.js
  var require_baseForOwn = __commonJS((exports, module) => {
    var baseFor = require_baseFor();
    var keys = require_keys();
    function baseForOwn(object2, iteratee) {
      return object2 && baseFor(object2, iteratee, keys);
    }
    module.exports = baseForOwn;
  });

  // ../../node_modules/lodash/_createBaseEach.js
  var require_createBaseEach = __commonJS((exports, module) => {
    var isArrayLike = require_isArrayLike();
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
        while (fromRight ? index-- : ++index < length) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }
    module.exports = createBaseEach;
  });

  // ../../node_modules/lodash/_baseEach.js
  var require_baseEach = __commonJS((exports, module) => {
    var baseForOwn = require_baseForOwn();
    var createBaseEach = require_createBaseEach();
    var baseEach = createBaseEach(baseForOwn);
    module.exports = baseEach;
  });

  // ../../node_modules/lodash/_baseMap.js
  var require_baseMap = __commonJS((exports, module) => {
    var baseEach = require_baseEach();
    var isArrayLike = require_isArrayLike();
    function baseMap(collection, iteratee) {
      var index = -1, result = isArrayLike(collection) ? Array(collection.length) : [];
      baseEach(collection, function(value, key, collection2) {
        result[++index] = iteratee(value, key, collection2);
      });
      return result;
    }
    module.exports = baseMap;
  });

  // ../../node_modules/lodash/_baseSortBy.js
  var require_baseSortBy = __commonJS((exports, module) => {
    function baseSortBy(array2, comparer) {
      var length = array2.length;
      array2.sort(comparer);
      while (length--) {
        array2[length] = array2[length].value;
      }
      return array2;
    }
    module.exports = baseSortBy;
  });

  // ../../node_modules/lodash/_compareAscending.js
  var require_compareAscending = __commonJS((exports, module) => {
    var isSymbol = require_isSymbol();
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== void 0, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
        var othIsDefined = other !== void 0, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
        if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
          return 1;
        }
        if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }
    module.exports = compareAscending;
  });

  // ../../node_modules/lodash/_compareMultiple.js
  var require_compareMultiple = __commonJS((exports, module) => {
    var compareAscending = require_compareAscending();
    function compareMultiple(object2, other, orders) {
      var index = -1, objCriteria = object2.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == "desc" ? -1 : 1);
        }
      }
      return object2.index - other.index;
    }
    module.exports = compareMultiple;
  });

  // ../../node_modules/lodash/_baseOrderBy.js
  var require_baseOrderBy = __commonJS((exports, module) => {
    var arrayMap = require_arrayMap();
    var baseGet = require_baseGet();
    var baseIteratee = require_baseIteratee();
    var baseMap = require_baseMap();
    var baseSortBy = require_baseSortBy();
    var baseUnary = require_baseUnary();
    var compareMultiple = require_compareMultiple();
    var identity2 = require_identity();
    var isArray2 = require_isArray();
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray2(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            };
          }
          return iteratee;
        });
      } else {
        iteratees = [identity2];
      }
      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(baseIteratee));
      var result = baseMap(collection, function(value, key, collection2) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return {criteria, index: ++index, value};
      });
      return baseSortBy(result, function(object2, other) {
        return compareMultiple(object2, other, orders);
      });
    }
    module.exports = baseOrderBy;
  });

  // ../../node_modules/lodash/sortBy.js
  var require_sortBy = __commonJS((exports, module) => {
    var baseFlatten = require_baseFlatten();
    var baseOrderBy = require_baseOrderBy();
    var baseRest = require_baseRest();
    var isIterateeCall = require_isIterateeCall();
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });
    module.exports = sortBy;
  });

  // ../../node_modules/lodash/_baseIsDate.js
  var require_baseIsDate = __commonJS((exports, module) => {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var dateTag = "[object Date]";
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }
    module.exports = baseIsDate;
  });

  // ../../node_modules/lodash/isDate.js
  var require_isDate = __commonJS((exports, module) => {
    var baseIsDate = require_baseIsDate();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsDate = nodeUtil && nodeUtil.isDate;
    var isDate2 = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
    module.exports = isDate2;
  });

  // ../../node_modules/lodash/_baseFilter.js
  var require_baseFilter = __commonJS((exports, module) => {
    var baseEach = require_baseEach();
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection2) {
        if (predicate(value, index, collection2)) {
          result.push(value);
        }
      });
      return result;
    }
    module.exports = baseFilter;
  });

  // ../../node_modules/lodash/filter.js
  var require_filter = __commonJS((exports, module) => {
    var arrayFilter = require_arrayFilter();
    var baseFilter = require_baseFilter();
    var baseIteratee = require_baseIteratee();
    var isArray2 = require_isArray();
    function filter(collection, predicate) {
      var func = isArray2(collection) ? arrayFilter : baseFilter;
      return func(collection, baseIteratee(predicate, 3));
    }
    module.exports = filter;
  });

  // ../../node_modules/react-dom/client.js
  var require_client = __commonJS((exports) => {
    "use strict";
    var m5 = require_react_dom();
    if (false) {
      exports.createRoot = m5.createRoot;
      exports.hydrateRoot = m5.hydrateRoot;
    } else {
      i9 = m5.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      exports.createRoot = function(c6, o8) {
        i9.usingClientEntryPoint = true;
        try {
          return m5.createRoot(c6, o8);
        } finally {
          i9.usingClientEntryPoint = false;
        }
      };
      exports.hydrateRoot = function(c6, h4, o8) {
        i9.usingClientEntryPoint = true;
        try {
          return m5.hydrateRoot(c6, h4, o8);
        } finally {
          i9.usingClientEntryPoint = false;
        }
      };
    }
    var i9;
  });

  // src/index.tsx
  var import_react71 = __toModule(require_react());

  // src/App.tsx
  var import_react70 = __toModule(require_react());

  // src/components/Explorer.tsx
  var import_react68 = __toModule(require_react());

  // ../../node_modules/@babel/runtime/helpers/esm/extends.js
  function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
      for (var i9 = 1; i9 < arguments.length; i9++) {
        var source = arguments[i9];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends.apply(this, arguments);
  }

  // ../../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js
  function _taggedTemplateLiteralLoose(strings, raw) {
    if (!raw) {
      raw = strings.slice(0);
    }
    strings.raw = raw;
    return strings;
  }

  // ../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i9;
    for (i9 = 0; i9 < sourceKeys.length; i9++) {
      key = sourceKeys[i9];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }

  // ../../node_modules/rsuite/esm/Button/Button.js
  var import_react34 = __toModule(require_react());
  var import_prop_types14 = __toModule(require_prop_types());

  // ../../node_modules/dom-lib/esm/canUseDOM.js
  var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);
  var canUseDOM_default = canUseDOM;

  // ../../node_modules/rsuite/esm/utils/constants.js
  var COLUMN_SIZE = ["xxl", "xl", "lg", "md", "sm", "xs"];
  var PLACEMENT_4 = ["top", "bottom", "right", "left"];
  var PLACEMENT_8 = ["bottomStart", "bottomEnd", "topStart", "topEnd", "leftStart", "rightStart", "leftEnd", "rightEnd"];
  var PLACEMENT_AUTO = ["auto", "autoVertical", "autoVerticalStart", "autoVerticalEnd", "autoHorizontal", "autoHorizontalStart", "autoHorizontalEnd"];
  var PLACEMENT = [].concat(PLACEMENT_4, PLACEMENT_8, PLACEMENT_AUTO);
  var CHECK_STATE;
  (function(CHECK_STATE2) {
    CHECK_STATE2[CHECK_STATE2["UNCHECK"] = 0] = "UNCHECK";
    CHECK_STATE2[CHECK_STATE2["CHECK"] = 1] = "CHECK";
    CHECK_STATE2[CHECK_STATE2["INDETERMINATE"] = 2] = "INDETERMINATE";
  })(CHECK_STATE || (CHECK_STATE = {}));
  var TREE_NODE_PADDING = 16;
  var TREE_NODE_ROOT_PADDING = 12;
  var TREE_NODE_DROP_POSITION;
  (function(TREE_NODE_DROP_POSITION3) {
    TREE_NODE_DROP_POSITION3[TREE_NODE_DROP_POSITION3["DRAG_OVER"] = 0] = "DRAG_OVER";
    TREE_NODE_DROP_POSITION3[TREE_NODE_DROP_POSITION3["DRAG_OVER_TOP"] = 1] = "DRAG_OVER_TOP";
    TREE_NODE_DROP_POSITION3[TREE_NODE_DROP_POSITION3["DRAG_OVER_BOTTOM"] = 2] = "DRAG_OVER_BOTTOM";
  })(TREE_NODE_DROP_POSITION || (TREE_NODE_DROP_POSITION = {}));
  var KEY_VALUES = {
    LEFT: "ArrowLeft",
    UP: "ArrowUp",
    RIGHT: "ArrowRight",
    DOWN: "ArrowDown",
    END: "End",
    HOME: "Home",
    PAGE_DOWN: "PageDown",
    PAGE_UP: "PageUp",
    ENTER: "Enter",
    TAB: "Tab",
    SPACE: " ",
    BACKSPACE: "Backspace",
    DELETE: "Delete",
    COMMA: ",",
    ESC: "Escape"
  };
  var DATERANGE_DISABLED_TARGET;
  (function(DATERANGE_DISABLED_TARGET2) {
    DATERANGE_DISABLED_TARGET2["CALENDAR"] = "CALENDAR";
    DATERANGE_DISABLED_TARGET2["TOOLBAR_BUTTON_OK"] = "TOOLBAR_BUTTON_OK";
    DATERANGE_DISABLED_TARGET2["TOOLBAR_SHORTCUT"] = "TOOLBAR_SHORTCUT";
  })(DATERANGE_DISABLED_TARGET || (DATERANGE_DISABLED_TARGET = {}));

  // ../../node_modules/rsuite/esm/utils/dateUtils.js
  var import_pick = __toModule(require_pick());
  var import_omitBy = __toModule(require_omitBy());

  // ../../node_modules/date-fns/esm/_lib/requiredArgs/index.js
  function requiredArgs(required, args) {
    if (args.length < required) {
      throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
    }
  }

  // ../../node_modules/date-fns/esm/toDate/index.js
  function toDate(argument) {
    requiredArgs(1, arguments);
    var argStr = Object.prototype.toString.call(argument);
    if (argument instanceof Date || typeof argument === "object" && argStr === "[object Date]") {
      return new Date(argument.getTime());
    } else if (typeof argument === "number" || argStr === "[object Number]") {
      return new Date(argument);
    } else {
      if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
        console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule");
        console.warn(new Error().stack);
      }
      return new Date(NaN);
    }
  }

  // ../../node_modules/date-fns/esm/_lib/toInteger/index.js
  function toInteger(dirtyNumber) {
    if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
      return NaN;
    }
    var number3 = Number(dirtyNumber);
    if (isNaN(number3)) {
      return number3;
    }
    return number3 < 0 ? Math.ceil(number3) : Math.floor(number3);
  }

  // ../../node_modules/date-fns/esm/isDate/index.js
  function isDate(value) {
    requiredArgs(1, arguments);
    return value instanceof Date || typeof value === "object" && Object.prototype.toString.call(value) === "[object Date]";
  }

  // ../../node_modules/date-fns/esm/isValid/index.js
  function isValid(dirtyDate) {
    requiredArgs(1, arguments);
    if (!isDate(dirtyDate) && typeof dirtyDate !== "number") {
      return false;
    }
    var date2 = toDate(dirtyDate);
    return !isNaN(Number(date2));
  }

  // ../../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js
  var formatDistanceLocale = {
    lessThanXSeconds: {
      one: "less than a second",
      other: "less than {{count}} seconds"
    },
    xSeconds: {
      one: "1 second",
      other: "{{count}} seconds"
    },
    halfAMinute: "half a minute",
    lessThanXMinutes: {
      one: "less than a minute",
      other: "less than {{count}} minutes"
    },
    xMinutes: {
      one: "1 minute",
      other: "{{count}} minutes"
    },
    aboutXHours: {
      one: "about 1 hour",
      other: "about {{count}} hours"
    },
    xHours: {
      one: "1 hour",
      other: "{{count}} hours"
    },
    xDays: {
      one: "1 day",
      other: "{{count}} days"
    },
    aboutXWeeks: {
      one: "about 1 week",
      other: "about {{count}} weeks"
    },
    xWeeks: {
      one: "1 week",
      other: "{{count}} weeks"
    },
    aboutXMonths: {
      one: "about 1 month",
      other: "about {{count}} months"
    },
    xMonths: {
      one: "1 month",
      other: "{{count}} months"
    },
    aboutXYears: {
      one: "about 1 year",
      other: "about {{count}} years"
    },
    xYears: {
      one: "1 year",
      other: "{{count}} years"
    },
    overXYears: {
      one: "over 1 year",
      other: "over {{count}} years"
    },
    almostXYears: {
      one: "almost 1 year",
      other: "almost {{count}} years"
    }
  };
  var formatDistance = function(token, count2, options) {
    var result;
    var tokenValue = formatDistanceLocale[token];
    if (typeof tokenValue === "string") {
      result = tokenValue;
    } else if (count2 === 1) {
      result = tokenValue.one;
    } else {
      result = tokenValue.other.replace("{{count}}", count2.toString());
    }
    if (options !== null && options !== void 0 && options.addSuffix) {
      if (options.comparison && options.comparison > 0) {
        return "in " + result;
      } else {
        return result + " ago";
      }
    }
    return result;
  };
  var formatDistance_default = formatDistance;

  // ../../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js
  function buildFormatLongFn(args) {
    return function() {
      var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var width = options.width ? String(options.width) : args.defaultWidth;
      var format4 = args.formats[width] || args.formats[args.defaultWidth];
      return format4;
    };
  }

  // ../../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js
  var dateFormats = {
    full: "EEEE, MMMM do, y",
    long: "MMMM do, y",
    medium: "MMM d, y",
    short: "MM/dd/yyyy"
  };
  var timeFormats = {
    full: "h:mm:ss a zzzz",
    long: "h:mm:ss a z",
    medium: "h:mm:ss a",
    short: "h:mm a"
  };
  var dateTimeFormats = {
    full: "{{date}} 'at' {{time}}",
    long: "{{date}} 'at' {{time}}",
    medium: "{{date}}, {{time}}",
    short: "{{date}}, {{time}}"
  };
  var formatLong = {
    date: buildFormatLongFn({
      formats: dateFormats,
      defaultWidth: "full"
    }),
    time: buildFormatLongFn({
      formats: timeFormats,
      defaultWidth: "full"
    }),
    dateTime: buildFormatLongFn({
      formats: dateTimeFormats,
      defaultWidth: "full"
    })
  };
  var formatLong_default = formatLong;

  // ../../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js
  var formatRelativeLocale = {
    lastWeek: "'last' eeee 'at' p",
    yesterday: "'yesterday at' p",
    today: "'today at' p",
    tomorrow: "'tomorrow at' p",
    nextWeek: "eeee 'at' p",
    other: "P"
  };
  var formatRelative = function(token, _date, _baseDate, _options) {
    return formatRelativeLocale[token];
  };
  var formatRelative_default = formatRelative;

  // ../../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js
  function buildLocalizeFn(args) {
    return function(dirtyIndex, dirtyOptions) {
      var options = dirtyOptions || {};
      var context = options.context ? String(options.context) : "standalone";
      var valuesArray;
      if (context === "formatting" && args.formattingValues) {
        var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
        var width = options.width ? String(options.width) : defaultWidth;
        valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
      } else {
        var _defaultWidth = args.defaultWidth;
        var _width = options.width ? String(options.width) : args.defaultWidth;
        valuesArray = args.values[_width] || args.values[_defaultWidth];
      }
      var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
      return valuesArray[index];
    };
  }

  // ../../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js
  var eraValues = {
    narrow: ["B", "A"],
    abbreviated: ["BC", "AD"],
    wide: ["Before Christ", "Anno Domini"]
  };
  var quarterValues = {
    narrow: ["1", "2", "3", "4"],
    abbreviated: ["Q1", "Q2", "Q3", "Q4"],
    wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
  };
  var monthValues = {
    narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
    abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
  };
  var dayValues = {
    narrow: ["S", "M", "T", "W", "T", "F", "S"],
    short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
    abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
  };
  var dayPeriodValues = {
    narrow: {
      am: "a",
      pm: "p",
      midnight: "mi",
      noon: "n",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night"
    },
    abbreviated: {
      am: "AM",
      pm: "PM",
      midnight: "midnight",
      noon: "noon",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night"
    },
    wide: {
      am: "a.m.",
      pm: "p.m.",
      midnight: "midnight",
      noon: "noon",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night"
    }
  };
  var formattingDayPeriodValues = {
    narrow: {
      am: "a",
      pm: "p",
      midnight: "mi",
      noon: "n",
      morning: "in the morning",
      afternoon: "in the afternoon",
      evening: "in the evening",
      night: "at night"
    },
    abbreviated: {
      am: "AM",
      pm: "PM",
      midnight: "midnight",
      noon: "noon",
      morning: "in the morning",
      afternoon: "in the afternoon",
      evening: "in the evening",
      night: "at night"
    },
    wide: {
      am: "a.m.",
      pm: "p.m.",
      midnight: "midnight",
      noon: "noon",
      morning: "in the morning",
      afternoon: "in the afternoon",
      evening: "in the evening",
      night: "at night"
    }
  };
  var ordinalNumber = function(dirtyNumber, _options) {
    var number3 = Number(dirtyNumber);
    var rem100 = number3 % 100;
    if (rem100 > 20 || rem100 < 10) {
      switch (rem100 % 10) {
        case 1:
          return number3 + "st";
        case 2:
          return number3 + "nd";
        case 3:
          return number3 + "rd";
      }
    }
    return number3 + "th";
  };
  var localize = {
    ordinalNumber,
    era: buildLocalizeFn({
      values: eraValues,
      defaultWidth: "wide"
    }),
    quarter: buildLocalizeFn({
      values: quarterValues,
      defaultWidth: "wide",
      argumentCallback: function(quarter) {
        return quarter - 1;
      }
    }),
    month: buildLocalizeFn({
      values: monthValues,
      defaultWidth: "wide"
    }),
    day: buildLocalizeFn({
      values: dayValues,
      defaultWidth: "wide"
    }),
    dayPeriod: buildLocalizeFn({
      values: dayPeriodValues,
      defaultWidth: "wide",
      formattingValues: formattingDayPeriodValues,
      defaultFormattingWidth: "wide"
    })
  };
  var localize_default = localize;

  // ../../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js
  function buildMatchFn(args) {
    return function(string) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var width = options.width;
      var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
      var matchResult = string.match(matchPattern);
      if (!matchResult) {
        return null;
      }
      var matchedString = matchResult[0];
      var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
      var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
        return pattern.test(matchedString);
      }) : findKey(parsePatterns, function(pattern) {
        return pattern.test(matchedString);
      });
      var value;
      value = args.valueCallback ? args.valueCallback(key) : key;
      value = options.valueCallback ? options.valueCallback(value) : value;
      var rest = string.slice(matchedString.length);
      return {
        value,
        rest
      };
    };
  }
  function findKey(object2, predicate) {
    for (var key in object2) {
      if (object2.hasOwnProperty(key) && predicate(object2[key])) {
        return key;
      }
    }
    return void 0;
  }
  function findIndex(array2, predicate) {
    for (var key = 0; key < array2.length; key++) {
      if (predicate(array2[key])) {
        return key;
      }
    }
    return void 0;
  }

  // ../../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js
  function buildMatchPatternFn(args) {
    return function(string) {
      var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var matchResult = string.match(args.matchPattern);
      if (!matchResult)
        return null;
      var matchedString = matchResult[0];
      var parseResult = string.match(args.parsePattern);
      if (!parseResult)
        return null;
      var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
      value = options.valueCallback ? options.valueCallback(value) : value;
      var rest = string.slice(matchedString.length);
      return {
        value,
        rest
      };
    };
  }

  // ../../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js
  var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
  var parseOrdinalNumberPattern = /\d+/i;
  var matchEraPatterns = {
    narrow: /^(b|a)/i,
    abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
    wide: /^(before christ|before common era|anno domini|common era)/i
  };
  var parseEraPatterns = {
    any: [/^b/i, /^(a|c)/i]
  };
  var matchQuarterPatterns = {
    narrow: /^[1234]/i,
    abbreviated: /^q[1234]/i,
    wide: /^[1234](th|st|nd|rd)? quarter/i
  };
  var parseQuarterPatterns = {
    any: [/1/i, /2/i, /3/i, /4/i]
  };
  var matchMonthPatterns = {
    narrow: /^[jfmasond]/i,
    abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
    wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
  };
  var parseMonthPatterns = {
    narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
    any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
  };
  var matchDayPatterns = {
    narrow: /^[smtwf]/i,
    short: /^(su|mo|tu|we|th|fr|sa)/i,
    abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
    wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
  };
  var parseDayPatterns = {
    narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
    any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
  };
  var matchDayPeriodPatterns = {
    narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
    any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
  };
  var parseDayPeriodPatterns = {
    any: {
      am: /^a/i,
      pm: /^p/i,
      midnight: /^mi/i,
      noon: /^no/i,
      morning: /morning/i,
      afternoon: /afternoon/i,
      evening: /evening/i,
      night: /night/i
    }
  };
  var match = {
    ordinalNumber: buildMatchPatternFn({
      matchPattern: matchOrdinalNumberPattern,
      parsePattern: parseOrdinalNumberPattern,
      valueCallback: function(value) {
        return parseInt(value, 10);
      }
    }),
    era: buildMatchFn({
      matchPatterns: matchEraPatterns,
      defaultMatchWidth: "wide",
      parsePatterns: parseEraPatterns,
      defaultParseWidth: "any"
    }),
    quarter: buildMatchFn({
      matchPatterns: matchQuarterPatterns,
      defaultMatchWidth: "wide",
      parsePatterns: parseQuarterPatterns,
      defaultParseWidth: "any",
      valueCallback: function(index) {
        return index + 1;
      }
    }),
    month: buildMatchFn({
      matchPatterns: matchMonthPatterns,
      defaultMatchWidth: "wide",
      parsePatterns: parseMonthPatterns,
      defaultParseWidth: "any"
    }),
    day: buildMatchFn({
      matchPatterns: matchDayPatterns,
      defaultMatchWidth: "wide",
      parsePatterns: parseDayPatterns,
      defaultParseWidth: "any"
    }),
    dayPeriod: buildMatchFn({
      matchPatterns: matchDayPeriodPatterns,
      defaultMatchWidth: "any",
      parsePatterns: parseDayPeriodPatterns,
      defaultParseWidth: "any"
    })
  };
  var match_default = match;

  // ../../node_modules/date-fns/esm/locale/en-US/index.js
  var locale = {
    code: "en-US",
    formatDistance: formatDistance_default,
    formatLong: formatLong_default,
    formatRelative: formatRelative_default,
    localize: localize_default,
    match: match_default,
    options: {
      weekStartsOn: 0,
      firstWeekContainsDate: 1
    }
  };
  var en_US_default = locale;

  // ../../node_modules/date-fns/esm/addMilliseconds/index.js
  function addMilliseconds(dirtyDate, dirtyAmount) {
    requiredArgs(2, arguments);
    var timestamp = toDate(dirtyDate).getTime();
    var amount = toInteger(dirtyAmount);
    return new Date(timestamp + amount);
  }

  // ../../node_modules/date-fns/esm/subMilliseconds/index.js
  function subMilliseconds(dirtyDate, dirtyAmount) {
    requiredArgs(2, arguments);
    var amount = toInteger(dirtyAmount);
    return addMilliseconds(dirtyDate, -amount);
  }

  // ../../node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js
  var MILLISECONDS_IN_DAY = 864e5;
  function getUTCDayOfYear(dirtyDate) {
    requiredArgs(1, arguments);
    var date2 = toDate(dirtyDate);
    var timestamp = date2.getTime();
    date2.setUTCMonth(0, 1);
    date2.setUTCHours(0, 0, 0, 0);
    var startOfYearTimestamp = date2.getTime();
    var difference = timestamp - startOfYearTimestamp;
    return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
  }

  // ../../node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js
  function startOfUTCISOWeek(dirtyDate) {
    requiredArgs(1, arguments);
    var weekStartsOn = 1;
    var date2 = toDate(dirtyDate);
    var day2 = date2.getUTCDay();
    var diff = (day2 < weekStartsOn ? 7 : 0) + day2 - weekStartsOn;
    date2.setUTCDate(date2.getUTCDate() - diff);
    date2.setUTCHours(0, 0, 0, 0);
    return date2;
  }

  // ../../node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js
  function getUTCISOWeekYear(dirtyDate) {
    requiredArgs(1, arguments);
    var date2 = toDate(dirtyDate);
    var year3 = date2.getUTCFullYear();
    var fourthOfJanuaryOfNextYear = new Date(0);
    fourthOfJanuaryOfNextYear.setUTCFullYear(year3 + 1, 0, 4);
    fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
    var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);
    var fourthOfJanuaryOfThisYear = new Date(0);
    fourthOfJanuaryOfThisYear.setUTCFullYear(year3, 0, 4);
    fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
    var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);
    if (date2.getTime() >= startOfNextYear.getTime()) {
      return year3 + 1;
    } else if (date2.getTime() >= startOfThisYear.getTime()) {
      return year3;
    } else {
      return year3 - 1;
    }
  }

  // ../../node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js
  function startOfUTCISOWeekYear(dirtyDate) {
    requiredArgs(1, arguments);
    var year3 = getUTCISOWeekYear(dirtyDate);
    var fourthOfJanuary = new Date(0);
    fourthOfJanuary.setUTCFullYear(year3, 0, 4);
    fourthOfJanuary.setUTCHours(0, 0, 0, 0);
    var date2 = startOfUTCISOWeek(fourthOfJanuary);
    return date2;
  }

  // ../../node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js
  var MILLISECONDS_IN_WEEK = 6048e5;
  function getUTCISOWeek(dirtyDate) {
    requiredArgs(1, arguments);
    var date2 = toDate(dirtyDate);
    var diff = startOfUTCISOWeek(date2).getTime() - startOfUTCISOWeekYear(date2).getTime();
    return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
  }

  // ../../node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js
  function startOfUTCWeek(dirtyDate, dirtyOptions) {
    requiredArgs(1, arguments);
    var options = dirtyOptions || {};
    var locale6 = options.locale;
    var localeWeekStartsOn = locale6 && locale6.options && locale6.options.weekStartsOn;
    var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
    var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn);
    if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
      throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
    }
    var date2 = toDate(dirtyDate);
    var day2 = date2.getUTCDay();
    var diff = (day2 < weekStartsOn ? 7 : 0) + day2 - weekStartsOn;
    date2.setUTCDate(date2.getUTCDate() - diff);
    date2.setUTCHours(0, 0, 0, 0);
    return date2;
  }

  // ../../node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js
  function getUTCWeekYear(dirtyDate, dirtyOptions) {
    requiredArgs(1, arguments);
    var date2 = toDate(dirtyDate);
    var year3 = date2.getUTCFullYear();
    var options = dirtyOptions || {};
    var locale6 = options.locale;
    var localeFirstWeekContainsDate = locale6 && locale6.options && locale6.options.firstWeekContainsDate;
    var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
    var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);
    if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
      throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
    }
    var firstWeekOfNextYear = new Date(0);
    firstWeekOfNextYear.setUTCFullYear(year3 + 1, 0, firstWeekContainsDate);
    firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
    var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);
    var firstWeekOfThisYear = new Date(0);
    firstWeekOfThisYear.setUTCFullYear(year3, 0, firstWeekContainsDate);
    firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
    var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);
    if (date2.getTime() >= startOfNextYear.getTime()) {
      return year3 + 1;
    } else if (date2.getTime() >= startOfThisYear.getTime()) {
      return year3;
    } else {
      return year3 - 1;
    }
  }

  // ../../node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js
  function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
    requiredArgs(1, arguments);
    var options = dirtyOptions || {};
    var locale6 = options.locale;
    var localeFirstWeekContainsDate = locale6 && locale6.options && locale6.options.firstWeekContainsDate;
    var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
    var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);
    var year3 = getUTCWeekYear(dirtyDate, dirtyOptions);
    var firstWeek = new Date(0);
    firstWeek.setUTCFullYear(year3, 0, firstWeekContainsDate);
    firstWeek.setUTCHours(0, 0, 0, 0);
    var date2 = startOfUTCWeek(firstWeek, dirtyOptions);
    return date2;
  }

  // ../../node_modules/date-fns/esm/_lib/getUTCWeek/index.js
  var MILLISECONDS_IN_WEEK2 = 6048e5;
  function getUTCWeek(dirtyDate, options) {
    requiredArgs(1, arguments);
    var date2 = toDate(dirtyDate);
    var diff = startOfUTCWeek(date2, options).getTime() - startOfUTCWeekYear(date2, options).getTime();
    return Math.round(diff / MILLISECONDS_IN_WEEK2) + 1;
  }

  // ../../node_modules/date-fns/esm/_lib/addLeadingZeros/index.js
  function addLeadingZeros(number3, targetLength) {
    var sign3 = number3 < 0 ? "-" : "";
    var output = Math.abs(number3).toString();
    while (output.length < targetLength) {
      output = "0" + output;
    }
    return sign3 + output;
  }

  // ../../node_modules/date-fns/esm/_lib/format/lightFormatters/index.js
  var formatters = {
    y: function(date2, token) {
      var signedYear = date2.getUTCFullYear();
      var year3 = signedYear > 0 ? signedYear : 1 - signedYear;
      return addLeadingZeros(token === "yy" ? year3 % 100 : year3, token.length);
    },
    M: function(date2, token) {
      var month3 = date2.getUTCMonth();
      return token === "M" ? String(month3 + 1) : addLeadingZeros(month3 + 1, 2);
    },
    d: function(date2, token) {
      return addLeadingZeros(date2.getUTCDate(), token.length);
    },
    a: function(date2, token) {
      var dayPeriodEnumValue = date2.getUTCHours() / 12 >= 1 ? "pm" : "am";
      switch (token) {
        case "a":
        case "aa":
          return dayPeriodEnumValue.toUpperCase();
        case "aaa":
          return dayPeriodEnumValue;
        case "aaaaa":
          return dayPeriodEnumValue[0];
        case "aaaa":
        default:
          return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
      }
    },
    h: function(date2, token) {
      return addLeadingZeros(date2.getUTCHours() % 12 || 12, token.length);
    },
    H: function(date2, token) {
      return addLeadingZeros(date2.getUTCHours(), token.length);
    },
    m: function(date2, token) {
      return addLeadingZeros(date2.getUTCMinutes(), token.length);
    },
    s: function(date2, token) {
      return addLeadingZeros(date2.getUTCSeconds(), token.length);
    },
    S: function(date2, token) {
      var numberOfDigits = token.length;
      var milliseconds3 = date2.getUTCMilliseconds();
      var fractionalSeconds = Math.floor(milliseconds3 * Math.pow(10, numberOfDigits - 3));
      return addLeadingZeros(fractionalSeconds, token.length);
    }
  };
  var lightFormatters_default = formatters;

  // ../../node_modules/date-fns/esm/_lib/format/formatters/index.js
  var dayPeriodEnum = {
    am: "am",
    pm: "pm",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  };
  var formatters2 = {
    G: function(date2, token, localize2) {
      var era = date2.getUTCFullYear() > 0 ? 1 : 0;
      switch (token) {
        case "G":
        case "GG":
        case "GGG":
          return localize2.era(era, {
            width: "abbreviated"
          });
        case "GGGGG":
          return localize2.era(era, {
            width: "narrow"
          });
        case "GGGG":
        default:
          return localize2.era(era, {
            width: "wide"
          });
      }
    },
    y: function(date2, token, localize2) {
      if (token === "yo") {
        var signedYear = date2.getUTCFullYear();
        var year3 = signedYear > 0 ? signedYear : 1 - signedYear;
        return localize2.ordinalNumber(year3, {
          unit: "year"
        });
      }
      return lightFormatters_default.y(date2, token);
    },
    Y: function(date2, token, localize2, options) {
      var signedWeekYear = getUTCWeekYear(date2, options);
      var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
      if (token === "YY") {
        var twoDigitYear = weekYear % 100;
        return addLeadingZeros(twoDigitYear, 2);
      }
      if (token === "Yo") {
        return localize2.ordinalNumber(weekYear, {
          unit: "year"
        });
      }
      return addLeadingZeros(weekYear, token.length);
    },
    R: function(date2, token) {
      var isoWeekYear = getUTCISOWeekYear(date2);
      return addLeadingZeros(isoWeekYear, token.length);
    },
    u: function(date2, token) {
      var year3 = date2.getUTCFullYear();
      return addLeadingZeros(year3, token.length);
    },
    Q: function(date2, token, localize2) {
      var quarter = Math.ceil((date2.getUTCMonth() + 1) / 3);
      switch (token) {
        case "Q":
          return String(quarter);
        case "QQ":
          return addLeadingZeros(quarter, 2);
        case "Qo":
          return localize2.ordinalNumber(quarter, {
            unit: "quarter"
          });
        case "QQQ":
          return localize2.quarter(quarter, {
            width: "abbreviated",
            context: "formatting"
          });
        case "QQQQQ":
          return localize2.quarter(quarter, {
            width: "narrow",
            context: "formatting"
          });
        case "QQQQ":
        default:
          return localize2.quarter(quarter, {
            width: "wide",
            context: "formatting"
          });
      }
    },
    q: function(date2, token, localize2) {
      var quarter = Math.ceil((date2.getUTCMonth() + 1) / 3);
      switch (token) {
        case "q":
          return String(quarter);
        case "qq":
          return addLeadingZeros(quarter, 2);
        case "qo":
          return localize2.ordinalNumber(quarter, {
            unit: "quarter"
          });
        case "qqq":
          return localize2.quarter(quarter, {
            width: "abbreviated",
            context: "standalone"
          });
        case "qqqqq":
          return localize2.quarter(quarter, {
            width: "narrow",
            context: "standalone"
          });
        case "qqqq":
        default:
          return localize2.quarter(quarter, {
            width: "wide",
            context: "standalone"
          });
      }
    },
    M: function(date2, token, localize2) {
      var month3 = date2.getUTCMonth();
      switch (token) {
        case "M":
        case "MM":
          return lightFormatters_default.M(date2, token);
        case "Mo":
          return localize2.ordinalNumber(month3 + 1, {
            unit: "month"
          });
        case "MMM":
          return localize2.month(month3, {
            width: "abbreviated",
            context: "formatting"
          });
        case "MMMMM":
          return localize2.month(month3, {
            width: "narrow",
            context: "formatting"
          });
        case "MMMM":
        default:
          return localize2.month(month3, {
            width: "wide",
            context: "formatting"
          });
      }
    },
    L: function(date2, token, localize2) {
      var month3 = date2.getUTCMonth();
      switch (token) {
        case "L":
          return String(month3 + 1);
        case "LL":
          return addLeadingZeros(month3 + 1, 2);
        case "Lo":
          return localize2.ordinalNumber(month3 + 1, {
            unit: "month"
          });
        case "LLL":
          return localize2.month(month3, {
            width: "abbreviated",
            context: "standalone"
          });
        case "LLLLL":
          return localize2.month(month3, {
            width: "narrow",
            context: "standalone"
          });
        case "LLLL":
        default:
          return localize2.month(month3, {
            width: "wide",
            context: "standalone"
          });
      }
    },
    w: function(date2, token, localize2, options) {
      var week = getUTCWeek(date2, options);
      if (token === "wo") {
        return localize2.ordinalNumber(week, {
          unit: "week"
        });
      }
      return addLeadingZeros(week, token.length);
    },
    I: function(date2, token, localize2) {
      var isoWeek = getUTCISOWeek(date2);
      if (token === "Io") {
        return localize2.ordinalNumber(isoWeek, {
          unit: "week"
        });
      }
      return addLeadingZeros(isoWeek, token.length);
    },
    d: function(date2, token, localize2) {
      if (token === "do") {
        return localize2.ordinalNumber(date2.getUTCDate(), {
          unit: "date"
        });
      }
      return lightFormatters_default.d(date2, token);
    },
    D: function(date2, token, localize2) {
      var dayOfYear = getUTCDayOfYear(date2);
      if (token === "Do") {
        return localize2.ordinalNumber(dayOfYear, {
          unit: "dayOfYear"
        });
      }
      return addLeadingZeros(dayOfYear, token.length);
    },
    E: function(date2, token, localize2) {
      var dayOfWeek = date2.getUTCDay();
      switch (token) {
        case "E":
        case "EE":
        case "EEE":
          return localize2.day(dayOfWeek, {
            width: "abbreviated",
            context: "formatting"
          });
        case "EEEEE":
          return localize2.day(dayOfWeek, {
            width: "narrow",
            context: "formatting"
          });
        case "EEEEEE":
          return localize2.day(dayOfWeek, {
            width: "short",
            context: "formatting"
          });
        case "EEEE":
        default:
          return localize2.day(dayOfWeek, {
            width: "wide",
            context: "formatting"
          });
      }
    },
    e: function(date2, token, localize2, options) {
      var dayOfWeek = date2.getUTCDay();
      var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
      switch (token) {
        case "e":
          return String(localDayOfWeek);
        case "ee":
          return addLeadingZeros(localDayOfWeek, 2);
        case "eo":
          return localize2.ordinalNumber(localDayOfWeek, {
            unit: "day"
          });
        case "eee":
          return localize2.day(dayOfWeek, {
            width: "abbreviated",
            context: "formatting"
          });
        case "eeeee":
          return localize2.day(dayOfWeek, {
            width: "narrow",
            context: "formatting"
          });
        case "eeeeee":
          return localize2.day(dayOfWeek, {
            width: "short",
            context: "formatting"
          });
        case "eeee":
        default:
          return localize2.day(dayOfWeek, {
            width: "wide",
            context: "formatting"
          });
      }
    },
    c: function(date2, token, localize2, options) {
      var dayOfWeek = date2.getUTCDay();
      var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
      switch (token) {
        case "c":
          return String(localDayOfWeek);
        case "cc":
          return addLeadingZeros(localDayOfWeek, token.length);
        case "co":
          return localize2.ordinalNumber(localDayOfWeek, {
            unit: "day"
          });
        case "ccc":
          return localize2.day(dayOfWeek, {
            width: "abbreviated",
            context: "standalone"
          });
        case "ccccc":
          return localize2.day(dayOfWeek, {
            width: "narrow",
            context: "standalone"
          });
        case "cccccc":
          return localize2.day(dayOfWeek, {
            width: "short",
            context: "standalone"
          });
        case "cccc":
        default:
          return localize2.day(dayOfWeek, {
            width: "wide",
            context: "standalone"
          });
      }
    },
    i: function(date2, token, localize2) {
      var dayOfWeek = date2.getUTCDay();
      var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
      switch (token) {
        case "i":
          return String(isoDayOfWeek);
        case "ii":
          return addLeadingZeros(isoDayOfWeek, token.length);
        case "io":
          return localize2.ordinalNumber(isoDayOfWeek, {
            unit: "day"
          });
        case "iii":
          return localize2.day(dayOfWeek, {
            width: "abbreviated",
            context: "formatting"
          });
        case "iiiii":
          return localize2.day(dayOfWeek, {
            width: "narrow",
            context: "formatting"
          });
        case "iiiiii":
          return localize2.day(dayOfWeek, {
            width: "short",
            context: "formatting"
          });
        case "iiii":
        default:
          return localize2.day(dayOfWeek, {
            width: "wide",
            context: "formatting"
          });
      }
    },
    a: function(date2, token, localize2) {
      var hours3 = date2.getUTCHours();
      var dayPeriodEnumValue = hours3 / 12 >= 1 ? "pm" : "am";
      switch (token) {
        case "a":
        case "aa":
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "abbreviated",
            context: "formatting"
          });
        case "aaa":
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "abbreviated",
            context: "formatting"
          }).toLowerCase();
        case "aaaaa":
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "narrow",
            context: "formatting"
          });
        case "aaaa":
        default:
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "wide",
            context: "formatting"
          });
      }
    },
    b: function(date2, token, localize2) {
      var hours3 = date2.getUTCHours();
      var dayPeriodEnumValue;
      if (hours3 === 12) {
        dayPeriodEnumValue = dayPeriodEnum.noon;
      } else if (hours3 === 0) {
        dayPeriodEnumValue = dayPeriodEnum.midnight;
      } else {
        dayPeriodEnumValue = hours3 / 12 >= 1 ? "pm" : "am";
      }
      switch (token) {
        case "b":
        case "bb":
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "abbreviated",
            context: "formatting"
          });
        case "bbb":
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "abbreviated",
            context: "formatting"
          }).toLowerCase();
        case "bbbbb":
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "narrow",
            context: "formatting"
          });
        case "bbbb":
        default:
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "wide",
            context: "formatting"
          });
      }
    },
    B: function(date2, token, localize2) {
      var hours3 = date2.getUTCHours();
      var dayPeriodEnumValue;
      if (hours3 >= 17) {
        dayPeriodEnumValue = dayPeriodEnum.evening;
      } else if (hours3 >= 12) {
        dayPeriodEnumValue = dayPeriodEnum.afternoon;
      } else if (hours3 >= 4) {
        dayPeriodEnumValue = dayPeriodEnum.morning;
      } else {
        dayPeriodEnumValue = dayPeriodEnum.night;
      }
      switch (token) {
        case "B":
        case "BB":
        case "BBB":
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "abbreviated",
            context: "formatting"
          });
        case "BBBBB":
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "narrow",
            context: "formatting"
          });
        case "BBBB":
        default:
          return localize2.dayPeriod(dayPeriodEnumValue, {
            width: "wide",
            context: "formatting"
          });
      }
    },
    h: function(date2, token, localize2) {
      if (token === "ho") {
        var hours3 = date2.getUTCHours() % 12;
        if (hours3 === 0)
          hours3 = 12;
        return localize2.ordinalNumber(hours3, {
          unit: "hour"
        });
      }
      return lightFormatters_default.h(date2, token);
    },
    H: function(date2, token, localize2) {
      if (token === "Ho") {
        return localize2.ordinalNumber(date2.getUTCHours(), {
          unit: "hour"
        });
      }
      return lightFormatters_default.H(date2, token);
    },
    K: function(date2, token, localize2) {
      var hours3 = date2.getUTCHours() % 12;
      if (token === "Ko") {
        return localize2.ordinalNumber(hours3, {
          unit: "hour"
        });
      }
      return addLeadingZeros(hours3, token.length);
    },
    k: function(date2, token, localize2) {
      var hours3 = date2.getUTCHours();
      if (hours3 === 0)
        hours3 = 24;
      if (token === "ko") {
        return localize2.ordinalNumber(hours3, {
          unit: "hour"
        });
      }
      return addLeadingZeros(hours3, token.length);
    },
    m: function(date2, token, localize2) {
      if (token === "mo") {
        return localize2.ordinalNumber(date2.getUTCMinutes(), {
          unit: "minute"
        });
      }
      return lightFormatters_default.m(date2, token);
    },
    s: function(date2, token, localize2) {
      if (token === "so") {
        return localize2.ordinalNumber(date2.getUTCSeconds(), {
          unit: "second"
        });
      }
      return lightFormatters_default.s(date2, token);
    },
    S: function(date2, token) {
      return lightFormatters_default.S(date2, token);
    },
    X: function(date2, token, _localize, options) {
      var originalDate = options._originalDate || date2;
      var timezoneOffset = originalDate.getTimezoneOffset();
      if (timezoneOffset === 0) {
        return "Z";
      }
      switch (token) {
        case "X":
          return formatTimezoneWithOptionalMinutes(timezoneOffset);
        case "XXXX":
        case "XX":
          return formatTimezone(timezoneOffset);
        case "XXXXX":
        case "XXX":
        default:
          return formatTimezone(timezoneOffset, ":");
      }
    },
    x: function(date2, token, _localize, options) {
      var originalDate = options._originalDate || date2;
      var timezoneOffset = originalDate.getTimezoneOffset();
      switch (token) {
        case "x":
          return formatTimezoneWithOptionalMinutes(timezoneOffset);
        case "xxxx":
        case "xx":
          return formatTimezone(timezoneOffset);
        case "xxxxx":
        case "xxx":
        default:
          return formatTimezone(timezoneOffset, ":");
      }
    },
    O: function(date2, token, _localize, options) {
      var originalDate = options._originalDate || date2;
      var timezoneOffset = originalDate.getTimezoneOffset();
      switch (token) {
        case "O":
        case "OO":
        case "OOO":
          return "GMT" + formatTimezoneShort(timezoneOffset, ":");
        case "OOOO":
        default:
          return "GMT" + formatTimezone(timezoneOffset, ":");
      }
    },
    z: function(date2, token, _localize, options) {
      var originalDate = options._originalDate || date2;
      var timezoneOffset = originalDate.getTimezoneOffset();
      switch (token) {
        case "z":
        case "zz":
        case "zzz":
          return "GMT" + formatTimezoneShort(timezoneOffset, ":");
        case "zzzz":
        default:
          return "GMT" + formatTimezone(timezoneOffset, ":");
      }
    },
    t: function(date2, token, _localize, options) {
      var originalDate = options._originalDate || date2;
      var timestamp = Math.floor(originalDate.getTime() / 1e3);
      return addLeadingZeros(timestamp, token.length);
    },
    T: function(date2, token, _localize, options) {
      var originalDate = options._originalDate || date2;
      var timestamp = originalDate.getTime();
      return addLeadingZeros(timestamp, token.length);
    }
  };
  function formatTimezoneShort(offset, dirtyDelimiter) {
    var sign3 = offset > 0 ? "-" : "+";
    var absOffset = Math.abs(offset);
    var hours3 = Math.floor(absOffset / 60);
    var minutes3 = absOffset % 60;
    if (minutes3 === 0) {
      return sign3 + String(hours3);
    }
    var delimiter = dirtyDelimiter || "";
    return sign3 + String(hours3) + delimiter + addLeadingZeros(minutes3, 2);
  }
  function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
    if (offset % 60 === 0) {
      var sign3 = offset > 0 ? "-" : "+";
      return sign3 + addLeadingZeros(Math.abs(offset) / 60, 2);
    }
    return formatTimezone(offset, dirtyDelimiter);
  }
  function formatTimezone(offset, dirtyDelimiter) {
    var delimiter = dirtyDelimiter || "";
    var sign3 = offset > 0 ? "-" : "+";
    var absOffset = Math.abs(offset);
    var hours3 = addLeadingZeros(Math.floor(absOffset / 60), 2);
    var minutes3 = addLeadingZeros(absOffset % 60, 2);
    return sign3 + hours3 + delimiter + minutes3;
  }
  var formatters_default = formatters2;

  // ../../node_modules/date-fns/esm/_lib/format/longFormatters/index.js
  function dateLongFormatter(pattern, formatLong3) {
    switch (pattern) {
      case "P":
        return formatLong3.date({
          width: "short"
        });
      case "PP":
        return formatLong3.date({
          width: "medium"
        });
      case "PPP":
        return formatLong3.date({
          width: "long"
        });
      case "PPPP":
      default:
        return formatLong3.date({
          width: "full"
        });
    }
  }
  function timeLongFormatter(pattern, formatLong3) {
    switch (pattern) {
      case "p":
        return formatLong3.time({
          width: "short"
        });
      case "pp":
        return formatLong3.time({
          width: "medium"
        });
      case "ppp":
        return formatLong3.time({
          width: "long"
        });
      case "pppp":
      default:
        return formatLong3.time({
          width: "full"
        });
    }
  }
  function dateTimeLongFormatter(pattern, formatLong3) {
    var matchResult = pattern.match(/(P+)(p+)?/) || [];
    var datePattern = matchResult[1];
    var timePattern = matchResult[2];
    if (!timePattern) {
      return dateLongFormatter(pattern, formatLong3);
    }
    var dateTimeFormat;
    switch (datePattern) {
      case "P":
        dateTimeFormat = formatLong3.dateTime({
          width: "short"
        });
        break;
      case "PP":
        dateTimeFormat = formatLong3.dateTime({
          width: "medium"
        });
        break;
      case "PPP":
        dateTimeFormat = formatLong3.dateTime({
          width: "long"
        });
        break;
      case "PPPP":
      default:
        dateTimeFormat = formatLong3.dateTime({
          width: "full"
        });
        break;
    }
    return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong3)).replace("{{time}}", timeLongFormatter(timePattern, formatLong3));
  }
  var longFormatters = {
    p: timeLongFormatter,
    P: dateTimeLongFormatter
  };
  var longFormatters_default = longFormatters;

  // ../../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js
  function getTimezoneOffsetInMilliseconds(date2) {
    var utcDate2 = new Date(Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate(), date2.getHours(), date2.getMinutes(), date2.getSeconds(), date2.getMilliseconds()));
    utcDate2.setUTCFullYear(date2.getFullYear());
    return date2.getTime() - utcDate2.getTime();
  }

  // ../../node_modules/date-fns/esm/_lib/protectedTokens/index.js
  var protectedDayOfYearTokens = ["D", "DD"];
  var protectedWeekYearTokens = ["YY", "YYYY"];
  function isProtectedDayOfYearToken(token) {
    return protectedDayOfYearTokens.indexOf(token) !== -1;
  }
  function isProtectedWeekYearToken(token) {
    return protectedWeekYearTokens.indexOf(token) !== -1;
  }
  function throwProtectedError(token, format4, input) {
    if (token === "YYYY") {
      throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format4, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
    } else if (token === "YY") {
      throw new RangeError("Use `yy` instead of `YY` (in `".concat(format4, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
    } else if (token === "D") {
      throw new RangeError("Use `d` instead of `D` (in `".concat(format4, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
    } else if (token === "DD") {
      throw new RangeError("Use `dd` instead of `DD` (in `".concat(format4, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
    }
  }

  // ../../node_modules/date-fns/esm/format/index.js
  var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
  var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
  var escapedStringRegExp = /^'([^]*?)'?$/;
  var doubleQuoteRegExp = /''/g;
  var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
  function format(dirtyDate, dirtyFormatStr, dirtyOptions) {
    requiredArgs(2, arguments);
    var formatStr = String(dirtyFormatStr);
    var options = dirtyOptions || {};
    var locale6 = options.locale || en_US_default;
    var localeFirstWeekContainsDate = locale6.options && locale6.options.firstWeekContainsDate;
    var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
    var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);
    if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
      throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
    }
    var localeWeekStartsOn = locale6.options && locale6.options.weekStartsOn;
    var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
    var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn);
    if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
      throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
    }
    if (!locale6.localize) {
      throw new RangeError("locale must contain localize property");
    }
    if (!locale6.formatLong) {
      throw new RangeError("locale must contain formatLong property");
    }
    var originalDate = toDate(dirtyDate);
    if (!isValid(originalDate)) {
      throw new RangeError("Invalid time value");
    }
    var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);
    var utcDate2 = subMilliseconds(originalDate, timezoneOffset);
    var formatterOptions = {
      firstWeekContainsDate,
      weekStartsOn,
      locale: locale6,
      _originalDate: originalDate
    };
    var result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
      var firstCharacter = substring[0];
      if (firstCharacter === "p" || firstCharacter === "P") {
        var longFormatter = longFormatters_default[firstCharacter];
        return longFormatter(substring, locale6.formatLong, formatterOptions);
      }
      return substring;
    }).join("").match(formattingTokensRegExp).map(function(substring) {
      if (substring === "''") {
        return "'";
      }
      var firstCharacter = substring[0];
      if (firstCharacter === "'") {
        return cleanEscapedString(substring);
      }
      var formatter = formatters_default[firstCharacter];
      if (formatter) {
        if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {
          throwProtectedError(substring, dirtyFormatStr, dirtyDate);
        }
        if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {
          throwProtectedError(substring, dirtyFormatStr, dirtyDate);
        }
        return formatter(utcDate2, substring, locale6.localize, formatterOptions);
      }
      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
        throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
      }
      return substring;
    }).join("");
    return result;
  }
  function cleanEscapedString(input) {
    return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
  }

  // ../../node_modules/date-fns/esm/_lib/assign/index.js
  function assign(target, dirtyObject) {
    if (target == null) {
      throw new TypeError("assign requires that input parameter not be null or undefined");
    }
    dirtyObject = dirtyObject || {};
    for (var property in dirtyObject) {
      if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {
        target[property] = dirtyObject[property];
      }
    }
    return target;
  }

  // ../../node_modules/date-fns/esm/_lib/setUTCDay/index.js
  function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {
    requiredArgs(2, arguments);
    var options = dirtyOptions || {};
    var locale6 = options.locale;
    var localeWeekStartsOn = locale6 && locale6.options && locale6.options.weekStartsOn;
    var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
    var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn);
    if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
      throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
    }
    var date2 = toDate(dirtyDate);
    var day2 = toInteger(dirtyDay);
    var currentDay = date2.getUTCDay();
    var remainder = day2 % 7;
    var dayIndex = (remainder + 7) % 7;
    var diff = (dayIndex < weekStartsOn ? 7 : 0) + day2 - currentDay;
    date2.setUTCDate(date2.getUTCDate() + diff);
    return date2;
  }

  // ../../node_modules/date-fns/esm/_lib/setUTCISODay/index.js
  function setUTCISODay(dirtyDate, dirtyDay) {
    requiredArgs(2, arguments);
    var day2 = toInteger(dirtyDay);
    if (day2 % 7 === 0) {
      day2 = day2 - 7;
    }
    var weekStartsOn = 1;
    var date2 = toDate(dirtyDate);
    var currentDay = date2.getUTCDay();
    var remainder = day2 % 7;
    var dayIndex = (remainder + 7) % 7;
    var diff = (dayIndex < weekStartsOn ? 7 : 0) + day2 - currentDay;
    date2.setUTCDate(date2.getUTCDate() + diff);
    return date2;
  }

  // ../../node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js
  function setUTCISOWeek(dirtyDate, dirtyISOWeek) {
    requiredArgs(2, arguments);
    var date2 = toDate(dirtyDate);
    var isoWeek = toInteger(dirtyISOWeek);
    var diff = getUTCISOWeek(date2) - isoWeek;
    date2.setUTCDate(date2.getUTCDate() - diff * 7);
    return date2;
  }

  // ../../node_modules/date-fns/esm/_lib/setUTCWeek/index.js
  function setUTCWeek(dirtyDate, dirtyWeek, options) {
    requiredArgs(2, arguments);
    var date2 = toDate(dirtyDate);
    var week = toInteger(dirtyWeek);
    var diff = getUTCWeek(date2, options) - week;
    date2.setUTCDate(date2.getUTCDate() - diff * 7);
    return date2;
  }

  // ../../node_modules/date-fns/esm/parse/_lib/parsers/index.js
  var MILLISECONDS_IN_HOUR = 36e5;
  var MILLISECONDS_IN_MINUTE = 6e4;
  var MILLISECONDS_IN_SECOND = 1e3;
  var numericPatterns = {
    month: /^(1[0-2]|0?\d)/,
    date: /^(3[0-1]|[0-2]?\d)/,
    dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
    week: /^(5[0-3]|[0-4]?\d)/,
    hour23h: /^(2[0-3]|[0-1]?\d)/,
    hour24h: /^(2[0-4]|[0-1]?\d)/,
    hour11h: /^(1[0-1]|0?\d)/,
    hour12h: /^(1[0-2]|0?\d)/,
    minute: /^[0-5]?\d/,
    second: /^[0-5]?\d/,
    singleDigit: /^\d/,
    twoDigits: /^\d{1,2}/,
    threeDigits: /^\d{1,3}/,
    fourDigits: /^\d{1,4}/,
    anyDigitsSigned: /^-?\d+/,
    singleDigitSigned: /^-?\d/,
    twoDigitsSigned: /^-?\d{1,2}/,
    threeDigitsSigned: /^-?\d{1,3}/,
    fourDigitsSigned: /^-?\d{1,4}/
  };
  var timezonePatterns = {
    basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
    basic: /^([+-])(\d{2})(\d{2})|Z/,
    basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
    extended: /^([+-])(\d{2}):(\d{2})|Z/,
    extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
  };
  function parseNumericPattern(pattern, string, valueCallback) {
    var matchResult = string.match(pattern);
    if (!matchResult) {
      return null;
    }
    var value = parseInt(matchResult[0], 10);
    return {
      value: valueCallback ? valueCallback(value) : value,
      rest: string.slice(matchResult[0].length)
    };
  }
  function parseTimezonePattern(pattern, string) {
    var matchResult = string.match(pattern);
    if (!matchResult) {
      return null;
    }
    if (matchResult[0] === "Z") {
      return {
        value: 0,
        rest: string.slice(1)
      };
    }
    var sign3 = matchResult[1] === "+" ? 1 : -1;
    var hours3 = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
    var minutes3 = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
    var seconds3 = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
    return {
      value: sign3 * (hours3 * MILLISECONDS_IN_HOUR + minutes3 * MILLISECONDS_IN_MINUTE + seconds3 * MILLISECONDS_IN_SECOND),
      rest: string.slice(matchResult[0].length)
    };
  }
  function parseAnyDigitsSigned(string, valueCallback) {
    return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);
  }
  function parseNDigits(n11, string, valueCallback) {
    switch (n11) {
      case 1:
        return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);
      case 2:
        return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);
      case 3:
        return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);
      case 4:
        return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);
      default:
        return parseNumericPattern(new RegExp("^\\d{1," + n11 + "}"), string, valueCallback);
    }
  }
  function parseNDigitsSigned(n11, string, valueCallback) {
    switch (n11) {
      case 1:
        return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);
      case 2:
        return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);
      case 3:
        return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);
      case 4:
        return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);
      default:
        return parseNumericPattern(new RegExp("^-?\\d{1," + n11 + "}"), string, valueCallback);
    }
  }
  function dayPeriodEnumToHours(enumValue) {
    switch (enumValue) {
      case "morning":
        return 4;
      case "evening":
        return 17;
      case "pm":
      case "noon":
      case "afternoon":
        return 12;
      case "am":
      case "midnight":
      case "night":
      default:
        return 0;
    }
  }
  function normalizeTwoDigitYear(twoDigitYear, currentYear) {
    var isCommonEra = currentYear > 0;
    var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;
    var result;
    if (absCurrentYear <= 50) {
      result = twoDigitYear || 100;
    } else {
      var rangeEnd = absCurrentYear + 50;
      var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
      var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
      result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
    }
    return isCommonEra ? result : 1 - result;
  }
  var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
  var DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
  function isLeapYearIndex(year3) {
    return year3 % 400 === 0 || year3 % 4 === 0 && year3 % 100 !== 0;
  }
  var parsers = {
    G: {
      priority: 140,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "G":
          case "GG":
          case "GGG":
            return match2.era(string, {
              width: "abbreviated"
            }) || match2.era(string, {
              width: "narrow"
            });
          case "GGGGG":
            return match2.era(string, {
              width: "narrow"
            });
          case "GGGG":
          default:
            return match2.era(string, {
              width: "wide"
            }) || match2.era(string, {
              width: "abbreviated"
            }) || match2.era(string, {
              width: "narrow"
            });
        }
      },
      set: function(date2, flags, value, _options) {
        flags.era = value;
        date2.setUTCFullYear(value, 0, 1);
        date2.setUTCHours(0, 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["R", "u", "t", "T"]
    },
    y: {
      priority: 130,
      parse: function(string, token, match2, _options) {
        var valueCallback = function(year3) {
          return {
            year: year3,
            isTwoDigitYear: token === "yy"
          };
        };
        switch (token) {
          case "y":
            return parseNDigits(4, string, valueCallback);
          case "yo":
            return match2.ordinalNumber(string, {
              unit: "year",
              valueCallback
            });
          default:
            return parseNDigits(token.length, string, valueCallback);
        }
      },
      validate: function(_date, value, _options) {
        return value.isTwoDigitYear || value.year > 0;
      },
      set: function(date2, flags, value, _options) {
        var currentYear = date2.getUTCFullYear();
        if (value.isTwoDigitYear) {
          var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
          date2.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
          date2.setUTCHours(0, 0, 0, 0);
          return date2;
        }
        var year3 = !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
        date2.setUTCFullYear(year3, 0, 1);
        date2.setUTCHours(0, 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["Y", "R", "u", "w", "I", "i", "e", "c", "t", "T"]
    },
    Y: {
      priority: 130,
      parse: function(string, token, match2, _options) {
        var valueCallback = function(year3) {
          return {
            year: year3,
            isTwoDigitYear: token === "YY"
          };
        };
        switch (token) {
          case "Y":
            return parseNDigits(4, string, valueCallback);
          case "Yo":
            return match2.ordinalNumber(string, {
              unit: "year",
              valueCallback
            });
          default:
            return parseNDigits(token.length, string, valueCallback);
        }
      },
      validate: function(_date, value, _options) {
        return value.isTwoDigitYear || value.year > 0;
      },
      set: function(date2, flags, value, options) {
        var currentYear = getUTCWeekYear(date2, options);
        if (value.isTwoDigitYear) {
          var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
          date2.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);
          date2.setUTCHours(0, 0, 0, 0);
          return startOfUTCWeek(date2, options);
        }
        var year3 = !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
        date2.setUTCFullYear(year3, 0, options.firstWeekContainsDate);
        date2.setUTCHours(0, 0, 0, 0);
        return startOfUTCWeek(date2, options);
      },
      incompatibleTokens: ["y", "R", "u", "Q", "q", "M", "L", "I", "d", "D", "i", "t", "T"]
    },
    R: {
      priority: 130,
      parse: function(string, token, _match, _options) {
        if (token === "R") {
          return parseNDigitsSigned(4, string);
        }
        return parseNDigitsSigned(token.length, string);
      },
      set: function(_date, _flags, value, _options) {
        var firstWeekOfYear = new Date(0);
        firstWeekOfYear.setUTCFullYear(value, 0, 4);
        firstWeekOfYear.setUTCHours(0, 0, 0, 0);
        return startOfUTCISOWeek(firstWeekOfYear);
      },
      incompatibleTokens: ["G", "y", "Y", "u", "Q", "q", "M", "L", "w", "d", "D", "e", "c", "t", "T"]
    },
    u: {
      priority: 130,
      parse: function(string, token, _match, _options) {
        if (token === "u") {
          return parseNDigitsSigned(4, string);
        }
        return parseNDigitsSigned(token.length, string);
      },
      set: function(date2, _flags, value, _options) {
        date2.setUTCFullYear(value, 0, 1);
        date2.setUTCHours(0, 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["G", "y", "Y", "R", "w", "I", "i", "e", "c", "t", "T"]
    },
    Q: {
      priority: 120,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "Q":
          case "QQ":
            return parseNDigits(token.length, string);
          case "Qo":
            return match2.ordinalNumber(string, {
              unit: "quarter"
            });
          case "QQQ":
            return match2.quarter(string, {
              width: "abbreviated",
              context: "formatting"
            }) || match2.quarter(string, {
              width: "narrow",
              context: "formatting"
            });
          case "QQQQQ":
            return match2.quarter(string, {
              width: "narrow",
              context: "formatting"
            });
          case "QQQQ":
          default:
            return match2.quarter(string, {
              width: "wide",
              context: "formatting"
            }) || match2.quarter(string, {
              width: "abbreviated",
              context: "formatting"
            }) || match2.quarter(string, {
              width: "narrow",
              context: "formatting"
            });
        }
      },
      validate: function(_date, value, _options) {
        return value >= 1 && value <= 4;
      },
      set: function(date2, _flags, value, _options) {
        date2.setUTCMonth((value - 1) * 3, 1);
        date2.setUTCHours(0, 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["Y", "R", "q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]
    },
    q: {
      priority: 120,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "q":
          case "qq":
            return parseNDigits(token.length, string);
          case "qo":
            return match2.ordinalNumber(string, {
              unit: "quarter"
            });
          case "qqq":
            return match2.quarter(string, {
              width: "abbreviated",
              context: "standalone"
            }) || match2.quarter(string, {
              width: "narrow",
              context: "standalone"
            });
          case "qqqqq":
            return match2.quarter(string, {
              width: "narrow",
              context: "standalone"
            });
          case "qqqq":
          default:
            return match2.quarter(string, {
              width: "wide",
              context: "standalone"
            }) || match2.quarter(string, {
              width: "abbreviated",
              context: "standalone"
            }) || match2.quarter(string, {
              width: "narrow",
              context: "standalone"
            });
        }
      },
      validate: function(_date, value, _options) {
        return value >= 1 && value <= 4;
      },
      set: function(date2, _flags, value, _options) {
        date2.setUTCMonth((value - 1) * 3, 1);
        date2.setUTCHours(0, 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["Y", "R", "Q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]
    },
    M: {
      priority: 110,
      parse: function(string, token, match2, _options) {
        var valueCallback = function(value) {
          return value - 1;
        };
        switch (token) {
          case "M":
            return parseNumericPattern(numericPatterns.month, string, valueCallback);
          case "MM":
            return parseNDigits(2, string, valueCallback);
          case "Mo":
            return match2.ordinalNumber(string, {
              unit: "month",
              valueCallback
            });
          case "MMM":
            return match2.month(string, {
              width: "abbreviated",
              context: "formatting"
            }) || match2.month(string, {
              width: "narrow",
              context: "formatting"
            });
          case "MMMMM":
            return match2.month(string, {
              width: "narrow",
              context: "formatting"
            });
          case "MMMM":
          default:
            return match2.month(string, {
              width: "wide",
              context: "formatting"
            }) || match2.month(string, {
              width: "abbreviated",
              context: "formatting"
            }) || match2.month(string, {
              width: "narrow",
              context: "formatting"
            });
        }
      },
      validate: function(_date, value, _options) {
        return value >= 0 && value <= 11;
      },
      set: function(date2, _flags, value, _options) {
        date2.setUTCMonth(value, 1);
        date2.setUTCHours(0, 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["Y", "R", "q", "Q", "L", "w", "I", "D", "i", "e", "c", "t", "T"]
    },
    L: {
      priority: 110,
      parse: function(string, token, match2, _options) {
        var valueCallback = function(value) {
          return value - 1;
        };
        switch (token) {
          case "L":
            return parseNumericPattern(numericPatterns.month, string, valueCallback);
          case "LL":
            return parseNDigits(2, string, valueCallback);
          case "Lo":
            return match2.ordinalNumber(string, {
              unit: "month",
              valueCallback
            });
          case "LLL":
            return match2.month(string, {
              width: "abbreviated",
              context: "standalone"
            }) || match2.month(string, {
              width: "narrow",
              context: "standalone"
            });
          case "LLLLL":
            return match2.month(string, {
              width: "narrow",
              context: "standalone"
            });
          case "LLLL":
          default:
            return match2.month(string, {
              width: "wide",
              context: "standalone"
            }) || match2.month(string, {
              width: "abbreviated",
              context: "standalone"
            }) || match2.month(string, {
              width: "narrow",
              context: "standalone"
            });
        }
      },
      validate: function(_date, value, _options) {
        return value >= 0 && value <= 11;
      },
      set: function(date2, _flags, value, _options) {
        date2.setUTCMonth(value, 1);
        date2.setUTCHours(0, 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["Y", "R", "q", "Q", "M", "w", "I", "D", "i", "e", "c", "t", "T"]
    },
    w: {
      priority: 100,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "w":
            return parseNumericPattern(numericPatterns.week, string);
          case "wo":
            return match2.ordinalNumber(string, {
              unit: "week"
            });
          default:
            return parseNDigits(token.length, string);
        }
      },
      validate: function(_date, value, _options) {
        return value >= 1 && value <= 53;
      },
      set: function(date2, _flags, value, options) {
        return startOfUTCWeek(setUTCWeek(date2, value, options), options);
      },
      incompatibleTokens: ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "i", "t", "T"]
    },
    I: {
      priority: 100,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "I":
            return parseNumericPattern(numericPatterns.week, string);
          case "Io":
            return match2.ordinalNumber(string, {
              unit: "week"
            });
          default:
            return parseNDigits(token.length, string);
        }
      },
      validate: function(_date, value, _options) {
        return value >= 1 && value <= 53;
      },
      set: function(date2, _flags, value, options) {
        return startOfUTCISOWeek(setUTCISOWeek(date2, value, options), options);
      },
      incompatibleTokens: ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "e", "c", "t", "T"]
    },
    d: {
      priority: 90,
      subPriority: 1,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "d":
            return parseNumericPattern(numericPatterns.date, string);
          case "do":
            return match2.ordinalNumber(string, {
              unit: "date"
            });
          default:
            return parseNDigits(token.length, string);
        }
      },
      validate: function(date2, value, _options) {
        var year3 = date2.getUTCFullYear();
        var isLeapYear = isLeapYearIndex(year3);
        var month3 = date2.getUTCMonth();
        if (isLeapYear) {
          return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month3];
        } else {
          return value >= 1 && value <= DAYS_IN_MONTH[month3];
        }
      },
      set: function(date2, _flags, value, _options) {
        date2.setUTCDate(value);
        date2.setUTCHours(0, 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["Y", "R", "q", "Q", "w", "I", "D", "i", "e", "c", "t", "T"]
    },
    D: {
      priority: 90,
      subPriority: 1,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "D":
          case "DD":
            return parseNumericPattern(numericPatterns.dayOfYear, string);
          case "Do":
            return match2.ordinalNumber(string, {
              unit: "date"
            });
          default:
            return parseNDigits(token.length, string);
        }
      },
      validate: function(date2, value, _options) {
        var year3 = date2.getUTCFullYear();
        var isLeapYear = isLeapYearIndex(year3);
        if (isLeapYear) {
          return value >= 1 && value <= 366;
        } else {
          return value >= 1 && value <= 365;
        }
      },
      set: function(date2, _flags, value, _options) {
        date2.setUTCMonth(0, value);
        date2.setUTCHours(0, 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["Y", "R", "q", "Q", "M", "L", "w", "I", "d", "E", "i", "e", "c", "t", "T"]
    },
    E: {
      priority: 90,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "E":
          case "EE":
          case "EEE":
            return match2.day(string, {
              width: "abbreviated",
              context: "formatting"
            }) || match2.day(string, {
              width: "short",
              context: "formatting"
            }) || match2.day(string, {
              width: "narrow",
              context: "formatting"
            });
          case "EEEEE":
            return match2.day(string, {
              width: "narrow",
              context: "formatting"
            });
          case "EEEEEE":
            return match2.day(string, {
              width: "short",
              context: "formatting"
            }) || match2.day(string, {
              width: "narrow",
              context: "formatting"
            });
          case "EEEE":
          default:
            return match2.day(string, {
              width: "wide",
              context: "formatting"
            }) || match2.day(string, {
              width: "abbreviated",
              context: "formatting"
            }) || match2.day(string, {
              width: "short",
              context: "formatting"
            }) || match2.day(string, {
              width: "narrow",
              context: "formatting"
            });
        }
      },
      validate: function(_date, value, _options) {
        return value >= 0 && value <= 6;
      },
      set: function(date2, _flags, value, options) {
        date2 = setUTCDay(date2, value, options);
        date2.setUTCHours(0, 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["D", "i", "e", "c", "t", "T"]
    },
    e: {
      priority: 90,
      parse: function(string, token, match2, options) {
        var valueCallback = function(value) {
          var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
          return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
        };
        switch (token) {
          case "e":
          case "ee":
            return parseNDigits(token.length, string, valueCallback);
          case "eo":
            return match2.ordinalNumber(string, {
              unit: "day",
              valueCallback
            });
          case "eee":
            return match2.day(string, {
              width: "abbreviated",
              context: "formatting"
            }) || match2.day(string, {
              width: "short",
              context: "formatting"
            }) || match2.day(string, {
              width: "narrow",
              context: "formatting"
            });
          case "eeeee":
            return match2.day(string, {
              width: "narrow",
              context: "formatting"
            });
          case "eeeeee":
            return match2.day(string, {
              width: "short",
              context: "formatting"
            }) || match2.day(string, {
              width: "narrow",
              context: "formatting"
            });
          case "eeee":
          default:
            return match2.day(string, {
              width: "wide",
              context: "formatting"
            }) || match2.day(string, {
              width: "abbreviated",
              context: "formatting"
            }) || match2.day(string, {
              width: "short",
              context: "formatting"
            }) || match2.day(string, {
              width: "narrow",
              context: "formatting"
            });
        }
      },
      validate: function(_date, value, _options) {
        return value >= 0 && value <= 6;
      },
      set: function(date2, _flags, value, options) {
        date2 = setUTCDay(date2, value, options);
        date2.setUTCHours(0, 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "c", "t", "T"]
    },
    c: {
      priority: 90,
      parse: function(string, token, match2, options) {
        var valueCallback = function(value) {
          var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
          return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
        };
        switch (token) {
          case "c":
          case "cc":
            return parseNDigits(token.length, string, valueCallback);
          case "co":
            return match2.ordinalNumber(string, {
              unit: "day",
              valueCallback
            });
          case "ccc":
            return match2.day(string, {
              width: "abbreviated",
              context: "standalone"
            }) || match2.day(string, {
              width: "short",
              context: "standalone"
            }) || match2.day(string, {
              width: "narrow",
              context: "standalone"
            });
          case "ccccc":
            return match2.day(string, {
              width: "narrow",
              context: "standalone"
            });
          case "cccccc":
            return match2.day(string, {
              width: "short",
              context: "standalone"
            }) || match2.day(string, {
              width: "narrow",
              context: "standalone"
            });
          case "cccc":
          default:
            return match2.day(string, {
              width: "wide",
              context: "standalone"
            }) || match2.day(string, {
              width: "abbreviated",
              context: "standalone"
            }) || match2.day(string, {
              width: "short",
              context: "standalone"
            }) || match2.day(string, {
              width: "narrow",
              context: "standalone"
            });
        }
      },
      validate: function(_date, value, _options) {
        return value >= 0 && value <= 6;
      },
      set: function(date2, _flags, value, options) {
        date2 = setUTCDay(date2, value, options);
        date2.setUTCHours(0, 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "e", "t", "T"]
    },
    i: {
      priority: 90,
      parse: function(string, token, match2, _options) {
        var valueCallback = function(value) {
          if (value === 0) {
            return 7;
          }
          return value;
        };
        switch (token) {
          case "i":
          case "ii":
            return parseNDigits(token.length, string);
          case "io":
            return match2.ordinalNumber(string, {
              unit: "day"
            });
          case "iii":
            return match2.day(string, {
              width: "abbreviated",
              context: "formatting",
              valueCallback
            }) || match2.day(string, {
              width: "short",
              context: "formatting",
              valueCallback
            }) || match2.day(string, {
              width: "narrow",
              context: "formatting",
              valueCallback
            });
          case "iiiii":
            return match2.day(string, {
              width: "narrow",
              context: "formatting",
              valueCallback
            });
          case "iiiiii":
            return match2.day(string, {
              width: "short",
              context: "formatting",
              valueCallback
            }) || match2.day(string, {
              width: "narrow",
              context: "formatting",
              valueCallback
            });
          case "iiii":
          default:
            return match2.day(string, {
              width: "wide",
              context: "formatting",
              valueCallback
            }) || match2.day(string, {
              width: "abbreviated",
              context: "formatting",
              valueCallback
            }) || match2.day(string, {
              width: "short",
              context: "formatting",
              valueCallback
            }) || match2.day(string, {
              width: "narrow",
              context: "formatting",
              valueCallback
            });
        }
      },
      validate: function(_date, value, _options) {
        return value >= 1 && value <= 7;
      },
      set: function(date2, _flags, value, options) {
        date2 = setUTCISODay(date2, value, options);
        date2.setUTCHours(0, 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "E", "e", "c", "t", "T"]
    },
    a: {
      priority: 80,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "a":
          case "aa":
          case "aaa":
            return match2.dayPeriod(string, {
              width: "abbreviated",
              context: "formatting"
            }) || match2.dayPeriod(string, {
              width: "narrow",
              context: "formatting"
            });
          case "aaaaa":
            return match2.dayPeriod(string, {
              width: "narrow",
              context: "formatting"
            });
          case "aaaa":
          default:
            return match2.dayPeriod(string, {
              width: "wide",
              context: "formatting"
            }) || match2.dayPeriod(string, {
              width: "abbreviated",
              context: "formatting"
            }) || match2.dayPeriod(string, {
              width: "narrow",
              context: "formatting"
            });
        }
      },
      set: function(date2, _flags, value, _options) {
        date2.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["b", "B", "H", "k", "t", "T"]
    },
    b: {
      priority: 80,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "b":
          case "bb":
          case "bbb":
            return match2.dayPeriod(string, {
              width: "abbreviated",
              context: "formatting"
            }) || match2.dayPeriod(string, {
              width: "narrow",
              context: "formatting"
            });
          case "bbbbb":
            return match2.dayPeriod(string, {
              width: "narrow",
              context: "formatting"
            });
          case "bbbb":
          default:
            return match2.dayPeriod(string, {
              width: "wide",
              context: "formatting"
            }) || match2.dayPeriod(string, {
              width: "abbreviated",
              context: "formatting"
            }) || match2.dayPeriod(string, {
              width: "narrow",
              context: "formatting"
            });
        }
      },
      set: function(date2, _flags, value, _options) {
        date2.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["a", "B", "H", "k", "t", "T"]
    },
    B: {
      priority: 80,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "B":
          case "BB":
          case "BBB":
            return match2.dayPeriod(string, {
              width: "abbreviated",
              context: "formatting"
            }) || match2.dayPeriod(string, {
              width: "narrow",
              context: "formatting"
            });
          case "BBBBB":
            return match2.dayPeriod(string, {
              width: "narrow",
              context: "formatting"
            });
          case "BBBB":
          default:
            return match2.dayPeriod(string, {
              width: "wide",
              context: "formatting"
            }) || match2.dayPeriod(string, {
              width: "abbreviated",
              context: "formatting"
            }) || match2.dayPeriod(string, {
              width: "narrow",
              context: "formatting"
            });
        }
      },
      set: function(date2, _flags, value, _options) {
        date2.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["a", "b", "t", "T"]
    },
    h: {
      priority: 70,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "h":
            return parseNumericPattern(numericPatterns.hour12h, string);
          case "ho":
            return match2.ordinalNumber(string, {
              unit: "hour"
            });
          default:
            return parseNDigits(token.length, string);
        }
      },
      validate: function(_date, value, _options) {
        return value >= 1 && value <= 12;
      },
      set: function(date2, _flags, value, _options) {
        var isPM = date2.getUTCHours() >= 12;
        if (isPM && value < 12) {
          date2.setUTCHours(value + 12, 0, 0, 0);
        } else if (!isPM && value === 12) {
          date2.setUTCHours(0, 0, 0, 0);
        } else {
          date2.setUTCHours(value, 0, 0, 0);
        }
        return date2;
      },
      incompatibleTokens: ["H", "K", "k", "t", "T"]
    },
    H: {
      priority: 70,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "H":
            return parseNumericPattern(numericPatterns.hour23h, string);
          case "Ho":
            return match2.ordinalNumber(string, {
              unit: "hour"
            });
          default:
            return parseNDigits(token.length, string);
        }
      },
      validate: function(_date, value, _options) {
        return value >= 0 && value <= 23;
      },
      set: function(date2, _flags, value, _options) {
        date2.setUTCHours(value, 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["a", "b", "h", "K", "k", "t", "T"]
    },
    K: {
      priority: 70,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "K":
            return parseNumericPattern(numericPatterns.hour11h, string);
          case "Ko":
            return match2.ordinalNumber(string, {
              unit: "hour"
            });
          default:
            return parseNDigits(token.length, string);
        }
      },
      validate: function(_date, value, _options) {
        return value >= 0 && value <= 11;
      },
      set: function(date2, _flags, value, _options) {
        var isPM = date2.getUTCHours() >= 12;
        if (isPM && value < 12) {
          date2.setUTCHours(value + 12, 0, 0, 0);
        } else {
          date2.setUTCHours(value, 0, 0, 0);
        }
        return date2;
      },
      incompatibleTokens: ["h", "H", "k", "t", "T"]
    },
    k: {
      priority: 70,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "k":
            return parseNumericPattern(numericPatterns.hour24h, string);
          case "ko":
            return match2.ordinalNumber(string, {
              unit: "hour"
            });
          default:
            return parseNDigits(token.length, string);
        }
      },
      validate: function(_date, value, _options) {
        return value >= 1 && value <= 24;
      },
      set: function(date2, _flags, value, _options) {
        var hours3 = value <= 24 ? value % 24 : value;
        date2.setUTCHours(hours3, 0, 0, 0);
        return date2;
      },
      incompatibleTokens: ["a", "b", "h", "H", "K", "t", "T"]
    },
    m: {
      priority: 60,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "m":
            return parseNumericPattern(numericPatterns.minute, string);
          case "mo":
            return match2.ordinalNumber(string, {
              unit: "minute"
            });
          default:
            return parseNDigits(token.length, string);
        }
      },
      validate: function(_date, value, _options) {
        return value >= 0 && value <= 59;
      },
      set: function(date2, _flags, value, _options) {
        date2.setUTCMinutes(value, 0, 0);
        return date2;
      },
      incompatibleTokens: ["t", "T"]
    },
    s: {
      priority: 50,
      parse: function(string, token, match2, _options) {
        switch (token) {
          case "s":
            return parseNumericPattern(numericPatterns.second, string);
          case "so":
            return match2.ordinalNumber(string, {
              unit: "second"
            });
          default:
            return parseNDigits(token.length, string);
        }
      },
      validate: function(_date, value, _options) {
        return value >= 0 && value <= 59;
      },
      set: function(date2, _flags, value, _options) {
        date2.setUTCSeconds(value, 0);
        return date2;
      },
      incompatibleTokens: ["t", "T"]
    },
    S: {
      priority: 30,
      parse: function(string, token, _match, _options) {
        var valueCallback = function(value) {
          return Math.floor(value * Math.pow(10, -token.length + 3));
        };
        return parseNDigits(token.length, string, valueCallback);
      },
      set: function(date2, _flags, value, _options) {
        date2.setUTCMilliseconds(value);
        return date2;
      },
      incompatibleTokens: ["t", "T"]
    },
    X: {
      priority: 10,
      parse: function(string, token, _match, _options) {
        switch (token) {
          case "X":
            return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);
          case "XX":
            return parseTimezonePattern(timezonePatterns.basic, string);
          case "XXXX":
            return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);
          case "XXXXX":
            return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);
          case "XXX":
          default:
            return parseTimezonePattern(timezonePatterns.extended, string);
        }
      },
      set: function(date2, flags, value, _options) {
        if (flags.timestampIsSet) {
          return date2;
        }
        return new Date(date2.getTime() - value);
      },
      incompatibleTokens: ["t", "T", "x"]
    },
    x: {
      priority: 10,
      parse: function(string, token, _match, _options) {
        switch (token) {
          case "x":
            return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);
          case "xx":
            return parseTimezonePattern(timezonePatterns.basic, string);
          case "xxxx":
            return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);
          case "xxxxx":
            return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);
          case "xxx":
          default:
            return parseTimezonePattern(timezonePatterns.extended, string);
        }
      },
      set: function(date2, flags, value, _options) {
        if (flags.timestampIsSet) {
          return date2;
        }
        return new Date(date2.getTime() - value);
      },
      incompatibleTokens: ["t", "T", "X"]
    },
    t: {
      priority: 40,
      parse: function(string, _token, _match, _options) {
        return parseAnyDigitsSigned(string);
      },
      set: function(_date, _flags, value, _options) {
        return [new Date(value * 1e3), {
          timestampIsSet: true
        }];
      },
      incompatibleTokens: "*"
    },
    T: {
      priority: 20,
      parse: function(string, _token, _match, _options) {
        return parseAnyDigitsSigned(string);
      },
      set: function(_date, _flags, value, _options) {
        return [new Date(value), {
          timestampIsSet: true
        }];
      },
      incompatibleTokens: "*"
    }
  };
  var parsers_default = parsers;

  // ../../node_modules/date-fns/esm/parse/index.js
  var TIMEZONE_UNIT_PRIORITY = 10;
  var formattingTokensRegExp2 = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g;
  var longFormattingTokensRegExp2 = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
  var escapedStringRegExp2 = /^'([^]*?)'?$/;
  var doubleQuoteRegExp2 = /''/g;
  var notWhitespaceRegExp = /\S/;
  var unescapedLatinCharacterRegExp2 = /[a-zA-Z]/;
  function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {
    requiredArgs(3, arguments);
    var dateString = String(dirtyDateString);
    var formatString = String(dirtyFormatString);
    var options = dirtyOptions || {};
    var locale6 = options.locale || en_US_default;
    if (!locale6.match) {
      throw new RangeError("locale must contain match property");
    }
    var localeFirstWeekContainsDate = locale6.options && locale6.options.firstWeekContainsDate;
    var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
    var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);
    if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
      throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
    }
    var localeWeekStartsOn = locale6.options && locale6.options.weekStartsOn;
    var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
    var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn);
    if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
      throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
    }
    if (formatString === "") {
      if (dateString === "") {
        return toDate(dirtyReferenceDate);
      } else {
        return new Date(NaN);
      }
    }
    var subFnOptions = {
      firstWeekContainsDate,
      weekStartsOn,
      locale: locale6
    };
    var setters = [{
      priority: TIMEZONE_UNIT_PRIORITY,
      subPriority: -1,
      set: dateToSystemTimezone,
      index: 0
    }];
    var i9;
    var tokens = formatString.match(longFormattingTokensRegExp2).map(function(substring) {
      var firstCharacter2 = substring[0];
      if (firstCharacter2 === "p" || firstCharacter2 === "P") {
        var longFormatter = longFormatters_default[firstCharacter2];
        return longFormatter(substring, locale6.formatLong, subFnOptions);
      }
      return substring;
    }).join("").match(formattingTokensRegExp2);
    var usedTokens = [];
    for (i9 = 0; i9 < tokens.length; i9++) {
      var token = tokens[i9];
      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {
        throwProtectedError(token, formatString, dirtyDateString);
      }
      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {
        throwProtectedError(token, formatString, dirtyDateString);
      }
      var firstCharacter = token[0];
      var parser = parsers_default[firstCharacter];
      if (parser) {
        var incompatibleTokens = parser.incompatibleTokens;
        if (Array.isArray(incompatibleTokens)) {
          var incompatibleToken = void 0;
          for (var _i = 0; _i < usedTokens.length; _i++) {
            var usedToken = usedTokens[_i].token;
            if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {
              incompatibleToken = usedTokens[_i];
              break;
            }
          }
          if (incompatibleToken) {
            throw new RangeError("The format string mustn't contain `".concat(incompatibleToken.fullToken, "` and `").concat(token, "` at the same time"));
          }
        } else if (parser.incompatibleTokens === "*" && usedTokens.length) {
          throw new RangeError("The format string mustn't contain `".concat(token, "` and any other token at the same time"));
        }
        usedTokens.push({
          token: firstCharacter,
          fullToken: token
        });
        var parseResult = parser.parse(dateString, token, locale6.match, subFnOptions);
        if (!parseResult) {
          return new Date(NaN);
        }
        setters.push({
          priority: parser.priority,
          subPriority: parser.subPriority || 0,
          set: parser.set,
          validate: parser.validate,
          value: parseResult.value,
          index: setters.length
        });
        dateString = parseResult.rest;
      } else {
        if (firstCharacter.match(unescapedLatinCharacterRegExp2)) {
          throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
        }
        if (token === "''") {
          token = "'";
        } else if (firstCharacter === "'") {
          token = cleanEscapedString2(token);
        }
        if (dateString.indexOf(token) === 0) {
          dateString = dateString.slice(token.length);
        } else {
          return new Date(NaN);
        }
      }
    }
    if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {
      return new Date(NaN);
    }
    var uniquePrioritySetters = setters.map(function(setter2) {
      return setter2.priority;
    }).sort(function(a7, b8) {
      return b8 - a7;
    }).filter(function(priority2, index, array2) {
      return array2.indexOf(priority2) === index;
    }).map(function(priority2) {
      return setters.filter(function(setter2) {
        return setter2.priority === priority2;
      }).sort(function(a7, b8) {
        return b8.subPriority - a7.subPriority;
      });
    }).map(function(setterArray) {
      return setterArray[0];
    });
    var date2 = toDate(dirtyReferenceDate);
    if (isNaN(date2)) {
      return new Date(NaN);
    }
    var utcDate2 = subMilliseconds(date2, getTimezoneOffsetInMilliseconds(date2));
    var flags = {};
    for (i9 = 0; i9 < uniquePrioritySetters.length; i9++) {
      var setter = uniquePrioritySetters[i9];
      if (setter.validate && !setter.validate(utcDate2, setter.value, subFnOptions)) {
        return new Date(NaN);
      }
      var result = setter.set(utcDate2, flags, setter.value, subFnOptions);
      if (result[0]) {
        utcDate2 = result[0];
        assign(flags, result[1]);
      } else {
        utcDate2 = result;
      }
    }
    return utcDate2;
  }
  function dateToSystemTimezone(date2, flags) {
    if (flags.timestampIsSet) {
      return date2;
    }
    var convertedDate = new Date(0);
    convertedDate.setFullYear(date2.getUTCFullYear(), date2.getUTCMonth(), date2.getUTCDate());
    convertedDate.setHours(date2.getUTCHours(), date2.getUTCMinutes(), date2.getUTCSeconds(), date2.getUTCMilliseconds());
    return convertedDate;
  }
  function cleanEscapedString2(input) {
    return input.match(escapedStringRegExp2)[1].replace(doubleQuoteRegExp2, "'");
  }

  // ../../node_modules/rsuite/esm/utils/dateUtils.js
  var disabledTimeProps = ["disabledHours", "disabledMinutes", "disabledSeconds"];
  var hideTimeProps = ["hideHours", "hideMinutes", "hideSeconds"];
  var calendarOnlyProps = disabledTimeProps.concat(hideTimeProps);

  // ../../node_modules/rsuite/esm/utils/prefix.js
  var import_classnames = __toModule(require_classnames());
  var import_curry = __toModule(require_curry());
  function prefix(pre, className) {
    if (!pre || !className) {
      return "";
    }
    if (Array.isArray(className)) {
      return (0, import_classnames.default)(className.filter(function(name) {
        return !!name;
      }).map(function(name) {
        return pre + "-" + name;
      }));
    }
    if (pre[pre.length - 1] === "-") {
      return "" + pre + className;
    }
    return pre + "-" + className;
  }
  var prefix_default = (0, import_curry.default)(prefix);

  // ../../node_modules/rsuite/esm/utils/createChainedFunction.js
  function createChainedFunction() {
    for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
      funcs[_key] = arguments[_key];
    }
    return funcs.filter(function(f4) {
      return f4 !== null && typeof f4 !== "undefined";
    }).reduce(function(acc, f4) {
      if (typeof f4 !== "function") {
        throw new Error("Invalid Argument Type, must only provide functions, undefined, or null.");
      }
      if (acc === void 0) {
        return f4;
      }
      return function chainedFunction() {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }
        acc.apply(this, args);
        f4.apply(this, args);
      };
    }, void 0);
  }
  var createChainedFunction_default = createChainedFunction;

  // ../../node_modules/rsuite/esm/utils/isOneOf.js
  function isOneOf(one2, ofTarget) {
    if (Array.isArray(ofTarget)) {
      return ofTarget.indexOf(one2) >= 0;
    }
    return one2 === ofTarget;
  }

  // ../../node_modules/rsuite/esm/utils/ReactChildren.js
  var import_react = __toModule(require_react());
  function find(children, func, context) {
    var index = 0;
    var result;
    import_react.default.Children.forEach(children, function(child) {
      if (result) {
        return;
      }
      index += 1;
      if (func.call(context, child, index)) {
        result = child;
      }
    });
    return result;
  }
  function map(children, func, context) {
    var index = 0;
    return import_react.default.Children.map(children, function(child) {
      if (!/* @__PURE__ */ import_react.default.isValidElement(child)) {
        return child;
      }
      var handle = func.call(context, child, index);
      index += 1;
      return handle;
    });
  }
  function mapCloneElement(children, func, context) {
    return map(children, function(child, index) {
      return /* @__PURE__ */ import_react.default.cloneElement(child, _extends({
        key: index
      }, func(child, index)));
    }, context);
  }
  function count(children) {
    return import_react.default.Children.count(Array.isArray(children) ? children.filter(function(child) {
      return child;
    }) : children);
  }
  function some(children, func, context) {
    var index = 0;
    var result = false;
    import_react.default.Children.forEach(children, function(child) {
      if (result) {
        return;
      }
      if (!/* @__PURE__ */ import_react.default.isValidElement(child)) {
        return;
      }
      if (func.call(context, child, index += 1)) {
        result = true;
      }
    });
    return result;
  }
  var ReactChildren_default = {
    mapCloneElement,
    count,
    some,
    map,
    find
  };

  // ../../node_modules/rsuite/esm/utils/getDataGroupBy.js
  var import_get3 = __toModule(require_get());

  // ../../node_modules/rsuite/esm/utils/treeUtils.js
  var import_isEmpty = __toModule(require_isEmpty());
  var import_clone = __toModule(require_clone());
  var import_isNil3 = __toModule(require_isNil());
  var import_isArray = __toModule(require_isArray());
  var import_omit5 = __toModule(require_omit());
  var import_isUndefined5 = __toModule(require_isUndefined());
  var import_intersection = __toModule(require_intersection());
  var import_react24 = __toModule(require_react());

  // ../../node_modules/rsuite/esm/utils/shallowEqual.js
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  function is(x7, y6) {
    if (x7 === y6) {
      return x7 !== 0 || y6 !== 0 || 1 / x7 === 1 / y6;
    }
    return x7 !== x7 && y6 !== y6;
  }
  function shallowEqual(objA, objB) {
    if (is(objA, objB)) {
      return true;
    }
    if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
      return false;
    }
    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) {
      return false;
    }
    for (var i9 = 0; i9 < keysA.length; i9 += 1) {
      if (!hasOwnProperty.call(objB, keysA[i9]) || !is(objA[keysA[i9]], objB[keysA[i9]])) {
        return false;
      }
    }
    return true;
  }
  var shallowEqual_default = shallowEqual;

  // ../../node_modules/rsuite/esm/CheckTreePicker/utils.js
  var import_isUndefined = __toModule(require_isUndefined());
  var import_isNil = __toModule(require_isNil());
  function isEveryChildChecked(nodes, parent) {
    if ((0, import_isNil.default)(parent.refKey) || (0, import_isNil.default)(nodes[parent.refKey])) {
      return false;
    }
    var children = getChildrenByFlattenNodes(nodes, parent);
    if (!children.length) {
      var _nodes$parent$refKey$;
      return (_nodes$parent$refKey$ = nodes[parent.refKey].check) !== null && _nodes$parent$refKey$ !== void 0 ? _nodes$parent$refKey$ : false;
    }
    return children.every(function(child) {
      return !(0, import_isNil.default)(child.refKey) && nodes[child.refKey].check;
    });
  }
  function isSomeChildChecked(nodes, parent, childrenKey) {
    if (!(0, import_isNil.default)(parent.refKey) && (0, import_isNil.default)(nodes[parent.refKey])) {
      return false;
    }
    var children = getChildrenByFlattenNodes(nodes, parent);
    return children.some(function(child) {
      var _child$childrenKey;
      if ((child === null || child === void 0 ? void 0 : (_child$childrenKey = child[childrenKey]) === null || _child$childrenKey === void 0 ? void 0 : _child$childrenKey.length) > 0) {
        return isSomeChildChecked(nodes, child, childrenKey);
      }
      return !(0, import_isNil.default)(child.refKey) && nodes[child.refKey].check;
    });
  }
  function getNodeCheckState(_ref) {
    var nodes = _ref.nodes, node = _ref.node, cascade = _ref.cascade, childrenKey = _ref.childrenKey;
    if ((0, import_isNil.default)(nodes[node.refKey])) {
      return CHECK_STATE.UNCHECK;
    }
    if (!node[childrenKey] || !node[childrenKey].length || !cascade) {
      nodes[node.refKey].checkAll = false;
      return node.check ? CHECK_STATE.CHECK : CHECK_STATE.UNCHECK;
    }
    if (isEveryChildChecked(nodes, node)) {
      nodes[node.refKey].checkAll = true;
      nodes[node.refKey].check = true;
      return CHECK_STATE.CHECK;
    }
    if (isSomeChildChecked(nodes, node, childrenKey)) {
      nodes[node.refKey].checkAll = false;
      return CHECK_STATE.INDETERMINATE;
    }
    return CHECK_STATE.UNCHECK;
  }

  // ../../node_modules/rsuite/esm/Picker/PickerToggleTrigger.js
  var import_react9 = __toModule(require_react());
  var import_pick2 = __toModule(require_pick());

  // ../../node_modules/rsuite/esm/Overlay/OverlayTrigger.js
  var import_isUndefined2 = __toModule(require_isUndefined());
  var import_react7 = __toModule(require_react());
  var import_get = __toModule(require_get());
  var import_isNil2 = __toModule(require_isNil());

  // ../../node_modules/dom-lib/esm/contains.js
  var fallback = function fallback2(context, node) {
    if (!node)
      return false;
    do {
      if (node === context) {
        return true;
      }
    } while (node.parentNode && (node = node.parentNode));
    return false;
  };
  var contains = function contains2(context, node) {
    if (!node)
      return false;
    if (context.contains) {
      return context.contains(node);
    } else if (context.compareDocumentPosition) {
      return context === node || !!(context.compareDocumentPosition(node) & 16);
    }
    return fallback(context, node);
  };
  var contains_default = function() {
    return canUseDOM_default ? contains : fallback;
  }();

  // ../../node_modules/rsuite/esm/Overlay/Overlay.js
  var import_react6 = __toModule(require_react());
  var import_classnames4 = __toModule(require_classnames());
  var import_prop_types4 = __toModule(require_prop_types());

  // ../../node_modules/rsuite/esm/Overlay/Position.js
  var import_react2 = __toModule(require_react());
  var import_prop_types = __toModule(require_prop_types());
  var import_classnames2 = __toModule(require_classnames());

  // ../../node_modules/dom-lib/esm/getContainer.js
  var getContainer_default = function(container2, defaultContainer) {
    container2 = typeof container2 === "function" ? container2() : container2;
    return container2 || defaultContainer;
  };

  // ../../node_modules/dom-lib/esm/ownerDocument.js
  var ownerDocument_default = function(node) {
    return node && node.ownerDocument || document;
  };

  // ../../node_modules/dom-lib/esm/removeClass.js
  var removeClass_default = function(target, className) {
    if (className) {
      if (target.classList) {
        target.classList.remove(className);
      } else {
        target.className = target.className.replace(new RegExp("(^|\\s)" + className + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
      }
    }
    return target;
  };

  // ../../node_modules/dom-lib/esm/on.js
  function on(target, eventType, listener, options) {
    if (options === void 0) {
      options = false;
    }
    target.addEventListener(eventType, listener, options);
    return {
      off: function off() {
        target.removeEventListener(eventType, listener, options);
      }
    };
  }

  // ../../node_modules/dom-lib/esm/hasClass.js
  var hasClass_default = function(target, className) {
    if (target.classList) {
      return !!className && target.classList.contains(className);
    }
    return (" " + target.className + " ").indexOf(" " + className + " ") !== -1;
  };

  // ../../node_modules/dom-lib/esm/addClass.js
  var addClass_default = function(target, className) {
    if (className) {
      if (target.classList) {
        target.classList.add(className);
      } else if (!hasClass_default(target, className)) {
        target.className = target.className + " " + className;
      }
    }
    return target;
  };

  // ../../node_modules/dom-lib/esm/utils/stringFormatter.js
  function camelize(string) {
    return string.replace(/\-(\w)/g, function(_char) {
      return _char.slice(1).toUpperCase();
    });
  }
  function hyphenate(string) {
    return string.replace(/([A-Z])/g, "-$1").toLowerCase();
  }

  // ../../node_modules/dom-lib/esm/utils/hyphenateStyleName.js
  var msPattern = /^ms-/;
  var hyphenateStyleName_default = function(string) {
    return hyphenate(string).replace(msPattern, "-ms-");
  };

  // ../../node_modules/dom-lib/esm/removeStyle.js
  function removeStyle(node, key) {
    var _style, _style$removeProperty;
    (_style = node.style) === null || _style === void 0 ? void 0 : (_style$removeProperty = _style.removeProperty) === null || _style$removeProperty === void 0 ? void 0 : _style$removeProperty.call(_style, key);
  }
  var removeStyle_default = function(node, keys) {
    if (typeof keys === "string") {
      removeStyle(node, keys);
    } else if (Array.isArray(keys)) {
      keys.forEach(function(key) {
        return removeStyle(node, key);
      });
    }
  };

  // ../../node_modules/dom-lib/esm/addStyle.js
  var addStyle_default = function(node, property, value) {
    var css = "";
    var props = property;
    if (typeof property === "string") {
      if (value === void 0) {
        throw new Error("value is undefined");
      }
      (props = {})[property] = value;
    }
    if (typeof props === "object") {
      for (var _key in props) {
        if (Object.prototype.hasOwnProperty.call(props, _key)) {
          if (!props[_key] && props[_key] !== 0) {
            removeStyle_default(node, hyphenateStyleName_default(_key));
          } else {
            css += hyphenateStyleName_default(_key) + ":" + props[_key] + ";";
          }
        }
      }
    }
    node.style.cssText += ";" + css;
  };

  // ../../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js
  var resizeObservers = [];

  // ../../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js
  var hasActiveObservations = function() {
    return resizeObservers.some(function(ro) {
      return ro.activeTargets.length > 0;
    });
  };

  // ../../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js
  var hasSkippedObservations = function() {
    return resizeObservers.some(function(ro) {
      return ro.skippedTargets.length > 0;
    });
  };

  // ../../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js
  var msg = "ResizeObserver loop completed with undelivered notifications.";
  var deliverResizeLoopError = function() {
    var event;
    if (typeof ErrorEvent === "function") {
      event = new ErrorEvent("error", {
        message: msg
      });
    } else {
      event = document.createEvent("Event");
      event.initEvent("error", false, false);
      event.message = msg;
    }
    window.dispatchEvent(event);
  };

  // ../../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js
  var ResizeObserverBoxOptions;
  (function(ResizeObserverBoxOptions2) {
    ResizeObserverBoxOptions2["BORDER_BOX"] = "border-box";
    ResizeObserverBoxOptions2["CONTENT_BOX"] = "content-box";
    ResizeObserverBoxOptions2["DEVICE_PIXEL_CONTENT_BOX"] = "device-pixel-content-box";
  })(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));

  // ../../node_modules/@juggle/resize-observer/lib/utils/freeze.js
  var freeze = function(obj) {
    return Object.freeze(obj);
  };

  // ../../node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js
  var ResizeObserverSize = function() {
    function ResizeObserverSize2(inlineSize, blockSize) {
      this.inlineSize = inlineSize;
      this.blockSize = blockSize;
      freeze(this);
    }
    return ResizeObserverSize2;
  }();

  // ../../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js
  var DOMRectReadOnly = function() {
    function DOMRectReadOnly2(x7, y6, width, height) {
      this.x = x7;
      this.y = y6;
      this.width = width;
      this.height = height;
      this.top = this.y;
      this.left = this.x;
      this.bottom = this.top + this.height;
      this.right = this.left + this.width;
      return freeze(this);
    }
    DOMRectReadOnly2.prototype.toJSON = function() {
      var _a = this, x7 = _a.x, y6 = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;
      return {x: x7, y: y6, top, right, bottom, left, width, height};
    };
    DOMRectReadOnly2.fromRect = function(rectangle) {
      return new DOMRectReadOnly2(rectangle.x, rectangle.y, rectangle.width, rectangle.height);
    };
    return DOMRectReadOnly2;
  }();

  // ../../node_modules/@juggle/resize-observer/lib/utils/element.js
  var isSVG = function(target) {
    return target instanceof SVGElement && "getBBox" in target;
  };
  var isHidden = function(target) {
    if (isSVG(target)) {
      var _a = target.getBBox(), width = _a.width, height = _a.height;
      return !width && !height;
    }
    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;
    return !(offsetWidth || offsetHeight || target.getClientRects().length);
  };
  var isElement = function(obj) {
    var _a, _b;
    if (obj instanceof Element) {
      return true;
    }
    var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;
    return !!(scope && obj instanceof scope.Element);
  };
  var isReplacedElement = function(target) {
    switch (target.tagName) {
      case "INPUT":
        if (target.type !== "image") {
          break;
        }
      case "VIDEO":
      case "AUDIO":
      case "EMBED":
      case "OBJECT":
      case "CANVAS":
      case "IFRAME":
      case "IMG":
        return true;
    }
    return false;
  };

  // ../../node_modules/@juggle/resize-observer/lib/utils/global.js
  var global2 = typeof window !== "undefined" ? window : {};

  // ../../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js
  var cache = new WeakMap();
  var scrollRegexp = /auto|scroll/;
  var verticalRegexp = /^tb|vertical/;
  var IE = /msie|trident/i.test(global2.navigator && global2.navigator.userAgent);
  var parseDimension = function(pixel) {
    return parseFloat(pixel || "0");
  };
  var size = function(inlineSize, blockSize, switchSizes) {
    if (inlineSize === void 0) {
      inlineSize = 0;
    }
    if (blockSize === void 0) {
      blockSize = 0;
    }
    if (switchSizes === void 0) {
      switchSizes = false;
    }
    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);
  };
  var zeroBoxes = freeze({
    devicePixelContentBoxSize: size(),
    borderBoxSize: size(),
    contentBoxSize: size(),
    contentRect: new DOMRectReadOnly(0, 0, 0, 0)
  });
  var calculateBoxSizes = function(target, forceRecalculation) {
    if (forceRecalculation === void 0) {
      forceRecalculation = false;
    }
    if (cache.has(target) && !forceRecalculation) {
      return cache.get(target);
    }
    if (isHidden(target)) {
      cache.set(target, zeroBoxes);
      return zeroBoxes;
    }
    var cs = getComputedStyle(target);
    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();
    var removePadding = !IE && cs.boxSizing === "border-box";
    var switchSizes = verticalRegexp.test(cs.writingMode || "");
    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || "");
    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || "");
    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);
    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);
    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);
    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);
    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);
    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);
    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);
    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);
    var horizontalPadding = paddingLeft + paddingRight;
    var verticalPadding = paddingTop + paddingBottom;
    var horizontalBorderArea = borderLeft + borderRight;
    var verticalBorderArea = borderTop + borderBottom;
    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;
    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;
    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;
    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;
    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;
    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;
    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;
    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;
    var boxes = freeze({
      devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),
      borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),
      contentBoxSize: size(contentWidth, contentHeight, switchSizes),
      contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)
    });
    cache.set(target, boxes);
    return boxes;
  };
  var calculateBoxSize = function(target, observedBox, forceRecalculation) {
    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;
    switch (observedBox) {
      case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:
        return devicePixelContentBoxSize;
      case ResizeObserverBoxOptions.BORDER_BOX:
        return borderBoxSize;
      default:
        return contentBoxSize;
    }
  };

  // ../../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js
  var ResizeObserverEntry = function() {
    function ResizeObserverEntry2(target) {
      var boxes = calculateBoxSizes(target);
      this.target = target;
      this.contentRect = boxes.contentRect;
      this.borderBoxSize = freeze([boxes.borderBoxSize]);
      this.contentBoxSize = freeze([boxes.contentBoxSize]);
      this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);
    }
    return ResizeObserverEntry2;
  }();

  // ../../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js
  var calculateDepthForNode = function(node) {
    if (isHidden(node)) {
      return Infinity;
    }
    var depth = 0;
    var parent = node.parentNode;
    while (parent) {
      depth += 1;
      parent = parent.parentNode;
    }
    return depth;
  };

  // ../../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js
  var broadcastActiveObservations = function() {
    var shallowestDepth = Infinity;
    var callbacks2 = [];
    resizeObservers.forEach(function processObserver(ro) {
      if (ro.activeTargets.length === 0) {
        return;
      }
      var entries = [];
      ro.activeTargets.forEach(function processTarget(ot2) {
        var entry = new ResizeObserverEntry(ot2.target);
        var targetDepth = calculateDepthForNode(ot2.target);
        entries.push(entry);
        ot2.lastReportedSize = calculateBoxSize(ot2.target, ot2.observedBox);
        if (targetDepth < shallowestDepth) {
          shallowestDepth = targetDepth;
        }
      });
      callbacks2.push(function resizeObserverCallback() {
        ro.callback.call(ro.observer, entries, ro.observer);
      });
      ro.activeTargets.splice(0, ro.activeTargets.length);
    });
    for (var _i = 0, callbacks_1 = callbacks2; _i < callbacks_1.length; _i++) {
      var callback = callbacks_1[_i];
      callback();
    }
    return shallowestDepth;
  };

  // ../../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js
  var gatherActiveObservationsAtDepth = function(depth) {
    resizeObservers.forEach(function processObserver(ro) {
      ro.activeTargets.splice(0, ro.activeTargets.length);
      ro.skippedTargets.splice(0, ro.skippedTargets.length);
      ro.observationTargets.forEach(function processTarget(ot2) {
        if (ot2.isActive()) {
          if (calculateDepthForNode(ot2.target) > depth) {
            ro.activeTargets.push(ot2);
          } else {
            ro.skippedTargets.push(ot2);
          }
        }
      });
    });
  };

  // ../../node_modules/@juggle/resize-observer/lib/utils/process.js
  var process2 = function() {
    var depth = 0;
    gatherActiveObservationsAtDepth(depth);
    while (hasActiveObservations()) {
      depth = broadcastActiveObservations();
      gatherActiveObservationsAtDepth(depth);
    }
    if (hasSkippedObservations()) {
      deliverResizeLoopError();
    }
    return depth > 0;
  };

  // ../../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js
  var trigger;
  var callbacks = [];
  var notify = function() {
    return callbacks.splice(0).forEach(function(cb) {
      return cb();
    });
  };
  var queueMicroTask = function(callback) {
    if (!trigger) {
      var toggle_1 = 0;
      var el_1 = document.createTextNode("");
      var config2 = {characterData: true};
      new MutationObserver(function() {
        return notify();
      }).observe(el_1, config2);
      trigger = function() {
        el_1.textContent = "" + (toggle_1 ? toggle_1-- : toggle_1++);
      };
    }
    callbacks.push(callback);
    trigger();
  };

  // ../../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js
  var queueResizeObserver = function(cb) {
    queueMicroTask(function ResizeObserver3() {
      requestAnimationFrame(cb);
    });
  };

  // ../../node_modules/@juggle/resize-observer/lib/utils/scheduler.js
  var watching = 0;
  var isWatching = function() {
    return !!watching;
  };
  var CATCH_PERIOD = 250;
  var observerConfig = {attributes: true, characterData: true, childList: true, subtree: true};
  var events = [
    "resize",
    "load",
    "transitionend",
    "animationend",
    "animationstart",
    "animationiteration",
    "keyup",
    "keydown",
    "mouseup",
    "mousedown",
    "mouseover",
    "mouseout",
    "blur",
    "focus"
  ];
  var time = function(timeout) {
    if (timeout === void 0) {
      timeout = 0;
    }
    return Date.now() + timeout;
  };
  var scheduled = false;
  var Scheduler = function() {
    function Scheduler2() {
      var _this2 = this;
      this.stopped = true;
      this.listener = function() {
        return _this2.schedule();
      };
    }
    Scheduler2.prototype.run = function(timeout) {
      var _this2 = this;
      if (timeout === void 0) {
        timeout = CATCH_PERIOD;
      }
      if (scheduled) {
        return;
      }
      scheduled = true;
      var until = time(timeout);
      queueResizeObserver(function() {
        var elementsHaveResized = false;
        try {
          elementsHaveResized = process2();
        } finally {
          scheduled = false;
          timeout = until - time();
          if (!isWatching()) {
            return;
          }
          if (elementsHaveResized) {
            _this2.run(1e3);
          } else if (timeout > 0) {
            _this2.run(timeout);
          } else {
            _this2.start();
          }
        }
      });
    };
    Scheduler2.prototype.schedule = function() {
      this.stop();
      this.run();
    };
    Scheduler2.prototype.observe = function() {
      var _this2 = this;
      var cb = function() {
        return _this2.observer && _this2.observer.observe(document.body, observerConfig);
      };
      document.body ? cb() : global2.addEventListener("DOMContentLoaded", cb);
    };
    Scheduler2.prototype.start = function() {
      var _this2 = this;
      if (this.stopped) {
        this.stopped = false;
        this.observer = new MutationObserver(this.listener);
        this.observe();
        events.forEach(function(name) {
          return global2.addEventListener(name, _this2.listener, true);
        });
      }
    };
    Scheduler2.prototype.stop = function() {
      var _this2 = this;
      if (!this.stopped) {
        this.observer && this.observer.disconnect();
        events.forEach(function(name) {
          return global2.removeEventListener(name, _this2.listener, true);
        });
        this.stopped = true;
      }
    };
    return Scheduler2;
  }();
  var scheduler = new Scheduler();
  var updateCount = function(n11) {
    !watching && n11 > 0 && scheduler.start();
    watching += n11;
    !watching && scheduler.stop();
  };

  // ../../node_modules/@juggle/resize-observer/lib/ResizeObservation.js
  var skipNotifyOnElement = function(target) {
    return !isSVG(target) && !isReplacedElement(target) && getComputedStyle(target).display === "inline";
  };
  var ResizeObservation = function() {
    function ResizeObservation2(target, observedBox) {
      this.target = target;
      this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;
      this.lastReportedSize = {
        inlineSize: 0,
        blockSize: 0
      };
    }
    ResizeObservation2.prototype.isActive = function() {
      var size2 = calculateBoxSize(this.target, this.observedBox, true);
      if (skipNotifyOnElement(this.target)) {
        this.lastReportedSize = size2;
      }
      if (this.lastReportedSize.inlineSize !== size2.inlineSize || this.lastReportedSize.blockSize !== size2.blockSize) {
        return true;
      }
      return false;
    };
    return ResizeObservation2;
  }();

  // ../../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js
  var ResizeObserverDetail = function() {
    function ResizeObserverDetail2(resizeObserver, callback) {
      this.activeTargets = [];
      this.skippedTargets = [];
      this.observationTargets = [];
      this.observer = resizeObserver;
      this.callback = callback;
    }
    return ResizeObserverDetail2;
  }();

  // ../../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js
  var observerMap = new WeakMap();
  var getObservationIndex = function(observationTargets, target) {
    for (var i9 = 0; i9 < observationTargets.length; i9 += 1) {
      if (observationTargets[i9].target === target) {
        return i9;
      }
    }
    return -1;
  };
  var ResizeObserverController = function() {
    function ResizeObserverController2() {
    }
    ResizeObserverController2.connect = function(resizeObserver, callback) {
      var detail = new ResizeObserverDetail(resizeObserver, callback);
      observerMap.set(resizeObserver, detail);
    };
    ResizeObserverController2.observe = function(resizeObserver, target, options) {
      var detail = observerMap.get(resizeObserver);
      var firstObservation = detail.observationTargets.length === 0;
      if (getObservationIndex(detail.observationTargets, target) < 0) {
        firstObservation && resizeObservers.push(detail);
        detail.observationTargets.push(new ResizeObservation(target, options && options.box));
        updateCount(1);
        scheduler.schedule();
      }
    };
    ResizeObserverController2.unobserve = function(resizeObserver, target) {
      var detail = observerMap.get(resizeObserver);
      var index = getObservationIndex(detail.observationTargets, target);
      var lastObservation = detail.observationTargets.length === 1;
      if (index >= 0) {
        lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);
        detail.observationTargets.splice(index, 1);
        updateCount(-1);
      }
    };
    ResizeObserverController2.disconnect = function(resizeObserver) {
      var _this2 = this;
      var detail = observerMap.get(resizeObserver);
      detail.observationTargets.slice().forEach(function(ot2) {
        return _this2.unobserve(resizeObserver, ot2.target);
      });
      detail.activeTargets.splice(0, detail.activeTargets.length);
    };
    return ResizeObserverController2;
  }();

  // ../../node_modules/@juggle/resize-observer/lib/ResizeObserver.js
  var ResizeObserver2 = function() {
    function ResizeObserver3(callback) {
      if (arguments.length === 0) {
        throw new TypeError("Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.");
      }
      if (typeof callback !== "function") {
        throw new TypeError("Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.");
      }
      ResizeObserverController.connect(this, callback);
    }
    ResizeObserver3.prototype.observe = function(target, options) {
      if (arguments.length === 0) {
        throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.");
      }
      if (!isElement(target)) {
        throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element");
      }
      ResizeObserverController.observe(this, target, options);
    };
    ResizeObserver3.prototype.unobserve = function(target) {
      if (arguments.length === 0) {
        throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.");
      }
      if (!isElement(target)) {
        throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element");
      }
      ResizeObserverController.unobserve(this, target);
    };
    ResizeObserver3.prototype.disconnect = function() {
      ResizeObserverController.disconnect(this);
    };
    ResizeObserver3.toString = function() {
      return "function ResizeObserver () { [polyfill code] }";
    };
    return ResizeObserver3;
  }();

  // ../../node_modules/rsuite/esm/DOMHelper/isElement.js
  var isElement2 = function isElement3(node) {
    return (node === null || node === void 0 ? void 0 : node.nodeType) === 1 && typeof (node === null || node === void 0 ? void 0 : node.nodeName) === "string";
  };
  var isElement_default = isElement2;

  // ../../node_modules/rsuite/esm/Overlay/positionUtils.js
  var import_maxBy = __toModule(require_maxBy());
  var import_minBy = __toModule(require_minBy());
  var import_kebabCase = __toModule(require_kebabCase());

  // ../../node_modules/dom-lib/esm/getWindow.js
  var getWindow_default = function(node) {
    if (node === (node === null || node === void 0 ? void 0 : node.window)) {
      return node;
    }
    return (node === null || node === void 0 ? void 0 : node.nodeType) === 9 ? (node === null || node === void 0 ? void 0 : node.defaultView) || (node === null || node === void 0 ? void 0 : node.parentWindow) : null;
  };

  // ../../node_modules/dom-lib/esm/getOffset.js
  var getOffset_default = function(node) {
    var doc = ownerDocument_default(node);
    var win = getWindow_default(doc);
    var docElem = doc && doc.documentElement;
    var box = {
      top: 0,
      left: 0,
      height: 0,
      width: 0
    };
    if (!doc) {
      return null;
    }
    if (!contains_default(docElem, node)) {
      return box;
    }
    if ((node === null || node === void 0 ? void 0 : node.getBoundingClientRect) !== void 0) {
      box = node.getBoundingClientRect();
    }
    if ((box.width || box.height) && docElem && win) {
      box = {
        top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),
        left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0),
        width: (box.width === null ? node.offsetWidth : box.width) || 0,
        height: (box.height === null ? node.offsetHeight : box.height) || 0
      };
    }
    return box;
  };

  // ../../node_modules/dom-lib/esm/scrollTop.js
  var scrollTop_default = function(node, val) {
    var win = getWindow_default(node);
    var top = node.scrollTop;
    var left = 0;
    if (win) {
      top = win.pageYOffset;
      left = win.pageXOffset;
    }
    if (val !== void 0) {
      if (win) {
        win.scrollTo(left, val);
      } else {
        node.scrollTop = val;
      }
    }
    return top;
  };

  // ../../node_modules/dom-lib/esm/scrollLeft.js
  var scrollLeft_default = function(node, val) {
    var win = getWindow_default(node);
    var left = node.scrollLeft;
    var top = 0;
    if (win) {
      left = win.pageXOffset;
      top = win.pageYOffset;
    }
    if (val !== void 0) {
      if (win) {
        win.scrollTo(val, top);
      } else {
        node.scrollLeft = val;
      }
    }
    return left;
  };

  // ../../node_modules/dom-lib/esm/nodeName.js
  var nodeName_default = function(node) {
    var _node$nodeName;
    return (node === null || node === void 0 ? void 0 : node.nodeName) && (node === null || node === void 0 ? void 0 : (_node$nodeName = node.nodeName) === null || _node$nodeName === void 0 ? void 0 : _node$nodeName.toLowerCase());
  };

  // ../../node_modules/dom-lib/esm/utils/camelizeStyleName.js
  var msPattern2 = /^ms-/;
  var camelizeStyleName_default = function(name) {
    return camelize(name.replace(msPattern2, "ms-"));
  };

  // ../../node_modules/dom-lib/esm/utils/getComputedStyle.js
  var getComputedStyle_default = function(node) {
    if (!node) {
      throw new TypeError("No Element passed to `getComputedStyle()`");
    }
    var doc = node.ownerDocument;
    if ("defaultView" in doc) {
      if (doc.defaultView.opener) {
        return node.ownerDocument.defaultView.getComputedStyle(node, null);
      }
      return window.getComputedStyle(node, null);
    }
    return null;
  };

  // ../../node_modules/dom-lib/esm/getStyle.js
  var getStyle_default = function(node, property) {
    if (property) {
      var value = node.style[camelizeStyleName_default(property)];
      if (value) {
        return value;
      }
      var styles = getComputedStyle_default(node);
      if (styles) {
        return styles.getPropertyValue(hyphenateStyleName_default(property));
      }
    }
    return node.style || getComputedStyle_default(node);
  };

  // ../../node_modules/dom-lib/esm/getOffsetParent.js
  var getOffsetParent_default = function(node) {
    var doc = ownerDocument_default(node);
    var offsetParent = node === null || node === void 0 ? void 0 : node.offsetParent;
    while (offsetParent && nodeName_default(node) !== "html" && getStyle_default(offsetParent, "position") === "static") {
      offsetParent = offsetParent.offsetParent;
    }
    return offsetParent || doc.documentElement;
  };

  // ../../node_modules/dom-lib/esm/getPosition.js
  var getPosition_default = function(node, offsetParent, calcMargin) {
    if (calcMargin === void 0) {
      calcMargin = true;
    }
    var parentOffset = {
      top: 0,
      left: 0
    };
    var offset = null;
    if (getStyle_default(node, "position") === "fixed") {
      offset = node.getBoundingClientRect();
    } else {
      offsetParent = offsetParent || getOffsetParent_default(node);
      offset = getOffset_default(node);
      if (nodeName_default(offsetParent) !== "html") {
        var nextParentOffset = getOffset_default(offsetParent);
        if (nextParentOffset) {
          parentOffset.top = nextParentOffset.top;
          parentOffset.left = nextParentOffset.left;
        }
      }
      parentOffset.top += parseInt(getStyle_default(offsetParent, "borderTopWidth"), 10) - scrollTop_default(offsetParent) || 0;
      parentOffset.left += parseInt(getStyle_default(offsetParent, "borderLeftWidth"), 10) - scrollLeft_default(offsetParent) || 0;
    }
    if (offset) {
      var marginTop = calcMargin ? parseInt(getStyle_default(node, "marginTop"), 10) || 0 : 0;
      var marginLeft = calcMargin ? parseInt(getStyle_default(node, "marginLeft"), 10) || 0 : 0;
      return _extends({}, offset, {
        top: offset.top - parentOffset.top - marginTop,
        left: offset.left - parentOffset.left - marginLeft
      });
    }
    return null;
  };

  // ../../node_modules/rsuite/esm/Overlay/positionUtils.js
  var AutoPlacement = {
    left: "Start",
    right: "End",
    top: "Start",
    bottom: "End"
  };
  function getContainerDimensions(containerNode) {
    var width;
    var height;
    var scrollX;
    var scrollY;
    if (containerNode.tagName === "BODY") {
      width = window.innerWidth;
      height = window.innerHeight;
      scrollY = scrollTop_default(ownerDocument_default(containerNode).documentElement) || scrollTop_default(containerNode);
      scrollX = scrollLeft_default(ownerDocument_default(containerNode).documentElement) || scrollLeft_default(containerNode);
    } else {
      var _ref = getOffset_default(containerNode);
      width = _ref.width;
      height = _ref.height;
      scrollY = scrollTop_default(containerNode);
      scrollX = scrollLeft_default(containerNode);
    }
    return {
      width,
      height,
      scrollX,
      scrollY
    };
  }
  var positionUtils_default = function(props) {
    var placement = props.placement, preventOverflow = props.preventOverflow, padding = props.padding;
    function getTopDelta(top, overlayHeight, container2) {
      if (!preventOverflow) {
        return 0;
      }
      var containerDimensions = getContainerDimensions(container2);
      var containerHeight = containerDimensions.height, scrollY = containerDimensions.scrollY;
      var topEdgeOffset = top - padding - scrollY;
      var bottomEdgeOffset = top + padding + overlayHeight - scrollY;
      if (topEdgeOffset < 0) {
        return -topEdgeOffset;
      } else if (bottomEdgeOffset > containerHeight) {
        return containerHeight - bottomEdgeOffset;
      }
      return 0;
    }
    function getLeftDelta(left, overlayWidth, container2) {
      if (!preventOverflow) {
        return 0;
      }
      var containerDimensions = getContainerDimensions(container2);
      var scrollX = containerDimensions.scrollX, containerWidth = containerDimensions.width;
      var leftEdgeOffset = left - padding - scrollX;
      var rightEdgeOffset = left + padding + overlayWidth - scrollX;
      if (leftEdgeOffset < 0) {
        return -leftEdgeOffset;
      } else if (rightEdgeOffset > containerWidth) {
        return containerWidth - rightEdgeOffset;
      }
      return 0;
    }
    function getPositionTop(container2, overlayHeight, top) {
      if (!preventOverflow) {
        return top;
      }
      var _getContainerDimensio = getContainerDimensions(container2), scrollY = _getContainerDimensio.scrollY, containerHeight = _getContainerDimensio.height;
      if (overlayHeight + top > containerHeight + scrollY) {
        return containerHeight - overlayHeight + scrollY;
      }
      return Math.max(scrollY, top);
    }
    function getPositionLeft(container2, overlayWidth, left) {
      if (!preventOverflow) {
        return left;
      }
      var _getContainerDimensio2 = getContainerDimensions(container2), scrollX = _getContainerDimensio2.scrollX, containerWidth = _getContainerDimensio2.width;
      if (overlayWidth + left > containerWidth + scrollX) {
        return containerWidth - overlayWidth + scrollX;
      }
      return Math.max(scrollX, left);
    }
    return {
      getPosition: function getPosition3(target, container2) {
        var offset = container2.tagName === "BODY" ? getOffset_default(target) : getPosition_default(target, container2, false);
        return offset;
      },
      getCursorOffsetPosition: function getCursorOffsetPosition(target, container2, cursorPosition) {
        var left = cursorPosition.left, top = cursorPosition.top, clientLeft = cursorPosition.clientLeft, clientTop = cursorPosition.clientTop;
        var offset = {
          left,
          top,
          width: 10,
          height: 10
        };
        if (getStyle_default(target, "position") === "fixed") {
          offset.left = clientLeft;
          offset.top = clientTop;
          return offset;
        }
        if (container2.tagName === "BODY") {
          return offset;
        }
        var containerOffset = {
          top: 0,
          left: 0
        };
        if (nodeName_default(container2) !== "html") {
          var nextParentOffset = getOffset_default(container2);
          if (nextParentOffset) {
            containerOffset.top = nextParentOffset.top;
            containerOffset.left = nextParentOffset.left;
          }
        }
        containerOffset.top += parseInt(getStyle_default(container2, "borderTopWidth"), 10) - scrollTop_default(container2) || 0;
        containerOffset.left += parseInt(getStyle_default(container2, "borderLeftWidth"), 10) - scrollLeft_default(container2) || 0;
        offset.left = left - containerOffset.left;
        offset.top = top - containerOffset.top;
        return offset;
      },
      calcAutoPlacement: function calcAutoPlacement(targetOffset, container2, overlay) {
        var _getContainerDimensio3 = getContainerDimensions(container2), width = _getContainerDimensio3.width, height = _getContainerDimensio3.height, scrollX = _getContainerDimensio3.scrollX, scrollY = _getContainerDimensio3.scrollY;
        var left = targetOffset.left - scrollX - overlay.width;
        var top = targetOffset.top - scrollY - overlay.height;
        var right = width - targetOffset.left - targetOffset.width + scrollX - overlay.width;
        var bottom = height - targetOffset.top - targetOffset.height + scrollY - overlay.height;
        var horizontal = [{
          key: "left",
          value: left
        }, {
          key: "right",
          value: right
        }];
        var vertical = [{
          key: "top",
          value: top
        }, {
          key: "bottom",
          value: bottom
        }];
        var AV = "autoVertical";
        var AH = "autoHorizontal";
        var direction;
        var align;
        if (placement.indexOf(AV) !== -1) {
          direction = (0, import_maxBy.default)(vertical, function(o8) {
            return o8.value;
          });
          return placement === AV ? direction.key : "" + direction.key + placement.replace(AV, "");
        } else if (placement.indexOf(AH) !== -1) {
          direction = (0, import_maxBy.default)(horizontal, function(o8) {
            return o8.value;
          });
          return placement === AH ? direction.key : "" + direction.key + placement.replace(AH, "");
        }
        direction = (0, import_maxBy.default)([].concat(vertical, horizontal), function(o8) {
          return o8.value;
        });
        if (direction.key === "left" || direction.key === "right") {
          align = (0, import_minBy.default)(vertical, function(o8) {
            return o8.value;
          });
        } else {
          align = (0, import_minBy.default)(horizontal, function(o8) {
            return o8.value;
          });
        }
        return "" + direction.key + AutoPlacement[align.key];
      },
      calcOverlayPosition: function calcOverlayPosition(overlayNode, target, container2, cursorPosition) {
        var childOffset = cursorPosition ? this.getCursorOffsetPosition(target, container2, cursorPosition) : this.getPosition(target, container2);
        var _ref2 = getOffset_default(overlayNode), overlayHeight = _ref2.height, overlayWidth = _ref2.width;
        var top = childOffset.top, left = childOffset.left;
        var nextPlacement = placement;
        if (placement && placement.indexOf("auto") >= 0) {
          nextPlacement = this.calcAutoPlacement(childOffset, container2, {
            height: overlayHeight,
            width: overlayWidth
          });
        }
        var positionLeft;
        var positionTop;
        var arrowOffsetLeft;
        var arrowOffsetTop;
        if (nextPlacement === "left" || nextPlacement === "right") {
          positionTop = childOffset.top + (childOffset.height - overlayHeight) / 2;
          var topDelta = getTopDelta(positionTop, overlayHeight, container2);
          positionTop += topDelta;
          arrowOffsetTop = 50 * (1 - 2 * topDelta / overlayHeight) + "%";
          arrowOffsetLeft = void 0;
        } else if (nextPlacement === "top" || nextPlacement === "bottom") {
          positionLeft = left + (childOffset.width - overlayWidth) / 2;
          var leftDelta = getLeftDelta(positionLeft, overlayWidth, container2);
          positionLeft += leftDelta;
          arrowOffsetLeft = 50 * (1 - 2 * leftDelta / overlayWidth) + "%";
          arrowOffsetTop = void 0;
        }
        if (nextPlacement === "top" || nextPlacement === "topStart" || nextPlacement === "topEnd") {
          positionTop = getPositionTop(container2, overlayHeight, childOffset.top - overlayHeight);
        }
        if (nextPlacement === "bottom" || nextPlacement === "bottomStart" || nextPlacement === "bottomEnd") {
          positionTop = getPositionTop(container2, overlayHeight, childOffset.top + childOffset.height);
        }
        if (nextPlacement === "left" || nextPlacement === "leftStart" || nextPlacement === "leftEnd") {
          positionLeft = getPositionLeft(container2, overlayWidth, childOffset.left - overlayWidth);
        }
        if (nextPlacement === "right" || nextPlacement === "rightStart" || nextPlacement === "rightEnd") {
          positionLeft = getPositionLeft(container2, overlayWidth, childOffset.left + childOffset.width);
        }
        if (document.dir === "rtl" && (nextPlacement === "left" || nextPlacement === "leftStart" || nextPlacement === "leftEnd" || nextPlacement === "right" || nextPlacement === "rightStart" || nextPlacement === "rightEnd")) {
          var _getContainerDimensio4 = getContainerDimensions(container2), containerWidth = _getContainerDimensio4.width;
          if (container2.scrollWidth > containerWidth) {
            positionLeft = containerWidth + positionLeft - container2.scrollWidth;
          }
        }
        if (nextPlacement === "topStart" || nextPlacement === "bottomStart") {
          if (document.dir === "rtl") {
            var nextLeft = left + (childOffset.width - overlayWidth);
            positionLeft = nextLeft + getLeftDelta(nextLeft, overlayWidth, container2);
          } else {
            positionLeft = left + getLeftDelta(left, overlayWidth, container2);
          }
        }
        if (nextPlacement === "topEnd" || nextPlacement === "bottomEnd") {
          if (document.dir === "rtl") {
            positionLeft = left + getLeftDelta(left, overlayWidth, container2);
          } else {
            var _nextLeft = left + (childOffset.width - overlayWidth);
            positionLeft = _nextLeft + getLeftDelta(_nextLeft, overlayWidth, container2);
          }
        }
        if (nextPlacement === "leftStart" || nextPlacement === "rightStart") {
          positionTop = top + getTopDelta(top, overlayHeight, container2);
        }
        if (nextPlacement === "leftEnd" || nextPlacement === "rightEnd") {
          var nextTop = top + (childOffset.height - overlayHeight);
          positionTop = nextTop + getTopDelta(nextTop, overlayHeight, container2);
        }
        return {
          positionLeft,
          positionTop,
          arrowOffsetLeft,
          arrowOffsetTop,
          positionClassName: "placement-" + (0, import_kebabCase.default)(nextPlacement)
        };
      }
    };
  };

  // ../../node_modules/rsuite/esm/Overlay/Position.js
  var usePosition = function usePosition2(props, ref) {
    var _props$placement = props.placement, placement = _props$placement === void 0 ? "right" : _props$placement, _props$preventOverflo = props.preventOverflow, preventOverflow = _props$preventOverflo === void 0 ? false : _props$preventOverflo, _props$containerPaddi = props.containerPadding, containerPadding = _props$containerPaddi === void 0 ? 0 : _props$containerPaddi, container2 = props.container, triggerTarget = props.triggerTarget, followCursor = props.followCursor, cursorPosition = props.cursorPosition;
    var containerRef = (0, import_react2.useRef)(null);
    var lastTargetRef = (0, import_react2.useRef)(null);
    var overlayResizeObserver = (0, import_react2.useRef)();
    var defaultPosition = {
      positionLeft: 0,
      positionTop: 0,
      arrowOffsetLeft: null,
      arrowOffsetTop: null
    };
    var _useState = (0, import_react2.useState)(defaultPosition), position = _useState[0], setPosition = _useState[1];
    var utils = (0, import_react2.useMemo)(function() {
      return positionUtils_default({
        placement,
        preventOverflow,
        padding: containerPadding
      });
    }, [placement, preventOverflow, containerPadding]);
    var updatePosition = (0, import_react2.useCallback)(function(placementChanged, forceUpdateDOM) {
      if (placementChanged === void 0) {
        placementChanged = true;
      }
      if (!(triggerTarget !== null && triggerTarget !== void 0 && triggerTarget.current)) {
        return;
      }
      var targetElement = getDOMNode(triggerTarget);
      if (!isElement_default(targetElement)) {
        throw new Error("`target` should return an HTMLElement");
      }
      if (targetElement === lastTargetRef.current && !placementChanged) {
        return;
      }
      var overlay = getDOMNode(ref.current);
      var containerElement = getContainer_default(typeof container2 === "function" ? container2() : container2 !== null && container2 !== void 0 ? container2 : null, ownerDocument_default(ref.current).body);
      var posi = utils.calcOverlayPosition(overlay, targetElement, containerElement, followCursor ? cursorPosition : void 0);
      if (forceUpdateDOM && overlay) {
        var _overlay$className, _overlay$className$ma;
        var preClassName = overlay === null || overlay === void 0 ? void 0 : (_overlay$className = overlay.className) === null || _overlay$className === void 0 ? void 0 : (_overlay$className$ma = _overlay$className.match(/(placement-\S+)/)) === null || _overlay$className$ma === void 0 ? void 0 : _overlay$className$ma[0];
        removeClass_default(overlay, preClassName);
        if (posi.positionClassName) {
          addClass_default(overlay, posi.positionClassName);
        }
        addStyle_default(overlay, {
          left: posi.positionLeft + "px",
          top: posi.positionTop + "px"
        });
      } else {
        setPosition(posi);
      }
      containerRef.current = containerElement;
      lastTargetRef.current = targetElement;
    }, [container2, ref, triggerTarget, utils, followCursor, cursorPosition]);
    (0, import_react2.useEffect)(function() {
      updatePosition(false);
      var overlay = getDOMNode(ref.current);
      var containerScrollListener;
      if (containerRef.current && preventOverflow) {
        var _containerRef$current;
        containerScrollListener = on(((_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.tagName) === "BODY" ? window : containerRef.current, "scroll", function() {
          return updatePosition(true, true);
        });
      }
      var resizeListener = on(window, "resize", function() {
        return updatePosition(true, true);
      });
      if (overlay) {
        overlayResizeObserver.current = new ResizeObserver2(function() {
          return updatePosition(true, true);
        });
        overlayResizeObserver.current.observe(overlay);
      }
      return function() {
        var _containerScrollListe, _overlayResizeObserve;
        lastTargetRef.current = null;
        (_containerScrollListe = containerScrollListener) === null || _containerScrollListe === void 0 ? void 0 : _containerScrollListe.off();
        resizeListener === null || resizeListener === void 0 ? void 0 : resizeListener.off();
        (_overlayResizeObserve = overlayResizeObserver.current) === null || _overlayResizeObserve === void 0 ? void 0 : _overlayResizeObserve.disconnect();
      };
    }, [preventOverflow, ref, updatePosition]);
    useUpdateEffect_default(function() {
      return updatePosition();
    }, [updatePosition, placement]);
    return [position, updatePosition];
  };
  var Position = /* @__PURE__ */ import_react2.default.forwardRef(function(props, ref) {
    var children = props.children, className = props.className, followCursor = props.followCursor, cursorPosition = props.cursorPosition;
    var childRef = import_react2.default.useRef(null);
    var _usePosition = usePosition(props, childRef), position = _usePosition[0], updatePosition = _usePosition[1];
    var positionClassName = position.positionClassName, arrowOffsetLeft = position.arrowOffsetLeft, arrowOffsetTop = position.arrowOffsetTop, positionLeft = position.positionLeft, positionTop = position.positionTop;
    (0, import_react2.useImperativeHandle)(ref, function() {
      return {
        get child() {
          return childRef.current;
        },
        updatePosition
      };
    });
    (0, import_react2.useEffect)(function() {
      if (!followCursor || !cursorPosition)
        return;
      updatePosition();
    }, [followCursor, cursorPosition, updatePosition]);
    if (typeof children === "function") {
      var childProps = {
        className: (0, import_classnames2.default)(className, positionClassName),
        arrowOffsetLeft,
        arrowOffsetTop,
        left: positionLeft,
        top: positionTop
      };
      return children(childProps, childRef);
    }
    return children;
  });
  Position.displayName = "Position";
  Position.propTypes = {
    className: import_prop_types.default.string,
    children: import_prop_types.default.func.isRequired,
    container: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.any]),
    containerPadding: import_prop_types.default.number,
    placement: import_prop_types.default.any,
    preventOverflow: import_prop_types.default.bool,
    triggerTarget: import_prop_types.default.any
  };
  var Position_default = Position;

  // ../../node_modules/rsuite/esm/Animation/Fade.js
  var import_react4 = __toModule(require_react());

  // ../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
  function _setPrototypeOf(o8, p6) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o9, p7) {
      o9.__proto__ = p7;
      return o9;
    };
    return _setPrototypeOf(o8, p6);
  }

  // ../../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    _setPrototypeOf(subClass, superClass);
  }

  // ../../node_modules/rsuite/esm/Animation/Transition.js
  var import_react3 = __toModule(require_react());
  var import_prop_types3 = __toModule(require_prop_types());

  // ../../node_modules/dom-lib/esm/getTransitionProperties.js
  function getTransitionProperties() {
    if (!canUseDOM_default) {
      return {};
    }
    var vendorMap = {
      O: function O8(e15) {
        return "o" + e15.toLowerCase();
      },
      Moz: function Moz(e15) {
        return e15.toLowerCase();
      },
      Webkit: function Webkit(e15) {
        return "webkit" + e15;
      },
      ms: function ms(e15) {
        return "MS" + e15;
      }
    };
    var vendors = Object.keys(vendorMap);
    var style = document.createElement("div").style;
    var tempTransitionEnd;
    var tempPrefix = "";
    for (var i9 = 0; i9 < vendors.length; i9 += 1) {
      var vendor = vendors[i9];
      if (vendor + "TransitionProperty" in style) {
        tempPrefix = "-" + vendor.toLowerCase();
        tempTransitionEnd = vendorMap[vendor]("TransitionEnd");
        break;
      }
    }
    if (!tempTransitionEnd && "transitionProperty" in style) {
      tempTransitionEnd = "transitionend";
    }
    style = null;
    var addPrefix = function addPrefix2(name) {
      return tempPrefix + "-" + name;
    };
    return {
      end: tempTransitionEnd,
      backfaceVisibility: addPrefix("backface-visibility"),
      transform: addPrefix("transform"),
      property: addPrefix("transition-property"),
      timing: addPrefix("transition-timing-function"),
      delay: addPrefix("transition-delay"),
      duration: addPrefix("transition-duration")
    };
  }
  var getTransitionProperties_default = getTransitionProperties;

  // ../../node_modules/dom-lib/esm/getTransitionEnd.js
  function getTransitionEnd() {
    return getTransitionProperties_default().end;
  }

  // ../../node_modules/rsuite/esm/Animation/Transition.js
  var import_classnames3 = __toModule(require_classnames());
  var import_isFunction = __toModule(require_isFunction());
  var import_omit = __toModule(require_omit());

  // ../../node_modules/rsuite/esm/Animation/utils.js
  var import_prop_types2 = __toModule(require_prop_types());
  function getAnimationEnd() {
    var style = document.createElement("div").style;
    if ("webkitAnimation" in style) {
      return "webkitAnimationEnd";
    }
    return "animationend";
  }
  var animationPropTypes = {
    onEnter: import_prop_types2.default.func,
    onEntering: import_prop_types2.default.func,
    onEntered: import_prop_types2.default.func,
    onExit: import_prop_types2.default.func,
    onExiting: import_prop_types2.default.func,
    onExited: import_prop_types2.default.func
  };

  // ../../node_modules/rsuite/esm/Animation/Transition.js
  var STATUS;
  (function(STATUS2) {
    STATUS2[STATUS2["UNMOUNTED"] = 0] = "UNMOUNTED";
    STATUS2[STATUS2["EXITED"] = 1] = "EXITED";
    STATUS2[STATUS2["ENTERING"] = 2] = "ENTERING";
    STATUS2[STATUS2["ENTERED"] = 3] = "ENTERED";
    STATUS2[STATUS2["EXITING"] = 4] = "EXITING";
  })(STATUS || (STATUS = {}));
  var transitionPropTypes = _extends({}, animationPropTypes, {
    animation: import_prop_types3.default.bool,
    children: import_prop_types3.default.oneOfType([import_prop_types3.default.node, import_prop_types3.default.func]),
    className: import_prop_types3.default.string,
    in: import_prop_types3.default.bool,
    unmountOnExit: import_prop_types3.default.bool,
    transitionAppear: import_prop_types3.default.bool,
    timeout: import_prop_types3.default.number,
    exitedClassName: import_prop_types3.default.string,
    exitingClassName: import_prop_types3.default.string,
    enteredClassName: import_prop_types3.default.string,
    enteringClassName: import_prop_types3.default.string
  });
  var Transition = /* @__PURE__ */ function(_React$Component) {
    _inheritsLoose(Transition2, _React$Component);
    function Transition2(props) {
      var _this2;
      _this2 = _React$Component.call(this, props) || this;
      _this2.animationEventListener = null;
      _this2.instanceElement = null;
      _this2.nextCallback = null;
      _this2.needsUpdate = null;
      _this2.childRef = void 0;
      var initialStatus;
      if (props.in) {
        initialStatus = props.transitionAppear ? STATUS.EXITED : STATUS.ENTERED;
      } else {
        initialStatus = props.unmountOnExit ? STATUS.UNMOUNTED : STATUS.EXITED;
      }
      _this2.state = {
        status: initialStatus
      };
      _this2.nextCallback = null;
      _this2.childRef = /* @__PURE__ */ import_react3.default.createRef();
      return _this2;
    }
    Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
      if (nextProps.in && nextProps.unmountOnExit) {
        if (prevState.status === STATUS.UNMOUNTED) {
          return {
            status: STATUS.EXITED
          };
        }
      }
      return null;
    };
    var _proto = Transition2.prototype;
    _proto.getSnapshotBeforeUpdate = function getSnapshotBeforeUpdate() {
      if (!this.props.in || !this.props.unmountOnExit) {
        this.needsUpdate = true;
      }
      return null;
    };
    _proto.componentDidMount = function componentDidMount() {
      if (this.props.transitionAppear && this.props.in) {
        this.performEnter(this.props);
      }
    };
    _proto.componentDidUpdate = function componentDidUpdate() {
      var status = this.state.status;
      var unmountOnExit = this.props.unmountOnExit;
      if (unmountOnExit && status === STATUS.EXITED) {
        if (this.props.in) {
          this.performEnter(this.props);
        } else {
          if (this.instanceElement) {
            this.setState({
              status: STATUS.UNMOUNTED
            });
          }
        }
        return;
      }
      if (this.needsUpdate) {
        this.needsUpdate = false;
        if (this.props.in) {
          if (status === STATUS.EXITING || status === STATUS.EXITED) {
            this.performEnter(this.props);
          }
        } else if (status === STATUS.ENTERING || status === STATUS.ENTERED) {
          this.performExit(this.props);
        }
      }
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
      this.cancelNextCallback();
      this.instanceElement = null;
    };
    _proto.onTransitionEnd = function onTransitionEnd(node, handler) {
      var _this$animationEventL;
      this.setNextCallback(handler);
      (_this$animationEventL = this.animationEventListener) === null || _this$animationEventL === void 0 ? void 0 : _this$animationEventL.off();
      if (!this.nextCallback) {
        return;
      }
      if (node) {
        var _this$props = this.props, timeout = _this$props.timeout, animation = _this$props.animation;
        this.animationEventListener = on(node, animation ? getAnimationEnd() : getTransitionEnd(), this.nextCallback);
        if (timeout !== null) {
          setTimeout(this.nextCallback, timeout);
        }
      } else {
        setTimeout(this.nextCallback, 0);
      }
    };
    _proto.setNextCallback = function setNextCallback(callback) {
      var _this2 = this;
      var active = true;
      this.nextCallback = function(event) {
        if (!active) {
          return;
        }
        if (event) {
          if (_this2.instanceElement === event.target) {
            callback(event);
            active = false;
            _this2.nextCallback = null;
          }
          return;
        }
        callback(event);
        active = false;
        _this2.nextCallback = null;
      };
      if (this.nextCallback) {
        this.nextCallback.cancel = function() {
          active = false;
        };
      }
      return this.nextCallback;
    };
    _proto.getChildElement = function getChildElement() {
      if (this.childRef.current) {
        return getDOMNode(this.childRef.current);
      }
      return getDOMNode(this);
    };
    _proto.performEnter = function performEnter(props) {
      var _this3 = this;
      var _ref = props || this.props, onEnter = _ref.onEnter, onEntering = _ref.onEntering, onEntered = _ref.onEntered;
      this.cancelNextCallback();
      var node = this.getChildElement();
      this.instanceElement = node;
      onEnter === null || onEnter === void 0 ? void 0 : onEnter(node);
      this.safeSetState({
        status: STATUS.ENTERING
      }, function() {
        onEntering === null || onEntering === void 0 ? void 0 : onEntering(node);
        _this3.onTransitionEnd(node, function() {
          _this3.safeSetState({
            status: STATUS.ENTERED
          }, function() {
            onEntered === null || onEntered === void 0 ? void 0 : onEntered(node);
          });
        });
      });
    };
    _proto.performExit = function performExit(props) {
      var _this4 = this;
      var _ref2 = props || this.props, onExit = _ref2.onExit, onExiting = _ref2.onExiting, onExited = _ref2.onExited;
      this.cancelNextCallback();
      var node = this.getChildElement();
      this.instanceElement = node;
      onExit === null || onExit === void 0 ? void 0 : onExit(node);
      this.safeSetState({
        status: STATUS.EXITING
      }, function() {
        onExiting === null || onExiting === void 0 ? void 0 : onExiting(node);
        _this4.onTransitionEnd(node, function() {
          _this4.safeSetState({
            status: STATUS.EXITED
          }, function() {
            onExited === null || onExited === void 0 ? void 0 : onExited(node);
          });
        });
      });
    };
    _proto.cancelNextCallback = function cancelNextCallback() {
      if (this.nextCallback !== null) {
        this.nextCallback.cancel();
        this.nextCallback = null;
      }
    };
    _proto.safeSetState = function safeSetState(nextState, callback) {
      if (this.instanceElement) {
        var nextCallback = this.setNextCallback(callback);
        this.setState(nextState, function() {
          return nextCallback === null || nextCallback === void 0 ? void 0 : nextCallback();
        });
      }
    };
    _proto.render = function render() {
      var _child$props;
      var status = this.state.status;
      if (status === STATUS.UNMOUNTED) {
        return null;
      }
      var _this$props2 = this.props, children = _this$props2.children, className = _this$props2.className, exitedClassName = _this$props2.exitedClassName, enteringClassName = _this$props2.enteringClassName, enteredClassName = _this$props2.enteredClassName, exitingClassName = _this$props2.exitingClassName, rest = _objectWithoutPropertiesLoose(_this$props2, ["children", "className", "exitedClassName", "enteringClassName", "enteredClassName", "exitingClassName"]);
      var childProps = (0, import_omit.default)(rest, Object.keys(transitionPropTypes));
      var transitionClassName;
      if (status === STATUS.EXITED) {
        transitionClassName = exitedClassName;
      } else if (status === STATUS.ENTERING) {
        transitionClassName = enteringClassName;
      } else if (status === STATUS.ENTERED) {
        transitionClassName = enteredClassName;
      } else if (status === STATUS.EXITING) {
        transitionClassName = exitingClassName;
      }
      if ((0, import_isFunction.default)(children)) {
        childProps.className = (0, import_classnames3.default)(className, transitionClassName);
        return children(childProps, this.childRef);
      }
      var child = import_react3.default.Children.only(children);
      return /* @__PURE__ */ import_react3.default.cloneElement(child, _extends({}, childProps, {
        ref: this.childRef,
        className: (0, import_classnames3.default)(className, (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.className, transitionClassName)
      }));
    };
    return Transition2;
  }(import_react3.default.Component);
  Transition.propTypes = transitionPropTypes;
  Transition.displayName = "Transition";
  Transition.defaultProps = {
    timeout: 1e3
  };
  var Transition_default = Transition;

  // ../../node_modules/rsuite/esm/Animation/Fade.js
  var Fade = /* @__PURE__ */ import_react4.default.forwardRef(function(_ref, ref) {
    var _ref$timeout = _ref.timeout, timeout = _ref$timeout === void 0 ? 300 : _ref$timeout, className = _ref.className, props = _objectWithoutPropertiesLoose(_ref, ["timeout", "className"]);
    var _useClassNames = useClassNames_default("anim"), prefix3 = _useClassNames.prefix, merge = _useClassNames.merge;
    return /* @__PURE__ */ import_react4.default.createElement(Transition_default, _extends({}, props, {
      ref,
      timeout,
      className: merge(className, prefix3("fade")),
      enteredClassName: prefix3("in"),
      enteringClassName: prefix3("in")
    }));
  });
  Fade.displayName = "Fade";
  var Fade_default = Fade;

  // ../../node_modules/rsuite/esm/Overlay/OverlayContext.js
  var import_react5 = __toModule(require_react());
  var OverlayContext = /* @__PURE__ */ import_react5.default.createContext({});
  OverlayContext.displayName = "OverlayContext";
  var OverlayContext_default = OverlayContext;

  // ../../node_modules/rsuite/esm/Overlay/Overlay.js
  var overlayPropTypes = {
    container: import_prop_types4.default.any,
    children: import_prop_types4.default.any,
    childrenProps: import_prop_types4.default.object,
    className: import_prop_types4.default.string,
    containerPadding: import_prop_types4.default.number,
    placement: import_prop_types4.default.any,
    preventOverflow: import_prop_types4.default.bool,
    open: import_prop_types4.default.bool,
    rootClose: import_prop_types4.default.bool,
    transition: import_prop_types4.default.any,
    triggerTarget: import_prop_types4.default.any,
    onClose: import_prop_types4.default.func,
    onEnter: import_prop_types4.default.func,
    onEntering: import_prop_types4.default.func,
    onEntered: import_prop_types4.default.func,
    onExit: import_prop_types4.default.func,
    onExiting: import_prop_types4.default.func,
    onExited: import_prop_types4.default.func
  };
  var Overlay = /* @__PURE__ */ import_react6.default.forwardRef(function(props, ref) {
    var _useContext = (0, import_react6.useContext)(OverlayContext_default), overlayContainer = _useContext.overlayContainer;
    var _props$container = props.container, container2 = _props$container === void 0 ? overlayContainer : _props$container, containerPadding = props.containerPadding, placement = props.placement, rootClose = props.rootClose, children = props.children, childrenProps = props.childrenProps, _props$transition = props.transition, Transition2 = _props$transition === void 0 ? Fade_default : _props$transition, open = props.open, preventOverflow = props.preventOverflow, triggerTarget = props.triggerTarget, onClose = props.onClose, onExited = props.onExited, onExit = props.onExit, onExiting = props.onExiting, onEnter = props.onEnter, onEntering = props.onEntering, onEntered = props.onEntered, followCursor = props.followCursor, cursorPosition = props.cursorPosition;
    var _useState = (0, import_react6.useState)(!open), exited = _useState[0], setExited = _useState[1];
    var overlayTarget = (0, import_react6.useRef)(null);
    if (open) {
      if (exited)
        setExited(false);
    } else if (!Transition2 && !exited) {
      setExited(true);
    }
    var mountOverlay = open || Transition2 && !exited;
    var handleExited = (0, import_react6.useCallback)(function(args) {
      setExited(true);
      onExited === null || onExited === void 0 ? void 0 : onExited(args);
    }, [onExited]);
    useRootClose_default(onClose, {
      triggerTarget,
      overlayTarget,
      disabled: !rootClose || !mountOverlay
    });
    if (!mountOverlay) {
      return null;
    }
    var positionProps = {
      container: container2,
      containerPadding,
      triggerTarget,
      placement,
      preventOverflow,
      followCursor,
      cursorPosition
    };
    var renderChildWithPosition = function renderChildWithPosition2(transitionProps, transitionRef) {
      return /* @__PURE__ */ import_react6.default.createElement(Position_default, _extends({}, positionProps, transitionProps, {
        ref: mergeRefs(ref, transitionRef)
      }), function(childProps, childRef) {
        if (typeof children === "function") {
          return children(Object.assign(childProps, childrenProps), mergeRefs(childRef, overlayTarget));
        }
        var left = childProps.left, top = childProps.top, className = childProps.className;
        return /* @__PURE__ */ import_react6.default.cloneElement(children, _extends({}, childrenProps, children.props, {
          className: (0, import_classnames4.default)(className, children.props.className),
          style: _extends({
            left,
            top
          }, children.props.style),
          ref: mergeRefs(childRef, overlayTarget)
        }));
      });
    };
    if (Transition2) {
      return /* @__PURE__ */ import_react6.default.createElement(Transition2, {
        in: open,
        transitionAppear: true,
        onExit,
        onExiting,
        onExited: handleExited,
        onEnter,
        onEntering,
        onEntered
      }, renderChildWithPosition);
    }
    return renderChildWithPosition();
  });
  Overlay.displayName = "Overlay";
  Overlay.propTypes = overlayPropTypes;
  var Overlay_default = Overlay;

  // ../../node_modules/rsuite/esm/Overlay/OverlayTrigger.js
  function mergeEvents(events2, props) {
    if (events2 === void 0) {
      events2 = {};
    }
    if (props === void 0) {
      props = {};
    }
    var nextEvents = {};
    Object.keys(events2).forEach(function(eventName) {
      if (events2[eventName]) {
        var _props;
        nextEvents[eventName] = createChainedFunction_default(events2[eventName], (_props = props) === null || _props === void 0 ? void 0 : _props[eventName]);
      }
    });
    return nextEvents;
  }
  function onMouseEventHandler(handler, event, delay) {
    var target = event.currentTarget;
    var related = event.relatedTarget || (0, import_get.default)(event, ["nativeEvent", "toElement"]);
    if ((!related || related !== target) && !contains_default(target, related)) {
      handler(event, delay);
    }
  }
  var defaultTrigger = ["hover", "focus"];
  var OverlayTrigger = /* @__PURE__ */ import_react7.default.forwardRef(function(props, ref) {
    var _useContext = (0, import_react7.useContext)(OverlayContext_default), overlayContainer = _useContext.overlayContainer;
    var children = props.children, _props$container = props.container, container2 = _props$container === void 0 ? overlayContainer : _props$container, controlId = props.controlId, defaultOpen = props.defaultOpen, _props$trigger = props.trigger, trigger2 = _props$trigger === void 0 ? defaultTrigger : _props$trigger, disabled = props.disabled, readOnly = props.readOnly, plaintext = props.plaintext, openProp = props.open, delay = props.delay, delayOpenProp = props.delayOpen, delayCloseProp = props.delayClose, enterable = props.enterable, _props$placement = props.placement, placement = _props$placement === void 0 ? "bottomStart" : _props$placement, speaker = props.speaker, _props$rootClose = props.rootClose, rootClose = _props$rootClose === void 0 ? true : _props$rootClose, onClick = props.onClick, onMouseOver = props.onMouseOver, onMouseMove = props.onMouseMove, onMouseOut = props.onMouseOut, onContextMenu = props.onContextMenu, onFocus = props.onFocus, onBlur = props.onBlur, onClose = props.onClose, followCursor = props.followCursor, onExited = props.onExited, rest = _objectWithoutPropertiesLoose(props, ["children", "container", "controlId", "defaultOpen", "trigger", "disabled", "readOnly", "plaintext", "open", "delay", "delayOpen", "delayClose", "enterable", "placement", "speaker", "rootClose", "onClick", "onMouseOver", "onMouseMove", "onMouseOut", "onContextMenu", "onFocus", "onBlur", "onClose", "followCursor", "onExited"]);
    var _usePortal = usePortal_default({
      container: container2
    }), Portal = _usePortal.Portal;
    var triggerRef = (0, import_react7.useRef)();
    var overlayRef = (0, import_react7.useRef)();
    var _useControlled = useControlled_default(openProp, defaultOpen), open = _useControlled[0], setOpen = _useControlled[1];
    var _useState = (0, import_react7.useState)(null), cursorPosition = _useState[0], setCursorPosition = _useState[1];
    var delayOpenTimer = (0, import_react7.useRef)(null);
    var delayCloseTimer = (0, import_react7.useRef)(null);
    var delayOpen = (0, import_isNil2.default)(delayOpenProp) ? delay : delayOpenProp;
    var delayClose = (0, import_isNil2.default)(delayCloseProp) ? delay : delayCloseProp;
    var isOnOverlay = (0, import_react7.useRef)(false);
    var isOnTrigger = (0, import_react7.useRef)(false);
    (0, import_react7.useEffect)(function() {
      return function() {
        if (!(0, import_isNil2.default)(delayOpenTimer.current)) {
          clearTimeout(delayOpenTimer.current);
        }
        if (!(0, import_isNil2.default)(delayCloseTimer.current)) {
          clearTimeout(delayCloseTimer.current);
        }
      };
    }, []);
    var handleOpen = (0, import_react7.useCallback)(function(delay2) {
      var ms = (0, import_isUndefined2.default)(delay2) ? delayOpen : delay2;
      if (ms && typeof ms === "number") {
        return delayOpenTimer.current = setTimeout(function() {
          delayOpenTimer.current = null;
          setOpen(true);
        }, ms);
      }
      setOpen(true);
    }, [delayOpen, setOpen]);
    var handleClose = (0, import_react7.useCallback)(function(delay2) {
      var ms = (0, import_isUndefined2.default)(delay2) ? delayClose : delay2;
      if (ms && typeof ms === "number") {
        return delayCloseTimer.current = setTimeout(function() {
          delayCloseTimer.current = null;
          setOpen(false);
        }, ms);
      }
      setOpen(false);
    }, [delayClose, setOpen]);
    var handleExited = (0, import_react7.useCallback)(function() {
      setCursorPosition(null);
    }, []);
    (0, import_react7.useImperativeHandle)(ref, function() {
      return {
        get root() {
          return triggerRef.current;
        },
        get overlay() {
          var _overlayRef$current;
          return (_overlayRef$current = overlayRef.current) === null || _overlayRef$current === void 0 ? void 0 : _overlayRef$current.child;
        },
        open: handleOpen,
        close: handleClose,
        updatePosition: function updatePosition() {
          var _overlayRef$current2, _overlayRef$current2$;
          (_overlayRef$current2 = overlayRef.current) === null || _overlayRef$current2 === void 0 ? void 0 : (_overlayRef$current2$ = _overlayRef$current2.updatePosition) === null || _overlayRef$current2$ === void 0 ? void 0 : _overlayRef$current2$.call(_overlayRef$current2);
        }
      };
    });
    var handleCloseWhenLeave = (0, import_react7.useCallback)(function() {
      if (!isOnOverlay.current && !isOnTrigger.current) {
        handleClose();
      }
    }, [handleClose]);
    var handleOpenState = (0, import_react7.useCallback)(function() {
      if (open) {
        handleCloseWhenLeave();
      } else {
        handleOpen();
      }
    }, [open, handleCloseWhenLeave, handleOpen]);
    var handleDelayedOpen = (0, import_react7.useCallback)(function() {
      if (!enterable) {
        return handleOpen();
      }
      isOnTrigger.current = true;
      if (!(0, import_isNil2.default)(delayCloseTimer.current)) {
        clearTimeout(delayCloseTimer.current);
        delayCloseTimer.current = null;
        return handleOpen();
      }
      if (open) {
        return;
      }
      handleOpen();
    }, [enterable, open, handleOpen]);
    var handleDelayedClose = (0, import_react7.useCallback)(function() {
      if (!enterable) {
        handleClose();
      }
      isOnTrigger.current = false;
      if (!(0, import_isNil2.default)(delayOpenTimer.current)) {
        clearTimeout(delayOpenTimer.current);
        delayOpenTimer.current = null;
        return;
      }
      if (!open || !(0, import_isNil2.default)(delayCloseTimer.current)) {
        return;
      }
      delayCloseTimer.current = setTimeout(function() {
        if (!(0, import_isNil2.default)(delayCloseTimer.current)) {
          clearTimeout(delayCloseTimer.current);
          delayCloseTimer.current = null;
        }
        handleCloseWhenLeave();
      }, 200);
    }, [enterable, open, handleClose, handleCloseWhenLeave]);
    var handleSpeakerMouseEnter = (0, import_react7.useCallback)(function() {
      isOnOverlay.current = true;
    }, []);
    var handleSpeakerMouseLeave = (0, import_react7.useCallback)(function() {
      isOnOverlay.current = false;
      if (!isOneOf("click", trigger2) && !isOneOf("contextMenu", trigger2) && !isOneOf("active", trigger2)) {
        handleCloseWhenLeave();
      }
    }, [handleCloseWhenLeave, trigger2]);
    var handledMoveOverlay = (0, import_react7.useCallback)(function(event) {
      setCursorPosition(function() {
        return {
          top: event.pageY,
          left: event.pageX,
          clientTop: event.clientX,
          clientLeft: event.clientY
        };
      });
    }, [open]);
    var preventDefault = (0, import_react7.useCallback)(function(event) {
      event.preventDefault();
    }, []);
    var triggerEvents = {
      onClick,
      onContextMenu,
      onMouseOver,
      onMouseOut,
      onFocus,
      onBlur,
      onMouseMove
    };
    if (!disabled && !readOnly && !plaintext) {
      if (isOneOf("click", trigger2)) {
        triggerEvents.onClick = createChainedFunction_default(handleOpenState, triggerEvents.onClick);
      }
      if (isOneOf("contextMenu", trigger2)) {
        triggerEvents.onContextMenu = createChainedFunction_default(preventDefault, handleOpenState, triggerEvents.onContextMenu);
      }
      if (isOneOf("active", trigger2)) {
        triggerEvents.onClick = createChainedFunction_default(handleDelayedOpen, triggerEvents.onClick);
      }
      if (isOneOf("hover", trigger2)) {
        var onMouseOverListener = null;
        var onMouseOutListener = null;
        if (trigger2 !== "none") {
          onMouseOverListener = function onMouseOverListener2(e15) {
            return onMouseEventHandler(handleDelayedOpen, e15);
          };
          onMouseOutListener = function onMouseOutListener2(e15) {
            return onMouseEventHandler(handleDelayedClose, e15);
          };
        }
        triggerEvents.onMouseOver = createChainedFunction_default(onMouseOverListener, onMouseOver);
        triggerEvents.onMouseOut = createChainedFunction_default(onMouseOutListener, onMouseOut);
      }
      if (isOneOf("focus", trigger2)) {
        triggerEvents.onFocus = createChainedFunction_default(handleDelayedOpen, onFocus);
        triggerEvents.onBlur = createChainedFunction_default(handleDelayedClose, onBlur);
      }
      if (trigger2 !== "none") {
        triggerEvents.onMouseMove = createChainedFunction_default(handledMoveOverlay, onMouseMove);
      }
    }
    var renderOverlay = function renderOverlay2() {
      var overlayProps = _extends({}, rest, {
        rootClose,
        triggerTarget: triggerRef,
        onClose: trigger2 !== "none" ? createChainedFunction_default(handleClose, onClose) : void 0,
        onExited: createChainedFunction_default(followCursor ? handleExited : void 0, onExited),
        placement,
        container: container2,
        open
      });
      var speakerProps = {
        id: controlId
      };
      if (trigger2 !== "none" && enterable) {
        speakerProps.onMouseEnter = handleSpeakerMouseEnter;
        speakerProps.onMouseLeave = handleSpeakerMouseLeave;
      }
      return /* @__PURE__ */ import_react7.default.createElement(Overlay_default, _extends({}, overlayProps, {
        ref: overlayRef,
        childrenProps: speakerProps,
        followCursor,
        cursorPosition
      }), typeof speaker === "function" ? function(props2, ref2) {
        return speaker(_extends({}, props2, {
          onClose: handleClose
        }), ref2);
      } : speaker);
    };
    return /* @__PURE__ */ import_react7.default.createElement(import_react7.default.Fragment, null, typeof children === "function" ? children(triggerEvents, triggerRef) : /* @__PURE__ */ import_react7.default.cloneElement(children, _extends({
      ref: triggerRef,
      "aria-describedby": controlId
    }, mergeEvents(triggerEvents, children.props))), /* @__PURE__ */ import_react7.default.createElement(Portal, null, renderOverlay()));
  });
  OverlayTrigger.displayName = "OverlayTrigger";
  var OverlayTrigger_default = OverlayTrigger;

  // ../../node_modules/rsuite/esm/CustomProvider/CustomProvider.js
  var import_react8 = __toModule(require_react());

  // ../../node_modules/dom-lib/esm/getHeight.js
  var getHeight_default = function(node, client) {
    var win = getWindow_default(node);
    if (win) {
      return win.innerHeight;
    }
    return client ? node.clientHeight : getOffset_default(node).height;
  };

  // ../../node_modules/dom-lib/esm/getWidth.js
  var getWidth_default = function(node, client) {
    var win = getWindow_default(node);
    if (win) {
      return win.innerWidth;
    }
    if (client) {
      return node.clientWidth;
    }
    var offset = getOffset_default(node);
    return offset ? offset.width : 0;
  };

  // ../../node_modules/rsuite/esm/CustomProvider/CustomProvider.js
  var CustomContext = /* @__PURE__ */ import_react8.default.createContext({});
  var Consumer = CustomContext.Consumer;
  var Provider = CustomContext.Provider;

  // ../../node_modules/rsuite/esm/Picker/PickerToggleTrigger.js
  var omitTriggerPropKeys = ["onEntered", "onExited", "onEnter", "onEntering", "onExit", "onExiting", "open", "defaultOpen", "onHide", "container", "containerPadding", "preventOverflow"];
  var pickTriggerPropKeys = [].concat(omitTriggerPropKeys, ["disabled", "plaintext", "readOnly"]);
  var PickerToggleTrigger = /* @__PURE__ */ import_react9.default.forwardRef(function(props, ref) {
    var pickerProps = props.pickerProps, speaker = props.speaker, placement = props.placement, _props$trigger = props.trigger, trigger2 = _props$trigger === void 0 ? "click" : _props$trigger, rest = _objectWithoutPropertiesLoose(props, ["pickerProps", "speaker", "placement", "trigger"]);
    return /* @__PURE__ */ import_react9.default.createElement(Consumer, null, function(context) {
      return /* @__PURE__ */ import_react9.default.createElement(OverlayTrigger_default, _extends({}, rest, (0, import_pick2.default)(pickerProps, pickTriggerPropKeys), {
        ref,
        trigger: trigger2,
        placement: placementPolyfill_default(placement, context === null || context === void 0 ? void 0 : context.rtl),
        speaker
      }));
    });
  });
  PickerToggleTrigger.displayName = "PickerToggleTrigger";
  var PickerToggleTrigger_default = PickerToggleTrigger;

  // ../../node_modules/rsuite/esm/Picker/DropdownMenu.js
  var import_react11 = __toModule(require_react());
  var import_prop_types6 = __toModule(require_prop_types());
  var import_isUndefined3 = __toModule(require_isUndefined());
  var import_isString = __toModule(require_isString());
  var import_isNumber = __toModule(require_isNumber());
  var import_findIndex = __toModule(require_findIndex());
  var import_classnames5 = __toModule(require_classnames());

  // ../../node_modules/rsuite/esm/Picker/VirtualizedList.js
  var import_List = __toModule(require_List2());
  var import_AutoSizer = __toModule(require_AutoSizer2());
  var List = import_List.default;
  var AutoSizer = import_AutoSizer.default;

  // ../../node_modules/rsuite/esm/Picker/DropdownMenuGroup.js
  var import_react10 = __toModule(require_react());
  var import_prop_types5 = __toModule(require_prop_types());
  var import_ArrowDown = __toModule(require_ArrowDown3());
  var _templateObject;
  var _templateObject2;
  var DropdownMenuGroup = /* @__PURE__ */ import_react10.default.forwardRef(function(props, ref) {
    var _props$as = props.as, Component = _props$as === void 0 ? "div" : _props$as, _props$classPrefix = props.classPrefix, classPrefix = _props$classPrefix === void 0 ? "dropdown-menu-group" : _props$classPrefix, children = props.children, className = props.className, rest = _objectWithoutPropertiesLoose(props, ["as", "classPrefix", "children", "className"]);
    var _useClassNames = useClassNames_default(classPrefix), withClassPrefix = _useClassNames.withClassPrefix, prefix3 = _useClassNames.prefix, merge = _useClassNames.merge;
    var classes = merge(className, withClassPrefix());
    return /* @__PURE__ */ import_react10.default.createElement(Component, _extends({
      role: "group"
    }, rest, {
      ref,
      className: classes
    }), /* @__PURE__ */ import_react10.default.createElement("div", {
      className: prefix3(_templateObject || (_templateObject = _taggedTemplateLiteralLoose(["title"]))),
      tabIndex: -1
    }, /* @__PURE__ */ import_react10.default.createElement("span", null, children), /* @__PURE__ */ import_react10.default.createElement(import_ArrowDown.default, {
      "aria-hidden": true,
      className: prefix3(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose(["caret"])))
    })));
  });
  DropdownMenuGroup.displayName = "DropdownMenuGroup";
  DropdownMenuGroup.propTypes = {
    classPrefix: import_prop_types5.default.string,
    className: import_prop_types5.default.string,
    children: import_prop_types5.default.node
  };
  var DropdownMenuGroup_default = DropdownMenuGroup;

  // ../../node_modules/rsuite/esm/Picker/DropdownMenu.js
  var _this = void 0;
  var DropdownMenu = /* @__PURE__ */ import_react11.default.forwardRef(function(props, ref) {
    var _props$data = props.data, data = _props$data === void 0 ? [] : _props$data, group = props.group, _props$maxHeight = props.maxHeight, maxHeight = _props$maxHeight === void 0 ? 320 : _props$maxHeight, _props$activeItemValu = props.activeItemValues, activeItemValues = _props$activeItemValu === void 0 ? [] : _props$activeItemValu, _props$disabledItemVa = props.disabledItemValues, disabledItemValues = _props$disabledItemVa === void 0 ? [] : _props$disabledItemVa, _props$classPrefix = props.classPrefix, classPrefix = _props$classPrefix === void 0 ? "dropdown-menu" : _props$classPrefix, _props$valueKey = props.valueKey, valueKey = _props$valueKey === void 0 ? "value" : _props$valueKey, _props$labelKey = props.labelKey, labelKey = _props$labelKey === void 0 ? "label" : _props$labelKey, virtualized = props.virtualized, listProps = props.listProps, className = props.className, style = props.style, focusItemValue = props.focusItemValue, dropdownMenuItemClassPrefix = props.dropdownMenuItemClassPrefix, DropdownMenuItem2 = props.dropdownMenuItemAs, _props$rowHeight = props.rowHeight, rowHeight = _props$rowHeight === void 0 ? 36 : _props$rowHeight, _props$rowGroupHeight = props.rowGroupHeight, rowGroupHeight = _props$rowGroupHeight === void 0 ? 48 : _props$rowGroupHeight, renderMenuGroup = props.renderMenuGroup, renderMenuItem = props.renderMenuItem, onGroupTitleClick = props.onGroupTitleClick, onSelect = props.onSelect, rest = _objectWithoutPropertiesLoose(props, ["data", "group", "maxHeight", "activeItemValues", "disabledItemValues", "classPrefix", "valueKey", "labelKey", "virtualized", "listProps", "className", "style", "focusItemValue", "dropdownMenuItemClassPrefix", "dropdownMenuItemAs", "rowHeight", "rowGroupHeight", "renderMenuGroup", "renderMenuItem", "onGroupTitleClick", "onSelect"]);
    var _useClassNames = useClassNames_default(classPrefix), withClassPrefix = _useClassNames.withClassPrefix, prefix3 = _useClassNames.prefix, merge = _useClassNames.merge;
    var classes = merge(className, withClassPrefix("items", {
      grouped: group
    }));
    var styles = _extends({}, style, {
      maxHeight
    });
    var menuBodyContainerRef = (0, import_react11.useRef)(null);
    var _useState = (0, import_react11.useState)([]), foldedGroupKeys = _useState[0], setFoldedGroupKeys = _useState[1];
    var handleGroupTitleClick = (0, import_react11.useCallback)(function(key, event) {
      var nextGroupKeys = foldedGroupKeys.filter(function(item) {
        return item !== key;
      });
      if (nextGroupKeys.length === foldedGroupKeys.length) {
        nextGroupKeys.push(key);
      }
      setFoldedGroupKeys(nextGroupKeys);
      onGroupTitleClick === null || onGroupTitleClick === void 0 ? void 0 : onGroupTitleClick(event);
    }, [onGroupTitleClick, foldedGroupKeys]);
    var handleSelect = (0, import_react11.useCallback)(function(item, value, event, checked) {
      onSelect === null || onSelect === void 0 ? void 0 : onSelect(value, item, event, checked);
    }, [onSelect]);
    var getRowHeight = function getRowHeight2(list, _ref) {
      var index = _ref.index;
      var item = list[index];
      if (group && item[KEY_GROUP] && index !== 0) {
        return rowGroupHeight;
      }
      return rowHeight;
    };
    (0, import_react11.useEffect)(function() {
      var container2 = menuBodyContainerRef.current;
      if (!container2) {
        return;
      }
      var activeItem = container2.querySelector("." + prefix3("item-focus"));
      if (!activeItem) {
        activeItem = container2.querySelector("." + prefix3("item-active"));
      }
      if (!activeItem) {
        return;
      }
      var position = getPosition_default(activeItem, container2);
      var sTop = scrollTop_default(container2);
      var sHeight = getHeight_default(container2);
      if (sTop > position.top) {
        scrollTop_default(container2, Math.max(0, position.top - 20));
      } else if (position.top > sTop + sHeight) {
        scrollTop_default(container2, Math.max(0, position.top - sHeight + 32));
      }
    }, [focusItemValue, menuBodyContainerRef, prefix3]);
    var renderItem = function renderItem2(list, _ref2) {
      var index = _ref2.index, style2 = _ref2.style;
      var item = list[index];
      var value = item[valueKey];
      var label = item[labelKey];
      if ((0, import_isUndefined3.default)(label) && !item[KEY_GROUP]) {
        throw Error('labelKey "' + labelKey + '" is not defined in "data" : ' + index);
      }
      var itemKey = (0, import_isString.default)(value) || (0, import_isNumber.default)(value) ? value : index;
      if (group && item[KEY_GROUP]) {
        var groupValue = item[KEY_GROUP_TITLE];
        return /* @__PURE__ */ import_react11.default.createElement(DropdownMenuGroup_default, {
          style: style2,
          classPrefix: "picker-menu-group",
          className: (0, import_classnames5.default)({
            folded: foldedGroupKeys.some(function(key) {
              return key === groupValue;
            })
          }),
          key: "group-" + groupValue,
          onClick: handleGroupTitleClick.bind(null, groupValue)
        }, renderMenuGroup ? renderMenuGroup(groupValue, item) : groupValue);
      } else if ((0, import_isUndefined3.default)(value) && !(0, import_isUndefined3.default)(item[KEY_GROUP])) {
        throw Error('valueKey "' + valueKey + '" is not defined in "data" : ' + index + " ");
      }
      var disabled = disabledItemValues === null || disabledItemValues === void 0 ? void 0 : disabledItemValues.some(function(disabledValue) {
        return shallowEqual_default(disabledValue, value);
      });
      var active = activeItemValues === null || activeItemValues === void 0 ? void 0 : activeItemValues.some(function(v8) {
        return shallowEqual_default(v8, value);
      });
      var focus = !(0, import_isUndefined3.default)(focusItemValue) && shallowEqual_default(focusItemValue, value);
      return /* @__PURE__ */ import_react11.default.createElement(DropdownMenuItem2, {
        style: style2,
        key: itemKey,
        disabled,
        active,
        focus,
        value,
        classPrefix: dropdownMenuItemClassPrefix,
        onSelect: handleSelect.bind(null, item)
      }, renderMenuItem ? renderMenuItem(label, item) : label);
    };
    var filteredItems = group ? data.filter(function(item) {
      return !(foldedGroupKeys !== null && foldedGroupKeys !== void 0 && foldedGroupKeys.some(function(key) {
        var _item$parent;
        return key === ((_item$parent = item.parent) === null || _item$parent === void 0 ? void 0 : _item$parent[KEY_GROUP_TITLE]);
      }));
    }) : data;
    var rowCount = filteredItems.length;
    var useVirtualized = virtualized && rowCount * rowHeight > maxHeight;
    return /* @__PURE__ */ import_react11.default.createElement("div", _extends({
      role: !useVirtualized ? "listbox" : void 0
    }, rest, {
      className: classes,
      ref: mergeRefs(menuBodyContainerRef, ref),
      style: styles
    }), useVirtualized ? /* @__PURE__ */ import_react11.default.createElement(AutoSizer, {
      defaultHeight: maxHeight,
      style: {
        width: "auto",
        height: "auto"
      }
    }, function(_ref3) {
      var height = _ref3.height, width = _ref3.width;
      return /* @__PURE__ */ import_react11.default.createElement(List, _extends({
        role: "listbox",
        containerRole: "",
        "aria-readonly": void 0,
        width,
        height: height || maxHeight,
        scrollToIndex: (0, import_findIndex.default)(data, function(item) {
          return item[valueKey] === (activeItemValues === null || activeItemValues === void 0 ? void 0 : activeItemValues[0]);
        }),
        rowCount,
        rowHeight: getRowHeight.bind(_this, filteredItems),
        rowRenderer: renderItem.bind(null, filteredItems)
      }, listProps));
    }) : filteredItems.map(function(_item, index) {
      return renderItem(filteredItems, {
        index
      });
    }));
  });
  var dropdownMenuPropTypes = {
    classPrefix: import_prop_types6.default.string.isRequired,
    className: import_prop_types6.default.string,
    dropdownMenuItemAs: import_prop_types6.default.elementType.isRequired,
    dropdownMenuItemClassPrefix: import_prop_types6.default.string,
    data: import_prop_types6.default.array,
    group: import_prop_types6.default.bool,
    disabledItemValues: import_prop_types6.default.array,
    activeItemValues: import_prop_types6.default.array,
    focusItemValue: import_prop_types6.default.any,
    maxHeight: import_prop_types6.default.number,
    valueKey: import_prop_types6.default.string,
    labelKey: import_prop_types6.default.string,
    style: import_prop_types6.default.object,
    renderMenuItem: import_prop_types6.default.func,
    renderMenuGroup: import_prop_types6.default.func,
    onSelect: import_prop_types6.default.func,
    onGroupTitleClick: import_prop_types6.default.func,
    virtualized: import_prop_types6.default.bool,
    listProps: import_prop_types6.default.any,
    rowHeight: import_prop_types6.default.number,
    rowGroupHeight: import_prop_types6.default.number
  };
  DropdownMenu.displayName = "DropdownMenu";
  DropdownMenu.propTypes = dropdownMenuPropTypes;
  var DropdownMenu_default = DropdownMenu;

  // ../../node_modules/rsuite/esm/Plaintext/Plaintext.js
  var import_react12 = __toModule(require_react());
  var Plaintext = /* @__PURE__ */ import_react12.default.forwardRef(function(props, ref) {
    var _useCustom = useCustom_default("Plaintext"), locale6 = _useCustom.locale;
    var _props$as = props.as, Component = _props$as === void 0 ? "div" : _props$as, _props$classPrefix = props.classPrefix, classPrefix = _props$classPrefix === void 0 ? "plaintext" : _props$classPrefix, className = props.className, children = props.children, _props$localeKey = props.localeKey, localeKey = _props$localeKey === void 0 ? "" : _props$localeKey, _props$placeholder = props.placeholder, placeholder = _props$placeholder === void 0 ? locale6[localeKey] : _props$placeholder, rest = _objectWithoutPropertiesLoose(props, ["as", "classPrefix", "className", "children", "localeKey", "placeholder"]);
    var _useClassNames = useClassNames_default(classPrefix), withClassPrefix = _useClassNames.withClassPrefix, merge = _useClassNames.merge;
    var classes = merge(className, withClassPrefix({
      empty: !children
    }));
    return /* @__PURE__ */ import_react12.default.createElement(Component, _extends({}, rest, {
      ref,
      className: classes
    }), children ? children : placeholder);
  });
  Plaintext.displayName = "Plaintext";
  var Plaintext_default = Plaintext;

  // ../../node_modules/rsuite/esm/Plaintext/index.js
  var Plaintext_default2 = Plaintext_default;

  // ../../node_modules/rsuite/esm/Picker/DropdownMenuItem.js
  var import_react13 = __toModule(require_react());
  var import_prop_types7 = __toModule(require_prop_types());
  var DropdownMenuItem = /* @__PURE__ */ import_react13.default.forwardRef(function(props, ref) {
    var _props$as = props.as, Component = _props$as === void 0 ? "div" : _props$as, active = props.active, _props$classPrefix = props.classPrefix, classPrefix = _props$classPrefix === void 0 ? "dropdown-menu-item" : _props$classPrefix, children = props.children, className = props.className, disabled = props.disabled, focus = props.focus, value = props.value, onKeyDown = props.onKeyDown, onSelect = props.onSelect, renderItem = props.renderItem, rest = _objectWithoutPropertiesLoose(props, ["as", "active", "classPrefix", "children", "className", "disabled", "focus", "value", "onKeyDown", "onSelect", "renderItem"]);
    var handleClick = (0, import_react13.useCallback)(function(event) {
      event.preventDefault();
      if (!disabled) {
        onSelect === null || onSelect === void 0 ? void 0 : onSelect(value, event);
      }
    }, [onSelect, disabled, value]);
    var _useClassNames = useClassNames_default(classPrefix), withClassPrefix = _useClassNames.withClassPrefix;
    var classes = withClassPrefix({
      active,
      focus,
      disabled
    });
    return /* @__PURE__ */ import_react13.default.createElement(Component, _extends({
      role: "option",
      "aria-selected": active,
      "aria-disabled": disabled,
      "data-key": value
    }, rest, {
      ref,
      className,
      tabIndex: -1,
      onKeyDown: disabled ? null : onKeyDown,
      onClick: handleClick
    }), /* @__PURE__ */ import_react13.default.createElement("span", {
      className: classes
    }, renderItem ? renderItem(value) : children));
  });
  DropdownMenuItem.displayName = "DropdownMenuItem";
  DropdownMenuItem.propTypes = {
    classPrefix: import_prop_types7.default.string,
    active: import_prop_types7.default.bool,
    disabled: import_prop_types7.default.bool,
    value: import_prop_types7.default.any,
    onSelect: import_prop_types7.default.func,
    onKeyDown: import_prop_types7.default.func,
    focus: import_prop_types7.default.bool,
    title: import_prop_types7.default.string,
    className: import_prop_types7.default.string,
    children: import_prop_types7.default.node,
    as: import_prop_types7.default.elementType
  };
  var DropdownMenuItem_default = DropdownMenuItem;

  // ../../node_modules/rsuite/esm/Picker/PickerOverlay.js
  var import_react14 = __toModule(require_react());
  var import_omit2 = __toModule(require_omit());
  var omitProps = ["placement", "arrowOffsetLeft", "arrowOffsetTop", "positionLeft", "positionTop", "getPositionInstance", "getToggleInstance", "autoWidth"];
  var resizePlacement = ["topStart", "topEnd", "leftEnd", "rightEnd", "auto", "autoVerticalStart", "autoVerticalEnd", "autoHorizontalEnd"];
  var PickerOverlay = /* @__PURE__ */ import_react14.default.forwardRef(function(props, ref) {
    var _props$as = props.as, Component = _props$as === void 0 ? "div" : _props$as, _props$classPrefix = props.classPrefix, classPrefix = _props$classPrefix === void 0 ? "picker-menu" : _props$classPrefix, autoWidth = props.autoWidth, className = props.className, _props$placement = props.placement, placement = _props$placement === void 0 ? "bottomStart" : _props$placement, target = props.target, rest = _objectWithoutPropertiesLoose(props, ["as", "classPrefix", "autoWidth", "className", "placement", "target"]);
    var overlayRef = (0, import_react14.useRef)(null);
    var handleResize = (0, import_react14.useCallback)(function() {
      var instance = target === null || target === void 0 ? void 0 : target.current;
      if (instance && resizePlacement.includes(placement)) {
        instance.updatePosition();
      }
    }, [target, placement]);
    useElementResize((0, import_react14.useCallback)(function() {
      return overlayRef.current;
    }, []), handleResize);
    (0, import_react14.useEffect)(function() {
      var toggle = target === null || target === void 0 ? void 0 : target.current;
      if (autoWidth && toggle !== null && toggle !== void 0 && toggle.root) {
        var width = getWidth_default(getDOMNode(toggle.root));
        if (overlayRef.current) {
          addStyle_default(overlayRef.current, "min-width", width + "px");
        }
      }
    }, [autoWidth, target, overlayRef]);
    var _useClassNames = useClassNames_default(classPrefix), withClassPrefix = _useClassNames.withClassPrefix, merge = _useClassNames.merge;
    var classes = merge(className, withClassPrefix());
    return /* @__PURE__ */ import_react14.default.createElement(Component, _extends({}, (0, import_omit2.default)(rest, omitProps), {
      ref: mergeRefs(overlayRef, ref),
      className: classes
    }));
  });
  PickerOverlay.displayName = "PickerOverlay";
  var PickerOverlay_default = PickerOverlay;

  // ../../node_modules/rsuite/esm/Picker/PickerToggle.js
  var import_react20 = __toModule(require_react());
  var import_prop_types9 = __toModule(require_prop_types());
  var import_debounce = __toModule(require_debounce());

  // ../../node_modules/rsuite/esm/Picker/ToggleButton.js
  var import_react15 = __toModule(require_react());
  var ToggleButton = /* @__PURE__ */ import_react15.default.forwardRef(function(props, ref) {
    return /* @__PURE__ */ import_react15.default.createElement(Button_default, _extends({}, props, {
      ref,
      as: "div",
      ripple: false
    }));
  });
  ToggleButton.displayName = "ToggleButton";
  var ToggleButton_default = ToggleButton;

  // ../../node_modules/rsuite/esm/CloseButton/CloseButton.js
  var import_react16 = __toModule(require_react());
  var import_Close = __toModule(require_Close3());
  var CloseButton = /* @__PURE__ */ import_react16.default.forwardRef(function(props, ref) {
    var _props$as = props.as, Component = _props$as === void 0 ? "span" : _props$as, _props$classPrefix = props.classPrefix, classPrefix = _props$classPrefix === void 0 ? "btn-close" : _props$classPrefix, className = props.className, overrideLocale = props.locale, rest = _objectWithoutPropertiesLoose(props, ["as", "classPrefix", "className", "locale"]);
    var _useClassNames = useClassNames_default(classPrefix), withClassPrefix = _useClassNames.withClassPrefix, merge = _useClassNames.merge;
    var _useCustom = useCustom_default("CloseButton", overrideLocale), locale6 = _useCustom.locale;
    var classes = merge(className, withClassPrefix());
    return /* @__PURE__ */ import_react16.default.createElement(Component, _extends({
      role: "button"
    }, rest, {
      ref,
      className: classes,
      title: locale6 === null || locale6 === void 0 ? void 0 : locale6.closeLabel,
      "aria-label": locale6 === null || locale6 === void 0 ? void 0 : locale6.closeLabel
    }), /* @__PURE__ */ import_react16.default.createElement(import_Close.default, null));
  });
  CloseButton.displayName = "CloseButton";
  var CloseButton_default = CloseButton;

  // ../../node_modules/rsuite/esm/CloseButton/index.js
  var CloseButton_default2 = CloseButton_default;

  // ../../node_modules/rsuite/esm/utils/useToggleCaret.js
  var import_react18 = __toModule(require_react());
  var import_AngleDown = __toModule(require_AngleDown3());
  var import_AngleUp = __toModule(require_AngleUp3());
  var import_AngleLeft = __toModule(require_AngleLeft3());
  var import_AngleRight = __toModule(require_AngleRight3());

  // ../../node_modules/rsuite/esm/utils/useCustom.js
  var import_react17 = __toModule(require_react());

  // ../../node_modules/date-fns/esm/locale/en-GB/_lib/formatLong/index.js
  var dateFormats2 = {
    full: "EEEE, d MMMM yyyy",
    long: "d MMMM yyyy",
    medium: "d MMM yyyy",
    short: "dd/MM/yyyy"
  };
  var timeFormats2 = {
    full: "HH:mm:ss zzzz",
    long: "HH:mm:ss z",
    medium: "HH:mm:ss",
    short: "HH:mm"
  };
  var dateTimeFormats2 = {
    full: "{{date}} 'at' {{time}}",
    long: "{{date}} 'at' {{time}}",
    medium: "{{date}}, {{time}}",
    short: "{{date}}, {{time}}"
  };
  var formatLong2 = {
    date: buildFormatLongFn({
      formats: dateFormats2,
      defaultWidth: "full"
    }),
    time: buildFormatLongFn({
      formats: timeFormats2,
      defaultWidth: "full"
    }),
    dateTime: buildFormatLongFn({
      formats: dateTimeFormats2,
      defaultWidth: "full"
    })
  };
  var formatLong_default2 = formatLong2;

  // ../../node_modules/date-fns/esm/locale/en-GB/index.js
  var locale2 = {
    code: "en-GB",
    formatDistance: formatDistance_default,
    formatLong: formatLong_default2,
    formatRelative: formatRelative_default,
    localize: localize_default,
    match: match_default,
    options: {
      weekStartsOn: 1,
      firstWeekContainsDate: 4
    }
  };
  var en_GB_default = locale2;

  // ../../node_modules/rsuite/esm/locales/default.js
  var Calendar = {
    sunday: "Su",
    monday: "Mo",
    tuesday: "Tu",
    wednesday: "We",
    thursday: "Th",
    friday: "Fr",
    saturday: "Sa",
    ok: "OK",
    today: "Today",
    yesterday: "Yesterday",
    hours: "Hours",
    minutes: "Minutes",
    seconds: "Seconds",
    formattedMonthPattern: "MMM yyyy",
    formattedDayPattern: "dd MMM yyyy",
    dateLocale: en_GB_default
  };
  var default_default = {
    common: {
      loading: "Loading...",
      emptyMessage: "No data found"
    },
    Plaintext: {
      unfilled: "Unfilled",
      notSelected: "Not selected",
      notUploaded: "Not uploaded"
    },
    Pagination: {
      more: "More",
      prev: "Previous",
      next: "Next",
      first: "First",
      last: "Last",
      limit: "{0} / page",
      total: "Total Rows: {0}",
      skip: "Go to{0}"
    },
    Calendar,
    DatePicker: _extends({}, Calendar),
    DateRangePicker: _extends({}, Calendar, {
      last7Days: "Last 7 Days"
    }),
    Picker: {
      noResultsText: "No results found",
      placeholder: "Select",
      searchPlaceholder: "Search",
      checkAll: "All"
    },
    InputPicker: {
      newItem: "New item",
      createOption: 'Create option "{0}"'
    },
    Uploader: {
      inited: "Initial",
      progress: "Uploading",
      error: "Error",
      complete: "Finished",
      emptyFile: "Empty",
      upload: "Upload"
    },
    CloseButton: {
      closeLabel: "Close"
    },
    Breadcrumb: {
      expandText: "Show path"
    },
    Toggle: {
      on: "Open",
      off: "Close"
    }
  };

  // ../../node_modules/rsuite/esm/utils/useCustom.js
  var mergeObject = function mergeObject2(list) {
    return list.reduce(function(a7, b8) {
      a7 = _extends({}, a7, b8);
      return a7;
    }, {});
  };
  var getDefaultRTL = function getDefaultRTL2() {
    return typeof window !== "undefined" && (document.body.getAttribute("dir") || document.dir) === "rtl";
  };
  function useCustom(keys, overrideLocale) {
    var _locale$Calendar2, _locale$Calendar4;
    var _useContext = (0, import_react17.useContext)(CustomContext), _useContext$locale = _useContext.locale, locale6 = _useContext$locale === void 0 ? default_default : _useContext$locale, _useContext$rtl = _useContext.rtl, rtl = _useContext$rtl === void 0 ? getDefaultRTL() : _useContext$rtl, formatDate = _useContext.formatDate, parseDate = _useContext.parseDate, toasters = _useContext.toasters;
    var componentLocale = _extends({}, locale6 === null || locale6 === void 0 ? void 0 : locale6.common, typeof keys === "string" ? locale6 === null || locale6 === void 0 ? void 0 : locale6[keys] : typeof keys === "object" ? mergeObject(keys.map(function(key) {
      return locale6 === null || locale6 === void 0 ? void 0 : locale6[key];
    })) : {});
    if (overrideLocale) {
      componentLocale = mergeObject([componentLocale, overrideLocale]);
    }
    var defaultFormatDate = (0, import_react17.useCallback)(function(date2, formatStr) {
      var _locale$Calendar;
      return format(date2, formatStr, {
        locale: locale6 === null || locale6 === void 0 ? void 0 : (_locale$Calendar = locale6.Calendar) === null || _locale$Calendar === void 0 ? void 0 : _locale$Calendar.dateLocale
      });
    }, [(_locale$Calendar2 = locale6.Calendar) === null || _locale$Calendar2 === void 0 ? void 0 : _locale$Calendar2.dateLocale]);
    var defaultParseDate = (0, import_react17.useCallback)(function(dateString, formatString) {
      var _locale$Calendar3;
      return parse(dateString, formatString, new Date(), {
        locale: locale6 === null || locale6 === void 0 ? void 0 : (_locale$Calendar3 = locale6.Calendar) === null || _locale$Calendar3 === void 0 ? void 0 : _locale$Calendar3.dateLocale
      });
    }, [(_locale$Calendar4 = locale6.Calendar) === null || _locale$Calendar4 === void 0 ? void 0 : _locale$Calendar4.dateLocale]);
    return {
      locale: componentLocale,
      rtl,
      toasters,
      formatDate: formatDate || defaultFormatDate,
      parseDate: parseDate || defaultParseDate
    };
  }
  var useCustom_default = useCustom;

  // ../../node_modules/rsuite/esm/utils/useToggleCaret.js
  function useToggleCaret(placement) {
    var _useCustom = useCustom_default("Dropdown"), rtl = _useCustom.rtl;
    return (0, import_react18.useMemo)(function() {
      switch (true) {
        case /^top/.test(placement):
          return import_AngleUp.default;
        case /^right/.test(placement):
          return rtl ? import_AngleLeft.default : import_AngleRight.default;
        case /^left/.test(placement):
          return rtl ? import_AngleRight.default : import_AngleLeft.default;
        case /^bottom/.test(placement):
        default:
          return import_AngleDown.default;
      }
    }, [placement, rtl]);
  }
  var useToggleCaret_default = useToggleCaret;

  // ../../node_modules/rsuite/esm/MaskedInput/TextMask.js
  var import_react19 = __toModule(require_react());
  var import_omit3 = __toModule(require_omit());
  var import_prop_types8 = __toModule(require_prop_types());

  // ../../node_modules/rsuite/esm/MaskedInput/createTextMaskInputElement.js
  var import_isString2 = __toModule(require_isString());
  var import_isNumber2 = __toModule(require_isNumber());

  // ../../node_modules/rsuite/esm/MaskedInput/adjustCaretPosition.js
  var defaultArray = [];
  var emptyString = "";
  function adjustCaretPosition(_ref) {
    var _ref$previousConforme = _ref.previousConformedValue, previousConformedValue = _ref$previousConforme === void 0 ? emptyString : _ref$previousConforme, _ref$previousPlacehol = _ref.previousPlaceholder, previousPlaceholder = _ref$previousPlacehol === void 0 ? emptyString : _ref$previousPlacehol, _ref$currentCaretPosi = _ref.currentCaretPosition, currentCaretPosition = _ref$currentCaretPosi === void 0 ? 0 : _ref$currentCaretPosi, conformedValue = _ref.conformedValue, rawValue = _ref.rawValue, placeholderChar = _ref.placeholderChar, placeholder = _ref.placeholder, _ref$indexesOfPipedCh = _ref.indexesOfPipedChars, indexesOfPipedChars = _ref$indexesOfPipedCh === void 0 ? defaultArray : _ref$indexesOfPipedCh, _ref$caretTrapIndexes = _ref.caretTrapIndexes, caretTrapIndexes = _ref$caretTrapIndexes === void 0 ? defaultArray : _ref$caretTrapIndexes;
    if (currentCaretPosition === 0 || !rawValue.length) {
      return 0;
    }
    var rawValueLength = rawValue.length;
    var previousConformedValueLength = previousConformedValue.length;
    var placeholderLength = placeholder.length;
    var conformedValueLength = conformedValue.length;
    var editLength = rawValueLength - previousConformedValueLength;
    var isAddition = editLength > 0;
    var isFirstRawValue = previousConformedValueLength === 0;
    var isPartialMultiCharEdit = editLength > 1 && !isFirstRawValue;
    if (isPartialMultiCharEdit) {
      return currentCaretPosition;
    }
    var possiblyHasRejectedChar = isAddition && (previousConformedValue === conformedValue || conformedValue === placeholder);
    var startingSearchIndex = 0;
    var trackRightCharacter;
    var targetChar;
    if (possiblyHasRejectedChar) {
      startingSearchIndex = currentCaretPosition - editLength;
    } else {
      var normalizedConformedValue = conformedValue.toLowerCase();
      var normalizedRawValue = rawValue.toLowerCase();
      var leftHalfChars = normalizedRawValue.substr(0, currentCaretPosition).split(emptyString);
      var intersection = leftHalfChars.filter(function(char) {
        return normalizedConformedValue.indexOf(char) !== -1;
      });
      targetChar = intersection[intersection.length - 1];
      var previousLeftMaskChars = previousPlaceholder.substr(0, intersection.length).split(emptyString).filter(function(char) {
        return char !== placeholderChar;
      }).length;
      var leftMaskChars = placeholder.substr(0, intersection.length).split(emptyString).filter(function(char) {
        return char !== placeholderChar;
      }).length;
      var masklengthChanged = leftMaskChars !== previousLeftMaskChars;
      var targetIsMaskMovingLeft = previousPlaceholder[intersection.length - 1] !== void 0 && placeholder[intersection.length - 2] !== void 0 && previousPlaceholder[intersection.length - 1] !== placeholderChar && previousPlaceholder[intersection.length - 1] !== placeholder[intersection.length - 1] && previousPlaceholder[intersection.length - 1] === placeholder[intersection.length - 2];
      if (!isAddition && (masklengthChanged || targetIsMaskMovingLeft) && previousLeftMaskChars > 0 && placeholder.indexOf(targetChar) > -1 && rawValue[currentCaretPosition] !== void 0) {
        trackRightCharacter = true;
        targetChar = rawValue[currentCaretPosition];
      }
      var pipedChars = indexesOfPipedChars.map(function(index) {
        return normalizedConformedValue[index];
      });
      var countTargetCharInPipedChars = pipedChars.filter(function(char) {
        return char === targetChar;
      }).length;
      var countTargetCharInIntersection = intersection.filter(function(char) {
        return char === targetChar;
      }).length;
      var countTargetCharInPlaceholder = placeholder.substr(0, placeholder.indexOf(placeholderChar)).split(emptyString).filter(function(char, index) {
        return char === targetChar && rawValue[index] !== char;
      }).length;
      var requiredNumberOfMatches = countTargetCharInPlaceholder + countTargetCharInIntersection + countTargetCharInPipedChars + (trackRightCharacter ? 1 : 0);
      var numberOfEncounteredMatches = 0;
      for (var i9 = 0; i9 < conformedValueLength; i9++) {
        var conformedValueChar = normalizedConformedValue[i9];
        startingSearchIndex = i9 + 1;
        if (conformedValueChar === targetChar) {
          numberOfEncounteredMatches++;
        }
        if (numberOfEncounteredMatches >= requiredNumberOfMatches) {
          break;
        }
      }
    }
    if (isAddition) {
      var lastPlaceholderChar = startingSearchIndex;
      for (var _i = startingSearchIndex; _i <= placeholderLength; _i++) {
        if (placeholder[_i] === placeholderChar) {
          lastPlaceholderChar = _i;
        }
        if (placeholder[_i] === placeholderChar || caretTrapIndexes.indexOf(_i) !== -1 || _i === placeholderLength) {
          return lastPlaceholderChar;
        }
      }
    } else {
      if (trackRightCharacter) {
        for (var _i2 = startingSearchIndex - 1; _i2 >= 0; _i2--) {
          if (conformedValue[_i2] === targetChar || caretTrapIndexes.indexOf(_i2) !== -1 || _i2 === 0) {
            return _i2;
          }
        }
      } else {
        for (var _i3 = startingSearchIndex; _i3 >= 0; _i3--) {
          if (placeholder[_i3 - 1] === placeholderChar || caretTrapIndexes.indexOf(_i3) !== -1 || _i3 === 0) {
            return _i3;
          }
        }
      }
    }
  }

  // ../../node_modules/rsuite/esm/MaskedInput/utilities.js
  var emptyArray = [];
  var strCaretTrap = "[]";
  var defaultPlaceholderChar = "_";
  function convertMaskToPlaceholder(mask, placeholderChar) {
    if (mask === void 0) {
      mask = emptyArray;
    }
    if (placeholderChar === void 0) {
      placeholderChar = defaultPlaceholderChar;
    }
    if (!Array.isArray(mask)) {
      throw new Error("Text-mask:convertMaskToPlaceholder; The mask property must be an array.");
    }
    if (mask.indexOf(placeholderChar) !== -1) {
      throw new Error("Placeholder character must not be used as part of the mask. Please specify a character that is not present in your mask as your placeholder character.\n\n" + ("The placeholder character that was received is: " + JSON.stringify(placeholderChar) + "\n\n") + ("The mask that was received is: " + JSON.stringify(mask)));
    }
    return mask.map(function(char) {
      return char instanceof RegExp ? placeholderChar : char;
    }).join("");
  }
  function processCaretTraps(mask) {
    var indexes = [];
    var indexOfCaretTrap;
    while (indexOfCaretTrap = mask.indexOf(strCaretTrap), indexOfCaretTrap !== -1) {
      indexes.push(indexOfCaretTrap);
      mask.splice(indexOfCaretTrap, 1);
    }
    return {
      maskWithoutCaretTraps: mask,
      indexes
    };
  }

  // ../../node_modules/rsuite/esm/MaskedInput/conformToMask.js
  function isArray(value) {
    return Array.isArray && Array.isArray(value) || value instanceof Array;
  }
  function conformToMask(rawValue, mask, config2) {
    if (rawValue === void 0) {
      rawValue = "";
    }
    if (mask === void 0) {
      mask = [];
    }
    if (config2 === void 0) {
      config2 = {};
    }
    if (!isArray(mask)) {
      if (typeof mask === "function") {
        mask = mask(rawValue, config2);
        mask = processCaretTraps(mask).maskWithoutCaretTraps;
      } else {
        throw new Error("Text-mask:conformToMask; The mask property must be an array.");
      }
    }
    var _config = config2, _config$guide = _config.guide, guide = _config$guide === void 0 ? true : _config$guide, _config$previousConfo = _config.previousConformedValue, previousConformedValue = _config$previousConfo === void 0 ? "" : _config$previousConfo, _config$placeholderCh = _config.placeholderChar, placeholderChar = _config$placeholderCh === void 0 ? defaultPlaceholderChar : _config$placeholderCh, _config$placeholder = _config.placeholder, placeholder = _config$placeholder === void 0 ? convertMaskToPlaceholder(mask, placeholderChar) : _config$placeholder, _config$currentCaretP = _config.currentCaretPosition, currentCaretPosition = _config$currentCaretP === void 0 ? 0 : _config$currentCaretP, keepCharPositions = _config.keepCharPositions;
    var suppressGuide = guide === false && previousConformedValue !== void 0;
    var rawValueLength = rawValue.length;
    var previousConformedValueLength = previousConformedValue.length;
    var placeholderLength = placeholder.length;
    var maskLength = mask.length;
    var editDistance = rawValueLength - previousConformedValueLength;
    var isAddition = editDistance > 0;
    var indexOfFirstChange = currentCaretPosition + (isAddition ? -editDistance : 0);
    var indexOfLastChange = indexOfFirstChange + Math.abs(editDistance);
    if (keepCharPositions === true && !isAddition) {
      var compensatingPlaceholderChars = "";
      for (var i9 = indexOfFirstChange; i9 < indexOfLastChange; i9++) {
        if (placeholder[i9] === placeholderChar) {
          compensatingPlaceholderChars += placeholderChar;
        }
      }
      rawValue = rawValue.slice(0, indexOfFirstChange) + compensatingPlaceholderChars + rawValue.slice(indexOfFirstChange, rawValueLength);
    }
    var rawValueArr = rawValue.split("").map(function(char2, i10) {
      return {
        char: char2,
        isNew: i10 >= indexOfFirstChange && i10 < indexOfLastChange
      };
    });
    for (var _i = rawValueLength - 1; _i >= 0; _i--) {
      var char = rawValueArr[_i].char;
      if (char !== placeholderChar) {
        var shouldOffset = _i >= indexOfFirstChange && previousConformedValueLength === maskLength;
        if (char === placeholder[shouldOffset ? _i - editDistance : _i]) {
          rawValueArr.splice(_i, 1);
        }
      }
    }
    var conformedValue = "";
    var someCharsRejected = false;
    placeholderLoop:
      for (var _i2 = 0; _i2 < placeholderLength; _i2++) {
        var charInPlaceholder = placeholder[_i2];
        if (charInPlaceholder === placeholderChar) {
          if (rawValueArr.length > 0) {
            while (rawValueArr.length > 0) {
              var _ref = rawValueArr.shift(), rawValueChar = _ref.char, isNew = _ref.isNew;
              if (rawValueChar === placeholderChar && suppressGuide !== true) {
                conformedValue += placeholderChar;
                continue placeholderLoop;
              } else if (mask[_i2].test(rawValueChar)) {
                if (keepCharPositions !== true || isNew === false || previousConformedValue === "" || guide === false || !isAddition) {
                  conformedValue += rawValueChar;
                } else {
                  var rawValueArrLength = rawValueArr.length;
                  var indexOfNextAvailablePlaceholderChar = null;
                  for (var _i3 = 0; _i3 < rawValueArrLength; _i3++) {
                    var charData = rawValueArr[_i3];
                    if (charData.char !== placeholderChar && charData.isNew === false) {
                      break;
                    }
                    if (charData.char === placeholderChar) {
                      indexOfNextAvailablePlaceholderChar = _i3;
                      break;
                    }
                  }
                  if (indexOfNextAvailablePlaceholderChar !== null) {
                    conformedValue += rawValueChar;
                    rawValueArr.splice(indexOfNextAvailablePlaceholderChar, 1);
                  } else {
                    _i2--;
                  }
                }
                continue placeholderLoop;
              } else {
                someCharsRejected = true;
              }
            }
          }
          if (suppressGuide === false) {
            conformedValue += placeholder.substr(_i2, placeholderLength);
          }
          break;
        } else {
          conformedValue += charInPlaceholder;
        }
      }
    if (suppressGuide && isAddition === false) {
      var indexOfLastFilledPlaceholderChar = null;
      for (var _i4 = 0; _i4 < conformedValue.length; _i4++) {
        if (placeholder[_i4] === placeholderChar) {
          indexOfLastFilledPlaceholderChar = _i4;
        }
      }
      if (indexOfLastFilledPlaceholderChar !== null) {
        conformedValue = conformedValue.substr(0, indexOfLastFilledPlaceholderChar + 1);
      } else {
        conformedValue = "";
      }
    }
    return {
      conformedValue,
      meta: {
        someCharsRejected
      }
    };
  }

  // ../../node_modules/rsuite/esm/MaskedInput/createTextMaskInputElement.js
  var emptyString2 = "";
  var strNone = "none";
  var strObject = "object";
  var isAndroid = typeof navigator !== "undefined" && /Android/i.test(navigator.userAgent);
  var defer = typeof requestAnimationFrame !== "undefined" ? requestAnimationFrame : setTimeout;
  function createTextMaskInputElement(config2) {
    var state = {
      previousConformedValue: void 0,
      previousPlaceholder: void 0
    };
    return {
      state,
      update: function update3(rawValue, _temp) {
        var _pipeResults, _pipeResults2;
        var _ref = _temp === void 0 ? config2 : _temp, inputElement = _ref.inputElement, providedMask = _ref.mask, guide = _ref.guide, pipe = _ref.pipe, _ref$placeholderChar = _ref.placeholderChar, placeholderChar = _ref$placeholderChar === void 0 ? defaultPlaceholderChar : _ref$placeholderChar, _ref$keepCharPosition = _ref.keepCharPositions, keepCharPositions = _ref$keepCharPosition === void 0 ? false : _ref$keepCharPosition, _ref$showMask = _ref.showMask, showMask = _ref$showMask === void 0 ? false : _ref$showMask;
        if (typeof rawValue === "undefined") {
          rawValue = inputElement.value;
        }
        if (rawValue === state.previousConformedValue) {
          return;
        }
        if (typeof providedMask === strObject && providedMask.pipe !== void 0 && providedMask.mask !== void 0) {
          pipe = providedMask.pipe;
          providedMask = providedMask.mask;
        }
        var placeholder;
        var mask;
        if (providedMask instanceof Array) {
          placeholder = convertMaskToPlaceholder(providedMask, placeholderChar);
        }
        if (providedMask === false) {
          return;
        }
        var safeRawValue = getSafeRawValue(rawValue);
        var currentCaretPosition = inputElement.selectionEnd;
        var previousConformedValue = state.previousConformedValue, previousPlaceholder = state.previousPlaceholder;
        var caretTrapIndexes;
        if (typeof providedMask === "function") {
          mask = providedMask(safeRawValue, {
            currentCaretPosition,
            previousConformedValue,
            placeholderChar
          });
          if (mask === false) {
            return;
          }
          var _processCaretTraps = processCaretTraps(mask), maskWithoutCaretTraps = _processCaretTraps.maskWithoutCaretTraps, indexes = _processCaretTraps.indexes;
          mask = maskWithoutCaretTraps;
          caretTrapIndexes = indexes;
          placeholder = convertMaskToPlaceholder(mask, placeholderChar);
        } else {
          mask = providedMask;
        }
        var conformToMaskConfig = {
          previousConformedValue,
          guide,
          placeholderChar,
          pipe,
          placeholder,
          currentCaretPosition,
          keepCharPositions
        };
        var _conformToMask = conformToMask(safeRawValue, mask, conformToMaskConfig), conformedValue = _conformToMask.conformedValue;
        var piped = typeof pipe === "function";
        var pipeResults = {};
        if (piped) {
          pipeResults = pipe(conformedValue, _extends({
            rawValue: safeRawValue
          }, conformToMaskConfig));
          if (pipeResults === false) {
            pipeResults = {
              value: previousConformedValue,
              rejected: true
            };
          } else if ((0, import_isString2.default)(pipeResults)) {
            pipeResults = {
              value: pipeResults
            };
          }
        }
        var finalConformedValue = piped ? (_pipeResults = pipeResults) === null || _pipeResults === void 0 ? void 0 : _pipeResults.value : conformedValue;
        var adjustedCaretPosition = adjustCaretPosition({
          previousConformedValue,
          previousPlaceholder,
          conformedValue: finalConformedValue,
          placeholder,
          rawValue: safeRawValue,
          currentCaretPosition,
          placeholderChar,
          indexesOfPipedChars: (_pipeResults2 = pipeResults) === null || _pipeResults2 === void 0 ? void 0 : _pipeResults2.indexesOfPipedChars,
          caretTrapIndexes
        });
        var inputValueShouldBeEmpty = finalConformedValue === placeholder && adjustedCaretPosition === 0;
        var emptyValue = showMask ? placeholder : emptyString2;
        var inputElementValue = inputValueShouldBeEmpty ? emptyValue : finalConformedValue;
        state.previousConformedValue = inputElementValue;
        state.previousPlaceholder = placeholder;
        if (inputElement.value === inputElementValue) {
          return;
        }
        inputElement.value = inputElementValue;
        safeSetSelection(inputElement, adjustedCaretPosition);
      }
    };
  }
  function safeSetSelection(element, selectionPosition) {
    if (document.activeElement === element) {
      if (isAndroid) {
        defer(function() {
          return element.setSelectionRange(selectionPosition, selectionPosition, strNone);
        }, 0);
      } else {
        element.setSelectionRange(selectionPosition, selectionPosition, strNone);
      }
    }
  }
  function getSafeRawValue(inputValue) {
    if ((0, import_isString2.default)(inputValue)) {
      return inputValue;
    } else if ((0, import_isNumber2.default)(inputValue)) {
      return String(inputValue);
    } else if (inputValue === void 0 || inputValue === null) {
      return emptyString2;
    } else {
      throw new Error("The 'value' provided to Text Mask needs to be a string or a number. The value received was:\n\n " + JSON.stringify(inputValue));
    }
  }

  // ../../node_modules/rsuite/esm/MaskedInput/TextMask.js
  var defaultRender = function defaultRender2(ref, props) {
    return /* @__PURE__ */ import_react19.default.createElement("input", _extends({
      ref
    }, props));
  };
  var TextMask = /* @__PURE__ */ import_react19.default.forwardRef(function(props, ref) {
    var mask = props.mask, _props$guide = props.guide, guide = _props$guide === void 0 ? true : _props$guide, placeholderChar = props.placeholderChar, value = props.value, showMask = props.showMask, pipe = props.pipe, _props$render = props.render, render = _props$render === void 0 ? defaultRender : _props$render, onChange = props.onChange, rest = _objectWithoutPropertiesLoose(props, ["mask", "guide", "placeholderChar", "value", "showMask", "pipe", "render", "onChange"]);
    var inputRef = (0, import_react19.useRef)(null);
    var textMaskInputElement = (0, import_react19.useRef)();
    var initTextMask = (0, import_react19.useCallback)(function() {
      var _textMaskInputElement;
      textMaskInputElement.current = createTextMaskInputElement(_extends({
        inputElement: inputRef.current
      }, props));
      (_textMaskInputElement = textMaskInputElement.current) === null || _textMaskInputElement === void 0 ? void 0 : _textMaskInputElement.update(value);
    }, [props, value]);
    var handleChange = (0, import_react19.useCallback)(function(event) {
      var _textMaskInputElement2;
      (_textMaskInputElement2 = textMaskInputElement.current) === null || _textMaskInputElement2 === void 0 ? void 0 : _textMaskInputElement2.update();
      onChange === null || onChange === void 0 ? void 0 : onChange(event);
    }, [onChange]);
    (0, import_react19.useEffect)(function() {
      initTextMask();
    }, [guide, placeholderChar, showMask, pipe, mask, value, initTextMask]);
    return render(mergeRefs(inputRef, ref), _extends({
      onChange: handleChange,
      defaultValue: value
    }, (0, import_omit3.default)(rest, ["keepCharPositions"])));
  });
  TextMask.displayName = "TextMask";
  TextMask.propTypes = {
    render: import_prop_types8.default.func,
    onChange: import_prop_types8.default.func,
    mask: import_prop_types8.default.oneOfType([import_prop_types8.default.array, import_prop_types8.default.func, import_prop_types8.default.bool]).isRequired,
    guide: import_prop_types8.default.bool,
    value: import_prop_types8.default.oneOfType([import_prop_types8.default.string, import_prop_types8.default.number]),
    pipe: import_prop_types8.default.func,
    placeholderChar: import_prop_types8.default.string,
    keepCharPositions: import_prop_types8.default.bool,
    showMask: import_prop_types8.default.bool
  };
  var TextMask_default = TextMask;

  // ../../node_modules/rsuite/esm/utils/warnOnce.js
  var warned = {};
  function warnOnce(message) {
    if (!warned[message]) {
      console.warn(message);
      warned[message] = true;
    }
  }
  warnOnce._resetWarned = function() {
    for (var _message in warned) {
      delete warned[_message];
    }
  };

  // ../../node_modules/rsuite/esm/utils/deprecatePropType.js
  function deprecatePropType(propType, explanation) {
    return function validate(props, propName, componentName) {
      if (props[propName] != null) {
        var message = '"' + propName + '" property of "' + componentName + '" has been deprecated.\n' + explanation;
        warnOnce(message);
      }
      for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
        rest[_key - 3] = arguments[_key];
      }
      return propType.apply(void 0, [props, propName, componentName].concat(rest));
    };
  }

  // ../../node_modules/rsuite/esm/Picker/PickerToggle.js
  var _templateObject3;
  var _templateObject22;
  var defaultInputMask = [];
  var PickerToggle = /* @__PURE__ */ import_react20.default.forwardRef(function(props, ref) {
    var activeProp = props.active, _props$as = props.as, Component = _props$as === void 0 ? ToggleButton_default : _props$as, _props$classPrefix = props.classPrefix, classPrefix = _props$classPrefix === void 0 ? "picker-toggle" : _props$classPrefix, children = props.children, _props$caret = props.caret, caret = _props$caret === void 0 ? true : _props$caret, className = props.className, disabled = props.disabled, readOnly = props.readOnly, plaintext = props.plaintext, hasValue = props.hasValue, cleanableProp = props.cleanable, _props$tabIndex = props.tabIndex, tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex, id = props.id, value = props.value, input = props.input, inputPlaceholder = props.inputPlaceholder, inputValueProp = props.inputValue, _props$inputMask = props.inputMask, inputMask = _props$inputMask === void 0 ? defaultInputMask : _props$inputMask, onInputChange = props.onInputChange, onInputPressEnter = props.onInputPressEnter, onInputBlur = props.onInputBlur, onInputFocus = props.onInputFocus, onClean = props.onClean, onFocus = props.onFocus, onBlur = props.onBlur, _props$placement = props.placement, placement = _props$placement === void 0 ? "bottomStart" : _props$placement, caretComponent = props.caretComponent, _props$caretAs = props.caretAs, caretAs = _props$caretAs === void 0 ? caretComponent : _props$caretAs, rest = _objectWithoutPropertiesLoose(props, ["active", "as", "classPrefix", "children", "caret", "className", "disabled", "readOnly", "plaintext", "hasValue", "cleanable", "tabIndex", "id", "value", "input", "inputPlaceholder", "inputValue", "inputMask", "onInputChange", "onInputPressEnter", "onInputBlur", "onInputFocus", "onClean", "onFocus", "onBlur", "placement", "caretComponent", "caretAs"]);
    var inputRef = (0, import_react20.useRef)(null);
    var _useState = (0, import_react20.useState)(false), activeState = _useState[0], setActive = _useState[1];
    var _useClassNames = useClassNames_default(classPrefix), withClassPrefix = _useClassNames.withClassPrefix, merge = _useClassNames.merge, prefix3 = _useClassNames.prefix;
    var getInputValue = (0, import_react20.useCallback)(function() {
      return typeof inputValueProp === "undefined" ? Array.isArray(value) ? value.join(",") : value : inputValueProp;
    }, [inputValueProp, value]);
    var _useState2 = (0, import_react20.useState)(getInputValue), inputValue = _useState2[0], setInputValue = _useState2[1];
    (0, import_react20.useEffect)(function() {
      var value2 = getInputValue();
      setInputValue(value2);
    }, [getInputValue]);
    var classes = merge(className, withClassPrefix({
      active: activeProp || activeState
    }));
    var handleFocus = (0, import_react20.useCallback)(function(event) {
      setActive(true);
      onFocus === null || onFocus === void 0 ? void 0 : onFocus(event);
      if (input) {
        var _inputRef$current;
        (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();
      }
    }, [input, onFocus]);
    var handleBlur = (0, import_react20.useCallback)(function(event) {
      if (inputRef.current && document.activeElement !== inputRef.current) {
        setActive(false);
        inputRef.current.blur();
      }
      onBlur === null || onBlur === void 0 ? void 0 : onBlur(event);
    }, [onBlur]);
    var handleInputBlur = function handleInputBlur2(event) {
      setInputValue(getInputValue());
      onInputBlur === null || onInputBlur === void 0 ? void 0 : onInputBlur(event);
    };
    var handleClean = (0, import_react20.useCallback)(function(event) {
      event.stopPropagation();
      onClean === null || onClean === void 0 ? void 0 : onClean(event);
      setActive(false);
    }, [onClean]);
    var handleInputChange = (0, import_react20.useCallback)(function(event) {
      var _event$target;
      var value2 = (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value;
      setInputValue(value2);
      onInputChange === null || onInputChange === void 0 ? void 0 : onInputChange(value2, event);
    }, [onInputChange]);
    var handleInputKeyDown = (0, import_react20.useCallback)(function(event) {
      if (input && event.key === KEY_VALUES.ENTER) {
        onInputPressEnter === null || onInputPressEnter === void 0 ? void 0 : onInputPressEnter(event);
      }
    }, [onInputPressEnter, input]);
    var ToggleCaret = useToggleCaret_default(placement);
    var Caret = caretAs !== null && caretAs !== void 0 ? caretAs : ToggleCaret;
    if (plaintext) {
      return /* @__PURE__ */ import_react20.default.createElement(Plaintext_default2, {
        ref,
        localeKey: "notSelected"
      }, hasValue ? children : null);
    }
    var showCleanButton = cleanableProp && hasValue && !readOnly;
    var inputFocused = readOnly || disabled ? false : input && activeState;
    return /* @__PURE__ */ import_react20.default.createElement(Component, _extends({
      role: "combobox",
      "aria-haspopup": "listbox",
      "aria-expanded": activeProp,
      "aria-disabled": disabled,
      "aria-owns": id ? id + "-listbox" : void 0
    }, rest, {
      ref,
      disabled,
      tabIndex: disabled ? void 0 : tabIndex,
      className: classes,
      onFocus: !disabled ? handleFocus : null,
      onBlur: !disabled ? (0, import_debounce.default)(handleBlur, 200) : null
    }), /* @__PURE__ */ import_react20.default.createElement(TextMask_default, {
      mask: inputMask,
      value: Array.isArray(inputValue) ? inputValue.toString() : inputValue,
      onBlur: handleInputBlur,
      onFocus: onInputFocus,
      onChange: handleInputChange,
      onKeyDown: handleInputKeyDown,
      id,
      "aria-hidden": !inputFocused,
      readOnly: !inputFocused,
      disabled,
      "aria-controls": id ? id + "-listbox" : void 0,
      tabIndex: -1,
      className: prefix3("textbox", {
        "read-only": !inputFocused
      }),
      placeholder: inputPlaceholder,
      render: function render(ref2, props2) {
        return /* @__PURE__ */ import_react20.default.createElement("input", _extends({
          ref: mergeRefs(inputRef, ref2)
        }, props2));
      }
    }), children ? /* @__PURE__ */ import_react20.default.createElement("span", {
      className: prefix3(hasValue ? "value" : "placeholder"),
      "aria-placeholder": typeof children === "string" ? children : void 0
    }, children) : null, showCleanButton && /* @__PURE__ */ import_react20.default.createElement(CloseButton_default2, {
      className: prefix3(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose(["clean"]))),
      tabIndex: -1,
      locale: {
        closeLabel: "Clear"
      },
      onClick: handleClean
    }), caret && /* @__PURE__ */ import_react20.default.createElement(Caret, {
      className: prefix3(_templateObject22 || (_templateObject22 = _taggedTemplateLiteralLoose(["caret"])))
    }));
  });
  PickerToggle.displayName = "PickerToggle";
  PickerToggle.propTypes = {
    classPrefix: import_prop_types9.default.string,
    hasValue: import_prop_types9.default.bool,
    cleanable: import_prop_types9.default.bool,
    className: import_prop_types9.default.string,
    children: import_prop_types9.default.node,
    caret: import_prop_types9.default.bool,
    as: import_prop_types9.default.elementType,
    onClean: import_prop_types9.default.func,
    active: import_prop_types9.default.bool,
    readOnly: import_prop_types9.default.bool,
    disabled: import_prop_types9.default.bool,
    plaintext: import_prop_types9.default.bool,
    caretComponent: deprecatePropType(import_prop_types9.default.elementType, "Use `caretAs` instead."),
    caretAs: import_prop_types9.default.elementType
  };
  var PickerToggle_default = PickerToggle;

  // ../../node_modules/rsuite/esm/Picker/SearchBar.js
  var import_react21 = __toModule(require_react());
  var import_get2 = __toModule(require_get());
  var import_prop_types10 = __toModule(require_prop_types());
  var import_Search = __toModule(require_Search3());
  var SearchBar = /* @__PURE__ */ import_react21.default.forwardRef(function(props, ref) {
    var _props$as = props.as, Component = _props$as === void 0 ? "div" : _props$as, _props$classPrefix = props.classPrefix, classPrefix = _props$classPrefix === void 0 ? "picker-search-bar" : _props$classPrefix, value = props.value, children = props.children, className = props.className, placeholder = props.placeholder, inputRef = props.inputRef, onChange = props.onChange, rest = _objectWithoutPropertiesLoose(props, ["as", "classPrefix", "value", "children", "className", "placeholder", "inputRef", "onChange"]);
    var _useClassNames = useClassNames_default(classPrefix), withClassPrefix = _useClassNames.withClassPrefix, merge = _useClassNames.merge, prefix3 = _useClassNames.prefix;
    var classes = merge(className, withClassPrefix());
    var handleChange = (0, import_react21.useCallback)(function(event) {
      onChange === null || onChange === void 0 ? void 0 : onChange((0, import_get2.default)(event, "target.value"), event);
    }, [onChange]);
    return /* @__PURE__ */ import_react21.default.createElement(Component, _extends({
      role: "searchbox"
    }, rest, {
      ref,
      className: classes
    }), /* @__PURE__ */ import_react21.default.createElement("input", {
      className: prefix3("input"),
      value,
      onChange: handleChange,
      placeholder,
      ref: inputRef
    }), /* @__PURE__ */ import_react21.default.createElement(import_Search.default, {
      className: prefix3("search-icon")
    }), children);
  });
  SearchBar.displayName = "SearchBar";
  SearchBar.propTypes = {
    as: import_prop_types10.default.elementType,
    classPrefix: import_prop_types10.default.string,
    value: import_prop_types10.default.string,
    placeholder: import_prop_types10.default.string,
    className: import_prop_types10.default.string,
    children: import_prop_types10.default.node,
    onChange: import_prop_types10.default.func
  };
  var SearchBar_default = SearchBar;

  // ../../node_modules/rsuite/esm/utils/reactToString.js
  var import_react22 = __toModule(require_react());
  function reactToString(element) {
    var nodes = [];
    var recursion = function recursion2(elmt) {
      import_react22.default.Children.forEach(elmt.props.children, function(child) {
        if (/* @__PURE__ */ import_react22.default.isValidElement(child)) {
          recursion2(child);
        } else if (typeof child === "string") {
          nodes.push(child);
        }
      });
    };
    recursion(element);
    return nodes;
  }

  // ../../node_modules/rsuite/esm/Picker/utils.js
  var import_react23 = __toModule(require_react());
  var import_kebabCase2 = __toModule(require_kebabCase());
  var import_trim = __toModule(require_trim());
  var import_isFunction2 = __toModule(require_isFunction());
  var import_isUndefined4 = __toModule(require_isUndefined());
  var import_omit4 = __toModule(require_omit());
  var import_find = __toModule(require_find());
  var defaultNodeKeys = {
    valueKey: "value",
    childrenKey: "children"
  };
  function createConcatChildrenFunction(node, nodeValue, nodeKeys) {
    if (nodeKeys === void 0) {
      nodeKeys = defaultNodeKeys;
    }
    var _nodeKeys = nodeKeys, valueKey = _nodeKeys.valueKey, childrenKey = _nodeKeys.childrenKey;
    return function(data, children) {
      if (nodeValue) {
        node = findNodeOfTree(data, function(item) {
          return nodeValue === item[valueKey];
        });
      }
      node[childrenKey] = children;
      return data.concat([]);
    };
  }
  function shouldDisplay(label, searchKeyword) {
    if (!(0, import_trim.default)(searchKeyword)) {
      return true;
    }
    var keyword = searchKeyword.toLocaleLowerCase();
    if (typeof label === "string" || typeof label === "number") {
      return ("" + label).toLocaleLowerCase().indexOf(keyword) >= 0;
    } else if (/* @__PURE__ */ import_react23.default.isValidElement(label)) {
      var nodes = reactToString(label);
      return nodes.join("").toLocaleLowerCase().indexOf(keyword) >= 0;
    }
    return false;
  }
  function usePickerClassName(props) {
    var _withClassPrefix;
    var name = props.name, classPrefix = props.classPrefix, className = props.className, placement = props.placement, appearance = props.appearance, cleanable = props.cleanable, block = props.block, disabled = props.disabled, countable = props.countable, readOnly = props.readOnly, plaintext = props.plaintext, hasValue = props.hasValue, rest = _objectWithoutPropertiesLoose(props, ["name", "classPrefix", "className", "placement", "appearance", "cleanable", "block", "disabled", "countable", "readOnly", "plaintext", "hasValue"]);
    var _useClassNames = useClassNames_default(classPrefix), withClassPrefix = _useClassNames.withClassPrefix, merge = _useClassNames.merge;
    var classes = merge(className, withClassPrefix(name, appearance, "toggle-wrapper", (_withClassPrefix = {}, _withClassPrefix["placement-" + (0, import_kebabCase2.default)(placementPolyfill_default(placement))] = placement, _withClassPrefix["read-only"] = readOnly, _withClassPrefix["has-value"] = hasValue, _withClassPrefix.cleanable = cleanable, _withClassPrefix.block = block, _withClassPrefix.disabled = disabled, _withClassPrefix.countable = countable, _withClassPrefix.plaintext = plaintext, _withClassPrefix)));
    var usedClassNamePropKeys = Object.keys((0, import_omit4.default)(props, [].concat(Object.keys(rest || {}), ["disabled", "readOnly", "plaintext"])));
    return [classes, usedClassNamePropKeys];
  }
  function onMenuKeyDown(event, events2) {
    var down = events2.down, up = events2.up, enter = events2.enter, del = events2.del, esc = events2.esc, right = events2.right, left = events2.left;
    switch (event.key) {
      case KEY_VALUES.DOWN:
        down === null || down === void 0 ? void 0 : down(event);
        event.preventDefault();
        break;
      case KEY_VALUES.UP:
        up === null || up === void 0 ? void 0 : up(event);
        event.preventDefault();
        break;
      case KEY_VALUES.ENTER:
        enter === null || enter === void 0 ? void 0 : enter(event);
        event.preventDefault();
        break;
      case KEY_VALUES.BACKSPACE:
        del === null || del === void 0 ? void 0 : del(event);
        break;
      case KEY_VALUES.ESC:
      case KEY_VALUES.TAB:
        esc === null || esc === void 0 ? void 0 : esc(event);
        break;
      case KEY_VALUES.LEFT:
        left === null || left === void 0 ? void 0 : left(event);
        break;
      case KEY_VALUES.RIGHT:
        right === null || right === void 0 ? void 0 : right(event);
        break;
      default:
    }
  }
  var useFocusItemValue = function useFocusItemValue2(defaultFocusItemValue, props) {
    var _props$valueKey = props.valueKey, valueKey = _props$valueKey === void 0 ? "value" : _props$valueKey, _props$focusableQuery = props.focusableQueryKey, focusableQueryKey = _props$focusableQuery === void 0 ? '[data-key][aria-disabled="false"]' : _props$focusableQuery, _props$defaultLayer = props.defaultLayer, defaultLayer = _props$defaultLayer === void 0 ? 0 : _props$defaultLayer, data = props.data, target = props.target, rtl = props.rtl, callback = props.callback;
    var _useState = (0, import_react23.useState)(defaultFocusItemValue), focusItemValue = _useState[0], setFocusItemValue = _useState[1];
    var _useState2 = (0, import_react23.useState)(defaultLayer), layer = _useState2[0], setLayer = _useState2[1];
    var _useState3 = (0, import_react23.useState)([]), keys = _useState3[0], setKeys = _useState3[1];
    var getFocusableMenuItems = (0, import_react23.useCallback)(function() {
      if (!target) {
        return [];
      }
      var currentKeys = keys;
      if (layer < 1) {
        var popup = (0, import_isFunction2.default)(target) ? target() : target;
        var rootMenu = popup === null || popup === void 0 ? void 0 : popup.querySelector('[data-layer="0"]');
        if (rootMenu) {
          var _rootMenu$querySelect;
          currentKeys = Array.from((_rootMenu$querySelect = rootMenu.querySelectorAll(focusableQueryKey)) !== null && _rootMenu$querySelect !== void 0 ? _rootMenu$querySelect : []).map(function(item) {
            var _item$dataset;
            return (_item$dataset = item.dataset) === null || _item$dataset === void 0 ? void 0 : _item$dataset.key;
          });
        } else {
          var _popup$querySelectorA;
          currentKeys = Array.from((_popup$querySelectorA = popup === null || popup === void 0 ? void 0 : popup.querySelectorAll(focusableQueryKey)) !== null && _popup$querySelectorA !== void 0 ? _popup$querySelectorA : []).map(function(item) {
            var _item$dataset2;
            return (_item$dataset2 = item.dataset) === null || _item$dataset2 === void 0 ? void 0 : _item$dataset2.key;
          });
        }
      }
      return currentKeys.map(function(key) {
        return (0, import_find.default)(data, function(i9) {
          return "" + i9[valueKey] === key;
        });
      });
    }, [data, focusableQueryKey, keys, target, valueKey, layer]);
    var findFocusItemIndex = (0, import_react23.useCallback)(function(callback2) {
      var items = getFocusableMenuItems();
      for (var i9 = 0; i9 < items.length; i9 += 1) {
        var _items$i;
        if (shallowEqual_default(focusItemValue, (_items$i = items[i9]) === null || _items$i === void 0 ? void 0 : _items$i[valueKey])) {
          callback2(items, i9);
          return;
        }
      }
      callback2(items, -1);
    }, [focusItemValue, getFocusableMenuItems, valueKey]);
    var focusNextMenuItem = (0, import_react23.useCallback)(function(event) {
      findFocusItemIndex(function(items, index) {
        var nextIndex = index + 2 > items.length ? 0 : index + 1;
        var focusItem = items[nextIndex];
        if (!(0, import_isUndefined4.default)(focusItem)) {
          setFocusItemValue(focusItem[valueKey]);
          callback === null || callback === void 0 ? void 0 : callback(focusItem[valueKey], event);
        }
      });
    }, [callback, findFocusItemIndex, valueKey]);
    var focusPrevMenuItem = (0, import_react23.useCallback)(function(event) {
      findFocusItemIndex(function(items, index) {
        var nextIndex = index === 0 ? items.length - 1 : index - 1;
        var focusItem = items[nextIndex];
        if (!(0, import_isUndefined4.default)(focusItem)) {
          setFocusItemValue(focusItem[valueKey]);
          callback === null || callback === void 0 ? void 0 : callback(focusItem[valueKey], event);
        }
      });
    }, [callback, findFocusItemIndex, valueKey]);
    var getSubMenuKeys = (0, import_react23.useCallback)(function(nextLayer) {
      var menu = (0, import_isFunction2.default)(target) ? target() : target;
      var subMenu = menu === null || menu === void 0 ? void 0 : menu.querySelector('[data-layer="' + nextLayer + '"]');
      if (subMenu) {
        var _Array$from;
        return (_Array$from = Array.from(subMenu.querySelectorAll(focusableQueryKey))) === null || _Array$from === void 0 ? void 0 : _Array$from.map(function(item) {
          var _item$dataset3;
          return (_item$dataset3 = item.dataset) === null || _item$dataset3 === void 0 ? void 0 : _item$dataset3.key;
        });
      }
      return null;
    }, [focusableQueryKey, target]);
    var focusNextLevelMenu = (0, import_react23.useCallback)(function(event) {
      var nextLayer = layer + 1;
      var nextKeys = getSubMenuKeys(nextLayer);
      if (nextKeys) {
        setKeys(nextKeys);
        setLayer(nextLayer);
        setFocusItemValue(nextKeys[0]);
        callback === null || callback === void 0 ? void 0 : callback(nextKeys[0], event);
      }
    }, [callback, getSubMenuKeys, layer]);
    var focusPrevLevelMenu = (0, import_react23.useCallback)(function(event) {
      var nextLayer = layer - 1;
      var nextKeys = getSubMenuKeys(nextLayer);
      if (nextKeys) {
        var _focusItem$parent;
        setKeys(nextKeys);
        setLayer(nextLayer);
        var focusItem = findNodeOfTree(data, function(item) {
          return item[valueKey] === focusItemValue;
        });
        var parentItemValue = focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent = focusItem.parent) === null || _focusItem$parent === void 0 ? void 0 : _focusItem$parent[valueKey];
        if (parentItemValue) {
          setFocusItemValue(parentItemValue);
          callback === null || callback === void 0 ? void 0 : callback(parentItemValue, event);
        }
      }
    }, [callback, data, focusItemValue, getSubMenuKeys, layer, valueKey]);
    var handleKeyDown = (0, import_react23.useCallback)(function(event) {
      var _onMenuKeyDown;
      onMenuKeyDown(event, (_onMenuKeyDown = {
        down: focusNextMenuItem,
        up: focusPrevMenuItem
      }, _onMenuKeyDown[rtl ? "left" : "right"] = focusNextLevelMenu, _onMenuKeyDown[rtl ? "right" : "left"] = focusPrevLevelMenu, _onMenuKeyDown));
    }, [focusNextLevelMenu, focusNextMenuItem, focusPrevLevelMenu, focusPrevMenuItem, rtl]);
    return {
      focusItemValue,
      setFocusItemValue,
      layer,
      setLayer,
      keys,
      setKeys,
      onKeyDown: handleKeyDown
    };
  };
  var useToggleKeyDownEvent = function useToggleKeyDownEvent2(props) {
    var _props$toggle = props.toggle, toggle = _props$toggle === void 0 ? true : _props$toggle, triggerRef = props.triggerRef, targetRef = props.targetRef, overlayRef = props.overlayRef, searchInputRef = props.searchInputRef, active = props.active, onExit = props.onExit, onOpen = props.onOpen, onClose = props.onClose, onKeyDown = props.onKeyDown, onMenuKeyDown2 = props.onMenuKeyDown, onMenuPressEnter = props.onMenuPressEnter, onMenuPressBackspace = props.onMenuPressBackspace;
    var handleClose = (0, import_react23.useCallback)(function() {
      var _triggerRef$current, _triggerRef$current$c;
      (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$c = _triggerRef$current.close) === null || _triggerRef$current$c === void 0 ? void 0 : _triggerRef$current$c.call(_triggerRef$current);
      onClose === null || onClose === void 0 ? void 0 : onClose();
    }, [onClose, triggerRef]);
    var handleOpen = (0, import_react23.useCallback)(function() {
      var _triggerRef$current2, _triggerRef$current2$;
      (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : (_triggerRef$current2$ = _triggerRef$current2.open) === null || _triggerRef$current2$ === void 0 ? void 0 : _triggerRef$current2$.call(_triggerRef$current2);
      onOpen === null || onOpen === void 0 ? void 0 : onOpen();
    }, [onOpen, triggerRef]);
    var handleToggleDropdown = (0, import_react23.useCallback)(function() {
      if (active) {
        handleClose();
        return;
      }
      handleOpen();
    }, [active, handleOpen, handleClose]);
    var onToggle = (0, import_react23.useCallback)(function(event) {
      if (event.target === (targetRef === null || targetRef === void 0 ? void 0 : targetRef.current)) {
        if (toggle && event.key === KEY_VALUES.ENTER) {
          handleToggleDropdown();
        }
        if (event.key === KEY_VALUES.BACKSPACE) {
          onExit === null || onExit === void 0 ? void 0 : onExit(event);
        }
      }
      if (overlayRef !== null && overlayRef !== void 0 && overlayRef.current) {
        onMenuKeyDown2 === null || onMenuKeyDown2 === void 0 ? void 0 : onMenuKeyDown2(event);
        if (event.key === KEY_VALUES.ENTER) {
          onMenuPressEnter === null || onMenuPressEnter === void 0 ? void 0 : onMenuPressEnter(event);
        }
        if (event.key === KEY_VALUES.BACKSPACE && event.target !== (searchInputRef === null || searchInputRef === void 0 ? void 0 : searchInputRef.current)) {
          onMenuPressBackspace === null || onMenuPressBackspace === void 0 ? void 0 : onMenuPressBackspace(event);
        }
        if (event.key.length === 1 && /\w/.test(event.key)) {
          var _event$target;
          if (((_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.tagName) !== "INPUT") {
            var _searchInputRef$curre;
            searchInputRef === null || searchInputRef === void 0 ? void 0 : (_searchInputRef$curre = searchInputRef.current) === null || _searchInputRef$curre === void 0 ? void 0 : _searchInputRef$curre.focus();
          }
        }
      }
      if (event.key === KEY_VALUES.ESC || event.key === KEY_VALUES.TAB) {
        handleClose();
      }
      onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event);
    }, [handleClose, handleToggleDropdown, overlayRef, onExit, onKeyDown, onMenuKeyDown2, onMenuPressBackspace, onMenuPressEnter, toggle, targetRef, searchInputRef]);
    return onToggle;
  };
  function useSearch(props) {
    var labelKey = props.labelKey, data = props.data, searchBy = props.searchBy, callback = props.callback;
    var _useState4 = (0, import_react23.useState)(""), searchKeyword = _useState4[0], setSearchKeyword = _useState4[1];
    var checkShouldDisplay = (0, import_react23.useCallback)(function(item, keyword) {
      var label = item === null || item === void 0 ? void 0 : item[labelKey];
      var _keyword = (0, import_isUndefined4.default)(keyword) ? searchKeyword : keyword;
      if (typeof searchBy === "function") {
        return searchBy(_keyword, label, item);
      }
      return shouldDisplay(label, _keyword);
    }, [labelKey, searchBy, searchKeyword]);
    var updateFilteredData = (0, import_react23.useCallback)(function(nextData) {
      setFilteredData(filterNodesOfTree(nextData, function(item) {
        return checkShouldDisplay(item);
      }));
    }, [checkShouldDisplay]);
    var _useState5 = (0, import_react23.useState)(filterNodesOfTree(data, function(item) {
      return checkShouldDisplay(item);
    })), filteredData = _useState5[0], setFilteredData = _useState5[1];
    var handleSearch = function handleSearch2(searchKeyword2, event) {
      var filteredData2 = filterNodesOfTree(data, function(item) {
        return checkShouldDisplay(item, searchKeyword2);
      });
      setFilteredData(filteredData2);
      setSearchKeyword(searchKeyword2);
      callback === null || callback === void 0 ? void 0 : callback(searchKeyword2, filteredData2, event);
    };
    return {
      searchKeyword,
      filteredData,
      updateFilteredData,
      setSearchKeyword,
      checkShouldDisplay,
      handleSearch
    };
  }
  function usePublicMethods(ref, parmas) {
    var triggerRef = parmas.triggerRef, overlayRef = parmas.overlayRef, targetRef = parmas.targetRef, rootRef = parmas.rootRef, listRef = parmas.listRef, inline = parmas.inline;
    var handleOpen = (0, import_react23.useCallback)(function() {
      var _triggerRef$current3;
      triggerRef === null || triggerRef === void 0 ? void 0 : (_triggerRef$current3 = triggerRef.current) === null || _triggerRef$current3 === void 0 ? void 0 : _triggerRef$current3.open();
    }, [triggerRef]);
    var handleClose = (0, import_react23.useCallback)(function() {
      var _triggerRef$current4;
      triggerRef === null || triggerRef === void 0 ? void 0 : (_triggerRef$current4 = triggerRef.current) === null || _triggerRef$current4 === void 0 ? void 0 : _triggerRef$current4.close();
    }, [triggerRef]);
    var handleUpdatePosition = (0, import_react23.useCallback)(function() {
      var _triggerRef$current5;
      triggerRef === null || triggerRef === void 0 ? void 0 : (_triggerRef$current5 = triggerRef.current) === null || _triggerRef$current5 === void 0 ? void 0 : _triggerRef$current5.updatePosition();
    }, [triggerRef]);
    (0, import_react23.useImperativeHandle)(ref, function() {
      if (inline) {
        return {
          get root() {
            var _triggerRef$current$r, _triggerRef$current6;
            return rootRef !== null && rootRef !== void 0 && rootRef.current ? rootRef === null || rootRef === void 0 ? void 0 : rootRef.current : (_triggerRef$current$r = triggerRef === null || triggerRef === void 0 ? void 0 : (_triggerRef$current6 = triggerRef.current) === null || _triggerRef$current6 === void 0 ? void 0 : _triggerRef$current6.root) !== null && _triggerRef$current$r !== void 0 ? _triggerRef$current$r : null;
          },
          get list() {
            if (!(listRef !== null && listRef !== void 0 && listRef.current)) {
              throw new Error("The list is not found, please set `virtualized` for the component.");
            }
            return listRef === null || listRef === void 0 ? void 0 : listRef.current;
          }
        };
      }
      return {
        get root() {
          var _ref, _triggerRef$current7;
          return (_ref = (rootRef === null || rootRef === void 0 ? void 0 : rootRef.current) || (triggerRef === null || triggerRef === void 0 ? void 0 : (_triggerRef$current7 = triggerRef.current) === null || _triggerRef$current7 === void 0 ? void 0 : _triggerRef$current7.root)) !== null && _ref !== void 0 ? _ref : null;
        },
        get overlay() {
          var _overlayRef$current;
          return (_overlayRef$current = overlayRef === null || overlayRef === void 0 ? void 0 : overlayRef.current) !== null && _overlayRef$current !== void 0 ? _overlayRef$current : null;
        },
        get target() {
          var _targetRef$current;
          return (_targetRef$current = targetRef === null || targetRef === void 0 ? void 0 : targetRef.current) !== null && _targetRef$current !== void 0 ? _targetRef$current : null;
        },
        get list() {
          if (!(listRef !== null && listRef !== void 0 && listRef.current)) {
            throw new Error("\n            The list is not found.\n            1.Please set virtualized for the component.\n            2.Please confirm whether the picker is open.\n          ");
          }
          return listRef === null || listRef === void 0 ? void 0 : listRef.current;
        },
        updatePosition: handleUpdatePosition,
        open: handleOpen,
        close: handleClose
      };
    });
  }

  // ../../node_modules/rsuite/esm/Picker/propTypes.js
  var import_prop_types11 = __toModule(require_prop_types());
  var pickerPropTypes = _extends({}, animationPropTypes, {
    classPrefix: import_prop_types11.default.string,
    className: import_prop_types11.default.string,
    style: import_prop_types11.default.object,
    locale: import_prop_types11.default.any,
    appearance: import_prop_types11.default.oneOf(["default", "subtle"]),
    block: import_prop_types11.default.bool,
    containerPadding: import_prop_types11.default.number,
    container: import_prop_types11.default.oneOfType([import_prop_types11.default.any, import_prop_types11.default.func]),
    disabled: import_prop_types11.default.bool,
    menuClassName: import_prop_types11.default.string,
    menuStyle: import_prop_types11.default.object,
    placeholder: import_prop_types11.default.node,
    placement: import_prop_types11.default.oneOf(PLACEMENT),
    preventOverflow: import_prop_types11.default.bool,
    open: import_prop_types11.default.bool,
    defaultOpen: import_prop_types11.default.bool,
    cleanable: import_prop_types11.default.bool,
    renderExtraFooter: import_prop_types11.default.func,
    renderValue: import_prop_types11.default.func,
    onOpen: import_prop_types11.default.func,
    onClose: import_prop_types11.default.func,
    onClean: import_prop_types11.default.func,
    listProps: import_prop_types11.default.any
  });
  var listPickerPropTypes = _extends({}, pickerPropTypes, {
    data: import_prop_types11.default.array.isRequired,
    valueKey: import_prop_types11.default.string,
    labelKey: import_prop_types11.default.string,
    childrenKey: import_prop_types11.default.string,
    disabledItemValues: import_prop_types11.default.array,
    value: import_prop_types11.default.any,
    defaultValue: import_prop_types11.default.any,
    onChange: import_prop_types11.default.func
  });

  // ../../node_modules/rsuite/esm/utils/treeUtils.js
  var TREE_NODE_GAP = 4;
  function shouldShowNodeByParentExpanded(expandItemValues, parentKeys) {
    if (expandItemValues === void 0) {
      expandItemValues = [];
    }
    if (parentKeys === void 0) {
      parentKeys = [];
    }
    var intersectionKeys = (0, import_intersection.default)(expandItemValues, parentKeys);
    if (intersectionKeys.length === parentKeys.length) {
      return true;
    }
    return false;
  }
  function flattenTree(tree, childrenKey, executor) {
    if (childrenKey === void 0) {
      childrenKey = "children";
    }
    var flattenData = [];
    var traverse = function traverse2(data, parent) {
      if (!(0, import_isArray.default)(data)) {
        return;
      }
      data.forEach(function(item, index) {
        var node = typeof executor === "function" ? executor(item, index) : item;
        node.parent = parent;
        flattenData.push(_extends({}, node));
        if (item[childrenKey]) {
          traverse2(item[childrenKey], item);
        }
      });
    };
    traverse(tree, null);
    return flattenData;
  }
  function getNodeParentKeys(nodes, node, valueKey) {
    var parentKeys = [];
    var traverse = function traverse2(node2) {
      var _node$parent;
      if (node2 !== null && node2 !== void 0 && (_node$parent = node2.parent) !== null && _node$parent !== void 0 && _node$parent.refKey) {
        var _node$parent2;
        traverse2(nodes[node2.parent.refKey]);
        parentKeys.push(node2 === null || node2 === void 0 ? void 0 : (_node$parent2 = node2.parent) === null || _node$parent2 === void 0 ? void 0 : _node$parent2[valueKey]);
      }
    };
    traverse(node);
    return parentKeys;
  }
  function hasVisibleChildren(node, childrenKey) {
    if (!Array.isArray(node[childrenKey])) {
      return false;
    }
    return node[childrenKey].some(function(child) {
      return child.visible;
    });
  }
  function getDefaultExpandItemValues(data, props) {
    var valueKey = props.valueKey, defaultExpandAll = props.defaultExpandAll, childrenKey = props.childrenKey, _props$defaultExpandI = props.defaultExpandItemValues, defaultExpandItemValues = _props$defaultExpandI === void 0 ? [] : _props$defaultExpandI;
    if (defaultExpandAll) {
      return flattenTree(data, childrenKey).filter(function(item) {
        return Array.isArray(item[childrenKey]) && item[childrenKey].length > 0;
      }).map(function(item) {
        return item[valueKey];
      });
    }
    return defaultExpandItemValues;
  }
  function getDragNodeKeys(dragNode, childrenKey, valueKey) {
    var dragNodeKeys = [dragNode[valueKey]];
    var traverse = function traverse2(data) {
      if ((data === null || data === void 0 ? void 0 : data.length) > 0) {
        data.forEach(function(node) {
          dragNodeKeys = dragNodeKeys.concat([node[valueKey]]);
          if (node[childrenKey]) {
            traverse2(node[childrenKey]);
          }
        });
      }
    };
    traverse(dragNode[childrenKey]);
    return dragNodeKeys;
  }
  function calDropNodePosition(event, treeNodeElement) {
    var clientY = event.clientY;
    var _treeNodeElement$getB = treeNodeElement.getBoundingClientRect(), top = _treeNodeElement$getB.top, bottom = _treeNodeElement$getB.bottom;
    var gap = TREE_NODE_GAP;
    if (clientY >= bottom - gap && clientY <= bottom) {
      return TREE_NODE_DROP_POSITION.DRAG_OVER_BOTTOM;
    }
    if (clientY <= top + gap && clientY >= top) {
      return TREE_NODE_DROP_POSITION.DRAG_OVER_TOP;
    }
    if (clientY >= top + gap && clientY <= bottom - gap) {
      return TREE_NODE_DROP_POSITION.DRAG_OVER;
    }
    return -1;
  }
  function removeDragNode(data, params, _ref) {
    var valueKey = _ref.valueKey, childrenKey = _ref.childrenKey;
    var dragNode = params.dragNode;
    var traverse = function traverse2(items, parent) {
      for (var _index = 0; _index < items.length; _index += 1) {
        var _item = items[_index];
        if (shallowEqual_default(_item[valueKey], dragNode[valueKey])) {
          items.splice(_index, 1);
          if (items.length === 0 && parent) {
            delete parent.children;
          }
          break;
        }
        if (Array.isArray(_item[childrenKey])) {
          traverse2(_item[childrenKey], _item);
        }
      }
    };
    traverse(data);
  }
  function createUpdateTreeDataFunction(params, _ref2) {
    var valueKey = _ref2.valueKey, childrenKey = _ref2.childrenKey;
    return function(tree) {
      var data = [].concat(tree);
      var dragNode = params.dragNode, dropNode = params.dropNode, dropNodePosition = params.dropNodePosition;
      var cloneDragNode = _extends({}, dragNode);
      removeDragNode(data, params, {
        valueKey,
        childrenKey
      });
      var updateTree = function updateTree2(items) {
        for (var _index2 = 0; _index2 < items.length; _index2 += 1) {
          var _item2 = items[_index2];
          if (shallowEqual_default(_item2[valueKey], dropNode[valueKey])) {
            if (dropNodePosition === TREE_NODE_DROP_POSITION.DRAG_OVER) {
              _item2[childrenKey] = (0, import_isNil3.default)(_item2[childrenKey]) ? [] : _item2[childrenKey];
              _item2[childrenKey].push(cloneDragNode);
              break;
            } else if (dropNodePosition === TREE_NODE_DROP_POSITION.DRAG_OVER_TOP) {
              items.splice(_index2, 0, cloneDragNode);
              break;
            } else if (dropNodePosition === TREE_NODE_DROP_POSITION.DRAG_OVER_BOTTOM) {
              items.splice(_index2 + 1, 0, cloneDragNode);
              break;
            }
          }
          if (Array.isArray(_item2[childrenKey]) && _item2[childrenKey].length > 0) {
            updateTree2(_item2[childrenKey]);
          }
        }
      };
      updateTree(data);
      return [].concat(data);
    };
  }
  function findNodeOfTree(data, check) {
    var findNode = function findNode2(nodes) {
      if (nodes === void 0) {
        nodes = [];
      }
      for (var i9 = 0; i9 < nodes.length; i9 += 1) {
        var _item3 = nodes[i9];
        if ((0, import_isArray.default)(_item3.children)) {
          var _node = findNode2(_item3.children);
          if (_node) {
            return _node;
          }
        }
        if (check(_item3)) {
          return _item3;
        }
      }
      return void 0;
    };
    return findNode(data);
  }
  function filterNodesOfTree(data, check) {
    var findNodes = function findNodes2(nodes) {
      if (nodes === void 0) {
        nodes = [];
      }
      var nextNodes = [];
      for (var i9 = 0; i9 < nodes.length; i9 += 1) {
        if ((0, import_isArray.default)(nodes[i9].children)) {
          var nextChildren = findNodes2(nodes[i9].children);
          if (nextChildren.length) {
            var _item4 = (0, import_clone.default)(nodes[i9]);
            _item4.children = nextChildren;
            nextNodes.push(_item4);
            continue;
          }
        }
        if (check(nodes[i9])) {
          nextNodes.push(nodes[i9]);
        }
      }
      return nextNodes;
    };
    return findNodes(data);
  }
  var getFocusableItems = function getFocusableItems2(filteredData, props, isSearching2) {
    var disabledItemValues = props.disabledItemValues, valueKey = props.valueKey, childrenKey = props.childrenKey, expandItemValues = props.expandItemValues;
    var items = [];
    var loop2 = function loop3(nodes) {
      nodes.forEach(function(node) {
        var disabled = disabledItemValues.some(function(disabledItem) {
          return shallowEqual_default(disabledItem, node[valueKey]);
        });
        if (!disabled && node.visible) {
          items.push(node);
        }
        var expand = isSearching2 ? true : expandItemValues.includes(node[valueKey]);
        if (node[childrenKey] && expand) {
          loop3(node[childrenKey]);
        }
      });
    };
    loop2(filteredData);
    return items;
  };
  var getActiveIndex = function getActiveIndex2(focusItemValue, focusItems, valueKey) {
    var activeIndex = -1;
    focusItems.forEach(function(item, index) {
      if (shallowEqual_default(item[valueKey], focusItemValue)) {
        activeIndex = index;
      }
    });
    return activeIndex;
  };
  var getActiveItem = function getActiveItem2(focusItemValue, flattenNodes, valueKey) {
    var nodeData = null;
    var activeNode = Object.values(flattenNodes).find(function(node) {
      return shallowEqual_default(node[valueKey], focusItemValue);
    });
    if (activeNode) {
      nodeData = activeNode;
    }
    return nodeData;
  };
  var getElementByDataKey = function getElementByDataKey2(dataKey, treeNodesRefs, selector) {
    var ele = treeNodesRefs[dataKey];
    if (ele instanceof Element) {
      return ele.querySelector(selector);
    }
    return null;
  };
  var focusTreeNode = function focusTreeNode2(refKey, treeNodeRefs, selector) {
    var _node$focus;
    var node = getElementByDataKey(refKey, treeNodeRefs, selector);
    node === null || node === void 0 ? void 0 : (_node$focus = node.focus) === null || _node$focus === void 0 ? void 0 : _node$focus.call(node);
  };
  var focusNextItem = function focusNextItem2(_ref3) {
    var focusItemValue = _ref3.focusItemValue, focusableItems = _ref3.focusableItems, treeNodesRefs = _ref3.treeNodesRefs, selector = _ref3.selector, valueKey = _ref3.valueKey, callback = _ref3.callback;
    var activeIndex = getActiveIndex(focusItemValue, focusableItems, valueKey);
    if (focusableItems.length === 0) {
      return;
    }
    var nextIndex = activeIndex === focusableItems.length - 1 ? 0 : activeIndex + 1;
    var nextFocusItemValue = focusableItems[nextIndex][valueKey];
    callback === null || callback === void 0 ? void 0 : callback(nextFocusItemValue);
    focusTreeNode(focusableItems[nextIndex].refKey, treeNodesRefs, selector);
  };
  var focusPreviousItem = function focusPreviousItem2(_ref4) {
    var focusItemValue = _ref4.focusItemValue, focusableItems = _ref4.focusableItems, treeNodesRefs = _ref4.treeNodesRefs, selector = _ref4.selector, valueKey = _ref4.valueKey, callback = _ref4.callback;
    var activeIndex = getActiveIndex(focusItemValue, focusableItems, valueKey);
    if (focusableItems.length === 0) {
      return;
    }
    var prevIndex = activeIndex === 0 ? focusableItems.length - 1 : activeIndex - 1;
    prevIndex = prevIndex >= 0 ? prevIndex : 0;
    var prevFocusItemValue = focusableItems[prevIndex][valueKey];
    callback === null || callback === void 0 ? void 0 : callback(prevFocusItemValue);
    focusTreeNode(focusableItems[prevIndex].refKey, treeNodesRefs, selector);
  };
  function leftArrowHandler(_ref5) {
    var focusItem = _ref5.focusItem, expand = _ref5.expand, onExpand = _ref5.onExpand, onFocusItem = _ref5.onFocusItem;
    if ((0, import_isEmpty.default)(focusItem)) {
      return;
    }
    if (expand) {
      onExpand(_extends({}, focusItem, {
        expand
      }));
    } else if (focusItem !== null && focusItem !== void 0 && focusItem.parent) {
      onFocusItem();
    }
  }
  function rightArrowHandler(_ref6) {
    var focusItem = _ref6.focusItem, expand = _ref6.expand, childrenKey = _ref6.childrenKey, onExpand = _ref6.onExpand, onFocusItem = _ref6.onFocusItem;
    if ((0, import_isEmpty.default)(focusItem) || !Array.isArray(focusItem[childrenKey])) {
      return;
    }
    if (!expand) {
      onExpand(_extends({}, focusItem, {
        expand
      }));
    } else {
      onFocusItem();
    }
  }
  var getScrollToIndex = function getScrollToIndex2(nodes, value, valueKey) {
    return nodes.filter(function(n11) {
      return n11.visible;
    }).findIndex(function(item) {
      return item[valueKey] === value;
    });
  };
  function getExpandWhenSearching(searchKeyword, expand) {
    return isSearching(searchKeyword) ? true : expand;
  }
  function getTreeActiveNode(nodes, value, valueKey) {
    if ((0, import_isUndefined5.default)(value)) {
      return void 0;
    }
    for (var refKey in nodes) {
      if (shallowEqual_default(nodes[refKey][valueKey], value)) {
        return nodes[refKey];
      }
    }
  }
  function toggleExpand(_ref7) {
    var node = _ref7.node, isExpand = _ref7.isExpand, expandItemValues = _ref7.expandItemValues, valueKey = _ref7.valueKey;
    var newExpandItemValues = new Set(expandItemValues);
    if (isExpand) {
      newExpandItemValues.add(node[valueKey]);
    } else {
      newExpandItemValues.delete(node[valueKey]);
    }
    return Array.from(newExpandItemValues);
  }
  function getChildrenByFlattenNodes(nodes, parent) {
    if (!(0, import_isNil3.default)(parent.refKey) && (0, import_isNil3.default)(nodes[parent.refKey])) {
      return [];
    }
    return Object.values(nodes).filter(function(item) {
      var _item$parent;
      return (item === null || item === void 0 ? void 0 : (_item$parent = item.parent) === null || _item$parent === void 0 ? void 0 : _item$parent.refKey) === parent.refKey && item.refKey && !nodes[item.refKey].uncheckable;
    });
  }
  function useTreeDrag() {
    var dragNode = (0, import_react24.useRef)(null);
    var _useState = (0, import_react24.useState)(null), dragOverNodeKey = _useState[0], setDragOverNodeKey = _useState[1];
    var _useState2 = (0, import_react24.useState)([]), dragNodeKeys = _useState2[0], setDragNodeKeys = _useState2[1];
    var _useState3 = (0, import_react24.useState)(null), dropNodePosition = _useState3[0], setDropNodePosition = _useState3[1];
    var setDragNode = function setDragNode2(node) {
      dragNode.current = node;
    };
    return {
      dragNode: dragNode === null || dragNode === void 0 ? void 0 : dragNode.current,
      dragOverNodeKey,
      dragNodeKeys,
      dropNodePosition,
      setDragNode,
      setDragOverNodeKey,
      setDragNodeKeys,
      setDropNodePosition
    };
  }
  function useFlattenTreeData(_ref8) {
    var data = _ref8.data, labelKey = _ref8.labelKey, valueKey = _ref8.valueKey, childrenKey = _ref8.childrenKey, _ref8$uncheckableItem = _ref8.uncheckableItemValues, uncheckableItemValues = _ref8$uncheckableItem === void 0 ? [] : _ref8$uncheckableItem, callback = _ref8.callback;
    var _useState4 = (0, import_react24.useState)(Object.create(null)), dispatch = _useState4[1];
    var forceUpdate = (0, import_react24.useCallback)(function() {
      dispatch(Object.create(null));
    }, [dispatch]);
    var flattenNodes = (0, import_react24.useRef)({});
    var flattenTreeData = (0, import_react24.useCallback)(function(treeData, ref, parent, layer) {
      if (layer === void 0) {
        layer = 1;
      }
      if (!Array.isArray(treeData) || treeData.length === 0) {
        return [];
      }
      treeData.map(function(node, index) {
        var _extends22;
        var refKey = ref + "-" + index;
        node.refKey = refKey;
        flattenNodes.current[refKey] = _extends((_extends22 = {
          layer
        }, _extends22[labelKey] = node[labelKey], _extends22[valueKey] = node[valueKey], _extends22.uncheckable = uncheckableItemValues.some(function(value) {
          return shallowEqual_default(node[valueKey], value);
        }), _extends22), node);
        if (parent) {
          flattenNodes.current[refKey].parent = (0, import_omit5.default)(parent, "parent", "children");
        }
        flattenTreeData(node[childrenKey], refKey, node, layer + 1);
      });
      callback === null || callback === void 0 ? void 0 : callback(flattenNodes.current);
    }, [childrenKey, valueKey, labelKey, callback, uncheckableItemValues]);
    var serializeListOnlyParent = (0, import_react24.useCallback)(function(nodes, key) {
      var list = [];
      Object.keys(nodes).forEach(function(refKey) {
        var currentNode = nodes[refKey];
        if (!(0, import_isNil3.default)(currentNode.parent) && !(0, import_isNil3.default)(currentNode.parent.refKey)) {
          var parentNode = nodes[currentNode.parent.refKey];
          if (currentNode[key]) {
            if (!(parentNode !== null && parentNode !== void 0 && parentNode.checkAll)) {
              list.push(nodes[refKey][valueKey]);
            } else if (parentNode !== null && parentNode !== void 0 && parentNode.uncheckable) {
              list.push(nodes[refKey][valueKey]);
            }
          }
        } else {
          if (currentNode[key]) {
            list.push(nodes[refKey][valueKey]);
          }
        }
      });
      return list;
    }, [valueKey]);
    var unSerializeList = (0, import_react24.useCallback)(function(_ref9) {
      var nodes = _ref9.nodes, key = _ref9.key, _ref9$value = _ref9.value, value = _ref9$value === void 0 ? [] : _ref9$value, cascade = _ref9.cascade, uncheckableItemValues2 = _ref9.uncheckableItemValues;
      Object.keys(nodes).forEach(function(refKey) {
        var node = nodes[refKey];
        if (cascade && !(0, import_isNil3.default)(node.parent) && !(0, import_isNil3.default)(node.parent.refKey)) {
          node[key] = nodes[node.parent.refKey][key];
        } else {
          node[key] = false;
        }
        value.forEach(function(value2) {
          if (shallowEqual_default(nodes[refKey][valueKey], value2) && !uncheckableItemValues2.some(function(uncheckableValue) {
            return shallowEqual_default(value2, uncheckableValue);
          })) {
            nodes[refKey][key] = true;
          }
        });
      });
    }, [valueKey]);
    var formatVirtualizedTreeData = function formatVirtualizedTreeData2(nodes, data2, expandItemValues, options) {
      var cascade = options.cascade, searchKeyword = options.searchKeyword;
      return flattenTree(data2, childrenKey, function(node) {
        var formatted = {};
        var curNode = nodes === null || nodes === void 0 ? void 0 : nodes[node.refKey];
        var parentKeys = getNodeParentKeys(nodes, curNode, valueKey);
        var visible = curNode !== null && curNode !== void 0 && curNode.parent ? shouldShowNodeByParentExpanded(expandItemValues, parentKeys) : true;
        if (isSearching(searchKeyword)) {
          visible = node.visible;
        }
        if (curNode) {
          var checkState = !(0, import_isUndefined5.default)(cascade) ? getNodeCheckState({
            node: curNode,
            cascade,
            nodes,
            childrenKey
          }) : void 0;
          formatted = _extends({}, node, {
            check: curNode.check,
            uncheckable: curNode.uncheckable,
            hasChildren: !!node[childrenKey],
            layer: curNode.layer,
            parent: curNode.parent,
            checkState,
            visible
          });
        }
        return formatted;
      });
    };
    (0, import_react24.useEffect)(function() {
      flattenNodes.current = {};
      flattenTreeData(data, "0");
    }, [data]);
    return {
      forceUpdate,
      flattenNodes: flattenNodes.current,
      flattenTreeData,
      serializeListOnlyParent,
      unSerializeList,
      formatVirtualizedTreeData
    };
  }
  function useTreeNodeRefs() {
    var treeNodeRefs = (0, import_react24.useRef)({});
    var saveTreeNodeRef = function saveTreeNodeRef2(ref, refKey) {
      if (!(0, import_isNil3.default)(refKey)) {
        treeNodeRefs.current[refKey] = ref;
      }
    };
    return {
      treeNodesRefs: treeNodeRefs.current,
      saveTreeNodeRef
    };
  }
  function useTreeSearch(props) {
    var labelKey = props.labelKey, childrenKey = props.childrenKey, searchKeyword = props.searchKeyword, data = props.data, searchBy = props.searchBy, callback = props.callback;
    var filterVisibleData = (0, import_react24.useCallback)(function(data2, searchKeyword2) {
      var setVisible = function setVisible2(nodes) {
        return nodes.forEach(function(item) {
          item.visible = searchBy ? searchBy(searchKeyword2, item[labelKey], item) : shouldDisplay(item[labelKey], searchKeyword2);
          if ((0, import_isArray.default)(item[childrenKey])) {
            filterVisibleData(item[childrenKey], searchKeyword2);
            item[childrenKey].forEach(function(child) {
              if (child.visible) {
                item.visible = child.visible;
              }
            });
          }
        });
      };
      setVisible(data2);
      return data2;
    }, [childrenKey, labelKey, searchBy]);
    var _useState5 = (0, import_react24.useState)(function() {
      return searchKeyword !== null && searchKeyword !== void 0 ? searchKeyword : "";
    }), searchKeywordState = _useState5[0], setSearchKeyword = _useState5[1];
    var _useState6 = (0, import_react24.useState)(function() {
      return filterVisibleData(data, searchKeywordState);
    }), filteredData = _useState6[0], setFilteredData = _useState6[1];
    var handleSetFilteredData = (0, import_react24.useCallback)(function(data2, searchKeyword2) {
      setFilteredData(filterVisibleData(data2, searchKeyword2));
    }, [filterVisibleData]);
    var handleSearch = function handleSearch2(searchKeyword2, event) {
      var filteredData2 = filterVisibleData(data, searchKeyword2);
      setFilteredData(filteredData2);
      setSearchKeyword(searchKeyword2);
      callback === null || callback === void 0 ? void 0 : callback(searchKeyword2, filteredData2, event);
    };
    return {
      searchKeywordState,
      filteredData,
      setFilteredData: handleSetFilteredData,
      setSearchKeyword,
      handleSearch
    };
  }
  function useGetTreeNodeChildren(treeData, valueKey, childrenKey) {
    var _useState7 = (0, import_react24.useState)([]), loadingNodeValues = _useState7[0], setLoadingNodeValues = _useState7[1];
    var _useState8 = (0, import_react24.useState)(treeData), data = _useState8[0], setData = _useState8[1];
    var concatChildren = (0, import_react24.useCallback)(function(treeNode, children) {
      var value = treeNode[valueKey];
      treeNode = findNodeOfTree(data, function(item) {
        return value === item[valueKey];
      });
      treeNode[childrenKey] = children;
      var newData = data.concat([]);
      setData(newData);
      return newData;
    }, [data, valueKey, childrenKey]);
    var loadChildren = (0, import_react24.useCallback)(function(node, getChildren) {
      setLoadingNodeValues(function(prev) {
        return prev.concat(node[valueKey]);
      });
      var children = getChildren(node);
      if (children instanceof Promise) {
        children.then(function(res) {
          var newData = concatChildren(node, res);
          setData(newData);
          setLoadingNodeValues(function(prev) {
            return prev.filter(function(item) {
              return !shallowEqual_default(item, node[valueKey]);
            });
          });
        });
      } else {
        setData(concatChildren(node, children));
        setLoadingNodeValues(function(prev) {
          return prev.filter(function(item) {
            return !shallowEqual_default(item, node[valueKey]);
          });
        });
      }
    }, [concatChildren, valueKey]);
    return {
      data,
      setData,
      loadingNodeValues,
      loadChildren
    };
  }
  function focusToActiveTreeNode(_ref10) {
    var _activeItem$focus;
    var list = _ref10.list, valueKey = _ref10.valueKey, activeNode = _ref10.activeNode, virtualized = _ref10.virtualized, container2 = _ref10.container, selector = _ref10.selector, formattedNodes = _ref10.formattedNodes;
    if (!container2)
      return;
    if (virtualized && activeNode) {
      var _list$scrollToRow;
      var scrollIndex = getScrollToIndex(formattedNodes, activeNode === null || activeNode === void 0 ? void 0 : activeNode[valueKey], valueKey);
      (_list$scrollToRow = list.scrollToRow) === null || _list$scrollToRow === void 0 ? void 0 : _list$scrollToRow.call(list, scrollIndex);
      return;
    }
    var activeItem = container2.querySelector(selector);
    if (!activeItem) {
      return;
    }
    activeItem === null || activeItem === void 0 ? void 0 : (_activeItem$focus = activeItem.focus) === null || _activeItem$focus === void 0 ? void 0 : _activeItem$focus.call(activeItem);
  }
  function isSearching(searchKeyword) {
    return !(0, import_isEmpty.default)(searchKeyword);
  }
  function getTreeNodeIndent(rtl, layer, absolute) {
    var _ref12;
    if (absolute === void 0) {
      absolute = false;
    }
    var offset = layer * TREE_NODE_PADDING + TREE_NODE_ROOT_PADDING;
    if (absolute) {
      var _ref11;
      return _ref11 = {}, _ref11[rtl ? "right" : "left"] = offset, _ref11;
    }
    return _ref12 = {}, _ref12[rtl ? "paddingRight" : "paddingLeft"] = offset, _ref12;
  }

  // ../../node_modules/rsuite/esm/utils/getDataGroupBy.js
  var hasSymbol = typeof Symbol === "function";
  var KEY_GROUP = hasSymbol ? Symbol("_$grouped") : "_$grouped";
  var KEY_GROUP_TITLE = "groupTitle";
  function getDataGroupBy(data, key, sort) {
    if (data === void 0) {
      data = [];
    }
    var tempData = {};
    var isSort = typeof sort === "function";
    data.forEach(function(item) {
      var groupByValue = (0, import_get3.default)(item, key, "");
      if (!tempData[groupByValue]) {
        tempData[groupByValue] = [];
      }
      tempData[groupByValue].push(item);
    });
    var nextData = Object.entries(tempData).map(function(_ref) {
      var _ref2;
      var groupTitle = _ref[0], children = _ref[1];
      return _ref2 = {
        children: isSort ? children.sort(sort(false)) : children
      }, _ref2[KEY_GROUP_TITLE] = groupTitle, _ref2[KEY_GROUP] = true, _ref2;
    });
    if (isSort) {
      nextData = nextData.sort(sort(true));
    }
    return flattenTree(nextData);
  }

  // ../../node_modules/rsuite/esm/utils/placementPolyfill.js
  function placementPolyfill(placement, rtl) {
    if (rtl === void 0) {
      rtl = false;
    }
    if (typeof placement === "string") {
      if (rtl) {
        placement = placement.replace(/left|right/, function(m5) {
          return m5 === "left" ? "right" : "left";
        });
      }
      return placement.replace(/Left|Top/, "Start").replace(/Right|Bottom/, "End");
    }
    return placement;
  }
  var placementPolyfill_default = placementPolyfill;

  // ../../node_modules/rsuite/esm/utils/getDOMNode.js
  var import_react_dom = __toModule(require_react_dom());
  var getRefTarget = function getRefTarget2(ref) {
    return ref && ("current" in ref ? ref.current : ref);
  };
  function getDOMNode(elementOrRef) {
    var element = (elementOrRef === null || elementOrRef === void 0 ? void 0 : elementOrRef.root) || (elementOrRef === null || elementOrRef === void 0 ? void 0 : elementOrRef.child) || getRefTarget(elementOrRef);
    if (element !== null && element !== void 0 && element.nodeType && typeof (element === null || element === void 0 ? void 0 : element.nodeName) === "string") {
      return element;
    }
    return (0, import_react_dom.findDOMNode)(element);
  }

  // ../../node_modules/rsuite/esm/utils/mergeRefs.js
  var toFnRef = function toFnRef2(ref) {
    return !ref || typeof ref === "function" ? ref : function(value) {
      ref.current = value;
    };
  };
  function mergeRefs(refA, refB) {
    var a7 = toFnRef(refA);
    var b8 = toFnRef(refB);
    return function(value) {
      if (typeof a7 === "function")
        a7(value);
      if (typeof b8 === "function")
        b8(value);
    };
  }

  // ../../node_modules/rsuite/esm/utils/useClassNames.js
  var import_react25 = __toModule(require_react());
  var import_classnames6 = __toModule(require_classnames());
  function useClassNames(str) {
    var _ref = (0, import_react25.useContext)(CustomContext) || {}, _ref$classPrefix = _ref.classPrefix, classPrefix = _ref$classPrefix === void 0 ? "rs" : _ref$classPrefix;
    var componentName = prefix(classPrefix, str);
    var prefix3 = (0, import_react25.useCallback)(function() {
      var mergeClasses = arguments.length ? import_classnames6.default.apply(void 0, arguments).split(" ").map(function(item) {
        return prefix(componentName, item);
      }) : [];
      return mergeClasses.filter(function(cls) {
        return cls;
      }).join(" ");
    }, [componentName]);
    var withClassPrefix = (0, import_react25.useCallback)(function() {
      for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
        classes[_key] = arguments[_key];
      }
      var mergeClasses = prefix3(classes);
      return mergeClasses ? componentName + " " + mergeClasses : componentName;
    }, [componentName, prefix3]);
    var rootPrefix = function rootPrefix2() {
      var mergeClasses = arguments.length ? import_classnames6.default.apply(void 0, arguments).split(" ").map(function(item) {
        return prefix(classPrefix, item);
      }) : [];
      return mergeClasses.filter(function(cls) {
        return cls;
      }).join(" ");
    };
    return {
      withClassPrefix,
      merge: import_classnames6.default,
      prefix: prefix3,
      rootPrefix
    };
  }
  var useClassNames_default = useClassNames;

  // ../../node_modules/rsuite/esm/utils/useElementResize.js
  var import_react26 = __toModule(require_react());
  function useElementResize(eventTarget, listener) {
    var resizeObserver = (0, import_react26.useRef)();
    (0, import_react26.useEffect)(function() {
      if (!resizeObserver.current) {
        var target = typeof eventTarget === "function" ? eventTarget() : eventTarget;
        if (target) {
          resizeObserver.current = new ResizeObserver2(listener);
          resizeObserver.current.observe(target);
        }
      }
      return function() {
        var _resizeObserver$curre;
        (_resizeObserver$curre = resizeObserver.current) === null || _resizeObserver$curre === void 0 ? void 0 : _resizeObserver$curre.disconnect();
      };
    }, [eventTarget, listener]);
  }

  // ../../node_modules/rsuite/esm/utils/usePortal.js
  var import_react27 = __toModule(require_react());
  var import_react_dom2 = __toModule(require_react_dom());
  function usePortal(props) {
    if (props === void 0) {
      props = {};
    }
    var _props = props, id = _props.id, container2 = _props.container;
    var rootElemRef = (0, import_react27.useRef)(canUseDOM_default ? document.body : null);
    (0, import_react27.useEffect)(function() {
      var containerElement = typeof container2 === "function" ? container2() : container2;
      var existingParent = id && document.querySelector("#" + id);
      var parentElement = containerElement || existingParent || document.body;
      rootElemRef.current = parentElement;
    }, [rootElemRef, container2, id]);
    var Portal = (0, import_react27.useCallback)(function(_ref) {
      var children = _ref.children;
      if (rootElemRef.current != null)
        return /* @__PURE__ */ (0, import_react_dom2.createPortal)(children, rootElemRef.current);
      return null;
    }, [rootElemRef]);
    return {
      target: rootElemRef.current,
      Portal
    };
  }
  var usePortal_default = usePortal;

  // ../../node_modules/rsuite/esm/utils/useControlled.js
  var import_react28 = __toModule(require_react());
  function useControlled(controlledValue, defaultValue) {
    var controlledRef = (0, import_react28.useRef)(false);
    controlledRef.current = controlledValue !== void 0;
    var _useState = (0, import_react28.useState)(defaultValue), uncontrolledValue = _useState[0], setUncontrolledValue = _useState[1];
    var value = controlledRef.current ? controlledValue : uncontrolledValue;
    var setValue = (0, import_react28.useCallback)(function(nextValue) {
      if (!controlledRef.current) {
        setUncontrolledValue(nextValue);
      }
    }, [controlledRef]);
    return [value, setValue, controlledRef.current];
  }
  var useControlled_default = useControlled;

  // ../../node_modules/rsuite/esm/utils/useRootClose.js
  var import_react29 = __toModule(require_react());
  function isLeftClickEvent(event) {
    return (event === null || event === void 0 ? void 0 : event.button) === 0;
  }
  function isModifiedEvent(event) {
    return !!(event.metaKey || event.altKey || event.ctrlKey || event !== null && event !== void 0 && event.shiftKey);
  }
  function useRootClose(onRootClose, _ref) {
    var disabled = _ref.disabled, triggerTarget = _ref.triggerTarget, overlayTarget = _ref.overlayTarget, _ref$listenEscape = _ref.listenEscape, listenEscape = _ref$listenEscape === void 0 ? true : _ref$listenEscape;
    var handleDocumentKeyUp = (0, import_react29.useCallback)(function(event) {
      if (listenEscape && event.key === KEY_VALUES.ESC) {
        onRootClose === null || onRootClose === void 0 ? void 0 : onRootClose(event);
      }
    }, [listenEscape, onRootClose]);
    var handleDocumentMouseDown = (0, import_react29.useCallback)(function(event) {
      var triggerElement = getDOMNode(triggerTarget);
      var overlayElement = getDOMNode(overlayTarget);
      if (triggerElement && contains_default(triggerElement, event.target)) {
        return;
      }
      if (overlayElement && contains_default(overlayElement, event.target)) {
        return;
      }
      if (isModifiedEvent(event) || !isLeftClickEvent(event)) {
        return;
      }
      onRootClose === null || onRootClose === void 0 ? void 0 : onRootClose(event);
    }, [onRootClose, triggerTarget, overlayTarget]);
    (0, import_react29.useEffect)(function() {
      var currentTarget = getDOMNode(triggerTarget);
      if (disabled || !currentTarget)
        return;
      var doc = ownerDocument_default(currentTarget);
      var onDocumentMouseDownListener = on(doc, "mousedown", handleDocumentMouseDown, true);
      var onDocumentKeyupListener = on(doc, "keyup", handleDocumentKeyUp);
      return function() {
        onDocumentMouseDownListener === null || onDocumentMouseDownListener === void 0 ? void 0 : onDocumentMouseDownListener.off();
        onDocumentKeyupListener === null || onDocumentKeyupListener === void 0 ? void 0 : onDocumentKeyupListener.off();
      };
    }, [triggerTarget, disabled, onRootClose, handleDocumentMouseDown, handleDocumentKeyUp]);
  }
  var useRootClose_default = useRootClose;

  // ../../node_modules/rsuite/esm/utils/useUpdateEffect.js
  var import_react30 = __toModule(require_react());
  var useUpdateEffect = function useUpdateEffect2(effect, deps) {
    var isMounting = (0, import_react30.useRef)(true);
    (0, import_react30.useEffect)(function() {
      if (isMounting.current) {
        isMounting.current = false;
        return;
      }
      effect();
    }, deps);
  };
  var useUpdateEffect_default = useUpdateEffect;

  // ../../node_modules/rsuite/esm/ButtonGroup/ButtonGroupContext.js
  var import_react31 = __toModule(require_react());
  var ButtonGroupContext = /* @__PURE__ */ import_react31.default.createContext(null);
  var ButtonGroupContext_default = ButtonGroupContext;

  // ../../node_modules/rsuite/esm/SafeAnchor/SafeAnchor.js
  var import_react32 = __toModule(require_react());
  var import_prop_types12 = __toModule(require_prop_types());
  function isTrivialHref(href) {
    return !href || href.trim() === "#";
  }
  var SafeAnchor = /* @__PURE__ */ import_react32.default.forwardRef(function(props, ref) {
    var _props$as = props.as, Component = _props$as === void 0 ? "a" : _props$as, href = props.href, disabled = props.disabled, onClick = props.onClick, restProps = _objectWithoutPropertiesLoose(props, ["as", "href", "disabled", "onClick"]);
    var handleClick = (0, import_react32.useCallback)(function(event) {
      if (disabled || isTrivialHref(href)) {
        event.preventDefault();
      }
      if (disabled) {
        event.stopPropagation();
        return;
      }
      onClick === null || onClick === void 0 ? void 0 : onClick(event);
    }, [disabled, href, onClick]);
    var trivialProps = isTrivialHref(href) ? {
      role: "button",
      href: "#"
    } : null;
    if (disabled) {
      restProps.tabIndex = -1;
      restProps["aria-disabled"] = true;
    }
    return /* @__PURE__ */ import_react32.default.createElement(Component, _extends({
      ref,
      href
    }, trivialProps, restProps, {
      onClick: handleClick
    }));
  });
  SafeAnchor.displayName = "SafeAnchor";
  SafeAnchor.propTypes = {
    href: import_prop_types12.default.string,
    disabled: import_prop_types12.default.bool,
    as: import_prop_types12.default.elementType
  };
  var SafeAnchor_default = SafeAnchor;

  // ../../node_modules/rsuite/esm/SafeAnchor/index.js
  var SafeAnchor_default2 = SafeAnchor_default;

  // ../../node_modules/rsuite/esm/Ripple/Ripple.js
  var import_react33 = __toModule(require_react());
  var import_prop_types13 = __toModule(require_prop_types());
  var getPosition = function getPosition2(target, event) {
    var offset = getOffset_default(target);
    var offsetX = (event.pageX || 0) - offset.left;
    var offsetY = (event.pageY || 0) - offset.top;
    var radiusX = Math.max(offset.width - offsetX, offsetX);
    var radiusY = Math.max(offset.height - offsetY, offsetY);
    var radius = Math.sqrt(Math.pow(radiusX, 2) + Math.pow(radiusY, 2));
    return {
      width: radius * 2,
      height: radius * 2,
      left: offsetX - radius,
      top: offsetY - radius
    };
  };
  var Ripple = /* @__PURE__ */ import_react33.default.forwardRef(function(props, ref) {
    var _props$as = props.as, Component = _props$as === void 0 ? "span" : _props$as, className = props.className, _props$classPrefix = props.classPrefix, classPrefix = _props$classPrefix === void 0 ? "ripple" : _props$classPrefix, onMouseDown = props.onMouseDown, rest = _objectWithoutPropertiesLoose(props, ["as", "className", "classPrefix", "onMouseDown"]);
    var _useClassNames = useClassNames_default(classPrefix), merge = _useClassNames.merge, prefix3 = _useClassNames.prefix, withClassPrefix = _useClassNames.withClassPrefix;
    var classes = merge(className, prefix3("pond"));
    var triggerRef = (0, import_react33.useRef)(null);
    var _useState = (0, import_react33.useState)(false), rippling = _useState[0], setRippling = _useState[1];
    var _useState2 = (0, import_react33.useState)(), position = _useState2[0], setPosition = _useState2[1];
    var handleRippled = function handleRippled2() {
      setRippling(false);
    };
    var handleMouseDown = (0, import_react33.useCallback)(function(event) {
      if (triggerRef.current) {
        var _position = getPosition(triggerRef.current, event);
        setRippling(true);
        setPosition(_position);
        onMouseDown === null || onMouseDown === void 0 ? void 0 : onMouseDown(_position, event);
      }
    }, [onMouseDown]);
    (0, import_react33.useEffect)(function() {
      var _triggerRef$current;
      var parentNode = (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : _triggerRef$current.parentNode;
      if (parentNode) {
        var mousedownListener = on(parentNode, "mousedown", handleMouseDown);
        return function() {
          mousedownListener === null || mousedownListener === void 0 ? void 0 : mousedownListener.off();
        };
      }
    }, [handleMouseDown]);
    return /* @__PURE__ */ import_react33.default.createElement(Component, _extends({}, rest, {
      className: classes,
      ref: mergeRefs(triggerRef, ref)
    }), /* @__PURE__ */ import_react33.default.createElement(Transition_default, {
      in: rippling,
      enteringClassName: prefix3("rippling"),
      onEntered: handleRippled
    }, function(props2, ref2) {
      var className2 = props2.className, transitionRest = _objectWithoutPropertiesLoose(props2, ["className"]);
      return /* @__PURE__ */ import_react33.default.createElement("span", _extends({}, transitionRest, {
        ref: ref2,
        className: merge(withClassPrefix(), className2),
        style: position
      }));
    }));
  });
  Ripple.displayName = "Ripple";
  Ripple.propTypes = {
    classPrefix: import_prop_types13.default.string,
    className: import_prop_types13.default.string,
    onMouseDown: import_prop_types13.default.func
  };
  var Ripple_default = Ripple;

  // ../../node_modules/rsuite/esm/Ripple/index.js
  var Ripple_default2 = Ripple_default;

  // ../../node_modules/rsuite/esm/Button/Button.js
  var _templateObject4;
  var Button = /* @__PURE__ */ import_react34.default.forwardRef(function(props, ref) {
    var as = props.as, active = props.active, _props$appearance = props.appearance, appearance = _props$appearance === void 0 ? "default" : _props$appearance, block = props.block, className = props.className, children = props.children, _props$classPrefix = props.classPrefix, classPrefix = _props$classPrefix === void 0 ? "btn" : _props$classPrefix, color2 = props.color, disabled = props.disabled, loading = props.loading, _props$ripple = props.ripple, ripple = _props$ripple === void 0 ? true : _props$ripple, sizeProp = props.size, typeProp = props.type, rest = _objectWithoutPropertiesLoose(props, ["as", "active", "appearance", "block", "className", "children", "classPrefix", "color", "disabled", "loading", "ripple", "size", "type"]);
    var buttonGroup = (0, import_react34.useContext)(ButtonGroupContext_default);
    var size2 = sizeProp !== null && sizeProp !== void 0 ? sizeProp : buttonGroup === null || buttonGroup === void 0 ? void 0 : buttonGroup.size;
    var _useClassNames = useClassNames_default(classPrefix), withClassPrefix = _useClassNames.withClassPrefix, prefix3 = _useClassNames.prefix, merge = _useClassNames.merge;
    var classes = merge(className, withClassPrefix(appearance, color2, size2, {
      active,
      disabled,
      loading,
      block
    }));
    var rippleElement = ripple && !isOneOf(appearance, ["link", "ghost"]) ? /* @__PURE__ */ import_react34.default.createElement(Ripple_default2, null) : null;
    var spin = /* @__PURE__ */ import_react34.default.createElement("span", {
      className: prefix3(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose(["spin"])))
    });
    if (rest.href) {
      return /* @__PURE__ */ import_react34.default.createElement(SafeAnchor_default2, _extends({}, rest, {
        as,
        ref,
        "aria-disabled": disabled,
        disabled,
        className: classes
      }), loading && spin, children, rippleElement);
    }
    var Component = as || "button";
    var type2 = typeProp || (Component === "button" ? "button" : void 0);
    var role = rest.role || (Component !== "button" ? "button" : void 0);
    return /* @__PURE__ */ import_react34.default.createElement(Component, _extends({}, rest, {
      role,
      type: type2,
      ref,
      disabled,
      "aria-disabled": disabled,
      className: classes
    }), loading && spin, children, rippleElement);
  });
  Button.displayName = "Button";
  Button.propTypes = {
    as: import_prop_types14.default.elementType,
    active: import_prop_types14.default.bool,
    appearance: import_prop_types14.default.oneOf(["default", "primary", "link", "subtle", "ghost"]),
    block: import_prop_types14.default.bool,
    children: import_prop_types14.default.node,
    color: import_prop_types14.default.oneOf(["red", "orange", "yellow", "green", "cyan", "blue", "violet"]),
    disabled: import_prop_types14.default.bool,
    href: import_prop_types14.default.string,
    loading: import_prop_types14.default.bool,
    ripple: import_prop_types14.default.bool,
    size: import_prop_types14.default.oneOf(["lg", "md", "sm", "xs"]),
    type: import_prop_types14.default.oneOf(["button", "reset", "submit"])
  };
  var Button_default2 = Button;

  // ../../node_modules/rsuite/esm/Button/index.js
  var Button_default = Button_default2;

  // ../../node_modules/rsuite/esm/Animation/Collapse.js
  var import_react35 = __toModule(require_react());
  var import_prop_types15 = __toModule(require_prop_types());
  var import_get4 = __toModule(require_get());
  var import_capitalize = __toModule(require_capitalize());
  var DIMENSION;
  (function(DIMENSION2) {
    DIMENSION2["HEIGHT"] = "height";
    DIMENSION2["WIDTH"] = "width";
  })(DIMENSION || (DIMENSION = {}));
  var triggerBrowserReflow = function triggerBrowserReflow2(node) {
    return (0, import_get4.default)(node, "offsetHeight");
  };
  var MARGINS = {
    height: ["marginTop", "marginBottom"],
    width: ["marginLeft", "marginRight"]
  };
  function defaultGetDimensionValue(dimension, elem) {
    var value = (0, import_get4.default)(elem, "offset" + (0, import_capitalize.default)(dimension));
    var margins = MARGINS[dimension];
    return value + parseInt(getStyle_default(elem, margins[0]), 10) + parseInt(getStyle_default(elem, margins[1]), 10);
  }
  function getScrollDimensionValue(elem, dimension) {
    var value = (0, import_get4.default)(elem, "scroll" + (0, import_capitalize.default)(dimension));
    return value + "px";
  }
  var Collapse = /* @__PURE__ */ import_react35.default.forwardRef(function(props, ref) {
    var className = props.className, _props$timeout = props.timeout, timeout = _props$timeout === void 0 ? 300 : _props$timeout, _props$dimension = props.dimension, dimensionProp = _props$dimension === void 0 ? DIMENSION.HEIGHT : _props$dimension, exitedClassName = props.exitedClassName, exitingClassName = props.exitingClassName, enteredClassName = props.enteredClassName, enteringClassName = props.enteringClassName, _props$getDimensionVa = props.getDimensionValue, getDimensionValue = _props$getDimensionVa === void 0 ? defaultGetDimensionValue : _props$getDimensionVa, onEnter = props.onEnter, onEntering = props.onEntering, onEntered = props.onEntered, onExit = props.onExit, onExiting = props.onExiting, rest = _objectWithoutPropertiesLoose(props, ["className", "timeout", "dimension", "exitedClassName", "exitingClassName", "enteredClassName", "enteringClassName", "getDimensionValue", "onEnter", "onEntering", "onEntered", "onExit", "onExiting"]);
    var _useClassNames = useClassNames_default("anim"), prefix3 = _useClassNames.prefix, merge = _useClassNames.merge;
    var dimension = typeof dimensionProp === "function" ? dimensionProp() : dimensionProp;
    var handleEnter = (0, import_react35.useCallback)(function(elem) {
      addStyle_default(elem, dimension, 0);
    }, [dimension]);
    var handleEntering = (0, import_react35.useCallback)(function(elem) {
      addStyle_default(elem, dimension, getScrollDimensionValue(elem, dimension));
    }, [dimension]);
    var handleEntered = (0, import_react35.useCallback)(function(elem) {
      addStyle_default(elem, dimension, "auto");
    }, [dimension]);
    var handleExit = (0, import_react35.useCallback)(function(elem) {
      var value = getDimensionValue ? getDimensionValue(dimension, elem) : 0;
      addStyle_default(elem, dimension, value + "px");
    }, [dimension, getDimensionValue]);
    var handleExiting = (0, import_react35.useCallback)(function(elem) {
      triggerBrowserReflow(elem);
      addStyle_default(elem, dimension, 0);
    }, [dimension]);
    return /* @__PURE__ */ import_react35.default.createElement(Transition_default, _extends({}, rest, {
      ref,
      timeout,
      className: merge(className, prefix3({
        "collapse-horizontal": dimension === "width"
      })),
      exitedClassName: exitedClassName || prefix3("collapse"),
      exitingClassName: exitingClassName || prefix3("collapsing"),
      enteredClassName: enteredClassName || prefix3("collapse", "in"),
      enteringClassName: enteringClassName || prefix3("collapsing"),
      onEnter: createChainedFunction_default(handleEnter, onEnter),
      onEntering: createChainedFunction_default(handleEntering, onEntering),
      onEntered: createChainedFunction_default(handleEntered, onEntered),
      onExit: createChainedFunction_default(handleExit, onExit),
      onExiting: createChainedFunction_default(handleExiting, onExiting)
    }));
  });
  Collapse.displayName = "Collapse";
  Collapse.propTypes = _extends({}, transitionPropTypes, {
    dimension: import_prop_types15.default.any,
    getDimensionValue: import_prop_types15.default.func
  });
  var Collapse_default = Collapse;

  // ../../node_modules/rsuite/esm/SelectPicker/SelectPicker.js
  var import_react36 = __toModule(require_react());
  var import_prop_types16 = __toModule(require_prop_types());
  var import_pick3 = __toModule(require_pick());
  var import_isUndefined6 = __toModule(require_isUndefined());
  var import_isNil4 = __toModule(require_isNil());
  var import_isFunction3 = __toModule(require_isFunction());
  var import_omit6 = __toModule(require_omit());
  var _templateObject5;
  var emptyArray2 = [];
  var SelectPicker = /* @__PURE__ */ import_react36.default.forwardRef(function(props, ref) {
    var _props$as = props.as, Component = _props$as === void 0 ? "div" : _props$as, _props$appearance = props.appearance, appearance = _props$appearance === void 0 ? "default" : _props$appearance, _props$data = props.data, data = _props$data === void 0 ? emptyArray2 : _props$data, _props$valueKey = props.valueKey, valueKey = _props$valueKey === void 0 ? "value" : _props$valueKey, _props$labelKey = props.labelKey, labelKey = _props$labelKey === void 0 ? "label" : _props$labelKey, valueProp = props.value, _props$classPrefix = props.classPrefix, classPrefix = _props$classPrefix === void 0 ? "picker" : _props$classPrefix, placeholder = props.placeholder, defaultValue = props.defaultValue, disabled = props.disabled, _props$cleanable = props.cleanable, cleanable = _props$cleanable === void 0 ? true : _props$cleanable, _props$placement = props.placement, placement = _props$placement === void 0 ? "bottomStart" : _props$placement, menuClassName = props.menuClassName, _props$menuAutoWidth = props.menuAutoWidth, menuAutoWidth = _props$menuAutoWidth === void 0 ? true : _props$menuAutoWidth, _props$menuMaxHeight = props.menuMaxHeight, menuMaxHeight = _props$menuMaxHeight === void 0 ? 320 : _props$menuMaxHeight, menuStyle = props.menuStyle, groupBy = props.groupBy, overrideLocale = props.locale, toggleAs = props.toggleAs, style = props.style, _props$searchable = props.searchable, searchable = _props$searchable === void 0 ? true : _props$searchable, _props$disabledItemVa = props.disabledItemValues, disabledItemValues = _props$disabledItemVa === void 0 ? emptyArray2 : _props$disabledItemVa, virtualized = props.virtualized, listProps = props.listProps, id = props.id, onGroupTitleClick = props.onGroupTitleClick, searchBy = props.searchBy, onEntered = props.onEntered, onExited = props.onExited, onClean = props.onClean, onChange = props.onChange, onSelect = props.onSelect, onSearch = props.onSearch, onClose = props.onClose, onOpen = props.onOpen, sort = props.sort, renderValue = props.renderValue, renderMenu = props.renderMenu, renderMenuGroup = props.renderMenuGroup, renderMenuItem = props.renderMenuItem, renderExtraFooter = props.renderExtraFooter, rest = _objectWithoutPropertiesLoose(props, ["as", "appearance", "data", "valueKey", "labelKey", "value", "classPrefix", "placeholder", "defaultValue", "disabled", "cleanable", "placement", "menuClassName", "menuAutoWidth", "menuMaxHeight", "menuStyle", "groupBy", "locale", "toggleAs", "style", "searchable", "disabledItemValues", "virtualized", "listProps", "id", "onGroupTitleClick", "searchBy", "onEntered", "onExited", "onClean", "onChange", "onSelect", "onSearch", "onClose", "onOpen", "sort", "renderValue", "renderMenu", "renderMenuGroup", "renderMenuItem", "renderExtraFooter"]);
    var triggerRef = (0, import_react36.useRef)(null);
    var targetRef = (0, import_react36.useRef)(null);
    var overlayRef = (0, import_react36.useRef)(null);
    var searchInputRef = (0, import_react36.useRef)(null);
    var _useCustom = useCustom_default("Picker", overrideLocale), locale6 = _useCustom.locale;
    var _ref = useControlled_default(valueProp, defaultValue), value = _ref[0], setValue = _ref[1];
    var _useFocusItemValue = useFocusItemValue(value, {
      data,
      valueKey,
      target: function target() {
        return overlayRef.current;
      }
    }), focusItemValue = _useFocusItemValue.focusItemValue, setFocusItemValue = _useFocusItemValue.setFocusItemValue, onFocusItem = _useFocusItemValue.onKeyDown;
    var _useSearch = useSearch({
      labelKey,
      data,
      searchBy,
      callback: function callback(searchKeyword2, filteredData2, event) {
        var _filteredData$;
        setFocusItemValue(filteredData2 === null || filteredData2 === void 0 ? void 0 : (_filteredData$ = filteredData2[0]) === null || _filteredData$ === void 0 ? void 0 : _filteredData$[valueKey]);
        onSearch === null || onSearch === void 0 ? void 0 : onSearch(searchKeyword2, event);
      }
    }), searchKeyword = _useSearch.searchKeyword, filteredData = _useSearch.filteredData, updateFilteredData = _useSearch.updateFilteredData, setSearchKeyword = _useSearch.setSearchKeyword, handleSearch = _useSearch.handleSearch;
    (0, import_react36.useEffect)(function() {
      updateFilteredData(data);
    }, [data, updateFilteredData]);
    var _useState = (0, import_react36.useState)(false), active = _useState[0], setActive = _useState[1];
    var handleClose = (0, import_react36.useCallback)(function() {
      var _triggerRef$current, _triggerRef$current$c;
      (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$c = _triggerRef$current.close) === null || _triggerRef$current$c === void 0 ? void 0 : _triggerRef$current$c.call(_triggerRef$current);
    }, []);
    var handleSelect = (0, import_react36.useCallback)(function(value2, item, event) {
      var _targetRef$current;
      onSelect === null || onSelect === void 0 ? void 0 : onSelect(value2, item, event);
      (_targetRef$current = targetRef.current) === null || _targetRef$current === void 0 ? void 0 : _targetRef$current.focus();
    }, [onSelect]);
    var handleChangeValue = (0, import_react36.useCallback)(function(value2, event) {
      onChange === null || onChange === void 0 ? void 0 : onChange(value2, event);
    }, [onChange]);
    var handleMenuPressEnter = (0, import_react36.useCallback)(function(event) {
      if (!focusItemValue) {
        return;
      }
      var focusItem = data.find(function(item) {
        return shallowEqual_default(item[valueKey], focusItemValue);
      });
      setValue(focusItemValue);
      handleSelect(focusItemValue, focusItem, event);
      handleChangeValue(focusItemValue, event);
      handleClose();
    }, [data, focusItemValue, handleChangeValue, handleClose, handleSelect, setValue, valueKey]);
    var handleItemSelect = (0, import_react36.useCallback)(function(value2, item, event) {
      setValue(value2);
      setFocusItemValue(value2);
      handleSelect(value2, item, event);
      handleChangeValue(value2, event);
      handleClose();
    }, [setValue, setFocusItemValue, handleSelect, handleChangeValue, handleClose]);
    var handleClean = (0, import_react36.useCallback)(function(event) {
      if (disabled || !cleanable) {
        return;
      }
      setValue(null);
      setFocusItemValue(value);
      handleChangeValue(null, event);
    }, [value, disabled, cleanable, setValue, handleChangeValue, setFocusItemValue]);
    var onPickerKeyDown = useToggleKeyDownEvent(_extends({
      toggle: !focusItemValue || !active,
      triggerRef,
      targetRef,
      overlayRef,
      searchInputRef,
      active,
      onExit: handleClean,
      onMenuKeyDown: onFocusItem,
      onMenuPressEnter: handleMenuPressEnter,
      onClose: function onClose2() {
        setFocusItemValue(null);
      }
    }, rest));
    var handleExited = (0, import_react36.useCallback)(function() {
      setSearchKeyword("");
      setActive(false);
      onSearch === null || onSearch === void 0 ? void 0 : onSearch("");
      onClose === null || onClose === void 0 ? void 0 : onClose();
    }, [onClose, setSearchKeyword, onSearch]);
    var handleEntered = (0, import_react36.useCallback)(function() {
      setActive(true);
      setFocusItemValue(value);
      onOpen === null || onOpen === void 0 ? void 0 : onOpen();
    }, [onOpen, setFocusItemValue, value]);
    usePublicMethods(ref, {
      triggerRef,
      overlayRef,
      targetRef
    });
    var activeItem = data.find(function(item) {
      return shallowEqual_default(item[valueKey], value);
    });
    var hasValue = !!activeItem || !(0, import_isNil4.default)(value) && (0, import_isFunction3.default)(renderValue);
    var _useClassNames = useClassNames_default(classPrefix), prefix3 = _useClassNames.prefix, merge = _useClassNames.merge;
    var selectedElement = placeholder;
    if (activeItem !== null && activeItem !== void 0 && activeItem[labelKey]) {
      selectedElement = activeItem[labelKey];
    }
    if (!(0, import_isNil4.default)(value) && (0, import_isFunction3.default)(renderValue)) {
      selectedElement = renderValue(value, activeItem, selectedElement);
      if ((0, import_isNil4.default)(selectedElement)) {
        hasValue = false;
      }
    }
    var renderDropdownMenu = function renderDropdownMenu2(positionProps, speakerRef) {
      var left = positionProps.left, top = positionProps.top, className = positionProps.className;
      var classes2 = merge(className, menuClassName, prefix3("select-menu"));
      var styles = _extends({}, menuStyle, {
        left,
        top
      });
      var items = filteredData;
      if (groupBy) {
        items = getDataGroupBy(items, groupBy, sort);
      } else if (typeof sort === "function") {
        items = items.sort(sort(false));
      }
      var menu = items.length ? /* @__PURE__ */ import_react36.default.createElement(DropdownMenu_default, {
        id: id ? id + "-listbox" : void 0,
        listProps,
        disabledItemValues,
        valueKey,
        labelKey,
        renderMenuGroup,
        renderMenuItem,
        maxHeight: menuMaxHeight,
        classPrefix: "picker-select-menu",
        dropdownMenuItemClassPrefix: "picker-select-menu-item",
        dropdownMenuItemAs: DropdownMenuItem_default,
        activeItemValues: [value],
        focusItemValue,
        data: items,
        group: !(0, import_isUndefined6.default)(groupBy),
        onSelect: handleItemSelect,
        onGroupTitleClick,
        virtualized
      }) : /* @__PURE__ */ import_react36.default.createElement("div", {
        className: prefix3(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose(["none"])))
      }, locale6 === null || locale6 === void 0 ? void 0 : locale6.noResultsText);
      return /* @__PURE__ */ import_react36.default.createElement(PickerOverlay_default, {
        ref: mergeRefs(overlayRef, speakerRef),
        autoWidth: menuAutoWidth,
        className: classes2,
        style: styles,
        onKeyDown: onPickerKeyDown,
        target: triggerRef
      }, searchable && /* @__PURE__ */ import_react36.default.createElement(SearchBar_default, {
        placeholder: locale6 === null || locale6 === void 0 ? void 0 : locale6.searchPlaceholder,
        onChange: handleSearch,
        value: searchKeyword,
        inputRef: searchInputRef
      }), renderMenu ? renderMenu(menu) : menu, renderExtraFooter === null || renderExtraFooter === void 0 ? void 0 : renderExtraFooter());
    };
    var _usePickerClassName = usePickerClassName(_extends({}, props, {
      classPrefix,
      appearance,
      hasValue,
      name: "select",
      cleanable
    })), classes = _usePickerClassName[0], usedClassNamePropKeys = _usePickerClassName[1];
    return /* @__PURE__ */ import_react36.default.createElement(PickerToggleTrigger_default, {
      pickerProps: (0, import_pick3.default)(props, pickTriggerPropKeys),
      ref: triggerRef,
      placement,
      onEntered: createChainedFunction_default(handleEntered, onEntered),
      onExited: createChainedFunction_default(handleExited, onExited),
      speaker: renderDropdownMenu
    }, /* @__PURE__ */ import_react36.default.createElement(Component, {
      className: classes,
      style
    }, /* @__PURE__ */ import_react36.default.createElement(PickerToggle_default, _extends({}, (0, import_omit6.default)(rest, [].concat(omitTriggerPropKeys, usedClassNamePropKeys)), {
      id,
      ref: targetRef,
      appearance,
      onClean: createChainedFunction_default(handleClean, onClean),
      onKeyDown: onPickerKeyDown,
      as: toggleAs,
      disabled,
      cleanable: cleanable && !disabled,
      hasValue,
      inputValue: value !== null && value !== void 0 ? value : "",
      active,
      placement
    }), selectedElement || (locale6 === null || locale6 === void 0 ? void 0 : locale6.placeholder))));
  });
  SelectPicker.displayName = "SelectPicker";
  SelectPicker.propTypes = _extends({}, listPickerPropTypes, {
    locale: import_prop_types16.default.any,
    appearance: import_prop_types16.default.oneOf(["default", "subtle"]),
    menuAutoWidth: import_prop_types16.default.bool,
    menuMaxHeight: import_prop_types16.default.number,
    renderMenu: import_prop_types16.default.func,
    renderMenuItem: import_prop_types16.default.func,
    renderMenuGroup: import_prop_types16.default.func,
    onSelect: import_prop_types16.default.func,
    onGroupTitleClick: import_prop_types16.default.func,
    onSearch: import_prop_types16.default.func,
    groupBy: import_prop_types16.default.any,
    sort: import_prop_types16.default.func,
    searchable: import_prop_types16.default.bool,
    virtualized: import_prop_types16.default.bool,
    searchBy: import_prop_types16.default.func
  });
  var SelectPicker_default = SelectPicker;

  // ../../node_modules/rsuite/esm/SelectPicker/index.js
  var SelectPicker_default2 = SelectPicker_default;

  // ../../node_modules/rsuite/esm/TreePicker/TreePicker.js
  var import_isFunction4 = __toModule(require_isFunction());
  var import_isNil5 = __toModule(require_isNil());
  var import_isUndefined7 = __toModule(require_isUndefined());
  var import_omit7 = __toModule(require_omit());
  var import_pick4 = __toModule(require_pick());
  var import_react39 = __toModule(require_react());
  var import_prop_types18 = __toModule(require_prop_types());

  // ../../node_modules/rsuite/esm/TreePicker/TreeNode.js
  var import_react37 = __toModule(require_react());
  var import_prop_types17 = __toModule(require_prop_types());
  var import_ArrowDown2 = __toModule(require_ArrowDown3());
  var import_Spinner = __toModule(require_Spinner3());
  var TreeNode = /* @__PURE__ */ (0, import_react37.forwardRef)(function(_ref, ref) {
    var _ref$as = _ref.as, Component = _ref$as === void 0 ? "div" : _ref$as, rtl = _ref.rtl, label = _ref.label, layer = _ref.layer, style = _ref.style, active = _ref.active, loading = _ref.loading, nodeData = _ref.nodeData, className = _ref.className, _ref$classPrefix = _ref.classPrefix, classPrefix = _ref$classPrefix === void 0 ? "tree-node" : _ref$classPrefix, disabled = _ref.disabled, _ref$visible = _ref.visible, visible = _ref$visible === void 0 ? true : _ref$visible, draggable = _ref.draggable, expand = _ref.expand, focus = _ref.focus, hasChildren = _ref.hasChildren, dragging = _ref.dragging, dragOver = _ref.dragOver, dragOverTop = _ref.dragOverTop, dragOverBottom = _ref.dragOverBottom, onSelect = _ref.onSelect, onDragStart = _ref.onDragStart, onDragOver = _ref.onDragOver, onDragEnter = _ref.onDragEnter, onDragLeave = _ref.onDragLeave, onDragEnd = _ref.onDragEnd, onDrop = _ref.onDrop, onExpand = _ref.onExpand, onRenderTreeIcon = _ref.onRenderTreeIcon, onRenderTreeNode = _ref.onRenderTreeNode, rest = _objectWithoutPropertiesLoose(_ref, ["as", "rtl", "label", "layer", "style", "active", "loading", "nodeData", "className", "classPrefix", "disabled", "visible", "draggable", "expand", "focus", "hasChildren", "dragging", "dragOver", "dragOverTop", "dragOverBottom", "onSelect", "onDragStart", "onDragOver", "onDragEnter", "onDragLeave", "onDragEnd", "onDrop", "onExpand", "onRenderTreeIcon", "onRenderTreeNode"]);
    var _useClassNames = useClassNames_default(classPrefix), prefix3 = _useClassNames.prefix, merge = _useClassNames.merge, withClassPrefix = _useClassNames.withClassPrefix;
    var getTitle = (0, import_react37.useCallback)(function() {
      if (typeof label === "string") {
        return label;
      } else if (/* @__PURE__ */ import_react37.default.isValidElement(label)) {
        var nodes = reactToString(label);
        return nodes.join("");
      }
    }, [label]);
    var handleExpand = (0, import_react37.useCallback)(function(event) {
      var _event$nativeEvent, _event$nativeEvent$st;
      event === null || event === void 0 ? void 0 : (_event$nativeEvent = event.nativeEvent) === null || _event$nativeEvent === void 0 ? void 0 : (_event$nativeEvent$st = _event$nativeEvent.stopImmediatePropagation) === null || _event$nativeEvent$st === void 0 ? void 0 : _event$nativeEvent$st.call(_event$nativeEvent);
      onExpand === null || onExpand === void 0 ? void 0 : onExpand(nodeData);
    }, [nodeData, onExpand]);
    var handleSelect = (0, import_react37.useCallback)(function(event) {
      if (disabled) {
        return;
      }
      if (event.target instanceof HTMLElement) {
        if (hasClass_default(event.target.parentNode, prefix3("expand-icon-wrapper"))) {
          return;
        }
      }
      onSelect === null || onSelect === void 0 ? void 0 : onSelect(nodeData, event);
    }, [nodeData, disabled, prefix3, onSelect]);
    var handleDragStart = (0, import_react37.useCallback)(function(event) {
      onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(nodeData, event);
    }, [nodeData, onDragStart]);
    var handleDragEnter = (0, import_react37.useCallback)(function(event) {
      event.preventDefault();
      event.stopPropagation();
      onDragEnter === null || onDragEnter === void 0 ? void 0 : onDragEnter(nodeData, event);
    }, [nodeData, onDragEnter]);
    var handleDragOver = (0, import_react37.useCallback)(function(event) {
      event.preventDefault();
      event.stopPropagation();
      onDragOver === null || onDragOver === void 0 ? void 0 : onDragOver(nodeData, event);
    }, [nodeData, onDragOver]);
    var handleDragLeave = (0, import_react37.useCallback)(function(event) {
      event.stopPropagation();
      onDragLeave === null || onDragLeave === void 0 ? void 0 : onDragLeave(nodeData, event);
    }, [nodeData, onDragLeave]);
    var handleDragEnd = (0, import_react37.useCallback)(function(event) {
      event.stopPropagation();
      onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(nodeData, event);
    }, [nodeData, onDragEnd]);
    var handleDrop = (0, import_react37.useCallback)(function(event) {
      event.preventDefault();
      event.stopPropagation();
      onDrop === null || onDrop === void 0 ? void 0 : onDrop(nodeData, event);
    }, [nodeData, onDrop]);
    var renderIcon = function renderIcon2() {
      var classes2 = prefix3("expand-icon", "icon", {
        expanded: expand
      });
      var expandIcon = /* @__PURE__ */ import_react37.default.createElement(import_ArrowDown2.default, {
        className: classes2
      });
      if (loading) {
        expandIcon = /* @__PURE__ */ import_react37.default.createElement("div", {
          className: prefix3("loading-icon")
        }, /* @__PURE__ */ import_react37.default.createElement(import_Spinner.default, {
          spin: true
        }));
      }
      if (nodeData !== void 0 && typeof onRenderTreeIcon === "function") {
        var customIcon = onRenderTreeIcon(nodeData);
        expandIcon = customIcon !== null ? /* @__PURE__ */ import_react37.default.createElement("div", {
          className: prefix3("custom-icon")
        }, customIcon) : expandIcon;
      }
      return hasChildren ? /* @__PURE__ */ import_react37.default.createElement("div", {
        role: "button",
        tabIndex: -1,
        "data-ref": nodeData.refKey,
        className: prefix3("expand-icon-wrapper"),
        onClick: handleExpand
      }, expandIcon) : null;
    };
    var renderLabel = function renderLabel2() {
      var contentClasses = prefix3("label-content", {
        dragging,
        "drag-over": dragOver,
        "drag-over-top": dragOverTop,
        "drag-over-bottom": dragOverBottom
      });
      return /* @__PURE__ */ import_react37.default.createElement("span", {
        className: prefix3("label"),
        title: getTitle(),
        "data-layer": layer,
        "data-key": (nodeData === null || nodeData === void 0 ? void 0 : nodeData.refKey) || "",
        role: "button",
        tabIndex: -1,
        onClick: handleSelect
      }, /* @__PURE__ */ import_react37.default.createElement("span", {
        className: contentClasses
      }, onRenderTreeNode ? onRenderTreeNode(nodeData) : label));
    };
    var classes = merge(className, withClassPrefix({
      disabled,
      active,
      "text-muted": disabled,
      focus
    }));
    var styles = _extends({}, style, getTreeNodeIndent(rtl, layer - 1));
    return visible ? /* @__PURE__ */ import_react37.default.createElement(Component, _extends({
      role: "treeitem"
    }, rest, {
      "aria-expanded": expand,
      "aria-label": label,
      "aria-level": layer,
      "aria-disabled": disabled,
      "aria-selected": active,
      style: styles,
      className: classes,
      ref,
      draggable,
      onDragStart: handleDragStart,
      onDragEnter: handleDragEnter,
      onDragOver: handleDragOver,
      onDragLeave: handleDragLeave,
      onDragEnd: handleDragEnd,
      onDrop: handleDrop
    }), renderIcon(), renderLabel()) : null;
  });
  TreeNode.displayName = "TreePickerNode";
  TreeNode.propTypes = {
    as: import_prop_types17.default.elementType,
    rtl: import_prop_types17.default.bool,
    focus: import_prop_types17.default.bool,
    layer: import_prop_types17.default.number,
    value: import_prop_types17.default.any,
    label: import_prop_types17.default.any,
    expand: import_prop_types17.default.bool,
    active: import_prop_types17.default.bool,
    loading: import_prop_types17.default.bool,
    visible: import_prop_types17.default.bool,
    nodeData: import_prop_types17.default.any,
    disabled: import_prop_types17.default.bool,
    draggable: import_prop_types17.default.bool,
    dragging: import_prop_types17.default.bool,
    dragOver: import_prop_types17.default.bool,
    dragOverTop: import_prop_types17.default.bool,
    dragOverBottom: import_prop_types17.default.bool,
    hasChildren: import_prop_types17.default.bool,
    className: import_prop_types17.default.string,
    classPrefix: import_prop_types17.default.string,
    style: import_prop_types17.default.object,
    onExpand: import_prop_types17.default.func,
    onSelect: import_prop_types17.default.func,
    onRenderTreeIcon: import_prop_types17.default.func,
    onRenderTreeNode: import_prop_types17.default.func,
    onDragStart: import_prop_types17.default.func,
    onDragEnter: import_prop_types17.default.func,
    onDragOver: import_prop_types17.default.func,
    onDragLeave: import_prop_types17.default.func,
    onDragEnd: import_prop_types17.default.func,
    onDrop: import_prop_types17.default.func
  };
  var TreeNode_default = TreeNode;

  // ../../node_modules/rsuite/esm/Tree/TreeContext.js
  var import_react38 = __toModule(require_react());
  var TreeContext = /* @__PURE__ */ import_react38.default.createContext({});
  var TreeContext_default = TreeContext;

  // ../../node_modules/rsuite/esm/TreePicker/TreePicker.js
  var maxTreeHeight = 320;
  var emptyArray3 = [];
  var TreePicker = /* @__PURE__ */ import_react39.default.forwardRef(function(props, ref) {
    var _props$as = props.as, Component = _props$as === void 0 ? "div" : _props$as, _props$data = props.data, data = _props$data === void 0 ? emptyArray3 : _props$data, _props$appearance = props.appearance, appearance = _props$appearance === void 0 ? "default" : _props$appearance, style = props.style, showIndentLine = props.showIndentLine, controlledValue = props.value, overrideLocale = props.locale, _props$height = props.height, height = _props$height === void 0 ? 360 : _props$height, className = props.className, disabled = props.disabled, _props$placement = props.placement, placement = _props$placement === void 0 ? "bottomStart" : _props$placement, _props$cleanable = props.cleanable, cleanable = _props$cleanable === void 0 ? true : _props$cleanable, menuStyle = props.menuStyle, _props$searchable = props.searchable, searchable = _props$searchable === void 0 ? true : _props$searchable, _props$virtualized = props.virtualized, virtualized = _props$virtualized === void 0 ? false : _props$virtualized, _props$classPrefix = props.classPrefix, classPrefix = _props$classPrefix === void 0 ? "picker" : _props$classPrefix, defaultValue = props.defaultValue, placeholder = props.placeholder, searchKeyword = props.searchKeyword, menuClassName = props.menuClassName, _props$menuAutoWidth = props.menuAutoWidth, menuAutoWidth = _props$menuAutoWidth === void 0 ? true : _props$menuAutoWidth, searchBy = props.searchBy, toggleAs = props.toggleAs, _props$labelKey = props.labelKey, labelKey = _props$labelKey === void 0 ? "label" : _props$labelKey, _props$valueKey = props.valueKey, valueKey = _props$valueKey === void 0 ? "value" : _props$valueKey, _props$childrenKey = props.childrenKey, childrenKey = _props$childrenKey === void 0 ? "children" : _props$childrenKey, draggable = props.draggable, _props$defaultExpandA = props.defaultExpandAll, defaultExpandAll = _props$defaultExpandA === void 0 ? false : _props$defaultExpandA, _props$disabledItemVa = props.disabledItemValues, disabledItemValues = _props$disabledItemVa === void 0 ? emptyArray3 : _props$disabledItemVa, controlledExpandItemValues = props.expandItemValues, _props$defaultExpandI = props.defaultExpandItemValues, defaultExpandItemValues = _props$defaultExpandI === void 0 ? emptyArray3 : _props$defaultExpandI, id = props.id, listProps = props.listProps, getChildren = props.getChildren, renderTreeIcon = props.renderTreeIcon, renderTreeNode = props.renderTreeNode, onExit = props.onExit, onExited = props.onExited, onClean = props.onClean, onOpen = props.onOpen, onSearch = props.onSearch, onSelect = props.onSelect, onChange = props.onChange, onEntered = props.onEntered, onClose = props.onClose, onDragEnd = props.onDragEnd, onDragStart = props.onDragStart, onDragEnter = props.onDragEnter, onDragLeave = props.onDragLeave, onDragOver = props.onDragOver, onDrop = props.onDrop, onExpand = props.onExpand, renderExtraFooter = props.renderExtraFooter, renderMenu = props.renderMenu, renderValue = props.renderValue, rest = _objectWithoutPropertiesLoose(props, ["as", "data", "appearance", "style", "showIndentLine", "value", "locale", "height", "className", "disabled", "placement", "cleanable", "menuStyle", "searchable", "virtualized", "classPrefix", "defaultValue", "placeholder", "searchKeyword", "menuClassName", "menuAutoWidth", "searchBy", "toggleAs", "labelKey", "valueKey", "childrenKey", "draggable", "defaultExpandAll", "disabledItemValues", "expandItemValues", "defaultExpandItemValues", "id", "listProps", "getChildren", "renderTreeIcon", "renderTreeNode", "onExit", "onExited", "onClean", "onOpen", "onSearch", "onSelect", "onChange", "onEntered", "onClose", "onDragEnd", "onDragStart", "onDragEnter", "onDragLeave", "onDragOver", "onDrop", "onExpand", "renderExtraFooter", "renderMenu", "renderValue"]);
    var triggerRef = (0, import_react39.useRef)(null);
    var targetRef = (0, import_react39.useRef)(null);
    var listRef = (0, import_react39.useRef)(null);
    var overlayRef = (0, import_react39.useRef)(null);
    var searchInputRef = (0, import_react39.useRef)(null);
    var treeViewRef = (0, import_react39.useRef)(null);
    var _useCustom = useCustom_default("Picker", overrideLocale), rtl = _useCustom.rtl, locale6 = _useCustom.locale;
    var _useContext = (0, import_react39.useContext)(TreeContext_default), inline = _useContext.inline;
    var _useControlled = useControlled_default(controlledValue, defaultValue), value = _useControlled[0], setValue = _useControlled[1], isControlled = _useControlled[2];
    var _useGetTreeNodeChildr = useGetTreeNodeChildren(data, valueKey, childrenKey), treeData = _useGetTreeNodeChildr.data, setTreeData = _useGetTreeNodeChildr.setData, loadingNodeValues = _useGetTreeNodeChildr.loadingNodeValues, loadChildren = _useGetTreeNodeChildr.loadChildren;
    var _useControlled2 = useControlled_default(controlledExpandItemValues, getDefaultExpandItemValues(treeData, {
      defaultExpandAll,
      valueKey,
      childrenKey,
      defaultExpandItemValues
    })), expandItemValues = _useControlled2[0], setExpandItemValues = _useControlled2[1];
    var _useState = (0, import_react39.useState)(false), active = _useState[0], setActive = _useState[1];
    var _useState2 = (0, import_react39.useState)(null), focusItemValue = _useState2[0], setFocusItemValue = _useState2[1];
    var _useFlattenTreeData = useFlattenTreeData({
      data: treeData,
      labelKey,
      valueKey,
      childrenKey,
      callback: function callback() {
        forceUpdate();
      }
    }), flattenNodes = _useFlattenTreeData.flattenNodes, forceUpdate = _useFlattenTreeData.forceUpdate, formatVirtualizedTreeData = _useFlattenTreeData.formatVirtualizedTreeData;
    var _useClassNames = useClassNames_default(classPrefix), prefix3 = _useClassNames.prefix, merge = _useClassNames.merge;
    var _useClassNames2 = useClassNames_default("tree"), treePrefix = _useClassNames2.prefix, withTreeClassPrefix = _useClassNames2.withClassPrefix;
    var _useTreeSearch = useTreeSearch({
      labelKey,
      childrenKey,
      searchKeyword,
      data: treeData,
      searchBy,
      callback: function callback(searchKeyword2, _filterData, event) {
        onSearch === null || onSearch === void 0 ? void 0 : onSearch(searchKeyword2, event);
      }
    }), filteredData = _useTreeSearch.filteredData, searchKeywordState = _useTreeSearch.searchKeywordState, setSearchKeyword = _useTreeSearch.setSearchKeyword, handleSearch = _useTreeSearch.handleSearch, setFilteredData = _useTreeSearch.setFilteredData;
    var _useTreeDrag = useTreeDrag(), dragNodeKeys = _useTreeDrag.dragNodeKeys, dragOverNodeKey = _useTreeDrag.dragOverNodeKey, dragNode = _useTreeDrag.dragNode, dropNodePosition = _useTreeDrag.dropNodePosition, setDragNodeKeys = _useTreeDrag.setDragNodeKeys, setDragOverNodeKey = _useTreeDrag.setDragOverNodeKey, setDragNode = _useTreeDrag.setDragNode, setDropNodePosition = _useTreeDrag.setDropNodePosition;
    var _useTreeNodeRefs = useTreeNodeRefs(), treeNodesRefs = _useTreeNodeRefs.treeNodesRefs, saveTreeNodeRef = _useTreeNodeRefs.saveTreeNodeRef;
    var activeNode = getTreeActiveNode(flattenNodes, value, valueKey);
    var getFormattedNodes = (0, import_react39.useCallback)(function(render) {
      if (virtualized) {
        return formatVirtualizedTreeData(flattenNodes, filteredData, expandItemValues, {
          searchKeyword: searchKeywordState
        }).filter(function(n11) {
          return n11.visible;
        });
      }
      return filteredData.map(function(dataItem, index) {
        return render === null || render === void 0 ? void 0 : render(dataItem, index, 1);
      });
    }, [searchKeywordState, expandItemValues, filteredData, flattenNodes, formatVirtualizedTreeData, virtualized]);
    var focusActiveNode = (0, import_react39.useCallback)(function() {
      if (listRef.current) {
        focusToActiveTreeNode({
          list: listRef.current,
          valueKey,
          selector: "." + treePrefix("node-active"),
          activeNode,
          virtualized,
          container: treeViewRef.current,
          formattedNodes: getFormattedNodes()
        });
      }
    }, [treePrefix, activeNode, getFormattedNodes, valueKey, virtualized]);
    (0, import_react39.useEffect)(function() {
      setFilteredData(data, searchKeywordState);
      setTreeData(data);
    }, [data, searchKeywordState, setFilteredData, setTreeData]);
    (0, import_react39.useEffect)(function() {
      setFilteredData(treeData, searchKeywordState);
    }, [treeData, searchKeywordState, setFilteredData]);
    (0, import_react39.useEffect)(function() {
      if (Array.isArray(controlledExpandItemValues)) {
        setExpandItemValues(controlledExpandItemValues);
      }
    }, [controlledExpandItemValues, setExpandItemValues]);
    (0, import_react39.useEffect)(function() {
      setSearchKeyword(searchKeyword !== null && searchKeyword !== void 0 ? searchKeyword : "");
    }, [searchKeyword, setSearchKeyword]);
    var getDropData = (0, import_react39.useCallback)(function(nodeData) {
      var options = {
        valueKey,
        childrenKey
      };
      return {
        dragNode,
        dropNode: nodeData,
        dropNodePosition,
        createUpdateDataFunction: createUpdateTreeDataFunction({
          dragNode,
          dropNode: nodeData,
          dropNodePosition
        }, options)
      };
    }, [dragNode, valueKey, childrenKey, dropNodePosition]);
    var getTreeNodeProps = function getTreeNodeProps2(node2, layer, index) {
      var draggingNode = dragNode !== null && dragNode !== void 0 ? dragNode : {};
      return {
        as: Component,
        rtl,
        value: node2[valueKey],
        label: node2[labelKey],
        index,
        layer,
        loading: loadingNodeValues.some(function(item) {
          return shallowEqual_default(item, node2[valueKey]);
        }),
        expand: node2.expand,
        active: shallowEqual_default(node2[valueKey], value),
        focus: shallowEqual_default(node2[valueKey], focusItemValue),
        visible: node2.visible,
        draggable,
        dragging: shallowEqual_default(node2[valueKey], draggingNode[valueKey]),
        children: node2[childrenKey],
        nodeData: node2,
        disabled: disabledItemValues.some(function(disabledItem) {
          return shallowEqual_default(disabledItem, node2[valueKey]);
        }),
        dragOver: shallowEqual_default(node2[valueKey], dragOverNodeKey) && dropNodePosition === TREE_NODE_DROP_POSITION.DRAG_OVER,
        dragOverTop: shallowEqual_default(node2[valueKey], dragOverNodeKey) && dropNodePosition === TREE_NODE_DROP_POSITION.DRAG_OVER_TOP,
        dragOverBottom: shallowEqual_default(node2[valueKey], dragOverNodeKey) && dropNodePosition === TREE_NODE_DROP_POSITION.DRAG_OVER_BOTTOM,
        onSelect: handleSelect,
        onDragStart: handleDragStart,
        onDragEnter: handleDragEnter,
        onDragOver: handleDragOver,
        onDragLeave: handleDragLeave,
        onDragEnd: handleDragEnd,
        onDrop: handleDrop,
        onExpand: handleExpand,
        onRenderTreeNode: renderTreeNode,
        onRenderTreeIcon: renderTreeIcon
      };
    };
    var handleSelect = (0, import_react39.useCallback)(function(nodeData, event) {
      var _targetRef$current, _triggerRef$current, _triggerRef$current$c;
      if (!nodeData) {
        return;
      }
      var nodeValue = nodeData[valueKey];
      if (!isControlled) {
        setValue(nodeValue);
      }
      setFocusItemValue(nodeData[valueKey]);
      onChange === null || onChange === void 0 ? void 0 : onChange(nodeValue, event);
      onSelect === null || onSelect === void 0 ? void 0 : onSelect(nodeData, nodeValue, event);
      (_targetRef$current = targetRef.current) === null || _targetRef$current === void 0 ? void 0 : _targetRef$current.focus();
      (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$c = _triggerRef$current.close) === null || _triggerRef$current$c === void 0 ? void 0 : _triggerRef$current$c.call(_triggerRef$current);
    }, [valueKey, isControlled, onChange, onSelect, setValue]);
    var handleExpand = (0, import_react39.useCallback)(function(node2) {
      var nextExpandItemValues = toggleExpand({
        node: node2,
        isExpand: !node2.expand,
        expandItemValues,
        valueKey
      });
      setExpandItemValues(nextExpandItemValues);
      onExpand === null || onExpand === void 0 ? void 0 : onExpand(nextExpandItemValues, node2, createConcatChildrenFunction(node2, node2[valueKey], {
        valueKey,
        childrenKey
      }));
      if ((0, import_isFunction4.default)(getChildren) && !node2.expand && Array.isArray(node2[childrenKey]) && node2[childrenKey].length === 0) {
        loadChildren(node2, getChildren);
      }
    }, [valueKey, childrenKey, expandItemValues, getChildren, onExpand, setExpandItemValues, loadChildren]);
    var handleDragStart = (0, import_react39.useCallback)(function(nodeData, event) {
      if (draggable) {
        setDragNodeKeys(getDragNodeKeys(nodeData, childrenKey, valueKey));
        setDragNode(flattenNodes[nodeData.refKey]);
        onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(nodeData, event);
      }
    }, [draggable, childrenKey, flattenNodes, onDragStart, setDragNodeKeys, setDragNode, valueKey]);
    var handleDragEnter = (0, import_react39.useCallback)(function(nodeData, event) {
      if (dragNodeKeys.some(function(d4) {
        return shallowEqual_default(d4, nodeData[valueKey]);
      })) {
        return;
      }
      if (dragNode) {
        setDragOverNodeKey(nodeData[valueKey]);
        setDropNodePosition(calDropNodePosition(event, treeNodesRefs[nodeData.refKey]));
      }
      onDragEnter === null || onDragEnter === void 0 ? void 0 : onDragEnter(nodeData, event);
    }, [dragNode, treeNodesRefs, dragNodeKeys, onDragEnter, setDragOverNodeKey, setDropNodePosition, valueKey]);
    var handleDragOver = (0, import_react39.useCallback)(function(nodeData, event) {
      if (dragNodeKeys.some(function(d4) {
        return shallowEqual_default(d4, nodeData[valueKey]);
      })) {
        return;
      }
      if (dragNode && shallowEqual_default(nodeData[valueKey], dragOverNodeKey)) {
        var lastDropNodePosition = calDropNodePosition(event, treeNodesRefs[nodeData.refKey]);
        if (lastDropNodePosition === dropNodePosition)
          return;
        setDropNodePosition(lastDropNodePosition);
      }
      onDragOver === null || onDragOver === void 0 ? void 0 : onDragOver(nodeData, event);
    }, [dragNode, dragNodeKeys, dragOverNodeKey, dropNodePosition, onDragOver, setDropNodePosition, treeNodesRefs, valueKey]);
    var handleDragLeave = (0, import_react39.useCallback)(function(nodeData, event) {
      onDragLeave === null || onDragLeave === void 0 ? void 0 : onDragLeave(nodeData, event);
    }, [onDragLeave]);
    var handleDragEnd = (0, import_react39.useCallback)(function(nodeData, event) {
      setDragNode(null);
      setDragNodeKeys([]);
      setDragOverNodeKey(null);
      onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(nodeData, event);
    }, [setDragNode, setDragNodeKeys, setDragOverNodeKey, onDragEnd]);
    var handleDrop = (0, import_react39.useCallback)(function(nodeData, event) {
      if (dragNodeKeys.some(function(d4) {
        return shallowEqual_default(d4, nodeData[valueKey]);
      })) {
        console.error("Cannot drag a node to itself and its children");
      } else {
        var dropData = getDropData(nodeData);
        onDrop === null || onDrop === void 0 ? void 0 : onDrop(dropData, event);
      }
      setDragNode(null);
      setDragNodeKeys([]);
      setDragOverNodeKey(null);
    }, [dragNodeKeys, setDragNode, setDragOverNodeKey, setDragNodeKeys, onDrop, getDropData, valueKey]);
    var handleOpen = (0, import_react39.useCallback)(function() {
      var _triggerRef$current2, _triggerRef$current2$;
      (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : (_triggerRef$current2$ = _triggerRef$current2.open) === null || _triggerRef$current2$ === void 0 ? void 0 : _triggerRef$current2$.call(_triggerRef$current2);
      focusActiveNode();
      onOpen === null || onOpen === void 0 ? void 0 : onOpen();
      setActive(true);
    }, [focusActiveNode, onOpen]);
    var handleClose = (0, import_react39.useCallback)(function() {
      var _triggerRef$current3, _triggerRef$current3$, _targetRef$current2;
      (_triggerRef$current3 = triggerRef.current) === null || _triggerRef$current3 === void 0 ? void 0 : (_triggerRef$current3$ = _triggerRef$current3.close) === null || _triggerRef$current3$ === void 0 ? void 0 : _triggerRef$current3$.call(_triggerRef$current3);
      setSearchKeyword("");
      setActive(false);
      setFocusItemValue(activeNode === null || activeNode === void 0 ? void 0 : activeNode[valueKey]);
      (_targetRef$current2 = targetRef.current) === null || _targetRef$current2 === void 0 ? void 0 : _targetRef$current2.focus();
    }, [activeNode, setSearchKeyword, valueKey]);
    usePublicMethods(ref, {
      rootRef: inline ? treeViewRef : void 0,
      triggerRef,
      overlayRef,
      targetRef,
      listRef,
      inline
    });
    var handleFocusItem = (0, import_react39.useCallback)(function(key) {
      var focusableItems = getFocusableItems(filteredData, {
        disabledItemValues,
        valueKey,
        childrenKey,
        expandItemValues
      }, isSearching(searchKeywordState));
      var selector = "." + treePrefix("node-label");
      var focusProps = {
        focusItemValue,
        focusableItems,
        treeNodesRefs,
        selector,
        valueKey,
        callback: function callback(nextFocusItemValue) {
          setFocusItemValue(nextFocusItemValue);
        }
      };
      if (key === KEY_VALUES.DOWN) {
        focusNextItem(focusProps);
        return;
      }
      if (key === KEY_VALUES.UP) {
        focusPreviousItem(focusProps);
      }
    }, [searchKeywordState, expandItemValues, filteredData, focusItemValue, treeNodesRefs, treePrefix, valueKey, childrenKey, disabledItemValues]);
    var handleLeftArrow = (0, import_react39.useCallback)(function() {
      if ((0, import_isNil5.default)(focusItemValue))
        return;
      var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);
      leftArrowHandler({
        focusItem,
        expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),
        onExpand: handleExpand,
        childrenKey,
        onFocusItem: function onFocusItem() {
          var _focusItem$parent, _focusItem$parent2;
          setFocusItemValue(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent = focusItem.parent) === null || _focusItem$parent === void 0 ? void 0 : _focusItem$parent[valueKey]);
          focusTreeNode(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent2 = focusItem.parent) === null || _focusItem$parent2 === void 0 ? void 0 : _focusItem$parent2.refKey, treeNodesRefs, "." + treePrefix("node-label"));
        }
      });
    }, [expandItemValues, flattenNodes, focusItemValue, handleExpand, treeNodesRefs, treePrefix, valueKey, childrenKey]);
    var handleRightArrow = (0, import_react39.useCallback)(function() {
      if ((0, import_isNil5.default)(focusItemValue))
        return;
      var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);
      rightArrowHandler({
        focusItem,
        expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),
        childrenKey,
        onExpand: handleExpand,
        onFocusItem: function onFocusItem() {
          handleFocusItem(KEY_VALUES.DOWN);
        }
      });
    }, [focusItemValue, flattenNodes, valueKey, expandItemValues, childrenKey, handleExpand, handleFocusItem]);
    var selectActiveItem = (0, import_react39.useCallback)(function(event) {
      if ((0, import_isNil5.default)(focusItemValue))
        return;
      var activeItem = getActiveItem(focusItemValue, flattenNodes, valueKey);
      handleSelect(activeItem, event);
    }, [flattenNodes, valueKey, focusItemValue, handleSelect]);
    var handleClean = (0, import_react39.useCallback)(function(event) {
      var nullValue = null;
      var target = event.target;
      if (target.matches('div[role="searchbox"] > input')) {
        return;
      }
      setValue(null);
      onChange === null || onChange === void 0 ? void 0 : onChange(nullValue, event);
    }, [onChange, setValue]);
    var onPickerKeydown = useToggleKeyDownEvent(_extends({
      toggle: !activeNode || !active,
      triggerRef,
      targetRef,
      overlayRef,
      searchInputRef,
      active,
      onExit: handleClean,
      onClose: handleClose,
      onMenuKeyDown: function onMenuKeyDown2(event) {
        onMenuKeyDown(event, {
          down: function down() {
            return handleFocusItem(KEY_VALUES.DOWN);
          },
          up: function up() {
            return handleFocusItem(KEY_VALUES.UP);
          },
          left: rtl ? handleRightArrow : handleLeftArrow,
          right: rtl ? handleLeftArrow : handleRightArrow,
          enter: selectActiveItem,
          del: handleClean
        });
      }
    }, rest));
    var handleTreeKeyDown = (0, import_react39.useCallback)(function(event) {
      if (!treeViewRef.current) {
        return;
      }
      onMenuKeyDown(event, {
        down: function down() {
          return handleFocusItem(KEY_VALUES.DOWN);
        },
        up: function up() {
          return handleFocusItem(KEY_VALUES.UP);
        },
        left: rtl ? handleRightArrow : handleLeftArrow,
        right: rtl ? handleLeftArrow : handleRightArrow,
        enter: selectActiveItem
      });
    }, [handleFocusItem, handleLeftArrow, handleRightArrow, rtl, selectActiveItem]);
    var renderNode = function renderNode2(node2, index, layer) {
      if (!node2.visible) {
        return null;
      }
      var children = node2[childrenKey];
      var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node2[valueKey]));
      var visibleChildren = (0, import_isUndefined7.default)(searchKeywordState) || searchKeywordState.length === 0 ? !!children : hasVisibleChildren(node2, childrenKey);
      var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node2, {
        expand
      }), layer, index), {
        hasChildren: visibleChildren
      });
      if (nodeProps.hasChildren) {
        var _merge;
        layer += 1;
        var openClass = treePrefix("open");
        var childrenClass = merge(treePrefix("node-children"), (_merge = {}, _merge[openClass] = expand && visibleChildren, _merge));
        var nodes = children || [];
        return /* @__PURE__ */ import_react39.default.createElement("div", {
          className: childrenClass,
          key: node2[valueKey]
        }, /* @__PURE__ */ import_react39.default.createElement(TreeNode_default, _extends({}, nodeProps, {
          ref: function ref2(_ref) {
            return saveTreeNodeRef(_ref, node2.refKey);
          }
        })), /* @__PURE__ */ import_react39.default.createElement("div", {
          className: treePrefix("children")
        }, nodes.map(function(child, i9) {
          return renderNode2(child, i9, layer);
        }), showIndentLine && /* @__PURE__ */ import_react39.default.createElement("span", {
          className: treePrefix("indent-line"),
          style: getTreeNodeIndent(rtl, layer - 1, true)
        })));
      }
      return /* @__PURE__ */ import_react39.default.createElement(TreeNode_default, _extends({
        ref: function ref2(_ref2) {
          return saveTreeNodeRef(_ref2, node2.refKey);
        },
        key: node2[valueKey]
      }, nodeProps));
    };
    var renderVirtualListNode = function renderVirtualListNode2(nodes) {
      return function(_ref3) {
        var key = _ref3.key, index = _ref3.index, style2 = _ref3.style;
        var node2 = nodes[index];
        var layer = node2.layer, visible = node2.visible;
        var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node2[valueKey]));
        if (!node2.visible) {
          return null;
        }
        var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node2, {
          expand
        }), layer), {
          style: style2,
          hasChildren: node2.hasChildren
        });
        return visible && /* @__PURE__ */ import_react39.default.createElement(TreeNode_default, _extends({
          ref: function ref2(_ref4) {
            return saveTreeNodeRef(_ref4, node2.refKey);
          },
          key
        }, nodeProps));
      };
    };
    var renderTree = function renderTree2() {
      var _withTreeClassPrefix;
      var classes2 = withTreeClassPrefix((_withTreeClassPrefix = {}, _withTreeClassPrefix[className !== null && className !== void 0 ? className : ""] = inline, _withTreeClassPrefix.virtualized = virtualized, _withTreeClassPrefix));
      var formattedNodes = getFormattedNodes(renderNode);
      var styles = inline ? _extends({
        height
      }, style) : {};
      return /* @__PURE__ */ import_react39.default.createElement("div", {
        role: "tree",
        id: id ? id + "-listbox" : void 0,
        ref: treeViewRef,
        className: classes2,
        style: styles,
        onKeyDown: inline ? handleTreeKeyDown : void 0
      }, /* @__PURE__ */ import_react39.default.createElement("div", {
        className: treePrefix("nodes")
      }, virtualized ? /* @__PURE__ */ import_react39.default.createElement(AutoSizer, {
        defaultHeight: inline ? height : maxTreeHeight,
        style: {
          width: "auto",
          height: "auto"
        }
      }, function(_ref5) {
        var height2 = _ref5.height, width = _ref5.width;
        return /* @__PURE__ */ import_react39.default.createElement(List, _extends({
          ref: listRef,
          width,
          height: height2,
          rowHeight: 36,
          rowCount: formattedNodes.length,
          rowRenderer: renderVirtualListNode(formattedNodes),
          scrollToAlignment: "center"
        }, listProps));
      }) : formattedNodes));
    };
    var renderDropdownMenu = function renderDropdownMenu2(positionProps, speakerRef) {
      var left = positionProps.left, top = positionProps.top, className2 = positionProps.className;
      var classes2 = merge(className2, menuClassName, prefix3("tree-menu"));
      var mergedMenuStyle = _extends({}, menuStyle, {
        left,
        top
      });
      var styles = virtualized ? _extends({
        height
      }, mergedMenuStyle) : _extends({}, mergedMenuStyle);
      return /* @__PURE__ */ import_react39.default.createElement(PickerOverlay_default, {
        autoWidth: menuAutoWidth,
        className: classes2,
        style: styles,
        ref: mergeRefs(overlayRef, speakerRef),
        onKeyDown: onPickerKeydown,
        target: triggerRef
      }, searchable ? /* @__PURE__ */ import_react39.default.createElement(SearchBar_default, {
        placeholder: locale6.searchPlaceholder,
        onChange: handleSearch,
        value: searchKeywordState,
        inputRef: searchInputRef
      }) : null, renderMenu ? renderMenu(renderTree()) : renderTree(), renderExtraFooter === null || renderExtraFooter === void 0 ? void 0 : renderExtraFooter());
    };
    var hasValidValue = !(0, import_isNil5.default)(activeNode) || !(0, import_isNil5.default)(value) && (0, import_isFunction4.default)(renderValue);
    var selectedElement = placeholder;
    if (hasValidValue) {
      var node = activeNode !== null && activeNode !== void 0 ? activeNode : {};
      selectedElement = node[labelKey];
      if ((0, import_isFunction4.default)(renderValue) && value) {
        selectedElement = renderValue(value, node, selectedElement);
        if ((0, import_isNil5.default)(selectedElement)) {
          hasValidValue = false;
        }
      }
    }
    var _usePickerClassName = usePickerClassName(_extends({}, props, {
      classPrefix,
      appearance,
      hasValue: hasValidValue,
      name: "tree",
      cleanable
    })), classes = _usePickerClassName[0], usedClassNamePropKeys = _usePickerClassName[1];
    if (inline) {
      return renderTree();
    }
    return /* @__PURE__ */ import_react39.default.createElement(PickerToggleTrigger_default, {
      pickerProps: (0, import_pick4.default)(props, pickTriggerPropKeys),
      ref: triggerRef,
      placement,
      onEnter: handleOpen,
      onEntered,
      onExit: createChainedFunction_default(onClose, onExit),
      onExited: createChainedFunction_default(handleClose, onExited),
      speaker: renderDropdownMenu
    }, /* @__PURE__ */ import_react39.default.createElement(Component, {
      className: classes,
      style
    }, /* @__PURE__ */ import_react39.default.createElement(PickerToggle_default, _extends({}, (0, import_omit7.default)(rest, [].concat(omitTriggerPropKeys, usedClassNamePropKeys, ["cascade"])), {
      id,
      ref: targetRef,
      appearance,
      onKeyDown: onPickerKeydown,
      onClean: createChainedFunction_default(handleClean, onClean),
      cleanable: cleanable && !disabled,
      as: toggleAs,
      disabled,
      hasValue: hasValidValue,
      active,
      placement,
      inputValue: value
    }), selectedElement || locale6.placeholder)));
  });
  TreePicker.displayName = "TreePicker";
  TreePicker.propTypes = _extends({}, listPickerPropTypes, {
    locale: import_prop_types18.default.any,
    appearance: import_prop_types18.default.oneOf(["default", "subtle"]),
    height: import_prop_types18.default.number,
    draggable: import_prop_types18.default.bool,
    virtualized: import_prop_types18.default.bool,
    searchable: import_prop_types18.default.bool,
    menuAutoWidth: import_prop_types18.default.bool,
    searchKeyword: import_prop_types18.default.string,
    defaultExpandAll: import_prop_types18.default.bool,
    expandItemValues: import_prop_types18.default.array,
    defaultExpandItemValues: import_prop_types18.default.array,
    onSearch: import_prop_types18.default.func,
    onExpand: import_prop_types18.default.func,
    onSelect: import_prop_types18.default.func,
    renderMenu: import_prop_types18.default.func,
    renderTreeNode: import_prop_types18.default.func,
    renderTreeIcon: import_prop_types18.default.func,
    renderExtraFooter: import_prop_types18.default.func,
    renderDragNode: import_prop_types18.default.func,
    searchBy: import_prop_types18.default.func
  });
  var TreePicker_default = TreePicker;

  // ../../node_modules/rsuite/esm/TreePicker/index.js
  var TreePicker_default2 = TreePicker_default;

  // ../../node_modules/rsuite/esm/Tree/Tree.js
  var import_react40 = __toModule(require_react());
  var TREE_NODE_DROP_POSITION2;
  (function(TREE_NODE_DROP_POSITION3) {
    TREE_NODE_DROP_POSITION3[TREE_NODE_DROP_POSITION3["DRAG_OVER"] = 0] = "DRAG_OVER";
    TREE_NODE_DROP_POSITION3[TREE_NODE_DROP_POSITION3["DRAG_OVER_TOP"] = 1] = "DRAG_OVER_TOP";
    TREE_NODE_DROP_POSITION3[TREE_NODE_DROP_POSITION3["DRAG_OVER_BOTTOM"] = 2] = "DRAG_OVER_BOTTOM";
  })(TREE_NODE_DROP_POSITION2 || (TREE_NODE_DROP_POSITION2 = {}));
  var Tree = /* @__PURE__ */ import_react40.default.forwardRef(function(props, ref) {
    var contextValue = (0, import_react40.useMemo)(function() {
      return {
        inline: true
      };
    }, []);
    return /* @__PURE__ */ import_react40.default.createElement(TreeContext_default.Provider, {
      value: contextValue
    }, /* @__PURE__ */ import_react40.default.createElement(TreePicker_default2, _extends({
      ref
    }, props)));
  });
  Tree.displayName = "Tree";
  var Tree_default = Tree;

  // ../../node_modules/rsuite/esm/Tree/index.js
  var Tree_default2 = Tree_default;

  // ../../node_modules/rsuite/esm/Panel/Panel.js
  var import_react42 = __toModule(require_react());
  var import_prop_types20 = __toModule(require_prop_types());
  var import_get5 = __toModule(require_get());
  var import_AngleDown2 = __toModule(require_AngleDown3());

  // ../../node_modules/rsuite/esm/PanelGroup/PanelGroup.js
  var import_react41 = __toModule(require_react());
  var import_prop_types19 = __toModule(require_prop_types());
  var PanelGroupContext = /* @__PURE__ */ import_react41.default.createContext({});
  var PanelGroup = /* @__PURE__ */ import_react41.default.forwardRef(function(props, ref) {
    var _props$as = props.as, Component = _props$as === void 0 ? "div" : _props$as, accordion = props.accordion, defaultActiveKey = props.defaultActiveKey, bordered = props.bordered, className = props.className, _props$classPrefix = props.classPrefix, classPrefix = _props$classPrefix === void 0 ? "panel-group" : _props$classPrefix, children = props.children, activeProp = props.activeKey, onSelect = props.onSelect, rest = _objectWithoutPropertiesLoose(props, ["as", "accordion", "defaultActiveKey", "bordered", "className", "classPrefix", "children", "activeKey", "onSelect"]);
    var _useClassNames = useClassNames_default(classPrefix), withClassPrefix = _useClassNames.withClassPrefix, merge = _useClassNames.merge;
    var _useControlled = useControlled_default(activeProp, defaultActiveKey), activeKey = _useControlled[0], setActiveKey = _useControlled[1];
    var classes = merge(className, withClassPrefix({
      accordion,
      bordered
    }));
    var handleSelect = (0, import_react41.useCallback)(function(activeKey2, event) {
      setActiveKey(activeKey2);
      onSelect === null || onSelect === void 0 ? void 0 : onSelect(activeKey2, event);
    }, [onSelect, setActiveKey]);
    var contextValue = (0, import_react41.useMemo)(function() {
      return {
        accordion,
        activeKey,
        onGroupSelect: handleSelect
      };
    }, [accordion, activeKey, handleSelect]);
    return /* @__PURE__ */ import_react41.default.createElement(Component, _extends({}, rest, {
      ref,
      role: accordion ? "tablist" : void 0,
      className: classes
    }), /* @__PURE__ */ import_react41.default.createElement(PanelGroupContext.Provider, {
      value: contextValue
    }, children));
  });
  PanelGroup.displayName = "PanelGroup";
  PanelGroup.propTypes = {
    accordion: import_prop_types19.default.bool,
    activeKey: import_prop_types19.default.any,
    bordered: import_prop_types19.default.bool,
    defaultActiveKey: import_prop_types19.default.any,
    className: import_prop_types19.default.string,
    children: import_prop_types19.default.node,
    classPrefix: import_prop_types19.default.string,
    onSelect: import_prop_types19.default.func
  };

  // ../../node_modules/rsuite/esm/Panel/Panel.js
  var Panel = /* @__PURE__ */ import_react42.default.forwardRef(function(props, ref) {
    var _props$as = props.as, Component = _props$as === void 0 ? "div" : _props$as, children = props.children, className = props.className, _props$classPrefix = props.classPrefix, classPrefix = _props$classPrefix === void 0 ? "panel" : _props$classPrefix, bodyFill = props.bodyFill, bordered = props.bordered, collapsibleProp = props.collapsible, defaultExpanded = props.defaultExpanded, eventKey = props.eventKey, expandedProp = props.expanded, header = props.header, headerRoleProp = props.headerRole, _props$panelRole = props.panelRole, panelRole = _props$panelRole === void 0 ? "region" : _props$panelRole, shaded = props.shaded, id = props.id, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, onSelect = props.onSelect, rest = _objectWithoutPropertiesLoose(props, ["as", "children", "className", "classPrefix", "bodyFill", "bordered", "collapsible", "defaultExpanded", "eventKey", "expanded", "header", "headerRole", "panelRole", "shaded", "id", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "onSelect"]);
    var _useClassNames = useClassNames_default(classPrefix), merge = _useClassNames.merge, prefix3 = _useClassNames.prefix, withClassPrefix = _useClassNames.withClassPrefix;
    var _ref = (0, import_react42.useContext)(PanelGroupContext) || {}, accordion = _ref.accordion, activeKey = _ref.activeKey, onGroupSelect = _ref.onGroupSelect;
    var _useControlled = useControlled_default(expandedProp, defaultExpanded || typeof activeKey !== "undefined" && activeKey === eventKey), expandedState = _useControlled[0], setExpanded = _useControlled[1];
    var collapsible = collapsibleProp;
    var headerRole = headerRoleProp;
    var expanded = expandedState;
    if (accordion) {
      collapsible = true;
      headerRole = "button";
      if (typeof activeKey !== "undefined" && activeKey !== eventKey) {
        expanded = false;
      }
    }
    var handleSelect = (0, import_react42.useCallback)(function(event) {
      onSelect === null || onSelect === void 0 ? void 0 : onSelect(eventKey, event);
      onGroupSelect === null || onGroupSelect === void 0 ? void 0 : onGroupSelect(eventKey, event);
      setExpanded(!expanded);
    }, [eventKey, expanded, onGroupSelect, onSelect, setExpanded]);
    var renderBody = (0, import_react42.useCallback)(function() {
      var classes2 = prefix3("body", {
        "body-fill": bodyFill
      });
      return /* @__PURE__ */ import_react42.default.createElement("div", {
        role: panelRole,
        className: classes2
      }, children);
    }, [bodyFill, children, panelRole, prefix3]);
    var renderCollapsibleBody = function renderCollapsibleBody2() {
      return /* @__PURE__ */ import_react42.default.createElement(Collapse_default, {
        in: expanded,
        onEnter,
        onEntering,
        onEntered,
        onExit,
        onExiting,
        onExited
      }, function(transitionProps, ref2) {
        var className2 = transitionProps.className, rest2 = _objectWithoutPropertiesLoose(transitionProps, ["className"]);
        return /* @__PURE__ */ import_react42.default.createElement("div", _extends({}, rest2, {
          id: id ? "" + id : null,
          "aria-expanded": expanded,
          className: merge(className2, prefix3("collapse")),
          ref: ref2
        }), renderBody());
      });
    };
    var renderHeading = function renderHeading2() {
      if (!header) {
        return null;
      }
      var content;
      if (!/* @__PURE__ */ import_react42.default.isValidElement(header) || Array.isArray(header)) {
        content = collapsible ? /* @__PURE__ */ import_react42.default.createElement(import_react42.default.Fragment, null, /* @__PURE__ */ import_react42.default.createElement(import_AngleDown2.default, {
          rotate: expanded ? 180 : 0
        }), /* @__PURE__ */ import_react42.default.createElement("span", {
          className: prefix3("title"),
          role: "presentation"
        }, /* @__PURE__ */ import_react42.default.createElement("span", {
          className: expanded ? void 0 : "collapsed"
        }, header))) : header;
      } else {
        var _className = merge(prefix3("title"), (0, import_get5.default)(header, "props.className"));
        content = /* @__PURE__ */ import_react42.default.cloneElement(header, {
          className: _className
        });
      }
      return /* @__PURE__ */ import_react42.default.createElement("div", {
        role: headerRole,
        "aria-controls": collapsible && id ? "" + id : void 0,
        "aria-expanded": expanded,
        className: prefix3("header"),
        onClick: collapsible ? handleSelect : void 0,
        tabIndex: -1
      }, content);
    };
    var classes = merge(className, withClassPrefix({
      in: expanded,
      collapsible,
      bordered,
      shaded
    }));
    return /* @__PURE__ */ import_react42.default.createElement(Component, _extends({}, rest, {
      ref,
      className: classes,
      id: collapsible ? null : id
    }), renderHeading(), collapsible ? renderCollapsibleBody() : renderBody());
  });
  Panel.displayName = "Panel";
  Panel.propTypes = {
    collapsible: import_prop_types20.default.bool,
    bordered: import_prop_types20.default.bool,
    shaded: import_prop_types20.default.bool,
    bodyFill: import_prop_types20.default.bool,
    header: import_prop_types20.default.any,
    defaultExpanded: import_prop_types20.default.bool,
    expanded: import_prop_types20.default.bool,
    eventKey: import_prop_types20.default.any,
    headerRole: import_prop_types20.default.string,
    panelRole: import_prop_types20.default.string,
    classPrefix: import_prop_types20.default.string,
    children: import_prop_types20.default.node,
    onSelect: import_prop_types20.default.func,
    onEnter: import_prop_types20.default.func,
    onEntering: import_prop_types20.default.func,
    onEntered: import_prop_types20.default.func,
    onExit: import_prop_types20.default.func,
    onExiting: import_prop_types20.default.func,
    onExited: import_prop_types20.default.func,
    className: import_prop_types20.default.string
  };
  var Panel_default = Panel;

  // ../../node_modules/rsuite/esm/Panel/index.js
  var Panel_default2 = Panel_default;

  // ../../node_modules/rsuite/esm/Row/Row.js
  var import_react43 = __toModule(require_react());
  var import_prop_types21 = __toModule(require_prop_types());
  var Row = /* @__PURE__ */ import_react43.default.forwardRef(function(props, ref) {
    var _props$as = props.as, Component = _props$as === void 0 ? "div" : _props$as, _props$classPrefix = props.classPrefix, classPrefix = _props$classPrefix === void 0 ? "row" : _props$classPrefix, className = props.className, gutter = props.gutter, children = props.children, style = props.style, rest = _objectWithoutPropertiesLoose(props, ["as", "classPrefix", "className", "gutter", "children", "style"]);
    var _useClassNames = useClassNames_default(classPrefix), withClassPrefix = _useClassNames.withClassPrefix, merge = _useClassNames.merge;
    var classes = merge(className, withClassPrefix());
    var cols = children;
    var rowStyles = style;
    if (typeof gutter !== "undefined") {
      var padding = gutter / 2;
      cols = ReactChildren_default.mapCloneElement(children, function(child) {
        return _extends({}, child.props, {
          style: _extends({}, child.props.style, {
            paddingLeft: padding,
            paddingRight: padding
          })
        });
      });
      rowStyles = _extends({}, style, {
        marginLeft: -padding,
        marginRight: -padding
      });
    }
    return /* @__PURE__ */ import_react43.default.createElement(Component, _extends({
      role: "row"
    }, rest, {
      ref,
      className: classes,
      style: rowStyles
    }), cols);
  });
  Row.displayName = "Row";
  Row.propTypes = {
    className: import_prop_types21.default.string,
    classPrefix: import_prop_types21.default.string,
    gutter: import_prop_types21.default.number,
    style: import_prop_types21.default.any,
    as: import_prop_types21.default.elementType,
    children: import_prop_types21.default.node
  };
  var Row_default = Row;

  // ../../node_modules/rsuite/esm/Row/index.js
  var Row_default2 = Row_default;

  // ../../node_modules/rsuite/esm/Col/Col.js
  var import_react44 = __toModule(require_react());
  var import_prop_types22 = __toModule(require_prop_types());
  var import_omit8 = __toModule(require_omit());
  var Col = /* @__PURE__ */ import_react44.default.forwardRef(function(props, ref) {
    var _props$as = props.as, Component = _props$as === void 0 ? "div" : _props$as, _props$classPrefix = props.classPrefix, classPrefix = _props$classPrefix === void 0 ? "col" : _props$classPrefix, className = props.className, rest = _objectWithoutPropertiesLoose(props, ["as", "classPrefix", "className"]);
    var _useClassNames = useClassNames_default(classPrefix), prefix3 = _useClassNames.prefix, merge = _useClassNames.merge, rootPrefix = _useClassNames.rootPrefix, withClassPrefix = _useClassNames.withClassPrefix;
    var colClasses = {};
    var omitKeys = {};
    var getPropValue = function getPropValue2(key) {
      omitKeys[key] = null;
      return rest[key];
    };
    COLUMN_SIZE.forEach(function(size2) {
      var col = getPropValue(size2);
      var hidden = getPropValue(size2 + "Hidden");
      var offset = getPropValue(size2 + "Offset");
      var push = getPropValue(size2 + "Push");
      var pull = getPropValue(size2 + "Pull");
      colClasses[rootPrefix("hidden-" + size2)] = hidden;
      colClasses[prefix3(size2 + "-" + col)] = col >= 0;
      colClasses[prefix3(size2 + "-offset-" + offset)] = offset >= 0;
      colClasses[prefix3(size2 + "-push-" + push)] = push >= 0;
      colClasses[prefix3(size2 + "-pull-" + pull)] = pull >= 0;
    });
    var classes = merge(className, withClassPrefix(), colClasses);
    var unhandledProps = (0, import_omit8.default)(rest, Object.keys(omitKeys));
    return /* @__PURE__ */ import_react44.default.createElement(Component, _extends({
      role: "gridcell"
    }, unhandledProps, {
      ref,
      className: classes
    }));
  });
  Col.displayName = "Col";
  Col.propTypes = {
    className: import_prop_types22.default.string,
    classPrefix: import_prop_types22.default.string,
    xs: import_prop_types22.default.number,
    sm: import_prop_types22.default.number,
    md: import_prop_types22.default.number,
    lg: import_prop_types22.default.number,
    xl: import_prop_types22.default.number,
    xxl: import_prop_types22.default.number,
    xsOffset: import_prop_types22.default.number,
    smOffset: import_prop_types22.default.number,
    mdOffset: import_prop_types22.default.number,
    lgOffset: import_prop_types22.default.number,
    xlOffset: import_prop_types22.default.number,
    xxlOffset: import_prop_types22.default.number,
    xsPush: import_prop_types22.default.number,
    smPush: import_prop_types22.default.number,
    mdPush: import_prop_types22.default.number,
    lgPush: import_prop_types22.default.number,
    xsPull: import_prop_types22.default.number,
    smPull: import_prop_types22.default.number,
    mdPull: import_prop_types22.default.number,
    lgPull: import_prop_types22.default.number,
    xlPull: import_prop_types22.default.number,
    xxlPull: import_prop_types22.default.number,
    xsHidden: import_prop_types22.default.bool,
    smHidden: import_prop_types22.default.bool,
    mdHidden: import_prop_types22.default.bool,
    lgHidden: import_prop_types22.default.bool,
    xlHidden: import_prop_types22.default.bool,
    xxlHidden: import_prop_types22.default.bool,
    as: import_prop_types22.default.elementType
  };
  var Col_default = Col;

  // ../../node_modules/rsuite/esm/Col/index.js
  var Col_default2 = Col_default;

  // src/components/Charts.tsx
  var import_react65 = __toModule(require_react());

  // src/static/enums.ts
  var ChartTypes = [
    {id: "map", name: "Map"},
    {id: "bar", name: "Bar Chart"},
    {id: "scatter", name: "Scatter Plot"},
    {id: "line", name: "Line Chart"}
  ];

  // src/AppContext.ts
  var import_react45 = __toModule(require_react());
  var AppContext = import_react45.default.createContext({
    leftCountry: void 0,
    rightCountry: void 0,
    onLeftCountryDataChange: (data) => {
    },
    onRightCountryDataChange: (data) => {
    },
    columns: [],
    features: [],
    metricsCategories: new Map(),
    setChartType: (t13) => {
    },
    chartType: "map",
    selectedMetric: "",
    onMetricChange: (m5) => {
    }
  });
  var useAppContext = () => import_react45.default.useContext(AppContext);

  // src/components/Map.tsx
  var import_react55 = __toModule(require_react());

  // ../../node_modules/@nivo/geo/dist/nivo-geo.es.js
  var import_react54 = __toModule(require_react());

  // ../../node_modules/@nivo/core/dist/nivo-core.es.js
  var import_react51 = __toModule(require_react());
  var import_prop_types23 = __toModule(require_prop_types());

  // ../../node_modules/@nivo/tooltip/dist/nivo-tooltip.es.js
  var import_react49 = __toModule(require_react());

  // ../../node_modules/@react-spring/rafz/dist/react-spring-rafz.esm.js
  var updateQueue = makeQueue();
  var raf = (fn2) => schedule(fn2, updateQueue);
  var writeQueue = makeQueue();
  raf.write = (fn2) => schedule(fn2, writeQueue);
  var onStartQueue = makeQueue();
  raf.onStart = (fn2) => schedule(fn2, onStartQueue);
  var onFrameQueue = makeQueue();
  raf.onFrame = (fn2) => schedule(fn2, onFrameQueue);
  var onFinishQueue = makeQueue();
  raf.onFinish = (fn2) => schedule(fn2, onFinishQueue);
  var timeouts = [];
  raf.setTimeout = (handler, ms) => {
    let time3 = raf.now() + ms;
    let cancel = () => {
      let i9 = timeouts.findIndex((t13) => t13.cancel == cancel);
      if (~i9)
        timeouts.splice(i9, 1);
      __raf.count -= ~i9 ? 1 : 0;
    };
    let timeout = {
      time: time3,
      handler,
      cancel
    };
    timeouts.splice(findTimeout(time3), 0, timeout);
    __raf.count += 1;
    start();
    return timeout;
  };
  var findTimeout = (time3) => ~(~timeouts.findIndex((t13) => t13.time > time3) || ~timeouts.length);
  raf.cancel = (fn2) => {
    updateQueue.delete(fn2);
    writeQueue.delete(fn2);
  };
  raf.sync = (fn2) => {
    sync = true;
    raf.batchedUpdates(fn2);
    sync = false;
  };
  raf.throttle = (fn2) => {
    let lastArgs;
    function queuedFn() {
      try {
        fn2(...lastArgs);
      } finally {
        lastArgs = null;
      }
    }
    function throttled(...args) {
      lastArgs = args;
      raf.onStart(queuedFn);
    }
    throttled.handler = fn2;
    throttled.cancel = () => {
      onStartQueue.delete(queuedFn);
      lastArgs = null;
    };
    return throttled;
  };
  var nativeRaf = typeof window != "undefined" ? window.requestAnimationFrame : () => {
  };
  raf.use = (impl) => nativeRaf = impl;
  raf.now = typeof performance != "undefined" ? () => performance.now() : Date.now;
  raf.batchedUpdates = (fn2) => fn2();
  raf.catch = console.error;
  raf.frameLoop = "always";
  raf.advance = () => {
    if (raf.frameLoop !== "demand") {
      console.warn("Cannot call the manual advancement of rafz whilst frameLoop is not set as demand");
    } else {
      update();
    }
  };
  var ts = -1;
  var sync = false;
  function schedule(fn2, queue) {
    if (sync) {
      queue.delete(fn2);
      fn2(0);
    } else {
      queue.add(fn2);
      start();
    }
  }
  function start() {
    if (ts < 0) {
      ts = 0;
      if (raf.frameLoop !== "demand") {
        nativeRaf(loop);
      }
    }
  }
  function loop() {
    if (~ts) {
      nativeRaf(loop);
      raf.batchedUpdates(update);
    }
  }
  function update() {
    let prevTs = ts;
    ts = raf.now();
    let count2 = findTimeout(ts);
    if (count2) {
      eachSafely(timeouts.splice(0, count2), (t13) => t13.handler());
      __raf.count -= count2;
    }
    onStartQueue.flush();
    updateQueue.flush(prevTs ? Math.min(64, ts - prevTs) : 16.667);
    onFrameQueue.flush();
    writeQueue.flush();
    onFinishQueue.flush();
  }
  function makeQueue() {
    let next = new Set();
    let current = next;
    return {
      add(fn2) {
        __raf.count += current == next && !next.has(fn2) ? 1 : 0;
        next.add(fn2);
      },
      delete(fn2) {
        __raf.count -= current == next && next.has(fn2) ? 1 : 0;
        return next.delete(fn2);
      },
      flush(arg) {
        if (current.size) {
          next = new Set();
          __raf.count -= current.size;
          eachSafely(current, (fn2) => fn2(arg) && next.add(fn2));
          __raf.count += next.size;
          current = next;
        }
      }
    };
  }
  function eachSafely(values, each2) {
    values.forEach((value) => {
      try {
        each2(value);
      } catch (e15) {
        raf.catch(e15);
      }
    });
  }
  var __raf = {
    count: 0,
    clear() {
      ts = -1;
      timeouts = [];
      onStartQueue = makeQueue();
      updateQueue = makeQueue();
      onFrameQueue = makeQueue();
      writeQueue = makeQueue();
      onFinishQueue = makeQueue();
      __raf.count = 0;
    }
  };

  // ../../node_modules/@react-spring/shared/dist/react-spring-shared.esm.js
  var React38 = __toModule(require_react());
  var import_react46 = __toModule(require_react());
  function noop() {
  }
  var defineHidden = (obj, key, value) => Object.defineProperty(obj, key, {
    value,
    writable: true,
    configurable: true
  });
  var is2 = {
    arr: Array.isArray,
    obj: (a7) => !!a7 && a7.constructor.name === "Object",
    fun: (a7) => typeof a7 === "function",
    str: (a7) => typeof a7 === "string",
    num: (a7) => typeof a7 === "number",
    und: (a7) => a7 === void 0
  };
  function isEqual(a7, b8) {
    if (is2.arr(a7)) {
      if (!is2.arr(b8) || a7.length !== b8.length)
        return false;
      for (let i9 = 0; i9 < a7.length; i9++) {
        if (a7[i9] !== b8[i9])
          return false;
      }
      return true;
    }
    return a7 === b8;
  }
  var each = (obj, fn2) => obj.forEach(fn2);
  function eachProp(obj, fn2, ctx2) {
    if (is2.arr(obj)) {
      for (let i9 = 0; i9 < obj.length; i9++) {
        fn2.call(ctx2, obj[i9], `${i9}`);
      }
      return;
    }
    for (const key in obj) {
      if (obj.hasOwnProperty(key)) {
        fn2.call(ctx2, obj[key], key);
      }
    }
  }
  var toArray = (a7) => is2.und(a7) ? [] : is2.arr(a7) ? a7 : [a7];
  function flush(queue, iterator) {
    if (queue.size) {
      const items = Array.from(queue);
      queue.clear();
      each(items, iterator);
    }
  }
  var flushCalls = (queue, ...args) => flush(queue, (fn2) => fn2(...args));
  var createStringInterpolator$1;
  var to;
  var colors$1 = null;
  var skipAnimation = false;
  var willAdvance = noop;
  var assign2 = (globals2) => {
    if (globals2.to)
      to = globals2.to;
    if (globals2.now)
      raf.now = globals2.now;
    if (globals2.colors !== void 0)
      colors$1 = globals2.colors;
    if (globals2.skipAnimation != null)
      skipAnimation = globals2.skipAnimation;
    if (globals2.createStringInterpolator)
      createStringInterpolator$1 = globals2.createStringInterpolator;
    if (globals2.requestAnimationFrame)
      raf.use(globals2.requestAnimationFrame);
    if (globals2.batchedUpdates)
      raf.batchedUpdates = globals2.batchedUpdates;
    if (globals2.willAdvance)
      willAdvance = globals2.willAdvance;
    if (globals2.frameLoop)
      raf.frameLoop = globals2.frameLoop;
  };
  var globals = /* @__PURE__ */ Object.freeze({
    __proto__: null,
    get createStringInterpolator() {
      return createStringInterpolator$1;
    },
    get to() {
      return to;
    },
    get colors() {
      return colors$1;
    },
    get skipAnimation() {
      return skipAnimation;
    },
    get willAdvance() {
      return willAdvance;
    },
    assign: assign2
  });
  var startQueue = new Set();
  var currentFrame = [];
  var prevFrame = [];
  var priority = 0;
  var frameLoop = {
    get idle() {
      return !startQueue.size && !currentFrame.length;
    },
    start(animation) {
      if (priority > animation.priority) {
        startQueue.add(animation);
        raf.onStart(flushStartQueue);
      } else {
        startSafely(animation);
        raf(advance);
      }
    },
    advance,
    sort(animation) {
      if (priority) {
        raf.onFrame(() => frameLoop.sort(animation));
      } else {
        const prevIndex = currentFrame.indexOf(animation);
        if (~prevIndex) {
          currentFrame.splice(prevIndex, 1);
          startUnsafely(animation);
        }
      }
    },
    clear() {
      currentFrame = [];
      startQueue.clear();
    }
  };
  function flushStartQueue() {
    startQueue.forEach(startSafely);
    startQueue.clear();
    raf(advance);
  }
  function startSafely(animation) {
    if (!currentFrame.includes(animation))
      startUnsafely(animation);
  }
  function startUnsafely(animation) {
    currentFrame.splice(findIndex3(currentFrame, (other) => other.priority > animation.priority), 0, animation);
  }
  function advance(dt) {
    const nextFrame = prevFrame;
    for (let i9 = 0; i9 < currentFrame.length; i9++) {
      const animation = currentFrame[i9];
      priority = animation.priority;
      if (!animation.idle) {
        willAdvance(animation);
        animation.advance(dt);
        if (!animation.idle) {
          nextFrame.push(animation);
        }
      }
    }
    priority = 0;
    prevFrame = currentFrame;
    prevFrame.length = 0;
    currentFrame = nextFrame;
    return currentFrame.length > 0;
  }
  function findIndex3(arr, test) {
    const index = arr.findIndex(test);
    return index < 0 ? arr.length : index;
  }
  var colors = {
    transparent: 0,
    aliceblue: 4042850303,
    antiquewhite: 4209760255,
    aqua: 16777215,
    aquamarine: 2147472639,
    azure: 4043309055,
    beige: 4126530815,
    bisque: 4293182719,
    black: 255,
    blanchedalmond: 4293643775,
    blue: 65535,
    blueviolet: 2318131967,
    brown: 2771004159,
    burlywood: 3736635391,
    burntsienna: 3934150143,
    cadetblue: 1604231423,
    chartreuse: 2147418367,
    chocolate: 3530104575,
    coral: 4286533887,
    cornflowerblue: 1687547391,
    cornsilk: 4294499583,
    crimson: 3692313855,
    cyan: 16777215,
    darkblue: 35839,
    darkcyan: 9145343,
    darkgoldenrod: 3095792639,
    darkgray: 2846468607,
    darkgreen: 6553855,
    darkgrey: 2846468607,
    darkkhaki: 3182914559,
    darkmagenta: 2332068863,
    darkolivegreen: 1433087999,
    darkorange: 4287365375,
    darkorchid: 2570243327,
    darkred: 2332033279,
    darksalmon: 3918953215,
    darkseagreen: 2411499519,
    darkslateblue: 1211993087,
    darkslategray: 793726975,
    darkslategrey: 793726975,
    darkturquoise: 13554175,
    darkviolet: 2483082239,
    deeppink: 4279538687,
    deepskyblue: 12582911,
    dimgray: 1768516095,
    dimgrey: 1768516095,
    dodgerblue: 512819199,
    firebrick: 2988581631,
    floralwhite: 4294635775,
    forestgreen: 579543807,
    fuchsia: 4278255615,
    gainsboro: 3705462015,
    ghostwhite: 4177068031,
    gold: 4292280575,
    goldenrod: 3668254975,
    gray: 2155905279,
    green: 8388863,
    greenyellow: 2919182335,
    grey: 2155905279,
    honeydew: 4043305215,
    hotpink: 4285117695,
    indianred: 3445382399,
    indigo: 1258324735,
    ivory: 4294963455,
    khaki: 4041641215,
    lavender: 3873897215,
    lavenderblush: 4293981695,
    lawngreen: 2096890111,
    lemonchiffon: 4294626815,
    lightblue: 2916673279,
    lightcoral: 4034953471,
    lightcyan: 3774873599,
    lightgoldenrodyellow: 4210742015,
    lightgray: 3553874943,
    lightgreen: 2431553791,
    lightgrey: 3553874943,
    lightpink: 4290167295,
    lightsalmon: 4288707327,
    lightseagreen: 548580095,
    lightskyblue: 2278488831,
    lightslategray: 2005441023,
    lightslategrey: 2005441023,
    lightsteelblue: 2965692159,
    lightyellow: 4294959359,
    lime: 16711935,
    limegreen: 852308735,
    linen: 4210091775,
    magenta: 4278255615,
    maroon: 2147483903,
    mediumaquamarine: 1724754687,
    mediumblue: 52735,
    mediumorchid: 3126187007,
    mediumpurple: 2473647103,
    mediumseagreen: 1018393087,
    mediumslateblue: 2070474495,
    mediumspringgreen: 16423679,
    mediumturquoise: 1221709055,
    mediumvioletred: 3340076543,
    midnightblue: 421097727,
    mintcream: 4127193855,
    mistyrose: 4293190143,
    moccasin: 4293178879,
    navajowhite: 4292783615,
    navy: 33023,
    oldlace: 4260751103,
    olive: 2155872511,
    olivedrab: 1804477439,
    orange: 4289003775,
    orangered: 4282712319,
    orchid: 3664828159,
    palegoldenrod: 4008225535,
    palegreen: 2566625535,
    paleturquoise: 2951671551,
    palevioletred: 3681588223,
    papayawhip: 4293907967,
    peachpuff: 4292524543,
    peru: 3448061951,
    pink: 4290825215,
    plum: 3718307327,
    powderblue: 2967529215,
    purple: 2147516671,
    rebeccapurple: 1714657791,
    red: 4278190335,
    rosybrown: 3163525119,
    royalblue: 1097458175,
    saddlebrown: 2336560127,
    salmon: 4202722047,
    sandybrown: 4104413439,
    seagreen: 780883967,
    seashell: 4294307583,
    sienna: 2689740287,
    silver: 3233857791,
    skyblue: 2278484991,
    slateblue: 1784335871,
    slategray: 1887473919,
    slategrey: 1887473919,
    snow: 4294638335,
    springgreen: 16744447,
    steelblue: 1182971135,
    tan: 3535047935,
    teal: 8421631,
    thistle: 3636451583,
    tomato: 4284696575,
    turquoise: 1088475391,
    violet: 4001558271,
    wheat: 4125012991,
    white: 4294967295,
    whitesmoke: 4126537215,
    yellow: 4294902015,
    yellowgreen: 2597139199
  };
  var NUMBER = "[-+]?\\d*\\.?\\d+";
  var PERCENTAGE = NUMBER + "%";
  function call(...parts) {
    return "\\(\\s*(" + parts.join(")\\s*,\\s*(") + ")\\s*\\)";
  }
  var rgb = new RegExp("rgb" + call(NUMBER, NUMBER, NUMBER));
  var rgba = new RegExp("rgba" + call(NUMBER, NUMBER, NUMBER, NUMBER));
  var hsl = new RegExp("hsl" + call(NUMBER, PERCENTAGE, PERCENTAGE));
  var hsla = new RegExp("hsla" + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER));
  var hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;
  var hex4 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;
  var hex6 = /^#([0-9a-fA-F]{6})$/;
  var hex8 = /^#([0-9a-fA-F]{8})$/;
  function normalizeColor(color2) {
    let match2;
    if (typeof color2 === "number") {
      return color2 >>> 0 === color2 && color2 >= 0 && color2 <= 4294967295 ? color2 : null;
    }
    if (match2 = hex6.exec(color2))
      return parseInt(match2[1] + "ff", 16) >>> 0;
    if (colors$1 && colors$1[color2] !== void 0) {
      return colors$1[color2];
    }
    if (match2 = rgb.exec(color2)) {
      return (parse255(match2[1]) << 24 | parse255(match2[2]) << 16 | parse255(match2[3]) << 8 | 255) >>> 0;
    }
    if (match2 = rgba.exec(color2)) {
      return (parse255(match2[1]) << 24 | parse255(match2[2]) << 16 | parse255(match2[3]) << 8 | parse1(match2[4])) >>> 0;
    }
    if (match2 = hex3.exec(color2)) {
      return parseInt(match2[1] + match2[1] + match2[2] + match2[2] + match2[3] + match2[3] + "ff", 16) >>> 0;
    }
    if (match2 = hex8.exec(color2))
      return parseInt(match2[1], 16) >>> 0;
    if (match2 = hex4.exec(color2)) {
      return parseInt(match2[1] + match2[1] + match2[2] + match2[2] + match2[3] + match2[3] + match2[4] + match2[4], 16) >>> 0;
    }
    if (match2 = hsl.exec(color2)) {
      return (hslToRgb(parse360(match2[1]), parsePercentage(match2[2]), parsePercentage(match2[3])) | 255) >>> 0;
    }
    if (match2 = hsla.exec(color2)) {
      return (hslToRgb(parse360(match2[1]), parsePercentage(match2[2]), parsePercentage(match2[3])) | parse1(match2[4])) >>> 0;
    }
    return null;
  }
  function hue2rgb(p6, q4, t13) {
    if (t13 < 0)
      t13 += 1;
    if (t13 > 1)
      t13 -= 1;
    if (t13 < 1 / 6)
      return p6 + (q4 - p6) * 6 * t13;
    if (t13 < 1 / 2)
      return q4;
    if (t13 < 2 / 3)
      return p6 + (q4 - p6) * (2 / 3 - t13) * 6;
    return p6;
  }
  function hslToRgb(h4, s4, l4) {
    const q4 = l4 < 0.5 ? l4 * (1 + s4) : l4 + s4 - l4 * s4;
    const p6 = 2 * l4 - q4;
    const r9 = hue2rgb(p6, q4, h4 + 1 / 3);
    const g6 = hue2rgb(p6, q4, h4);
    const b8 = hue2rgb(p6, q4, h4 - 1 / 3);
    return Math.round(r9 * 255) << 24 | Math.round(g6 * 255) << 16 | Math.round(b8 * 255) << 8;
  }
  function parse255(str) {
    const int = parseInt(str, 10);
    if (int < 0)
      return 0;
    if (int > 255)
      return 255;
    return int;
  }
  function parse360(str) {
    const int = parseFloat(str);
    return (int % 360 + 360) % 360 / 360;
  }
  function parse1(str) {
    const num = parseFloat(str);
    if (num < 0)
      return 0;
    if (num > 1)
      return 255;
    return Math.round(num * 255);
  }
  function parsePercentage(str) {
    const int = parseFloat(str);
    if (int < 0)
      return 0;
    if (int > 100)
      return 1;
    return int / 100;
  }
  function colorToRgba(input) {
    let int32Color = normalizeColor(input);
    if (int32Color === null)
      return input;
    int32Color = int32Color || 0;
    let r9 = (int32Color & 4278190080) >>> 24;
    let g6 = (int32Color & 16711680) >>> 16;
    let b8 = (int32Color & 65280) >>> 8;
    let a7 = (int32Color & 255) / 255;
    return `rgba(${r9}, ${g6}, ${b8}, ${a7})`;
  }
  var createInterpolator = (range, output, extrapolate) => {
    if (is2.fun(range)) {
      return range;
    }
    if (is2.arr(range)) {
      return createInterpolator({
        range,
        output,
        extrapolate
      });
    }
    if (is2.str(range.output[0])) {
      return createStringInterpolator$1(range);
    }
    const config2 = range;
    const outputRange = config2.output;
    const inputRange = config2.range || [0, 1];
    const extrapolateLeft = config2.extrapolateLeft || config2.extrapolate || "extend";
    const extrapolateRight = config2.extrapolateRight || config2.extrapolate || "extend";
    const easing = config2.easing || ((t13) => t13);
    return (input) => {
      const range2 = findRange(input, inputRange);
      return interpolate(input, inputRange[range2], inputRange[range2 + 1], outputRange[range2], outputRange[range2 + 1], easing, extrapolateLeft, extrapolateRight, config2.map);
    };
  };
  function interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight, map5) {
    let result = map5 ? map5(input) : input;
    if (result < inputMin) {
      if (extrapolateLeft === "identity")
        return result;
      else if (extrapolateLeft === "clamp")
        result = inputMin;
    }
    if (result > inputMax) {
      if (extrapolateRight === "identity")
        return result;
      else if (extrapolateRight === "clamp")
        result = inputMax;
    }
    if (outputMin === outputMax)
      return outputMin;
    if (inputMin === inputMax)
      return input <= inputMin ? outputMin : outputMax;
    if (inputMin === -Infinity)
      result = -result;
    else if (inputMax === Infinity)
      result = result - inputMin;
    else
      result = (result - inputMin) / (inputMax - inputMin);
    result = easing(result);
    if (outputMin === -Infinity)
      result = -result;
    else if (outputMax === Infinity)
      result = result + outputMin;
    else
      result = result * (outputMax - outputMin) + outputMin;
    return result;
  }
  function findRange(input, inputRange) {
    for (var i9 = 1; i9 < inputRange.length - 1; ++i9)
      if (inputRange[i9] >= input)
        break;
    return i9 - 1;
  }
  function _extends2() {
    _extends2 = Object.assign || function(target) {
      for (var i9 = 1; i9 < arguments.length; i9++) {
        var source = arguments[i9];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends2.apply(this, arguments);
  }
  var $get = Symbol.for("FluidValue.get");
  var $observers = Symbol.for("FluidValue.observers");
  var hasFluidValue = (arg) => Boolean(arg && arg[$get]);
  var getFluidValue = (arg) => arg && arg[$get] ? arg[$get]() : arg;
  var getFluidObservers = (target) => target[$observers] || null;
  function callFluidObserver(observer, event) {
    if (observer.eventObserved) {
      observer.eventObserved(event);
    } else {
      observer(event);
    }
  }
  function callFluidObservers(target, event) {
    let observers = target[$observers];
    if (observers) {
      observers.forEach((observer) => {
        callFluidObserver(observer, event);
      });
    }
  }
  var FluidValue = class {
    constructor(get5) {
      this[$get] = void 0;
      this[$observers] = void 0;
      if (!get5 && !(get5 = this.get)) {
        throw Error("Unknown getter");
      }
      setFluidGetter(this, get5);
    }
  };
  var setFluidGetter = (target, get5) => setHidden(target, $get, get5);
  function addFluidObserver(target, observer) {
    if (target[$get]) {
      let observers = target[$observers];
      if (!observers) {
        setHidden(target, $observers, observers = new Set());
      }
      if (!observers.has(observer)) {
        observers.add(observer);
        if (target.observerAdded) {
          target.observerAdded(observers.size, observer);
        }
      }
    }
    return observer;
  }
  function removeFluidObserver(target, observer) {
    let observers = target[$observers];
    if (observers && observers.has(observer)) {
      const count2 = observers.size - 1;
      if (count2) {
        observers.delete(observer);
      } else {
        target[$observers] = null;
      }
      if (target.observerRemoved) {
        target.observerRemoved(count2, observer);
      }
    }
  }
  var setHidden = (target, key, value) => Object.defineProperty(target, key, {
    value,
    writable: true,
    configurable: true
  });
  var numberRegex = /[+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var colorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d\.]+%?\))/gi;
  var unitRegex = new RegExp(`(${numberRegex.source})(%|[a-z]+)`, "i");
  var namedColorRegex;
  var rgbaRegex = /rgba\(([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+)\)/gi;
  var rgbaRound = (_5, p1, p22, p32, p42) => `rgba(${Math.round(p1)}, ${Math.round(p22)}, ${Math.round(p32)}, ${p42})`;
  var createStringInterpolator = (config2) => {
    if (!namedColorRegex)
      namedColorRegex = colors$1 ? new RegExp(`(${Object.keys(colors$1).join("|")})(?!\\w)`, "g") : /^\b$/;
    const output = config2.output.map((value) => getFluidValue(value).replace(colorRegex, colorToRgba).replace(namedColorRegex, colorToRgba));
    const keyframes = output.map((value) => value.match(numberRegex).map(Number));
    const outputRanges = keyframes[0].map((_5, i9) => keyframes.map((values) => {
      if (!(i9 in values)) {
        throw Error('The arity of each "output" value must be equal');
      }
      return values[i9];
    }));
    const interpolators = outputRanges.map((output2) => createInterpolator(_extends2({}, config2, {
      output: output2
    })));
    return (input) => {
      var _output$find;
      const missingUnit = !unitRegex.test(output[0]) && ((_output$find = output.find((value) => unitRegex.test(value))) == null ? void 0 : _output$find.replace(numberRegex, ""));
      let i9 = 0;
      return output[0].replace(numberRegex, () => `${interpolators[i9++](input)}${missingUnit || ""}`).replace(rgbaRegex, rgbaRound);
    };
  };
  var prefix2 = "react-spring: ";
  var once = (fn2) => {
    const func = fn2;
    let called = false;
    if (typeof func != "function") {
      throw new TypeError(`${prefix2}once requires a function parameter`);
    }
    return (...args) => {
      if (!called) {
        func(...args);
        called = true;
      }
    };
  };
  var warnInterpolate = once(console.warn);
  function deprecateInterpolate() {
    warnInterpolate(`${prefix2}The "interpolate" function is deprecated in v9 (use "to" instead)`);
  }
  var warnDirectCall = once(console.warn);
  function deprecateDirectCall() {
    warnDirectCall(`${prefix2}Directly calling start instead of using the api object is deprecated in v9 (use ".start" instead), this will be removed in later 0.X.0 versions`);
  }
  function isAnimatedString(value) {
    return is2.str(value) && (value[0] == "#" || /\d/.test(value) || value in (colors$1 || {}));
  }
  var useOnce = (effect) => (0, import_react46.useEffect)(effect, emptyDeps);
  var emptyDeps = [];
  function useForceUpdate() {
    const update3 = (0, import_react46.useState)()[1];
    const mounted = (0, import_react46.useState)(makeMountedRef)[0];
    useOnce(mounted.unmount);
    return () => {
      if (mounted.current) {
        update3({});
      }
    };
  }
  function makeMountedRef() {
    const mounted = {
      current: true,
      unmount: () => () => {
        mounted.current = false;
      }
    };
    return mounted;
  }
  function useMemoOne(getResult, inputs) {
    const [initial] = (0, import_react46.useState)(() => ({
      inputs,
      result: getResult()
    }));
    const committed = (0, import_react46.useRef)();
    const prevCache = committed.current;
    let cache2 = prevCache;
    if (cache2) {
      const useCache = Boolean(inputs && cache2.inputs && areInputsEqual(inputs, cache2.inputs));
      if (!useCache) {
        cache2 = {
          inputs,
          result: getResult()
        };
      }
    } else {
      cache2 = initial;
    }
    (0, import_react46.useEffect)(() => {
      committed.current = cache2;
      if (prevCache == initial) {
        initial.inputs = initial.result = void 0;
      }
    }, [cache2]);
    return cache2.result;
  }
  function areInputsEqual(next, prev) {
    if (next.length !== prev.length) {
      return false;
    }
    for (let i9 = 0; i9 < next.length; i9++) {
      if (next[i9] !== prev[i9]) {
        return false;
      }
    }
    return true;
  }
  function usePrev(value) {
    const prevRef = (0, import_react46.useRef)();
    (0, import_react46.useEffect)(() => {
      prevRef.current = value;
    });
    return prevRef.current;
  }
  var useLayoutEffect2 = typeof window !== "undefined" && window.document && window.document.createElement ? React38.useLayoutEffect : React38.useEffect;

  // ../../node_modules/@react-spring/core/dist/react-spring-core.esm.js
  var React40 = __toModule(require_react());
  var import_react48 = __toModule(require_react());

  // ../../node_modules/@react-spring/animated/dist/react-spring-animated.esm.js
  var React39 = __toModule(require_react());
  var import_react47 = __toModule(require_react());
  var $node = Symbol.for("Animated:node");
  var isAnimated = (value) => !!value && value[$node] === value;
  var getAnimated = (owner) => owner && owner[$node];
  var setAnimated = (owner, node) => defineHidden(owner, $node, node);
  var getPayload = (owner) => owner && owner[$node] && owner[$node].getPayload();
  var Animated = class {
    constructor() {
      this.payload = void 0;
      setAnimated(this, this);
    }
    getPayload() {
      return this.payload || [];
    }
  };
  var AnimatedValue = class extends Animated {
    constructor(_value) {
      super();
      this.done = true;
      this.elapsedTime = void 0;
      this.lastPosition = void 0;
      this.lastVelocity = void 0;
      this.v0 = void 0;
      this.durationProgress = 0;
      this._value = _value;
      if (is2.num(this._value)) {
        this.lastPosition = this._value;
      }
    }
    static create(value) {
      return new AnimatedValue(value);
    }
    getPayload() {
      return [this];
    }
    getValue() {
      return this._value;
    }
    setValue(value, step) {
      if (is2.num(value)) {
        this.lastPosition = value;
        if (step) {
          value = Math.round(value / step) * step;
          if (this.done) {
            this.lastPosition = value;
          }
        }
      }
      if (this._value === value) {
        return false;
      }
      this._value = value;
      return true;
    }
    reset() {
      const {
        done
      } = this;
      this.done = false;
      if (is2.num(this._value)) {
        this.elapsedTime = 0;
        this.durationProgress = 0;
        this.lastPosition = this._value;
        if (done)
          this.lastVelocity = null;
        this.v0 = null;
      }
    }
  };
  var AnimatedString = class extends AnimatedValue {
    constructor(value) {
      super(0);
      this._string = null;
      this._toString = void 0;
      this._toString = createInterpolator({
        output: [value, value]
      });
    }
    static create(value) {
      return new AnimatedString(value);
    }
    getValue() {
      let value = this._string;
      return value == null ? this._string = this._toString(this._value) : value;
    }
    setValue(value) {
      if (is2.str(value)) {
        if (value == this._string) {
          return false;
        }
        this._string = value;
        this._value = 1;
      } else if (super.setValue(value)) {
        this._string = null;
      } else {
        return false;
      }
      return true;
    }
    reset(goal) {
      if (goal) {
        this._toString = createInterpolator({
          output: [this.getValue(), goal]
        });
      }
      this._value = 0;
      super.reset();
    }
  };
  var TreeContext2 = {
    dependencies: null
  };
  var AnimatedObject = class extends Animated {
    constructor(source) {
      super();
      this.source = source;
      this.setValue(source);
    }
    getValue(animated2) {
      const values = {};
      eachProp(this.source, (source, key) => {
        if (isAnimated(source)) {
          values[key] = source.getValue(animated2);
        } else if (hasFluidValue(source)) {
          values[key] = getFluidValue(source);
        } else if (!animated2) {
          values[key] = source;
        }
      });
      return values;
    }
    setValue(source) {
      this.source = source;
      this.payload = this._makePayload(source);
    }
    reset() {
      if (this.payload) {
        each(this.payload, (node) => node.reset());
      }
    }
    _makePayload(source) {
      if (source) {
        const payload = new Set();
        eachProp(source, this._addToPayload, payload);
        return Array.from(payload);
      }
    }
    _addToPayload(source) {
      if (TreeContext2.dependencies && hasFluidValue(source)) {
        TreeContext2.dependencies.add(source);
      }
      const payload = getPayload(source);
      if (payload) {
        each(payload, (node) => this.add(node));
      }
    }
  };
  var AnimatedArray = class extends AnimatedObject {
    constructor(source) {
      super(source);
    }
    static create(source) {
      return new AnimatedArray(source);
    }
    getValue() {
      return this.source.map((node) => node.getValue());
    }
    setValue(source) {
      const payload = this.getPayload();
      if (source.length == payload.length) {
        return payload.map((node, i9) => node.setValue(source[i9])).some(Boolean);
      }
      super.setValue(source.map(makeAnimated));
      return true;
    }
  };
  function makeAnimated(value) {
    const nodeType = isAnimatedString(value) ? AnimatedString : AnimatedValue;
    return nodeType.create(value);
  }
  function getAnimatedType(value) {
    const parentNode = getAnimated(value);
    return parentNode ? parentNode.constructor : is2.arr(value) ? AnimatedArray : isAnimatedString(value) ? AnimatedString : AnimatedValue;
  }
  function _extends3() {
    _extends3 = Object.assign || function(target) {
      for (var i9 = 1; i9 < arguments.length; i9++) {
        var source = arguments[i9];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends3.apply(this, arguments);
  }
  var withAnimated = (Component, host2) => {
    const hasInstance = !is2.fun(Component) || Component.prototype && Component.prototype.isReactComponent;
    return (0, import_react47.forwardRef)((givenProps, givenRef) => {
      const instanceRef = (0, import_react47.useRef)(null);
      const ref = hasInstance && (0, import_react47.useCallback)((value) => {
        instanceRef.current = updateRef(givenRef, value);
      }, [givenRef]);
      const [props, deps] = getAnimatedState(givenProps, host2);
      const forceUpdate = useForceUpdate();
      const callback = () => {
        const instance = instanceRef.current;
        if (hasInstance && !instance) {
          return;
        }
        const didUpdate = instance ? host2.applyAnimatedValues(instance, props.getValue(true)) : false;
        if (didUpdate === false) {
          forceUpdate();
        }
      };
      const observer = new PropsObserver(callback, deps);
      const observerRef = (0, import_react47.useRef)();
      useLayoutEffect2(() => {
        const lastObserver = observerRef.current;
        observerRef.current = observer;
        each(deps, (dep) => addFluidObserver(dep, observer));
        if (lastObserver) {
          each(lastObserver.deps, (dep) => removeFluidObserver(dep, lastObserver));
          raf.cancel(lastObserver.update);
        }
      });
      (0, import_react47.useEffect)(callback, []);
      useOnce(() => () => {
        const observer2 = observerRef.current;
        each(observer2.deps, (dep) => removeFluidObserver(dep, observer2));
      });
      const usedProps = host2.getComponentProps(props.getValue());
      return React39.createElement(Component, _extends3({}, usedProps, {
        ref
      }));
    });
  };
  var PropsObserver = class {
    constructor(update3, deps) {
      this.update = update3;
      this.deps = deps;
    }
    eventObserved(event) {
      if (event.type == "change") {
        raf.write(this.update);
      }
    }
  };
  function getAnimatedState(props, host2) {
    const dependencies = new Set();
    TreeContext2.dependencies = dependencies;
    if (props.style)
      props = _extends3({}, props, {
        style: host2.createAnimatedStyle(props.style)
      });
    props = new AnimatedObject(props);
    TreeContext2.dependencies = null;
    return [props, dependencies];
  }
  function updateRef(ref, value) {
    if (ref) {
      if (is2.fun(ref))
        ref(value);
      else
        ref.current = value;
    }
    return value;
  }
  var cacheKey = Symbol.for("AnimatedComponent");
  var createHost = (components, {
    applyAnimatedValues: _applyAnimatedValues = () => false,
    createAnimatedStyle: _createAnimatedStyle = (style) => new AnimatedObject(style),
    getComponentProps: _getComponentProps = (props) => props
  } = {}) => {
    const hostConfig = {
      applyAnimatedValues: _applyAnimatedValues,
      createAnimatedStyle: _createAnimatedStyle,
      getComponentProps: _getComponentProps
    };
    const animated2 = (Component) => {
      const displayName = getDisplayName(Component) || "Anonymous";
      if (is2.str(Component)) {
        Component = animated2[Component] || (animated2[Component] = withAnimated(Component, hostConfig));
      } else {
        Component = Component[cacheKey] || (Component[cacheKey] = withAnimated(Component, hostConfig));
      }
      Component.displayName = `Animated(${displayName})`;
      return Component;
    };
    eachProp(components, (Component, key) => {
      if (is2.arr(components)) {
        key = getDisplayName(Component);
      }
      animated2[key] = animated2(Component);
    });
    return {
      animated: animated2
    };
  };
  var getDisplayName = (arg) => is2.str(arg) ? arg : arg && is2.str(arg.displayName) ? arg.displayName : is2.fun(arg) && arg.name || null;

  // ../../node_modules/@react-spring/core/dist/react-spring-core.esm.js
  function _extends4() {
    _extends4 = Object.assign || function(target) {
      for (var i9 = 1; i9 < arguments.length; i9++) {
        var source = arguments[i9];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    return _extends4.apply(this, arguments);
  }
  function callProp(value, ...args) {
    return is2.fun(value) ? value(...args) : value;
  }
  var matchProp = (value, key) => value === true || !!(key && value && (is2.fun(value) ? value(key) : toArray(value).includes(key)));
  var resolveProp = (prop, key) => is2.obj(prop) ? key && prop[key] : prop;
  var getDefaultProp = (props, key) => props.default === true ? props[key] : props.default ? props.default[key] : void 0;
  var noopTransform = (value) => value;
  var getDefaultProps = (props, transform = noopTransform) => {
    let keys = DEFAULT_PROPS;
    if (props.default && props.default !== true) {
      props = props.default;
      keys = Object.keys(props);
    }
    const defaults2 = {};
    for (const key of keys) {
      const value = transform(props[key], key);
      if (!is2.und(value)) {
        defaults2[key] = value;
      }
    }
    return defaults2;
  };
  var DEFAULT_PROPS = ["config", "onProps", "onStart", "onChange", "onPause", "onResume", "onRest"];
  var RESERVED_PROPS = {
    config: 1,
    from: 1,
    to: 1,
    ref: 1,
    loop: 1,
    reset: 1,
    pause: 1,
    cancel: 1,
    reverse: 1,
    immediate: 1,
    default: 1,
    delay: 1,
    onProps: 1,
    onStart: 1,
    onChange: 1,
    onPause: 1,
    onResume: 1,
    onRest: 1,
    onResolve: 1,
    items: 1,
    trail: 1,
    sort: 1,
    expires: 1,
    initial: 1,
    enter: 1,
    update: 1,
    leave: 1,
    children: 1,
    onDestroyed: 1,
    keys: 1,
    callId: 1,
    parentId: 1
  };
  function getForwardProps(props) {
    const forward = {};
    let count2 = 0;
    eachProp(props, (value, prop) => {
      if (!RESERVED_PROPS[prop]) {
        forward[prop] = value;
        count2++;
      }
    });
    if (count2) {
      return forward;
    }
  }
  function inferTo(props) {
    const to3 = getForwardProps(props);
    if (to3) {
      const out = {
        to: to3
      };
      eachProp(props, (val, key) => key in to3 || (out[key] = val));
      return out;
    }
    return _extends4({}, props);
  }
  function computeGoal(value) {
    value = getFluidValue(value);
    return is2.arr(value) ? value.map(computeGoal) : isAnimatedString(value) ? globals.createStringInterpolator({
      range: [0, 1],
      output: [value, value]
    })(1) : value;
  }
  function hasProps(props) {
    for (const _5 in props)
      return true;
    return false;
  }
  function isAsyncTo(to3) {
    return is2.fun(to3) || is2.arr(to3) && is2.obj(to3[0]);
  }
  function detachRefs(ctrl, ref) {
    var _ctrl$ref;
    (_ctrl$ref = ctrl.ref) == null ? void 0 : _ctrl$ref.delete(ctrl);
    ref == null ? void 0 : ref.delete(ctrl);
  }
  function replaceRef(ctrl, ref) {
    if (ref && ctrl.ref !== ref) {
      var _ctrl$ref2;
      (_ctrl$ref2 = ctrl.ref) == null ? void 0 : _ctrl$ref2.delete(ctrl);
      ref.add(ctrl);
      ctrl.ref = ref;
    }
  }
  var config = {
    default: {
      tension: 170,
      friction: 26
    },
    gentle: {
      tension: 120,
      friction: 14
    },
    wobbly: {
      tension: 180,
      friction: 12
    },
    stiff: {
      tension: 210,
      friction: 20
    },
    slow: {
      tension: 280,
      friction: 60
    },
    molasses: {
      tension: 280,
      friction: 120
    }
  };
  var linear = (t13) => t13;
  var defaults = _extends4({}, config.default, {
    mass: 1,
    damping: 1,
    easing: linear,
    clamp: false
  });
  var AnimationConfig = class {
    constructor() {
      this.tension = void 0;
      this.friction = void 0;
      this.frequency = void 0;
      this.damping = void 0;
      this.mass = void 0;
      this.velocity = 0;
      this.restVelocity = void 0;
      this.precision = void 0;
      this.progress = void 0;
      this.duration = void 0;
      this.easing = void 0;
      this.clamp = void 0;
      this.bounce = void 0;
      this.decay = void 0;
      this.round = void 0;
      Object.assign(this, defaults);
    }
  };
  function mergeConfig(config2, newConfig, defaultConfig) {
    if (defaultConfig) {
      defaultConfig = _extends4({}, defaultConfig);
      sanitizeConfig(defaultConfig, newConfig);
      newConfig = _extends4({}, defaultConfig, newConfig);
    }
    sanitizeConfig(config2, newConfig);
    Object.assign(config2, newConfig);
    for (const key in defaults) {
      if (config2[key] == null) {
        config2[key] = defaults[key];
      }
    }
    let {
      mass,
      frequency,
      damping
    } = config2;
    if (!is2.und(frequency)) {
      if (frequency < 0.01)
        frequency = 0.01;
      if (damping < 0)
        damping = 0;
      config2.tension = Math.pow(2 * Math.PI / frequency, 2) * mass;
      config2.friction = 4 * Math.PI * damping * mass / frequency;
    }
    return config2;
  }
  function sanitizeConfig(config2, props) {
    if (!is2.und(props.decay)) {
      config2.duration = void 0;
    } else {
      const isTensionConfig = !is2.und(props.tension) || !is2.und(props.friction);
      if (isTensionConfig || !is2.und(props.frequency) || !is2.und(props.damping) || !is2.und(props.mass)) {
        config2.duration = void 0;
        config2.decay = void 0;
      }
      if (isTensionConfig) {
        config2.frequency = void 0;
      }
    }
  }
  var emptyArray4 = [];
  var Animation = class {
    constructor() {
      this.changed = false;
      this.values = emptyArray4;
      this.toValues = null;
      this.fromValues = emptyArray4;
      this.to = void 0;
      this.from = void 0;
      this.config = new AnimationConfig();
      this.immediate = false;
    }
  };
  function scheduleProps(callId, {
    key,
    props,
    defaultProps,
    state,
    actions
  }) {
    return new Promise((resolve, reject) => {
      var _props$cancel;
      let delay;
      let timeout;
      let cancel = matchProp((_props$cancel = props.cancel) != null ? _props$cancel : defaultProps == null ? void 0 : defaultProps.cancel, key);
      if (cancel) {
        onStart();
      } else {
        if (!is2.und(props.pause)) {
          state.paused = matchProp(props.pause, key);
        }
        let pause = defaultProps == null ? void 0 : defaultProps.pause;
        if (pause !== true) {
          pause = state.paused || matchProp(pause, key);
        }
        delay = callProp(props.delay || 0, key);
        if (pause) {
          state.resumeQueue.add(onResume);
          actions.pause();
        } else {
          actions.resume();
          onResume();
        }
      }
      function onPause() {
        state.resumeQueue.add(onResume);
        state.timeouts.delete(timeout);
        timeout.cancel();
        delay = timeout.time - raf.now();
      }
      function onResume() {
        if (delay > 0 && !globals.skipAnimation) {
          timeout = raf.setTimeout(onStart, delay);
          state.pauseQueue.add(onPause);
          state.timeouts.add(timeout);
        } else {
          onStart();
        }
      }
      function onStart() {
        state.pauseQueue.delete(onPause);
        state.timeouts.delete(timeout);
        if (callId <= (state.cancelId || 0)) {
          cancel = true;
        }
        try {
          actions.start(_extends4({}, props, {
            callId,
            cancel
          }), resolve);
        } catch (err) {
          reject(err);
        }
      }
    });
  }
  var getCombinedResult = (target, results) => results.length == 1 ? results[0] : results.some((result) => result.cancelled) ? getCancelledResult(target.get()) : results.every((result) => result.noop) ? getNoopResult(target.get()) : getFinishedResult(target.get(), results.every((result) => result.finished));
  var getNoopResult = (value) => ({
    value,
    noop: true,
    finished: true,
    cancelled: false
  });
  var getFinishedResult = (value, finished, cancelled = false) => ({
    value,
    finished,
    cancelled
  });
  var getCancelledResult = (value) => ({
    value,
    cancelled: true,
    finished: false
  });
  function runAsync(to3, props, state, target) {
    const {
      callId,
      parentId,
      onRest
    } = props;
    const {
      asyncTo: prevTo,
      promise: prevPromise
    } = state;
    if (!parentId && to3 === prevTo && !props.reset) {
      return prevPromise;
    }
    return state.promise = (async () => {
      state.asyncId = callId;
      state.asyncTo = to3;
      const defaultProps = getDefaultProps(props, (value, key) => key === "onRest" ? void 0 : value);
      let preventBail;
      let bail;
      const bailPromise = new Promise((resolve, reject) => (preventBail = resolve, bail = reject));
      const bailIfEnded = (bailSignal) => {
        const bailResult = callId <= (state.cancelId || 0) && getCancelledResult(target) || callId !== state.asyncId && getFinishedResult(target, false);
        if (bailResult) {
          bailSignal.result = bailResult;
          bail(bailSignal);
          throw bailSignal;
        }
      };
      const animate = (arg1, arg2) => {
        const bailSignal = new BailSignal();
        const skipAnimationSignal = new SkipAniamtionSignal();
        return (async () => {
          if (globals.skipAnimation) {
            stopAsync(state);
            skipAnimationSignal.result = getFinishedResult(target, false);
            bail(skipAnimationSignal);
            throw skipAnimationSignal;
          }
          bailIfEnded(bailSignal);
          const props2 = is2.obj(arg1) ? _extends4({}, arg1) : _extends4({}, arg2, {
            to: arg1
          });
          props2.parentId = callId;
          eachProp(defaultProps, (value, key) => {
            if (is2.und(props2[key])) {
              props2[key] = value;
            }
          });
          const result2 = await target.start(props2);
          bailIfEnded(bailSignal);
          if (state.paused) {
            await new Promise((resume) => {
              state.resumeQueue.add(resume);
            });
          }
          return result2;
        })();
      };
      let result;
      if (globals.skipAnimation) {
        stopAsync(state);
        return getFinishedResult(target, false);
      }
      try {
        let animating;
        if (is2.arr(to3)) {
          animating = (async (queue) => {
            for (const props2 of queue) {
              await animate(props2);
            }
          })(to3);
        } else {
          animating = Promise.resolve(to3(animate, target.stop.bind(target)));
        }
        await Promise.all([animating.then(preventBail), bailPromise]);
        result = getFinishedResult(target.get(), true, false);
      } catch (err) {
        if (err instanceof BailSignal) {
          result = err.result;
        } else if (err instanceof SkipAniamtionSignal) {
          result = err.result;
        } else {
          throw err;
        }
      } finally {
        if (callId == state.asyncId) {
          state.asyncId = parentId;
          state.asyncTo = parentId ? prevTo : void 0;
          state.promise = parentId ? prevPromise : void 0;
        }
      }
      if (is2.fun(onRest)) {
        raf.batchedUpdates(() => {
          onRest(result, target, target.item);
        });
      }
      return result;
    })();
  }
  function stopAsync(state, cancelId) {
    flush(state.timeouts, (t13) => t13.cancel());
    state.pauseQueue.clear();
    state.resumeQueue.clear();
    state.asyncId = state.asyncTo = state.promise = void 0;
    if (cancelId)
      state.cancelId = cancelId;
  }
  var BailSignal = class extends Error {
    constructor() {
      super("An async animation has been interrupted. You see this error because you forgot to use `await` or `.catch(...)` on its returned promise.");
      this.result = void 0;
    }
  };
  var SkipAniamtionSignal = class extends Error {
    constructor() {
      super("SkipAnimationSignal");
      this.result = void 0;
    }
  };
  var isFrameValue = (value) => value instanceof FrameValue;
  var nextId$1 = 1;
  var FrameValue = class extends FluidValue {
    constructor(...args) {
      super(...args);
      this.id = nextId$1++;
      this.key = void 0;
      this._priority = 0;
    }
    get priority() {
      return this._priority;
    }
    set priority(priority2) {
      if (this._priority != priority2) {
        this._priority = priority2;
        this._onPriorityChange(priority2);
      }
    }
    get() {
      const node = getAnimated(this);
      return node && node.getValue();
    }
    to(...args) {
      return globals.to(this, args);
    }
    interpolate(...args) {
      deprecateInterpolate();
      return globals.to(this, args);
    }
    toJSON() {
      return this.get();
    }
    observerAdded(count2) {
      if (count2 == 1)
        this._attach();
    }
    observerRemoved(count2) {
      if (count2 == 0)
        this._detach();
    }
    _attach() {
    }
    _detach() {
    }
    _onChange(value, idle = false) {
      callFluidObservers(this, {
        type: "change",
        parent: this,
        value,
        idle
      });
    }
    _onPriorityChange(priority2) {
      if (!this.idle) {
        frameLoop.sort(this);
      }
      callFluidObservers(this, {
        type: "priority",
        parent: this,
        priority: priority2
      });
    }
  };
  var $P = Symbol.for("SpringPhase");
  var HAS_ANIMATED = 1;
  var IS_ANIMATING = 2;
  var IS_PAUSED = 4;
  var hasAnimated = (target) => (target[$P] & HAS_ANIMATED) > 0;
  var isAnimating = (target) => (target[$P] & IS_ANIMATING) > 0;
  var isPaused = (target) => (target[$P] & IS_PAUSED) > 0;
  var setActiveBit = (target, active) => active ? target[$P] |= IS_ANIMATING | HAS_ANIMATED : target[$P] &= ~IS_ANIMATING;
  var setPausedBit = (target, paused) => paused ? target[$P] |= IS_PAUSED : target[$P] &= ~IS_PAUSED;
  var SpringValue = class extends FrameValue {
    constructor(arg1, arg2) {
      super();
      this.key = void 0;
      this.animation = new Animation();
      this.queue = void 0;
      this.defaultProps = {};
      this._state = {
        paused: false,
        pauseQueue: new Set(),
        resumeQueue: new Set(),
        timeouts: new Set()
      };
      this._pendingCalls = new Set();
      this._lastCallId = 0;
      this._lastToId = 0;
      this._memoizedDuration = 0;
      if (!is2.und(arg1) || !is2.und(arg2)) {
        const props = is2.obj(arg1) ? _extends4({}, arg1) : _extends4({}, arg2, {
          from: arg1
        });
        if (is2.und(props.default)) {
          props.default = true;
        }
        this.start(props);
      }
    }
    get idle() {
      return !(isAnimating(this) || this._state.asyncTo) || isPaused(this);
    }
    get goal() {
      return getFluidValue(this.animation.to);
    }
    get velocity() {
      const node = getAnimated(this);
      return node instanceof AnimatedValue ? node.lastVelocity || 0 : node.getPayload().map((node2) => node2.lastVelocity || 0);
    }
    get hasAnimated() {
      return hasAnimated(this);
    }
    get isAnimating() {
      return isAnimating(this);
    }
    get isPaused() {
      return isPaused(this);
    }
    advance(dt) {
      let idle = true;
      let changed = false;
      const anim = this.animation;
      let {
        config: config2,
        toValues
      } = anim;
      const payload = getPayload(anim.to);
      if (!payload && hasFluidValue(anim.to)) {
        toValues = toArray(getFluidValue(anim.to));
      }
      anim.values.forEach((node2, i9) => {
        if (node2.done)
          return;
        const to3 = node2.constructor == AnimatedString ? 1 : payload ? payload[i9].lastPosition : toValues[i9];
        let finished = anim.immediate;
        let position = to3;
        if (!finished) {
          position = node2.lastPosition;
          if (config2.tension <= 0) {
            node2.done = true;
            return;
          }
          let elapsed = node2.elapsedTime += dt;
          const from = anim.fromValues[i9];
          const v0 = node2.v0 != null ? node2.v0 : node2.v0 = is2.arr(config2.velocity) ? config2.velocity[i9] : config2.velocity;
          let velocity;
          if (!is2.und(config2.duration)) {
            let p6 = 1;
            if (config2.duration > 0) {
              if (this._memoizedDuration !== config2.duration) {
                this._memoizedDuration = config2.duration;
                if (node2.durationProgress > 0) {
                  node2.elapsedTime = config2.duration * node2.durationProgress;
                  elapsed = node2.elapsedTime += dt;
                }
              }
              p6 = (config2.progress || 0) + elapsed / this._memoizedDuration;
              p6 = p6 > 1 ? 1 : p6 < 0 ? 0 : p6;
              node2.durationProgress = p6;
            }
            position = from + config2.easing(p6) * (to3 - from);
            velocity = (position - node2.lastPosition) / dt;
            finished = p6 == 1;
          } else if (config2.decay) {
            const decay = config2.decay === true ? 0.998 : config2.decay;
            const e15 = Math.exp(-(1 - decay) * elapsed);
            position = from + v0 / (1 - decay) * (1 - e15);
            finished = Math.abs(node2.lastPosition - position) < 0.1;
            velocity = v0 * e15;
          } else {
            velocity = node2.lastVelocity == null ? v0 : node2.lastVelocity;
            const precision = config2.precision || (from == to3 ? 5e-3 : Math.min(1, Math.abs(to3 - from) * 1e-3));
            const restVelocity = config2.restVelocity || precision / 10;
            const bounceFactor = config2.clamp ? 0 : config2.bounce;
            const canBounce = !is2.und(bounceFactor);
            const isGrowing = from == to3 ? node2.v0 > 0 : from < to3;
            let isMoving;
            let isBouncing = false;
            const step = 1;
            const numSteps = Math.ceil(dt / step);
            for (let n11 = 0; n11 < numSteps; ++n11) {
              isMoving = Math.abs(velocity) > restVelocity;
              if (!isMoving) {
                finished = Math.abs(to3 - position) <= precision;
                if (finished) {
                  break;
                }
              }
              if (canBounce) {
                isBouncing = position == to3 || position > to3 == isGrowing;
                if (isBouncing) {
                  velocity = -velocity * bounceFactor;
                  position = to3;
                }
              }
              const springForce = -config2.tension * 1e-6 * (position - to3);
              const dampingForce = -config2.friction * 1e-3 * velocity;
              const acceleration = (springForce + dampingForce) / config2.mass;
              velocity = velocity + acceleration * step;
              position = position + velocity * step;
            }
          }
          node2.lastVelocity = velocity;
          if (Number.isNaN(position)) {
            console.warn(`Got NaN while animating:`, this);
            finished = true;
          }
        }
        if (payload && !payload[i9].done) {
          finished = false;
        }
        if (finished) {
          node2.done = true;
        } else {
          idle = false;
        }
        if (node2.setValue(position, config2.round)) {
          changed = true;
        }
      });
      const node = getAnimated(this);
      const currVal = node.getValue();
      if (idle) {
        const finalVal = getFluidValue(anim.to);
        if ((currVal !== finalVal || changed) && !config2.decay) {
          node.setValue(finalVal);
          this._onChange(finalVal);
        } else if (changed && config2.decay) {
          this._onChange(currVal);
        }
        this._stop();
      } else if (changed) {
        this._onChange(currVal);
      }
    }
    set(value) {
      raf.batchedUpdates(() => {
        this._stop();
        this._focus(value);
        this._set(value);
      });
      return this;
    }
    pause() {
      this._update({
        pause: true
      });
    }
    resume() {
      this._update({
        pause: false
      });
    }
    finish() {
      if (isAnimating(this)) {
        const {
          to: to3,
          config: config2
        } = this.animation;
        raf.batchedUpdates(() => {
          this._onStart();
          if (!config2.decay) {
            this._set(to3, false);
          }
          this._stop();
        });
      }
      return this;
    }
    update(props) {
      const queue = this.queue || (this.queue = []);
      queue.push(props);
      return this;
    }
    start(to3, arg2) {
      let queue;
      if (!is2.und(to3)) {
        queue = [is2.obj(to3) ? to3 : _extends4({}, arg2, {
          to: to3
        })];
      } else {
        queue = this.queue || [];
        this.queue = [];
      }
      return Promise.all(queue.map((props) => this._update(props))).then((results) => getCombinedResult(this, results));
    }
    stop(cancel) {
      const {
        to: to3
      } = this.animation;
      this._focus(this.get());
      stopAsync(this._state, cancel && this._lastCallId);
      raf.batchedUpdates(() => this._stop(to3, cancel));
      return this;
    }
    reset() {
      this._update({
        reset: true
      });
    }
    eventObserved(event) {
      if (event.type == "change") {
        this._start();
      } else if (event.type == "priority") {
        this.priority = event.priority + 1;
      }
    }
    _prepareNode(props) {
      const key = this.key || "";
      let {
        to: to3,
        from
      } = props;
      to3 = is2.obj(to3) ? to3[key] : to3;
      if (to3 == null || isAsyncTo(to3)) {
        to3 = void 0;
      }
      from = is2.obj(from) ? from[key] : from;
      if (from == null) {
        from = void 0;
      }
      const range = {
        to: to3,
        from
      };
      if (!hasAnimated(this)) {
        if (props.reverse)
          [to3, from] = [from, to3];
        from = getFluidValue(from);
        if (!is2.und(from)) {
          this._set(from);
        } else if (!getAnimated(this)) {
          this._set(to3);
        }
      }
      return range;
    }
    _update(_ref, isLoop) {
      let props = _extends4({}, _ref);
      const {
        key,
        defaultProps
      } = this;
      if (props.default)
        Object.assign(defaultProps, getDefaultProps(props, (value, prop) => /^on/.test(prop) ? resolveProp(value, key) : value));
      mergeActiveFn(this, props, "onProps");
      sendEvent(this, "onProps", props, this);
      const range = this._prepareNode(props);
      if (Object.isFrozen(this)) {
        throw Error("Cannot animate a `SpringValue` object that is frozen. Did you forget to pass your component to `animated(...)` before animating its props?");
      }
      const state = this._state;
      return scheduleProps(++this._lastCallId, {
        key,
        props,
        defaultProps,
        state,
        actions: {
          pause: () => {
            if (!isPaused(this)) {
              setPausedBit(this, true);
              flushCalls(state.pauseQueue);
              sendEvent(this, "onPause", getFinishedResult(this, checkFinished(this, this.animation.to)), this);
            }
          },
          resume: () => {
            if (isPaused(this)) {
              setPausedBit(this, false);
              if (isAnimating(this)) {
                this._resume();
              }
              flushCalls(state.resumeQueue);
              sendEvent(this, "onResume", getFinishedResult(this, checkFinished(this, this.animation.to)), this);
            }
          },
          start: this._merge.bind(this, range)
        }
      }).then((result) => {
        if (props.loop && result.finished && !(isLoop && result.noop)) {
          const nextProps = createLoopUpdate(props);
          if (nextProps) {
            return this._update(nextProps, true);
          }
        }
        return result;
      });
    }
    _merge(range, props, resolve) {
      if (props.cancel) {
        this.stop(true);
        return resolve(getCancelledResult(this));
      }
      const hasToProp = !is2.und(range.to);
      const hasFromProp = !is2.und(range.from);
      if (hasToProp || hasFromProp) {
        if (props.callId > this._lastToId) {
          this._lastToId = props.callId;
        } else {
          return resolve(getCancelledResult(this));
        }
      }
      const {
        key,
        defaultProps,
        animation: anim
      } = this;
      const {
        to: prevTo,
        from: prevFrom
      } = anim;
      let {
        to: to3 = prevTo,
        from = prevFrom
      } = range;
      if (hasFromProp && !hasToProp && (!props.default || is2.und(to3))) {
        to3 = from;
      }
      if (props.reverse)
        [to3, from] = [from, to3];
      const hasFromChanged = !isEqual(from, prevFrom);
      if (hasFromChanged) {
        anim.from = from;
      }
      from = getFluidValue(from);
      const hasToChanged = !isEqual(to3, prevTo);
      if (hasToChanged) {
        this._focus(to3);
      }
      const hasAsyncTo = isAsyncTo(props.to);
      const {
        config: config2
      } = anim;
      const {
        decay,
        velocity
      } = config2;
      if (hasToProp || hasFromProp) {
        config2.velocity = 0;
      }
      if (props.config && !hasAsyncTo) {
        mergeConfig(config2, callProp(props.config, key), props.config !== defaultProps.config ? callProp(defaultProps.config, key) : void 0);
      }
      let node = getAnimated(this);
      if (!node || is2.und(to3)) {
        return resolve(getFinishedResult(this, true));
      }
      const reset = is2.und(props.reset) ? hasFromProp && !props.default : !is2.und(from) && matchProp(props.reset, key);
      const value = reset ? from : this.get();
      const goal = computeGoal(to3);
      const isAnimatable = is2.num(goal) || is2.arr(goal) || isAnimatedString(goal);
      const immediate = !hasAsyncTo && (!isAnimatable || matchProp(defaultProps.immediate || props.immediate, key));
      if (hasToChanged) {
        const nodeType = getAnimatedType(to3);
        if (nodeType !== node.constructor) {
          if (immediate) {
            node = this._set(goal);
          } else
            throw Error(`Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the "to" prop suggests`);
        }
      }
      const goalType = node.constructor;
      let started = hasFluidValue(to3);
      let finished = false;
      if (!started) {
        const hasValueChanged = reset || !hasAnimated(this) && hasFromChanged;
        if (hasToChanged || hasValueChanged) {
          finished = isEqual(computeGoal(value), goal);
          started = !finished;
        }
        if (!isEqual(anim.immediate, immediate) && !immediate || !isEqual(config2.decay, decay) || !isEqual(config2.velocity, velocity)) {
          started = true;
        }
      }
      if (finished && isAnimating(this)) {
        if (anim.changed && !reset) {
          started = true;
        } else if (!started) {
          this._stop(prevTo);
        }
      }
      if (!hasAsyncTo) {
        if (started || hasFluidValue(prevTo)) {
          anim.values = node.getPayload();
          anim.toValues = hasFluidValue(to3) ? null : goalType == AnimatedString ? [1] : toArray(goal);
        }
        if (anim.immediate != immediate) {
          anim.immediate = immediate;
          if (!immediate && !reset) {
            this._set(prevTo);
          }
        }
        if (started) {
          const {
            onRest
          } = anim;
          each(ACTIVE_EVENTS, (type2) => mergeActiveFn(this, props, type2));
          const result = getFinishedResult(this, checkFinished(this, prevTo));
          flushCalls(this._pendingCalls, result);
          this._pendingCalls.add(resolve);
          if (anim.changed)
            raf.batchedUpdates(() => {
              anim.changed = !reset;
              onRest == null ? void 0 : onRest(result, this);
              if (reset) {
                callProp(defaultProps.onRest, result);
              } else {
                anim.onStart == null ? void 0 : anim.onStart(result, this);
              }
            });
        }
      }
      if (reset) {
        this._set(value);
      }
      if (hasAsyncTo) {
        resolve(runAsync(props.to, props, this._state, this));
      } else if (started) {
        this._start();
      } else if (isAnimating(this) && !hasToChanged) {
        this._pendingCalls.add(resolve);
      } else {
        resolve(getNoopResult(value));
      }
    }
    _focus(value) {
      const anim = this.animation;
      if (value !== anim.to) {
        if (getFluidObservers(this)) {
          this._detach();
        }
        anim.to = value;
        if (getFluidObservers(this)) {
          this._attach();
        }
      }
    }
    _attach() {
      let priority2 = 0;
      const {
        to: to3
      } = this.animation;
      if (hasFluidValue(to3)) {
        addFluidObserver(to3, this);
        if (isFrameValue(to3)) {
          priority2 = to3.priority + 1;
        }
      }
      this.priority = priority2;
    }
    _detach() {
      const {
        to: to3
      } = this.animation;
      if (hasFluidValue(to3)) {
        removeFluidObserver(to3, this);
      }
    }
    _set(arg, idle = true) {
      const value = getFluidValue(arg);
      if (!is2.und(value)) {
        const oldNode = getAnimated(this);
        if (!oldNode || !isEqual(value, oldNode.getValue())) {
          const nodeType = getAnimatedType(value);
          if (!oldNode || oldNode.constructor != nodeType) {
            setAnimated(this, nodeType.create(value));
          } else {
            oldNode.setValue(value);
          }
          if (oldNode) {
            raf.batchedUpdates(() => {
              this._onChange(value, idle);
            });
          }
        }
      }
      return getAnimated(this);
    }
    _onStart() {
      const anim = this.animation;
      if (!anim.changed) {
        anim.changed = true;
        sendEvent(this, "onStart", getFinishedResult(this, checkFinished(this, anim.to)), this);
      }
    }
    _onChange(value, idle) {
      if (!idle) {
        this._onStart();
        callProp(this.animation.onChange, value, this);
      }
      callProp(this.defaultProps.onChange, value, this);
      super._onChange(value, idle);
    }
    _start() {
      const anim = this.animation;
      getAnimated(this).reset(getFluidValue(anim.to));
      if (!anim.immediate) {
        anim.fromValues = anim.values.map((node) => node.lastPosition);
      }
      if (!isAnimating(this)) {
        setActiveBit(this, true);
        if (!isPaused(this)) {
          this._resume();
        }
      }
    }
    _resume() {
      if (globals.skipAnimation) {
        this.finish();
      } else {
        frameLoop.start(this);
      }
    }
    _stop(goal, cancel) {
      if (isAnimating(this)) {
        setActiveBit(this, false);
        const anim = this.animation;
        each(anim.values, (node) => {
          node.done = true;
        });
        if (anim.toValues) {
          anim.onChange = anim.onPause = anim.onResume = void 0;
        }
        callFluidObservers(this, {
          type: "idle",
          parent: this
        });
        const result = cancel ? getCancelledResult(this.get()) : getFinishedResult(this.get(), checkFinished(this, goal != null ? goal : anim.to));
        flushCalls(this._pendingCalls, result);
        if (anim.changed) {
          anim.changed = false;
          sendEvent(this, "onRest", result, this);
        }
      }
    }
  };
  function checkFinished(target, to3) {
    const goal = computeGoal(to3);
    const value = computeGoal(target.get());
    return isEqual(value, goal);
  }
  function createLoopUpdate(props, loop2 = props.loop, to3 = props.to) {
    let loopRet = callProp(loop2);
    if (loopRet) {
      const overrides = loopRet !== true && inferTo(loopRet);
      const reverse = (overrides || props).reverse;
      const reset = !overrides || overrides.reset;
      return createUpdate(_extends4({}, props, {
        loop: loop2,
        default: false,
        pause: void 0,
        to: !reverse || isAsyncTo(to3) ? to3 : void 0,
        from: reset ? props.from : void 0,
        reset
      }, overrides));
    }
  }
  function createUpdate(props) {
    const {
      to: to3,
      from
    } = props = inferTo(props);
    const keys = new Set();
    if (is2.obj(to3))
      findDefined(to3, keys);
    if (is2.obj(from))
      findDefined(from, keys);
    props.keys = keys.size ? Array.from(keys) : null;
    return props;
  }
  function declareUpdate(props) {
    const update3 = createUpdate(props);
    if (is2.und(update3.default)) {
      update3.default = getDefaultProps(update3);
    }
    return update3;
  }
  function findDefined(values, keys) {
    eachProp(values, (value, key) => value != null && keys.add(key));
  }
  var ACTIVE_EVENTS = ["onStart", "onRest", "onChange", "onPause", "onResume"];
  function mergeActiveFn(target, props, type2) {
    target.animation[type2] = props[type2] !== getDefaultProp(props, type2) ? resolveProp(props[type2], target.key) : void 0;
  }
  function sendEvent(target, type2, ...args) {
    var _target$animation$typ, _target$animation, _target$defaultProps$, _target$defaultProps;
    (_target$animation$typ = (_target$animation = target.animation)[type2]) == null ? void 0 : _target$animation$typ.call(_target$animation, ...args);
    (_target$defaultProps$ = (_target$defaultProps = target.defaultProps)[type2]) == null ? void 0 : _target$defaultProps$.call(_target$defaultProps, ...args);
  }
  var BATCHED_EVENTS = ["onStart", "onChange", "onRest"];
  var nextId = 1;
  var Controller = class {
    constructor(props, flush2) {
      this.id = nextId++;
      this.springs = {};
      this.queue = [];
      this.ref = void 0;
      this._flush = void 0;
      this._initialProps = void 0;
      this._lastAsyncId = 0;
      this._active = new Set();
      this._changed = new Set();
      this._started = false;
      this._item = void 0;
      this._state = {
        paused: false,
        pauseQueue: new Set(),
        resumeQueue: new Set(),
        timeouts: new Set()
      };
      this._events = {
        onStart: new Map(),
        onChange: new Map(),
        onRest: new Map()
      };
      this._onFrame = this._onFrame.bind(this);
      if (flush2) {
        this._flush = flush2;
      }
      if (props) {
        this.start(_extends4({
          default: true
        }, props));
      }
    }
    get idle() {
      return !this._state.asyncTo && Object.values(this.springs).every((spring) => spring.idle);
    }
    get item() {
      return this._item;
    }
    set item(item) {
      this._item = item;
    }
    get() {
      const values = {};
      this.each((spring, key) => values[key] = spring.get());
      return values;
    }
    set(values) {
      for (const key in values) {
        const value = values[key];
        if (!is2.und(value)) {
          this.springs[key].set(value);
        }
      }
    }
    update(props) {
      if (props) {
        this.queue.push(createUpdate(props));
      }
      return this;
    }
    start(props) {
      let {
        queue
      } = this;
      if (props) {
        queue = toArray(props).map(createUpdate);
      } else {
        this.queue = [];
      }
      if (this._flush) {
        return this._flush(this, queue);
      }
      prepareKeys(this, queue);
      return flushUpdateQueue(this, queue);
    }
    stop(arg, keys) {
      if (arg !== !!arg) {
        keys = arg;
      }
      if (keys) {
        const springs = this.springs;
        each(toArray(keys), (key) => springs[key].stop(!!arg));
      } else {
        stopAsync(this._state, this._lastAsyncId);
        this.each((spring) => spring.stop(!!arg));
      }
      return this;
    }
    pause(keys) {
      if (is2.und(keys)) {
        this.start({
          pause: true
        });
      } else {
        const springs = this.springs;
        each(toArray(keys), (key) => springs[key].pause());
      }
      return this;
    }
    resume(keys) {
      if (is2.und(keys)) {
        this.start({
          pause: false
        });
      } else {
        const springs = this.springs;
        each(toArray(keys), (key) => springs[key].resume());
      }
      return this;
    }
    each(iterator) {
      eachProp(this.springs, iterator);
    }
    _onFrame() {
      const {
        onStart,
        onChange,
        onRest
      } = this._events;
      const active = this._active.size > 0;
      const changed = this._changed.size > 0;
      if (active && !this._started || changed && !this._started) {
        this._started = true;
        flush(onStart, ([onStart2, result]) => {
          result.value = this.get();
          onStart2(result, this, this._item);
        });
      }
      const idle = !active && this._started;
      const values = changed || idle && onRest.size ? this.get() : null;
      if (changed && onChange.size) {
        flush(onChange, ([onChange2, result]) => {
          result.value = values;
          onChange2(result, this, this._item);
        });
      }
      if (idle) {
        this._started = false;
        flush(onRest, ([onRest2, result]) => {
          result.value = values;
          onRest2(result, this, this._item);
        });
      }
    }
    eventObserved(event) {
      if (event.type == "change") {
        this._changed.add(event.parent);
        if (!event.idle) {
          this._active.add(event.parent);
        }
      } else if (event.type == "idle") {
        this._active.delete(event.parent);
      } else
        return;
      raf.onFrame(this._onFrame);
    }
  };
  function flushUpdateQueue(ctrl, queue) {
    return Promise.all(queue.map((props) => flushUpdate(ctrl, props))).then((results) => getCombinedResult(ctrl, results));
  }
  async function flushUpdate(ctrl, props, isLoop) {
    const {
      keys,
      to: to3,
      from,
      loop: loop2,
      onRest,
      onResolve
    } = props;
    const defaults2 = is2.obj(props.default) && props.default;
    if (loop2) {
      props.loop = false;
    }
    if (to3 === false)
      props.to = null;
    if (from === false)
      props.from = null;
    const asyncTo = is2.arr(to3) || is2.fun(to3) ? to3 : void 0;
    if (asyncTo) {
      props.to = void 0;
      props.onRest = void 0;
      if (defaults2) {
        defaults2.onRest = void 0;
      }
    } else {
      each(BATCHED_EVENTS, (key) => {
        const handler = props[key];
        if (is2.fun(handler)) {
          const queue = ctrl["_events"][key];
          props[key] = ({
            finished,
            cancelled
          }) => {
            const result2 = queue.get(handler);
            if (result2) {
              if (!finished)
                result2.finished = false;
              if (cancelled)
                result2.cancelled = true;
            } else {
              queue.set(handler, {
                value: null,
                finished: finished || false,
                cancelled: cancelled || false
              });
            }
          };
          if (defaults2) {
            defaults2[key] = props[key];
          }
        }
      });
    }
    const state = ctrl["_state"];
    if (props.pause === !state.paused) {
      state.paused = props.pause;
      flushCalls(props.pause ? state.pauseQueue : state.resumeQueue);
    } else if (state.paused) {
      props.pause = true;
    }
    const promises = (keys || Object.keys(ctrl.springs)).map((key) => ctrl.springs[key].start(props));
    const cancel = props.cancel === true || getDefaultProp(props, "cancel") === true;
    if (asyncTo || cancel && state.asyncId) {
      promises.push(scheduleProps(++ctrl["_lastAsyncId"], {
        props,
        state,
        actions: {
          pause: noop,
          resume: noop,
          start(props2, resolve) {
            if (cancel) {
              stopAsync(state, ctrl["_lastAsyncId"]);
              resolve(getCancelledResult(ctrl));
            } else {
              props2.onRest = onRest;
              resolve(runAsync(asyncTo, props2, state, ctrl));
            }
          }
        }
      }));
    }
    if (state.paused) {
      await new Promise((resume) => {
        state.resumeQueue.add(resume);
      });
    }
    const result = getCombinedResult(ctrl, await Promise.all(promises));
    if (loop2 && result.finished && !(isLoop && result.noop)) {
      const nextProps = createLoopUpdate(props, loop2, to3);
      if (nextProps) {
        prepareKeys(ctrl, [nextProps]);
        return flushUpdate(ctrl, nextProps, true);
      }
    }
    if (onResolve) {
      raf.batchedUpdates(() => onResolve(result, ctrl, ctrl.item));
    }
    return result;
  }
  function getSprings(ctrl, props) {
    const springs = _extends4({}, ctrl.springs);
    if (props) {
      each(toArray(props), (props2) => {
        if (is2.und(props2.keys)) {
          props2 = createUpdate(props2);
        }
        if (!is2.obj(props2.to)) {
          props2 = _extends4({}, props2, {
            to: void 0
          });
        }
        prepareSprings(springs, props2, (key) => {
          return createSpring(key);
        });
      });
    }
    setSprings(ctrl, springs);
    return springs;
  }
  function setSprings(ctrl, springs) {
    eachProp(springs, (spring, key) => {
      if (!ctrl.springs[key]) {
        ctrl.springs[key] = spring;
        addFluidObserver(spring, ctrl);
      }
    });
  }
  function createSpring(key, observer) {
    const spring = new SpringValue();
    spring.key = key;
    if (observer) {
      addFluidObserver(spring, observer);
    }
    return spring;
  }
  function prepareSprings(springs, props, create) {
    if (props.keys) {
      each(props.keys, (key) => {
        const spring = springs[key] || (springs[key] = create(key));
        spring["_prepareNode"](props);
      });
    }
  }
  function prepareKeys(ctrl, queue) {
    each(queue, (props) => {
      prepareSprings(ctrl.springs, props, (key) => {
        return createSpring(key, ctrl);
      });
    });
  }
  function _objectWithoutPropertiesLoose2(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i9;
    for (i9 = 0; i9 < sourceKeys.length; i9++) {
      key = sourceKeys[i9];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  var _excluded$3 = ["children"];
  var SpringContext = (_ref) => {
    let {
      children
    } = _ref, props = _objectWithoutPropertiesLoose2(_ref, _excluded$3);
    const inherited = (0, import_react48.useContext)(ctx);
    const pause = props.pause || !!inherited.pause, immediate = props.immediate || !!inherited.immediate;
    props = useMemoOne(() => ({
      pause,
      immediate
    }), [pause, immediate]);
    const {
      Provider: Provider2
    } = ctx;
    return React40.createElement(Provider2, {
      value: props
    }, children);
  };
  var ctx = makeContext(SpringContext, {});
  SpringContext.Provider = ctx.Provider;
  SpringContext.Consumer = ctx.Consumer;
  function makeContext(target, init) {
    Object.assign(target, React40.createContext(init));
    target.Provider._context = target;
    target.Consumer._context = target;
    return target;
  }
  var SpringRef = () => {
    const current = [];
    const SpringRef2 = function SpringRef3(props) {
      deprecateDirectCall();
      const results = [];
      each(current, (ctrl, i9) => {
        if (is2.und(props)) {
          results.push(ctrl.start());
        } else {
          const update3 = _getProps(props, ctrl, i9);
          if (update3) {
            results.push(ctrl.start(update3));
          }
        }
      });
      return results;
    };
    SpringRef2.current = current;
    SpringRef2.add = function(ctrl) {
      if (!current.includes(ctrl)) {
        current.push(ctrl);
      }
    };
    SpringRef2.delete = function(ctrl) {
      const i9 = current.indexOf(ctrl);
      if (~i9)
        current.splice(i9, 1);
    };
    SpringRef2.pause = function() {
      each(current, (ctrl) => ctrl.pause(...arguments));
      return this;
    };
    SpringRef2.resume = function() {
      each(current, (ctrl) => ctrl.resume(...arguments));
      return this;
    };
    SpringRef2.set = function(values) {
      each(current, (ctrl) => ctrl.set(values));
    };
    SpringRef2.start = function(props) {
      const results = [];
      each(current, (ctrl, i9) => {
        if (is2.und(props)) {
          results.push(ctrl.start());
        } else {
          const update3 = this._getProps(props, ctrl, i9);
          if (update3) {
            results.push(ctrl.start(update3));
          }
        }
      });
      return results;
    };
    SpringRef2.stop = function() {
      each(current, (ctrl) => ctrl.stop(...arguments));
      return this;
    };
    SpringRef2.update = function(props) {
      each(current, (ctrl, i9) => ctrl.update(this._getProps(props, ctrl, i9)));
      return this;
    };
    const _getProps = function _getProps2(arg, ctrl, index) {
      return is2.fun(arg) ? arg(index, ctrl) : arg;
    };
    SpringRef2._getProps = _getProps;
    return SpringRef2;
  };
  function useSprings(length, props, deps) {
    const propsFn = is2.fun(props) && props;
    if (propsFn && !deps)
      deps = [];
    const ref = (0, import_react48.useMemo)(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);
    const layoutId = (0, import_react48.useRef)(0);
    const forceUpdate = useForceUpdate();
    const state = (0, import_react48.useMemo)(() => ({
      ctrls: [],
      queue: [],
      flush(ctrl, updates2) {
        const springs2 = getSprings(ctrl, updates2);
        const canFlushSync = layoutId.current > 0 && !state.queue.length && !Object.keys(springs2).some((key) => !ctrl.springs[key]);
        return canFlushSync ? flushUpdateQueue(ctrl, updates2) : new Promise((resolve) => {
          setSprings(ctrl, springs2);
          state.queue.push(() => {
            resolve(flushUpdateQueue(ctrl, updates2));
          });
          forceUpdate();
        });
      }
    }), []);
    const ctrls = (0, import_react48.useRef)([...state.ctrls]);
    const updates = [];
    const prevLength = usePrev(length) || 0;
    (0, import_react48.useMemo)(() => {
      each(ctrls.current.slice(length, prevLength), (ctrl) => {
        detachRefs(ctrl, ref);
        ctrl.stop(true);
      });
      ctrls.current.length = length;
      declareUpdates(prevLength, length);
    }, [length]);
    (0, import_react48.useMemo)(() => {
      declareUpdates(0, Math.min(prevLength, length));
    }, deps);
    function declareUpdates(startIndex, endIndex) {
      for (let i9 = startIndex; i9 < endIndex; i9++) {
        const ctrl = ctrls.current[i9] || (ctrls.current[i9] = new Controller(null, state.flush));
        const update3 = propsFn ? propsFn(i9, ctrl) : props[i9];
        if (update3) {
          updates[i9] = declareUpdate(update3);
        }
      }
    }
    const springs = ctrls.current.map((ctrl, i9) => getSprings(ctrl, updates[i9]));
    const context = (0, import_react48.useContext)(SpringContext);
    const prevContext = usePrev(context);
    const hasContext = context !== prevContext && hasProps(context);
    useLayoutEffect2(() => {
      layoutId.current++;
      state.ctrls = ctrls.current;
      const {
        queue
      } = state;
      if (queue.length) {
        state.queue = [];
        each(queue, (cb) => cb());
      }
      each(ctrls.current, (ctrl, i9) => {
        ref == null ? void 0 : ref.add(ctrl);
        if (hasContext) {
          ctrl.start({
            default: context
          });
        }
        const update3 = updates[i9];
        if (update3) {
          replaceRef(ctrl, update3.ref);
          if (ctrl.ref) {
            ctrl.queue.push(update3);
          } else {
            ctrl.start(update3);
          }
        }
      });
    });
    useOnce(() => () => {
      each(state.ctrls, (ctrl) => ctrl.stop(true));
    });
    const values = springs.map((x7) => _extends4({}, x7));
    return ref ? [values, ref] : values;
  }
  function useSpring(props, deps) {
    const isFn = is2.fun(props);
    const [[values], ref] = useSprings(1, isFn ? props : [props], isFn ? deps || [] : deps);
    return isFn || arguments.length == 2 ? [values, ref] : values;
  }
  var TransitionPhase;
  (function(TransitionPhase2) {
    TransitionPhase2["MOUNT"] = "mount";
    TransitionPhase2["ENTER"] = "enter";
    TransitionPhase2["UPDATE"] = "update";
    TransitionPhase2["LEAVE"] = "leave";
  })(TransitionPhase || (TransitionPhase = {}));
  function useTransition(data, props, deps) {
    const propsFn = is2.fun(props) && props;
    const {
      reset,
      sort,
      trail = 0,
      expires = true,
      onDestroyed,
      ref: propsRef,
      config: propsConfig
    } = propsFn ? propsFn() : props;
    const ref = (0, import_react48.useMemo)(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);
    const items = toArray(data);
    const transitions = [];
    const usedTransitions = (0, import_react48.useRef)(null);
    const prevTransitions = reset ? null : usedTransitions.current;
    useLayoutEffect2(() => {
      usedTransitions.current = transitions;
    });
    useOnce(() => () => each(usedTransitions.current, (t13) => {
      if (t13.expired) {
        clearTimeout(t13.expirationId);
      }
      detachRefs(t13.ctrl, ref);
      t13.ctrl.stop(true);
    }));
    const keys = getKeys(items, propsFn ? propsFn() : props, prevTransitions);
    const expired = reset && usedTransitions.current || [];
    useLayoutEffect2(() => each(expired, ({
      ctrl,
      item,
      key
    }) => {
      detachRefs(ctrl, ref);
      callProp(onDestroyed, item, key);
    }));
    const reused = [];
    if (prevTransitions)
      each(prevTransitions, (t13, i9) => {
        if (t13.expired) {
          clearTimeout(t13.expirationId);
          expired.push(t13);
        } else {
          i9 = reused[i9] = keys.indexOf(t13.key);
          if (~i9)
            transitions[i9] = t13;
        }
      });
    each(items, (item, i9) => {
      if (!transitions[i9]) {
        transitions[i9] = {
          key: keys[i9],
          item,
          phase: TransitionPhase.MOUNT,
          ctrl: new Controller()
        };
        transitions[i9].ctrl.item = item;
      }
    });
    if (reused.length) {
      let i9 = -1;
      const {
        leave
      } = propsFn ? propsFn() : props;
      each(reused, (keyIndex, prevIndex) => {
        const t13 = prevTransitions[prevIndex];
        if (~keyIndex) {
          i9 = transitions.indexOf(t13);
          transitions[i9] = _extends4({}, t13, {
            item: items[keyIndex]
          });
        } else if (leave) {
          transitions.splice(++i9, 0, t13);
        }
      });
    }
    if (is2.fun(sort)) {
      transitions.sort((a7, b8) => sort(a7.item, b8.item));
    }
    let delay = -trail;
    const forceUpdate = useForceUpdate();
    const defaultProps = getDefaultProps(props);
    const changes = new Map();
    each(transitions, (t13, i9) => {
      const key = t13.key;
      const prevPhase = t13.phase;
      const p6 = propsFn ? propsFn() : props;
      let to3;
      let phase;
      let propsDelay = callProp(p6.delay || 0, key);
      if (prevPhase == TransitionPhase.MOUNT) {
        to3 = p6.enter;
        phase = TransitionPhase.ENTER;
      } else {
        const isLeave = keys.indexOf(key) < 0;
        if (prevPhase != TransitionPhase.LEAVE) {
          if (isLeave) {
            to3 = p6.leave;
            phase = TransitionPhase.LEAVE;
          } else if (to3 = p6.update) {
            phase = TransitionPhase.UPDATE;
          } else
            return;
        } else if (!isLeave) {
          to3 = p6.enter;
          phase = TransitionPhase.ENTER;
        } else
          return;
      }
      to3 = callProp(to3, t13.item, i9);
      to3 = is2.obj(to3) ? inferTo(to3) : {
        to: to3
      };
      if (!to3.config) {
        const config2 = propsConfig || defaultProps.config;
        to3.config = callProp(config2, t13.item, i9, phase);
      }
      delay += trail;
      const payload = _extends4({}, defaultProps, {
        delay: propsDelay + delay,
        ref: propsRef,
        immediate: p6.immediate,
        reset: false
      }, to3);
      if (phase == TransitionPhase.ENTER && is2.und(payload.from)) {
        const _p = propsFn ? propsFn() : props;
        const from = is2.und(_p.initial) || prevTransitions ? _p.from : _p.initial;
        payload.from = callProp(from, t13.item, i9);
      }
      const {
        onResolve
      } = payload;
      payload.onResolve = (result) => {
        callProp(onResolve, result);
        const transitions2 = usedTransitions.current;
        const t14 = transitions2.find((t15) => t15.key === key);
        if (!t14)
          return;
        if (result.cancelled && t14.phase != TransitionPhase.UPDATE) {
          return;
        }
        if (t14.ctrl.idle) {
          const idle = transitions2.every((t15) => t15.ctrl.idle);
          if (t14.phase == TransitionPhase.LEAVE) {
            const expiry = callProp(expires, t14.item);
            if (expiry !== false) {
              const expiryMs = expiry === true ? 0 : expiry;
              t14.expired = true;
              if (!idle && expiryMs > 0) {
                if (expiryMs <= 2147483647)
                  t14.expirationId = setTimeout(forceUpdate, expiryMs);
                return;
              }
            }
          }
          if (idle && transitions2.some((t15) => t15.expired)) {
            forceUpdate();
          }
        }
      };
      const springs = getSprings(t13.ctrl, payload);
      changes.set(t13, {
        phase,
        springs,
        payload
      });
    });
    const context = (0, import_react48.useContext)(SpringContext);
    const prevContext = usePrev(context);
    const hasContext = context !== prevContext && hasProps(context);
    useLayoutEffect2(() => {
      if (hasContext)
        each(transitions, (t13) => {
          t13.ctrl.start({
            default: context
          });
        });
    }, [context]);
    useLayoutEffect2(() => {
      each(changes, ({
        phase,
        payload
      }, t13) => {
        const {
          ctrl
        } = t13;
        t13.phase = phase;
        ref == null ? void 0 : ref.add(ctrl);
        if (hasContext && phase == TransitionPhase.ENTER) {
          ctrl.start({
            default: context
          });
        }
        if (payload) {
          replaceRef(ctrl, payload.ref);
          if (ctrl.ref) {
            ctrl.update(payload);
          } else {
            ctrl.start(payload);
          }
        }
      });
    }, reset ? void 0 : deps);
    const renderTransitions = (render) => React40.createElement(React40.Fragment, null, transitions.map((t13, i9) => {
      const {
        springs
      } = changes.get(t13) || t13.ctrl;
      const elem = render(_extends4({}, springs), t13.item, t13, i9);
      return elem && elem.type ? React40.createElement(elem.type, _extends4({}, elem.props, {
        key: is2.str(t13.key) || is2.num(t13.key) ? t13.key : t13.ctrl.id,
        ref: elem.ref
      })) : elem;
    }));
    return ref ? [renderTransitions, ref] : renderTransitions;
  }
  var nextKey = 1;
  function getKeys(items, {
    key,
    keys = key
  }, prevTransitions) {
    if (keys === null) {
      const reused = new Set();
      return items.map((item) => {
        const t13 = prevTransitions && prevTransitions.find((t14) => t14.item === item && t14.phase !== TransitionPhase.LEAVE && !reused.has(t14));
        if (t13) {
          reused.add(t13);
          return t13.key;
        }
        return nextKey++;
      });
    }
    return is2.und(keys) ? items : is2.fun(keys) ? items.map(keys) : toArray(keys);
  }
  var Interpolation = class extends FrameValue {
    constructor(source, args) {
      super();
      this.key = void 0;
      this.idle = true;
      this.calc = void 0;
      this._active = new Set();
      this.source = source;
      this.calc = createInterpolator(...args);
      const value = this._get();
      const nodeType = getAnimatedType(value);
      setAnimated(this, nodeType.create(value));
    }
    advance(_dt) {
      const value = this._get();
      const oldValue = this.get();
      if (!isEqual(value, oldValue)) {
        getAnimated(this).setValue(value);
        this._onChange(value, this.idle);
      }
      if (!this.idle && checkIdle(this._active)) {
        becomeIdle(this);
      }
    }
    _get() {
      const inputs = is2.arr(this.source) ? this.source.map(getFluidValue) : toArray(getFluidValue(this.source));
      return this.calc(...inputs);
    }
    _start() {
      if (this.idle && !checkIdle(this._active)) {
        this.idle = false;
        each(getPayload(this), (node) => {
          node.done = false;
        });
        if (globals.skipAnimation) {
          raf.batchedUpdates(() => this.advance());
          becomeIdle(this);
        } else {
          frameLoop.start(this);
        }
      }
    }
    _attach() {
      let priority2 = 1;
      each(toArray(this.source), (source) => {
        if (hasFluidValue(source)) {
          addFluidObserver(source, this);
        }
        if (isFrameValue(source)) {
          if (!source.idle) {
            this._active.add(source);
          }
          priority2 = Math.max(priority2, source.priority + 1);
        }
      });
      this.priority = priority2;
      this._start();
    }
    _detach() {
      each(toArray(this.source), (source) => {
        if (hasFluidValue(source)) {
          removeFluidObserver(source, this);
        }
      });
      this._active.clear();
      becomeIdle(this);
    }
    eventObserved(event) {
      if (event.type == "change") {
        if (event.idle) {
          this.advance();
        } else {
          this._active.add(event.parent);
          this._start();
        }
      } else if (event.type == "idle") {
        this._active.delete(event.parent);
      } else if (event.type == "priority") {
        this.priority = toArray(this.source).reduce((highest, parent) => Math.max(highest, (isFrameValue(parent) ? parent.priority : 0) + 1), 0);
      }
    }
  };
  function isIdle(source) {
    return source.idle !== false;
  }
  function checkIdle(active) {
    return !active.size || Array.from(active).every(isIdle);
  }
  function becomeIdle(self2) {
    if (!self2.idle) {
      self2.idle = true;
      each(getPayload(self2), (node) => {
        node.done = true;
      });
      callFluidObservers(self2, {
        type: "idle",
        parent: self2
      });
    }
  }
  var to2 = (source, ...args) => new Interpolation(source, args);
  globals.assign({
    createStringInterpolator,
    to: (source, args) => new Interpolation(source, args)
  });
  var update2 = frameLoop.advance;

  // ../../node_modules/@react-spring/web/dist/react-spring-web.esm.js
  var import_react_dom3 = __toModule(require_react_dom());
  function _objectWithoutPropertiesLoose3(source, excluded) {
    if (source == null)
      return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i9;
    for (i9 = 0; i9 < sourceKeys.length; i9++) {
      key = sourceKeys[i9];
      if (excluded.indexOf(key) >= 0)
        continue;
      target[key] = source[key];
    }
    return target;
  }
  var _excluded$2 = ["style", "children", "scrollTop", "scrollLeft"];
  var isCustomPropRE = /^--/;
  function dangerousStyleValue(name, value) {
    if (value == null || typeof value === "boolean" || value === "")
      return "";
    if (typeof value === "number" && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]))
      return value + "px";
    return ("" + value).trim();
  }
  var attributeCache = {};
  function applyAnimatedValues(instance, props) {
    if (!instance.nodeType || !instance.setAttribute) {
      return false;
    }
    const isFilterElement = instance.nodeName === "filter" || instance.parentNode && instance.parentNode.nodeName === "filter";
    const _ref = props, {
      style,
      children,
      scrollTop,
      scrollLeft
    } = _ref, attributes = _objectWithoutPropertiesLoose3(_ref, _excluded$2);
    const values = Object.values(attributes);
    const names = Object.keys(attributes).map((name) => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g, (n11) => "-" + n11.toLowerCase())));
    if (children !== void 0) {
      instance.textContent = children;
    }
    for (let name in style) {
      if (style.hasOwnProperty(name)) {
        const value = dangerousStyleValue(name, style[name]);
        if (isCustomPropRE.test(name)) {
          instance.style.setProperty(name, value);
        } else {
          instance.style[name] = value;
        }
      }
    }
    names.forEach((name, i9) => {
      instance.setAttribute(name, values[i9]);
    });
    if (scrollTop !== void 0) {
      instance.scrollTop = scrollTop;
    }
    if (scrollLeft !== void 0) {
      instance.scrollLeft = scrollLeft;
    }
  }
  var isUnitlessNumber = {
    animationIterationCount: true,
    borderImageOutset: true,
    borderImageSlice: true,
    borderImageWidth: true,
    boxFlex: true,
    boxFlexGroup: true,
    boxOrdinalGroup: true,
    columnCount: true,
    columns: true,
    flex: true,
    flexGrow: true,
    flexPositive: true,
    flexShrink: true,
    flexNegative: true,
    flexOrder: true,
    gridRow: true,
    gridRowEnd: true,
    gridRowSpan: true,
    gridRowStart: true,
    gridColumn: true,
    gridColumnEnd: true,
    gridColumnSpan: true,
    gridColumnStart: true,
    fontWeight: true,
    lineClamp: true,
    lineHeight: true,
    opacity: true,
    order: true,
    orphans: true,
    tabSize: true,
    widows: true,
    zIndex: true,
    zoom: true,
    fillOpacity: true,
    floodOpacity: true,
    stopOpacity: true,
    strokeDasharray: true,
    strokeDashoffset: true,
    strokeMiterlimit: true,
    strokeOpacity: true,
    strokeWidth: true
  };
  var prefixKey = (prefix3, key) => prefix3 + key.charAt(0).toUpperCase() + key.substring(1);
  var prefixes = ["Webkit", "Ms", "Moz", "O"];
  isUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {
    prefixes.forEach((prefix3) => acc[prefixKey(prefix3, prop)] = acc[prop]);
    return acc;
  }, isUnitlessNumber);
  var _excluded$1 = ["x", "y", "z"];
  var domTransforms = /^(matrix|translate|scale|rotate|skew)/;
  var pxTransforms = /^(translate)/;
  var degTransforms = /^(rotate|skew)/;
  var addUnit = (value, unit2) => is2.num(value) && value !== 0 ? value + unit2 : value;
  var isValueIdentity = (value, id) => is2.arr(value) ? value.every((v8) => isValueIdentity(v8, id)) : is2.num(value) ? value === id : parseFloat(value) === id;
  var AnimatedStyle = class extends AnimatedObject {
    constructor(_ref) {
      let {
        x: x7,
        y: y6,
        z: z6
      } = _ref, style = _objectWithoutPropertiesLoose3(_ref, _excluded$1);
      const inputs = [];
      const transforms = [];
      if (x7 || y6 || z6) {
        inputs.push([x7 || 0, y6 || 0, z6 || 0]);
        transforms.push((xyz) => [`translate3d(${xyz.map((v8) => addUnit(v8, "px")).join(",")})`, isValueIdentity(xyz, 0)]);
      }
      eachProp(style, (value, key) => {
        if (key === "transform") {
          inputs.push([value || ""]);
          transforms.push((transform) => [transform, transform === ""]);
        } else if (domTransforms.test(key)) {
          delete style[key];
          if (is2.und(value))
            return;
          const unit2 = pxTransforms.test(key) ? "px" : degTransforms.test(key) ? "deg" : "";
          inputs.push(toArray(value));
          transforms.push(key === "rotate3d" ? ([x8, y7, z7, deg]) => [`rotate3d(${x8},${y7},${z7},${addUnit(deg, unit2)})`, isValueIdentity(deg, 0)] : (input) => [`${key}(${input.map((v8) => addUnit(v8, unit2)).join(",")})`, isValueIdentity(input, key.startsWith("scale") ? 1 : 0)]);
        }
      });
      if (inputs.length) {
        style.transform = new FluidTransform(inputs, transforms);
      }
      super(style);
    }
  };
  var FluidTransform = class extends FluidValue {
    constructor(inputs, transforms) {
      super();
      this._value = null;
      this.inputs = inputs;
      this.transforms = transforms;
    }
    get() {
      return this._value || (this._value = this._get());
    }
    _get() {
      let transform = "";
      let identity2 = true;
      each(this.inputs, (input, i9) => {
        const arg1 = getFluidValue(input[0]);
        const [t13, id] = this.transforms[i9](is2.arr(arg1) ? arg1 : input.map(getFluidValue));
        transform += " " + t13;
        identity2 = identity2 && id;
      });
      return identity2 ? "none" : transform;
    }
    observerAdded(count2) {
      if (count2 == 1)
        each(this.inputs, (input) => each(input, (value) => hasFluidValue(value) && addFluidObserver(value, this)));
    }
    observerRemoved(count2) {
      if (count2 == 0)
        each(this.inputs, (input) => each(input, (value) => hasFluidValue(value) && removeFluidObserver(value, this)));
    }
    eventObserved(event) {
      if (event.type == "change") {
        this._value = null;
      }
      callFluidObservers(this, event);
    }
  };
  var primitives = ["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "tspan"];
  var _excluded = ["scrollTop", "scrollLeft"];
  globals.assign({
    batchedUpdates: import_react_dom3.unstable_batchedUpdates,
    createStringInterpolator,
    colors
  });
  var host = createHost(primitives, {
    applyAnimatedValues,
    createAnimatedStyle: (style) => new AnimatedStyle(style),
    getComponentProps: (_ref) => {
      let props = _objectWithoutPropertiesLoose3(_ref, _excluded);
      return props;
    }
  });
  var animated = host.animated;

  // ../../node_modules/@nivo/tooltip/dist/nivo-tooltip.es.js
  var import_jsx_runtime = __toModule(require_jsx_runtime());
  function v() {
    return v = Object.assign || function(t13) {
      for (var o8 = 1; o8 < arguments.length; o8++) {
        var i9 = arguments[o8];
        for (var n11 in i9)
          Object.prototype.hasOwnProperty.call(i9, n11) && (t13[n11] = i9[n11]);
      }
      return t13;
    }, v.apply(this, arguments);
  }
  var x = {pointerEvents: "none", position: "absolute", zIndex: 10, top: 0, left: 0};
  var m = function(t13, o8) {
    return "translate(" + t13 + "px, " + o8 + "px)";
  };
  var g = (0, import_react49.memo)(function(t13) {
    var i9, n11 = t13.position, r9 = t13.anchor, e15 = t13.children, l4 = Vt(), d4 = tt(), p6 = d4.animate, f4 = d4.config, g6 = Ft(), b8 = g6[0], w5 = g6[1], T7 = (0, import_react49.useRef)(false), C6 = void 0, E4 = false, P8 = w5.width > 0 && w5.height > 0, N5 = Math.round(n11[0]), V5 = Math.round(n11[1]);
    P8 && (r9 === "top" ? (N5 -= w5.width / 2, V5 -= w5.height + 14) : r9 === "right" ? (N5 += 14, V5 -= w5.height / 2) : r9 === "bottom" ? (N5 -= w5.width / 2, V5 += 14) : r9 === "left" ? (N5 -= w5.width + 14, V5 -= w5.height / 2) : r9 === "center" && (N5 -= w5.width / 2, V5 -= w5.height / 2), C6 = {transform: m(N5, V5)}, T7.current || (E4 = true), T7.current = [N5, V5]);
    var j4 = useSpring({to: C6, config: f4, immediate: !p6 || E4}), O8 = v({}, x, l4.tooltip, {transform: (i9 = j4.transform) != null ? i9 : m(N5, V5)});
    return (0, import_jsx_runtime.jsx)(animated.div, {ref: b8, style: O8, children: e15});
  });
  g.displayName = "TooltipWrapper";
  var b = (0, import_react49.memo)(function(t13) {
    var o8 = t13.size, i9 = o8 === void 0 ? 12 : o8, n11 = t13.color, r9 = t13.style;
    return (0, import_jsx_runtime.jsx)("span", {style: v({display: "block", width: i9, height: i9, background: n11}, r9 === void 0 ? {} : r9)});
  });
  var w = (0, import_react49.memo)(function(t13) {
    var o8, i9 = t13.id, n11 = t13.value, r9 = t13.format, e15 = t13.enableChip, l4 = e15 !== void 0 && e15, a7 = t13.color, c6 = t13.renderContent, h4 = Vt(), u4 = Xt(r9);
    if (typeof c6 == "function")
      o8 = c6();
    else {
      var f4 = n11;
      u4 !== void 0 && f4 !== void 0 && (f4 = u4(f4)), o8 = (0, import_jsx_runtime.jsxs)("div", {style: h4.tooltip.basic, children: [l4 && (0, import_jsx_runtime.jsx)(b, {color: a7, style: h4.tooltip.chip}), f4 !== void 0 ? (0, import_jsx_runtime.jsxs)("span", {children: [i9, ": ", (0, import_jsx_runtime.jsx)("strong", {children: "" + f4})]}) : i9]});
    }
    return (0, import_jsx_runtime.jsx)("div", {style: h4.tooltip.container, children: o8});
  });
  var T = {width: "100%", borderCollapse: "collapse"};
  var C = (0, import_react49.memo)(function(t13) {
    var o8, i9 = t13.title, n11 = t13.rows, r9 = n11 === void 0 ? [] : n11, e15 = t13.renderContent, l4 = Vt();
    return r9.length ? (o8 = typeof e15 == "function" ? e15() : (0, import_jsx_runtime.jsxs)("div", {children: [i9 && i9, (0, import_jsx_runtime.jsx)("table", {style: v({}, T, l4.tooltip.table), children: (0, import_jsx_runtime.jsx)("tbody", {children: r9.map(function(t14, o9) {
      return (0, import_jsx_runtime.jsx)("tr", {children: t14.map(function(t15, o10) {
        return (0, import_jsx_runtime.jsx)("td", {style: l4.tooltip.tableCell, children: t15}, o10);
      })}, o9);
    })})})]}), (0, import_jsx_runtime.jsx)("div", {style: l4.tooltip.container, children: o8})) : null;
  });
  C.displayName = "TableTooltip";
  var E = (0, import_react49.memo)(function(t13) {
    var o8 = t13.x0, n11 = t13.x1, r9 = t13.y0, e15 = t13.y1, l4 = Vt(), u4 = tt(), d4 = u4.animate, p6 = u4.config, f4 = (0, import_react49.useMemo)(function() {
      return v({}, l4.crosshair.line, {pointerEvents: "none"});
    }, [l4.crosshair.line]), x7 = useSpring({x1: o8, x2: n11, y1: r9, y2: e15, config: p6, immediate: !d4});
    return (0, import_jsx_runtime.jsx)(animated.line, v({}, x7, {fill: "none", style: f4}));
  });
  E.displayName = "CrosshairLine";
  var P = (0, import_react49.memo)(function(t13) {
    var o8, i9, n11 = t13.width, r9 = t13.height, e15 = t13.type, l4 = t13.x, a7 = t13.y;
    return e15 === "cross" ? (o8 = {x0: l4, x1: l4, y0: 0, y1: r9}, i9 = {x0: 0, x1: n11, y0: a7, y1: a7}) : e15 === "top-left" ? (o8 = {x0: l4, x1: l4, y0: 0, y1: a7}, i9 = {x0: 0, x1: l4, y0: a7, y1: a7}) : e15 === "top" ? o8 = {x0: l4, x1: l4, y0: 0, y1: a7} : e15 === "top-right" ? (o8 = {x0: l4, x1: l4, y0: 0, y1: a7}, i9 = {x0: l4, x1: n11, y0: a7, y1: a7}) : e15 === "right" ? i9 = {x0: l4, x1: n11, y0: a7, y1: a7} : e15 === "bottom-right" ? (o8 = {x0: l4, x1: l4, y0: a7, y1: r9}, i9 = {x0: l4, x1: n11, y0: a7, y1: a7}) : e15 === "bottom" ? o8 = {x0: l4, x1: l4, y0: a7, y1: r9} : e15 === "bottom-left" ? (o8 = {x0: l4, x1: l4, y0: a7, y1: r9}, i9 = {x0: 0, x1: l4, y0: a7, y1: a7}) : e15 === "left" ? i9 = {x0: 0, x1: l4, y0: a7, y1: a7} : e15 === "x" ? o8 = {x0: l4, x1: l4, y0: 0, y1: r9} : e15 === "y" && (i9 = {x0: 0, x1: n11, y0: a7, y1: a7}), (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {children: [o8 && (0, import_jsx_runtime.jsx)(E, {x0: o8.x0, x1: o8.x1, y0: o8.y0, y1: o8.y1}), i9 && (0, import_jsx_runtime.jsx)(E, {x0: i9.x0, x1: i9.x1, y0: i9.y0, y1: i9.y1})]});
  });
  P.displayName = "Crosshair";
  var N = (0, import_react49.createContext)({showTooltipAt: function() {
  }, showTooltipFromEvent: function() {
  }, hideTooltip: function() {
  }});
  var V = {isVisible: false, position: [null, null], content: null, anchor: null};
  var j = (0, import_react49.createContext)(V);
  var O = function(t13) {
    var o8 = (0, import_react49.useState)(V), n11 = o8[0], l4 = o8[1], a7 = (0, import_react49.useCallback)(function(t14, o9, i9) {
      var n12 = o9[0], r9 = o9[1];
      i9 === void 0 && (i9 = "top"), l4({isVisible: true, position: [n12, r9], anchor: i9, content: t14});
    }, [l4]), c6 = (0, import_react49.useCallback)(function(o9, i9, n12) {
      n12 === void 0 && (n12 = "top");
      var r9 = t13.current.getBoundingClientRect(), e15 = i9.clientX - r9.left, a8 = i9.clientY - r9.top;
      n12 !== "left" && n12 !== "right" || (n12 = e15 < r9.width / 2 ? "right" : "left"), l4({isVisible: true, position: [e15, a8], anchor: n12, content: o9});
    }, [t13, l4]), s4 = (0, import_react49.useCallback)(function() {
      l4(V);
    }, [l4]);
    return {actions: (0, import_react49.useMemo)(function() {
      return {showTooltipAt: a7, showTooltipFromEvent: c6, hideTooltip: s4};
    }, [a7, c6, s4]), state: n11};
  };
  var k = function() {
    var t13 = (0, import_react49.useContext)(N);
    if (t13 === void 0)
      throw new Error("useTooltip must be used within a TooltipProvider");
    return t13;
  };
  var z = function() {
    var t13 = (0, import_react49.useContext)(j);
    if (t13 === void 0)
      throw new Error("useTooltipState must be used within a TooltipProvider");
    return t13;
  };
  var A = function(t13) {
    return t13.isVisible;
  };
  var F = function() {
    var t13 = z();
    return A(t13) ? (0, import_jsx_runtime.jsx)(g, {position: t13.position, anchor: t13.anchor, children: t13.content}) : null;
  };
  var M = function(t13) {
    var o8 = t13.container, i9 = t13.children, n11 = O(o8), r9 = n11.actions, e15 = n11.state;
    return (0, import_jsx_runtime.jsx)(N.Provider, {value: r9, children: (0, import_jsx_runtime.jsx)(j.Provider, {value: e15, children: i9})});
  };

  // ../../node_modules/@nivo/core/dist/nivo-core.es.js
  var import_merge = __toModule(require_merge());
  var import_get6 = __toModule(require_get());
  var import_set = __toModule(require_set());

  // ../../node_modules/d3-color/src/define.js
  function define_default(constructor, factory, prototype) {
    constructor.prototype = factory.prototype = prototype;
    prototype.constructor = constructor;
  }
  function extend(parent, definition) {
    var prototype = Object.create(parent.prototype);
    for (var key in definition)
      prototype[key] = definition[key];
    return prototype;
  }

  // ../../node_modules/d3-color/src/color.js
  function Color() {
  }
  var darker = 0.7;
  var brighter = 1 / darker;
  var reI = "\\s*([+-]?\\d+)\\s*";
  var reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*";
  var reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
  var reHex = /^#([0-9a-f]{3,8})$/;
  var reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$");
  var reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$");
  var reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$");
  var reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$");
  var reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$");
  var reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
  var named = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
  };
  define_default(Color, color, {
    copy: function(channels) {
      return Object.assign(new this.constructor(), this, channels);
    },
    displayable: function() {
      return this.rgb().displayable();
    },
    hex: color_formatHex,
    formatHex: color_formatHex,
    formatHsl: color_formatHsl,
    formatRgb: color_formatRgb,
    toString: color_formatRgb
  });
  function color_formatHex() {
    return this.rgb().formatHex();
  }
  function color_formatHsl() {
    return hslConvert(this).formatHsl();
  }
  function color_formatRgb() {
    return this.rgb().formatRgb();
  }
  function color(format4) {
    var m5, l4;
    format4 = (format4 + "").trim().toLowerCase();
    return (m5 = reHex.exec(format4)) ? (l4 = m5[1].length, m5 = parseInt(m5[1], 16), l4 === 6 ? rgbn(m5) : l4 === 3 ? new Rgb(m5 >> 8 & 15 | m5 >> 4 & 240, m5 >> 4 & 15 | m5 & 240, (m5 & 15) << 4 | m5 & 15, 1) : l4 === 8 ? rgba2(m5 >> 24 & 255, m5 >> 16 & 255, m5 >> 8 & 255, (m5 & 255) / 255) : l4 === 4 ? rgba2(m5 >> 12 & 15 | m5 >> 8 & 240, m5 >> 8 & 15 | m5 >> 4 & 240, m5 >> 4 & 15 | m5 & 240, ((m5 & 15) << 4 | m5 & 15) / 255) : null) : (m5 = reRgbInteger.exec(format4)) ? new Rgb(m5[1], m5[2], m5[3], 1) : (m5 = reRgbPercent.exec(format4)) ? new Rgb(m5[1] * 255 / 100, m5[2] * 255 / 100, m5[3] * 255 / 100, 1) : (m5 = reRgbaInteger.exec(format4)) ? rgba2(m5[1], m5[2], m5[3], m5[4]) : (m5 = reRgbaPercent.exec(format4)) ? rgba2(m5[1] * 255 / 100, m5[2] * 255 / 100, m5[3] * 255 / 100, m5[4]) : (m5 = reHslPercent.exec(format4)) ? hsla2(m5[1], m5[2] / 100, m5[3] / 100, 1) : (m5 = reHslaPercent.exec(format4)) ? hsla2(m5[1], m5[2] / 100, m5[3] / 100, m5[4]) : named.hasOwnProperty(format4) ? rgbn(named[format4]) : format4 === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
  }
  function rgbn(n11) {
    return new Rgb(n11 >> 16 & 255, n11 >> 8 & 255, n11 & 255, 1);
  }
  function rgba2(r9, g6, b8, a7) {
    if (a7 <= 0)
      r9 = g6 = b8 = NaN;
    return new Rgb(r9, g6, b8, a7);
  }
  function rgbConvert(o8) {
    if (!(o8 instanceof Color))
      o8 = color(o8);
    if (!o8)
      return new Rgb();
    o8 = o8.rgb();
    return new Rgb(o8.r, o8.g, o8.b, o8.opacity);
  }
  function rgb2(r9, g6, b8, opacity) {
    return arguments.length === 1 ? rgbConvert(r9) : new Rgb(r9, g6, b8, opacity == null ? 1 : opacity);
  }
  function Rgb(r9, g6, b8, opacity) {
    this.r = +r9;
    this.g = +g6;
    this.b = +b8;
    this.opacity = +opacity;
  }
  define_default(Rgb, rgb2, extend(Color, {
    brighter: function(k6) {
      k6 = k6 == null ? brighter : Math.pow(brighter, k6);
      return new Rgb(this.r * k6, this.g * k6, this.b * k6, this.opacity);
    },
    darker: function(k6) {
      k6 = k6 == null ? darker : Math.pow(darker, k6);
      return new Rgb(this.r * k6, this.g * k6, this.b * k6, this.opacity);
    },
    rgb: function() {
      return this;
    },
    displayable: function() {
      return -0.5 <= this.r && this.r < 255.5 && (-0.5 <= this.g && this.g < 255.5) && (-0.5 <= this.b && this.b < 255.5) && (0 <= this.opacity && this.opacity <= 1);
    },
    hex: rgb_formatHex,
    formatHex: rgb_formatHex,
    formatRgb: rgb_formatRgb,
    toString: rgb_formatRgb
  }));
  function rgb_formatHex() {
    return "#" + hex(this.r) + hex(this.g) + hex(this.b);
  }
  function rgb_formatRgb() {
    var a7 = this.opacity;
    a7 = isNaN(a7) ? 1 : Math.max(0, Math.min(1, a7));
    return (a7 === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a7 === 1 ? ")" : ", " + a7 + ")");
  }
  function hex(value) {
    value = Math.max(0, Math.min(255, Math.round(value) || 0));
    return (value < 16 ? "0" : "") + value.toString(16);
  }
  function hsla2(h4, s4, l4, a7) {
    if (a7 <= 0)
      h4 = s4 = l4 = NaN;
    else if (l4 <= 0 || l4 >= 1)
      h4 = s4 = NaN;
    else if (s4 <= 0)
      h4 = NaN;
    return new Hsl(h4, s4, l4, a7);
  }
  function hslConvert(o8) {
    if (o8 instanceof Hsl)
      return new Hsl(o8.h, o8.s, o8.l, o8.opacity);
    if (!(o8 instanceof Color))
      o8 = color(o8);
    if (!o8)
      return new Hsl();
    if (o8 instanceof Hsl)
      return o8;
    o8 = o8.rgb();
    var r9 = o8.r / 255, g6 = o8.g / 255, b8 = o8.b / 255, min = Math.min(r9, g6, b8), max = Math.max(r9, g6, b8), h4 = NaN, s4 = max - min, l4 = (max + min) / 2;
    if (s4) {
      if (r9 === max)
        h4 = (g6 - b8) / s4 + (g6 < b8) * 6;
      else if (g6 === max)
        h4 = (b8 - r9) / s4 + 2;
      else
        h4 = (r9 - g6) / s4 + 4;
      s4 /= l4 < 0.5 ? max + min : 2 - max - min;
      h4 *= 60;
    } else {
      s4 = l4 > 0 && l4 < 1 ? 0 : h4;
    }
    return new Hsl(h4, s4, l4, o8.opacity);
  }
  function hsl2(h4, s4, l4, opacity) {
    return arguments.length === 1 ? hslConvert(h4) : new Hsl(h4, s4, l4, opacity == null ? 1 : opacity);
  }
  function Hsl(h4, s4, l4, opacity) {
    this.h = +h4;
    this.s = +s4;
    this.l = +l4;
    this.opacity = +opacity;
  }
  define_default(Hsl, hsl2, extend(Color, {
    brighter: function(k6) {
      k6 = k6 == null ? brighter : Math.pow(brighter, k6);
      return new Hsl(this.h, this.s, this.l * k6, this.opacity);
    },
    darker: function(k6) {
      k6 = k6 == null ? darker : Math.pow(darker, k6);
      return new Hsl(this.h, this.s, this.l * k6, this.opacity);
    },
    rgb: function() {
      var h4 = this.h % 360 + (this.h < 0) * 360, s4 = isNaN(h4) || isNaN(this.s) ? 0 : this.s, l4 = this.l, m22 = l4 + (l4 < 0.5 ? l4 : 1 - l4) * s4, m1 = 2 * l4 - m22;
      return new Rgb(hsl2rgb(h4 >= 240 ? h4 - 240 : h4 + 120, m1, m22), hsl2rgb(h4, m1, m22), hsl2rgb(h4 < 120 ? h4 + 240 : h4 - 120, m1, m22), this.opacity);
    },
    displayable: function() {
      return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && (0 <= this.l && this.l <= 1) && (0 <= this.opacity && this.opacity <= 1);
    },
    formatHsl: function() {
      var a7 = this.opacity;
      a7 = isNaN(a7) ? 1 : Math.max(0, Math.min(1, a7));
      return (a7 === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a7 === 1 ? ")" : ", " + a7 + ")");
    }
  }));
  function hsl2rgb(h4, m1, m22) {
    return (h4 < 60 ? m1 + (m22 - m1) * h4 / 60 : h4 < 180 ? m22 : h4 < 240 ? m1 + (m22 - m1) * (240 - h4) / 60 : m1) * 255;
  }

  // ../../node_modules/d3-color/src/math.js
  var radians = Math.PI / 180;
  var degrees = 180 / Math.PI;

  // ../../node_modules/d3-color/src/cubehelix.js
  var A2 = -0.14861;
  var B = 1.78277;
  var C2 = -0.29227;
  var D = -0.90649;
  var E2 = 1.97294;
  var ED = E2 * D;
  var EB = E2 * B;
  var BC_DA = B * C2 - D * A2;
  function cubehelixConvert(o8) {
    if (o8 instanceof Cubehelix)
      return new Cubehelix(o8.h, o8.s, o8.l, o8.opacity);
    if (!(o8 instanceof Rgb))
      o8 = rgbConvert(o8);
    var r9 = o8.r / 255, g6 = o8.g / 255, b8 = o8.b / 255, l4 = (BC_DA * b8 + ED * r9 - EB * g6) / (BC_DA + ED - EB), bl = b8 - l4, k6 = (E2 * (g6 - l4) - C2 * bl) / D, s4 = Math.sqrt(k6 * k6 + bl * bl) / (E2 * l4 * (1 - l4)), h4 = s4 ? Math.atan2(k6, bl) * degrees - 120 : NaN;
    return new Cubehelix(h4 < 0 ? h4 + 360 : h4, s4, l4, o8.opacity);
  }
  function cubehelix(h4, s4, l4, opacity) {
    return arguments.length === 1 ? cubehelixConvert(h4) : new Cubehelix(h4, s4, l4, opacity == null ? 1 : opacity);
  }
  function Cubehelix(h4, s4, l4, opacity) {
    this.h = +h4;
    this.s = +s4;
    this.l = +l4;
    this.opacity = +opacity;
  }
  define_default(Cubehelix, cubehelix, extend(Color, {
    brighter: function(k6) {
      k6 = k6 == null ? brighter : Math.pow(brighter, k6);
      return new Cubehelix(this.h, this.s, this.l * k6, this.opacity);
    },
    darker: function(k6) {
      k6 = k6 == null ? darker : Math.pow(darker, k6);
      return new Cubehelix(this.h, this.s, this.l * k6, this.opacity);
    },
    rgb: function() {
      var h4 = isNaN(this.h) ? 0 : (this.h + 120) * radians, l4 = +this.l, a7 = isNaN(this.s) ? 0 : this.s * l4 * (1 - l4), cosh = Math.cos(h4), sinh = Math.sin(h4);
      return new Rgb(255 * (l4 + a7 * (A2 * cosh + B * sinh)), 255 * (l4 + a7 * (C2 * cosh + D * sinh)), 255 * (l4 + a7 * (E2 * cosh)), this.opacity);
    }
  }));

  // ../../node_modules/d3-interpolate/src/basis.js
  function basis(t13, v0, v1, v22, v32) {
    var t22 = t13 * t13, t32 = t22 * t13;
    return ((1 - 3 * t13 + 3 * t22 - t32) * v0 + (4 - 6 * t22 + 3 * t32) * v1 + (1 + 3 * t13 + 3 * t22 - 3 * t32) * v22 + t32 * v32) / 6;
  }
  function basis_default(values) {
    var n11 = values.length - 1;
    return function(t13) {
      var i9 = t13 <= 0 ? t13 = 0 : t13 >= 1 ? (t13 = 1, n11 - 1) : Math.floor(t13 * n11), v1 = values[i9], v22 = values[i9 + 1], v0 = i9 > 0 ? values[i9 - 1] : 2 * v1 - v22, v32 = i9 < n11 - 1 ? values[i9 + 2] : 2 * v22 - v1;
      return basis((t13 - i9 / n11) * n11, v0, v1, v22, v32);
    };
  }

  // ../../node_modules/d3-interpolate/src/basisClosed.js
  function basisClosed_default(values) {
    var n11 = values.length;
    return function(t13) {
      var i9 = Math.floor(((t13 %= 1) < 0 ? ++t13 : t13) * n11), v0 = values[(i9 + n11 - 1) % n11], v1 = values[i9 % n11], v22 = values[(i9 + 1) % n11], v32 = values[(i9 + 2) % n11];
      return basis((t13 - i9 / n11) * n11, v0, v1, v22, v32);
    };
  }

  // ../../node_modules/d3-interpolate/src/constant.js
  var constant_default = (x7) => () => x7;

  // ../../node_modules/d3-interpolate/src/color.js
  function linear2(a7, d4) {
    return function(t13) {
      return a7 + t13 * d4;
    };
  }
  function exponential(a7, b8, y6) {
    return a7 = Math.pow(a7, y6), b8 = Math.pow(b8, y6) - a7, y6 = 1 / y6, function(t13) {
      return Math.pow(a7 + t13 * b8, y6);
    };
  }
  function hue(a7, b8) {
    var d4 = b8 - a7;
    return d4 ? linear2(a7, d4 > 180 || d4 < -180 ? d4 - 360 * Math.round(d4 / 360) : d4) : constant_default(isNaN(a7) ? b8 : a7);
  }
  function gamma(y6) {
    return (y6 = +y6) === 1 ? nogamma : function(a7, b8) {
      return b8 - a7 ? exponential(a7, b8, y6) : constant_default(isNaN(a7) ? b8 : a7);
    };
  }
  function nogamma(a7, b8) {
    var d4 = b8 - a7;
    return d4 ? linear2(a7, d4) : constant_default(isNaN(a7) ? b8 : a7);
  }

  // ../../node_modules/d3-interpolate/src/rgb.js
  var rgb_default = function rgbGamma(y6) {
    var color2 = gamma(y6);
    function rgb3(start2, end) {
      var r9 = color2((start2 = rgb2(start2)).r, (end = rgb2(end)).r), g6 = color2(start2.g, end.g), b8 = color2(start2.b, end.b), opacity = nogamma(start2.opacity, end.opacity);
      return function(t13) {
        start2.r = r9(t13);
        start2.g = g6(t13);
        start2.b = b8(t13);
        start2.opacity = opacity(t13);
        return start2 + "";
      };
    }
    rgb3.gamma = rgbGamma;
    return rgb3;
  }(1);
  function rgbSpline(spline) {
    return function(colors2) {
      var n11 = colors2.length, r9 = new Array(n11), g6 = new Array(n11), b8 = new Array(n11), i9, color2;
      for (i9 = 0; i9 < n11; ++i9) {
        color2 = rgb2(colors2[i9]);
        r9[i9] = color2.r || 0;
        g6[i9] = color2.g || 0;
        b8[i9] = color2.b || 0;
      }
      r9 = spline(r9);
      g6 = spline(g6);
      b8 = spline(b8);
      color2.opacity = 1;
      return function(t13) {
        color2.r = r9(t13);
        color2.g = g6(t13);
        color2.b = b8(t13);
        return color2 + "";
      };
    };
  }
  var rgbBasis = rgbSpline(basis_default);
  var rgbBasisClosed = rgbSpline(basisClosed_default);

  // ../../node_modules/d3-interpolate/src/numberArray.js
  function numberArray_default(a7, b8) {
    if (!b8)
      b8 = [];
    var n11 = a7 ? Math.min(b8.length, a7.length) : 0, c6 = b8.slice(), i9;
    return function(t13) {
      for (i9 = 0; i9 < n11; ++i9)
        c6[i9] = a7[i9] * (1 - t13) + b8[i9] * t13;
      return c6;
    };
  }
  function isNumberArray(x7) {
    return ArrayBuffer.isView(x7) && !(x7 instanceof DataView);
  }

  // ../../node_modules/d3-interpolate/src/array.js
  function genericArray(a7, b8) {
    var nb = b8 ? b8.length : 0, na = a7 ? Math.min(nb, a7.length) : 0, x7 = new Array(na), c6 = new Array(nb), i9;
    for (i9 = 0; i9 < na; ++i9)
      x7[i9] = value_default(a7[i9], b8[i9]);
    for (; i9 < nb; ++i9)
      c6[i9] = b8[i9];
    return function(t13) {
      for (i9 = 0; i9 < na; ++i9)
        c6[i9] = x7[i9](t13);
      return c6;
    };
  }

  // ../../node_modules/d3-interpolate/src/date.js
  function date_default(a7, b8) {
    var d4 = new Date();
    return a7 = +a7, b8 = +b8, function(t13) {
      return d4.setTime(a7 * (1 - t13) + b8 * t13), d4;
    };
  }

  // ../../node_modules/d3-interpolate/src/number.js
  function number_default(a7, b8) {
    return a7 = +a7, b8 = +b8, function(t13) {
      return a7 * (1 - t13) + b8 * t13;
    };
  }

  // ../../node_modules/d3-interpolate/src/object.js
  function object_default(a7, b8) {
    var i9 = {}, c6 = {}, k6;
    if (a7 === null || typeof a7 !== "object")
      a7 = {};
    if (b8 === null || typeof b8 !== "object")
      b8 = {};
    for (k6 in b8) {
      if (k6 in a7) {
        i9[k6] = value_default(a7[k6], b8[k6]);
      } else {
        c6[k6] = b8[k6];
      }
    }
    return function(t13) {
      for (k6 in i9)
        c6[k6] = i9[k6](t13);
      return c6;
    };
  }

  // ../../node_modules/d3-interpolate/src/string.js
  var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
  var reB = new RegExp(reA.source, "g");
  function zero(b8) {
    return function() {
      return b8;
    };
  }
  function one(b8) {
    return function(t13) {
      return b8(t13) + "";
    };
  }
  function string_default(a7, b8) {
    var bi = reA.lastIndex = reB.lastIndex = 0, am, bm, bs, i9 = -1, s4 = [], q4 = [];
    a7 = a7 + "", b8 = b8 + "";
    while ((am = reA.exec(a7)) && (bm = reB.exec(b8))) {
      if ((bs = bm.index) > bi) {
        bs = b8.slice(bi, bs);
        if (s4[i9])
          s4[i9] += bs;
        else
          s4[++i9] = bs;
      }
      if ((am = am[0]) === (bm = bm[0])) {
        if (s4[i9])
          s4[i9] += bm;
        else
          s4[++i9] = bm;
      } else {
        s4[++i9] = null;
        q4.push({i: i9, x: number_default(am, bm)});
      }
      bi = reB.lastIndex;
    }
    if (bi < b8.length) {
      bs = b8.slice(bi);
      if (s4[i9])
        s4[i9] += bs;
      else
        s4[++i9] = bs;
    }
    return s4.length < 2 ? q4[0] ? one(q4[0].x) : zero(b8) : (b8 = q4.length, function(t13) {
      for (var i10 = 0, o8; i10 < b8; ++i10)
        s4[(o8 = q4[i10]).i] = o8.x(t13);
      return s4.join("");
    });
  }

  // ../../node_modules/d3-interpolate/src/value.js
  function value_default(a7, b8) {
    var t13 = typeof b8, c6;
    return b8 == null || t13 === "boolean" ? constant_default(b8) : (t13 === "number" ? number_default : t13 === "string" ? (c6 = color(b8)) ? (b8 = c6, rgb_default) : string_default : b8 instanceof color ? rgb_default : b8 instanceof Date ? date_default : isNumberArray(b8) ? numberArray_default : Array.isArray(b8) ? genericArray : typeof b8.valueOf !== "function" && typeof b8.toString !== "function" || isNaN(b8) ? object_default : number_default)(a7, b8);
  }

  // ../../node_modules/d3-interpolate/src/round.js
  function round_default(a7, b8) {
    return a7 = +a7, b8 = +b8, function(t13) {
      return Math.round(a7 * (1 - t13) + b8 * t13);
    };
  }

  // ../../node_modules/d3-interpolate/src/cubehelix.js
  function cubehelix2(hue2) {
    return function cubehelixGamma(y6) {
      y6 = +y6;
      function cubehelix3(start2, end) {
        var h4 = hue2((start2 = cubehelix(start2)).h, (end = cubehelix(end)).h), s4 = nogamma(start2.s, end.s), l4 = nogamma(start2.l, end.l), opacity = nogamma(start2.opacity, end.opacity);
        return function(t13) {
          start2.h = h4(t13);
          start2.s = s4(t13);
          start2.l = l4(Math.pow(t13, y6));
          start2.opacity = opacity(t13);
          return start2 + "";
        };
      }
      cubehelix3.gamma = cubehelixGamma;
      return cubehelix3;
    }(1);
  }
  var cubehelix_default = cubehelix2(hue);
  var cubehelixLong = cubehelix2(nogamma);

  // ../../node_modules/@nivo/core/dist/nivo-core.es.js
  var import_isString3 = __toModule(require_isString());
  var import_jsx_runtime2 = __toModule(require_jsx_runtime());
  var import_last = __toModule(require_last());
  var import_isArray2 = __toModule(require_isArray());

  // ../../node_modules/d3-array/src/ascending.js
  function ascending_default(a7, b8) {
    return a7 < b8 ? -1 : a7 > b8 ? 1 : a7 >= b8 ? 0 : NaN;
  }

  // ../../node_modules/d3-array/src/bisector.js
  function bisector_default(f4) {
    let delta = f4;
    let compare = f4;
    if (f4.length === 1) {
      delta = (d4, x7) => f4(d4) - x7;
      compare = ascendingComparator(f4);
    }
    function left(a7, x7, lo, hi2) {
      if (lo == null)
        lo = 0;
      if (hi2 == null)
        hi2 = a7.length;
      while (lo < hi2) {
        const mid = lo + hi2 >>> 1;
        if (compare(a7[mid], x7) < 0)
          lo = mid + 1;
        else
          hi2 = mid;
      }
      return lo;
    }
    function right(a7, x7, lo, hi2) {
      if (lo == null)
        lo = 0;
      if (hi2 == null)
        hi2 = a7.length;
      while (lo < hi2) {
        const mid = lo + hi2 >>> 1;
        if (compare(a7[mid], x7) > 0)
          hi2 = mid;
        else
          lo = mid + 1;
      }
      return lo;
    }
    function center(a7, x7, lo, hi2) {
      if (lo == null)
        lo = 0;
      if (hi2 == null)
        hi2 = a7.length;
      const i9 = left(a7, x7, lo, hi2 - 1);
      return i9 > lo && delta(a7[i9 - 1], x7) > -delta(a7[i9], x7) ? i9 - 1 : i9;
    }
    return {left, center, right};
  }
  function ascendingComparator(f4) {
    return (d4, x7) => ascending_default(f4(d4), x7);
  }

  // ../../node_modules/d3-array/src/number.js
  function number_default2(x7) {
    return x7 === null ? NaN : +x7;
  }

  // ../../node_modules/d3-array/src/bisect.js
  var ascendingBisect = bisector_default(ascending_default);
  var bisectRight = ascendingBisect.right;
  var bisectLeft = ascendingBisect.left;
  var bisectCenter = bisector_default(number_default2).center;
  var bisect_default = bisectRight;

  // ../../node_modules/d3-array/src/ticks.js
  var e10 = Math.sqrt(50);
  var e5 = Math.sqrt(10);
  var e2 = Math.sqrt(2);
  function ticks_default(start2, stop, count2) {
    var reverse, i9 = -1, n11, ticks, step;
    stop = +stop, start2 = +start2, count2 = +count2;
    if (start2 === stop && count2 > 0)
      return [start2];
    if (reverse = stop < start2)
      n11 = start2, start2 = stop, stop = n11;
    if ((step = tickIncrement(start2, stop, count2)) === 0 || !isFinite(step))
      return [];
    if (step > 0) {
      let r0 = Math.round(start2 / step), r1 = Math.round(stop / step);
      if (r0 * step < start2)
        ++r0;
      if (r1 * step > stop)
        --r1;
      ticks = new Array(n11 = r1 - r0 + 1);
      while (++i9 < n11)
        ticks[i9] = (r0 + i9) * step;
    } else {
      step = -step;
      let r0 = Math.round(start2 * step), r1 = Math.round(stop * step);
      if (r0 / step < start2)
        ++r0;
      if (r1 / step > stop)
        --r1;
      ticks = new Array(n11 = r1 - r0 + 1);
      while (++i9 < n11)
        ticks[i9] = (r0 + i9) / step;
    }
    if (reverse)
      ticks.reverse();
    return ticks;
  }
  function tickIncrement(start2, stop, count2) {
    var step = (stop - start2) / Math.max(0, count2), power = Math.floor(Math.log(step) / Math.LN10), error = step / Math.pow(10, power);
    return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
  }
  function tickStep(start2, stop, count2) {
    var step0 = Math.abs(stop - start2) / Math.max(0, count2), step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)), error = step0 / step1;
    if (error >= e10)
      step1 *= 10;
    else if (error >= e5)
      step1 *= 5;
    else if (error >= e2)
      step1 *= 2;
    return stop < start2 ? -step1 : step1;
  }

  // ../../node_modules/d3-array/src/range.js
  function range_default(start2, stop, step) {
    start2 = +start2, stop = +stop, step = (n11 = arguments.length) < 2 ? (stop = start2, start2 = 0, 1) : n11 < 3 ? 1 : +step;
    var i9 = -1, n11 = Math.max(0, Math.ceil((stop - start2) / step)) | 0, range = new Array(n11);
    while (++i9 < n11) {
      range[i9] = start2 + i9 * step;
    }
    return range;
  }

  // ../../node_modules/d3-scale/src/init.js
  function initRange(domain, range) {
    switch (arguments.length) {
      case 0:
        break;
      case 1:
        this.range(domain);
        break;
      default:
        this.range(range).domain(domain);
        break;
    }
    return this;
  }

  // ../../node_modules/d3-scale/src/ordinal.js
  var implicit = Symbol("implicit");
  function ordinal() {
    var index = new Map(), domain = [], range = [], unknown = implicit;
    function scale(d4) {
      var key = d4 + "", i9 = index.get(key);
      if (!i9) {
        if (unknown !== implicit)
          return unknown;
        index.set(key, i9 = domain.push(d4));
      }
      return range[(i9 - 1) % range.length];
    }
    scale.domain = function(_5) {
      if (!arguments.length)
        return domain.slice();
      domain = [], index = new Map();
      for (const value of _5) {
        const key = value + "";
        if (index.has(key))
          continue;
        index.set(key, domain.push(value));
      }
      return scale;
    };
    scale.range = function(_5) {
      return arguments.length ? (range = Array.from(_5), scale) : range.slice();
    };
    scale.unknown = function(_5) {
      return arguments.length ? (unknown = _5, scale) : unknown;
    };
    scale.copy = function() {
      return ordinal(domain, range).unknown(unknown);
    };
    initRange.apply(scale, arguments);
    return scale;
  }

  // ../../node_modules/d3-scale/src/band.js
  function band() {
    var scale = ordinal().unknown(void 0), domain = scale.domain, ordinalRange = scale.range, r0 = 0, r1 = 1, step, bandwidth, round = false, paddingInner = 0, paddingOuter = 0, align = 0.5;
    delete scale.unknown;
    function rescale() {
      var n11 = domain().length, reverse = r1 < r0, start2 = reverse ? r1 : r0, stop = reverse ? r0 : r1;
      step = (stop - start2) / Math.max(1, n11 - paddingInner + paddingOuter * 2);
      if (round)
        step = Math.floor(step);
      start2 += (stop - start2 - step * (n11 - paddingInner)) * align;
      bandwidth = step * (1 - paddingInner);
      if (round)
        start2 = Math.round(start2), bandwidth = Math.round(bandwidth);
      var values = range_default(n11).map(function(i9) {
        return start2 + step * i9;
      });
      return ordinalRange(reverse ? values.reverse() : values);
    }
    scale.domain = function(_5) {
      return arguments.length ? (domain(_5), rescale()) : domain();
    };
    scale.range = function(_5) {
      return arguments.length ? ([r0, r1] = _5, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
    };
    scale.rangeRound = function(_5) {
      return [r0, r1] = _5, r0 = +r0, r1 = +r1, round = true, rescale();
    };
    scale.bandwidth = function() {
      return bandwidth;
    };
    scale.step = function() {
      return step;
    };
    scale.round = function(_5) {
      return arguments.length ? (round = !!_5, rescale()) : round;
    };
    scale.padding = function(_5) {
      return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_5), rescale()) : paddingInner;
    };
    scale.paddingInner = function(_5) {
      return arguments.length ? (paddingInner = Math.min(1, _5), rescale()) : paddingInner;
    };
    scale.paddingOuter = function(_5) {
      return arguments.length ? (paddingOuter = +_5, rescale()) : paddingOuter;
    };
    scale.align = function(_5) {
      return arguments.length ? (align = Math.max(0, Math.min(1, _5)), rescale()) : align;
    };
    scale.copy = function() {
      return band(domain(), [r0, r1]).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
    };
    return initRange.apply(rescale(), arguments);
  }
  function pointish(scale) {
    var copy2 = scale.copy;
    scale.padding = scale.paddingOuter;
    delete scale.paddingInner;
    delete scale.paddingOuter;
    scale.copy = function() {
      return pointish(copy2());
    };
    return scale;
  }
  function point() {
    return pointish(band.apply(null, arguments).paddingInner(1));
  }

  // ../../node_modules/d3-scale/src/constant.js
  function constants(x7) {
    return function() {
      return x7;
    };
  }

  // ../../node_modules/d3-scale/src/number.js
  function number(x7) {
    return +x7;
  }

  // ../../node_modules/d3-scale/src/continuous.js
  var unit = [0, 1];
  function identity(x7) {
    return x7;
  }
  function normalize(a7, b8) {
    return (b8 -= a7 = +a7) ? function(x7) {
      return (x7 - a7) / b8;
    } : constants(isNaN(b8) ? NaN : 0.5);
  }
  function clamper(a7, b8) {
    var t13;
    if (a7 > b8)
      t13 = a7, a7 = b8, b8 = t13;
    return function(x7) {
      return Math.max(a7, Math.min(b8, x7));
    };
  }
  function bimap(domain, range, interpolate2) {
    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
    if (d1 < d0)
      d0 = normalize(d1, d0), r0 = interpolate2(r1, r0);
    else
      d0 = normalize(d0, d1), r0 = interpolate2(r0, r1);
    return function(x7) {
      return r0(d0(x7));
    };
  }
  function polymap(domain, range, interpolate2) {
    var j4 = Math.min(domain.length, range.length) - 1, d4 = new Array(j4), r9 = new Array(j4), i9 = -1;
    if (domain[j4] < domain[0]) {
      domain = domain.slice().reverse();
      range = range.slice().reverse();
    }
    while (++i9 < j4) {
      d4[i9] = normalize(domain[i9], domain[i9 + 1]);
      r9[i9] = interpolate2(range[i9], range[i9 + 1]);
    }
    return function(x7) {
      var i10 = bisect_default(domain, x7, 1, j4) - 1;
      return r9[i10](d4[i10](x7));
    };
  }
  function copy(source, target) {
    return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
  }
  function transformer() {
    var domain = unit, range = unit, interpolate2 = value_default, transform, untransform, unknown, clamp = identity, piecewise, output, input;
    function rescale() {
      var n11 = Math.min(domain.length, range.length);
      if (clamp !== identity)
        clamp = clamper(domain[0], domain[n11 - 1]);
      piecewise = n11 > 2 ? polymap : bimap;
      output = input = null;
      return scale;
    }
    function scale(x7) {
      return x7 == null || isNaN(x7 = +x7) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate2)))(transform(clamp(x7)));
    }
    scale.invert = function(y6) {
      return clamp(untransform((input || (input = piecewise(range, domain.map(transform), number_default)))(y6)));
    };
    scale.domain = function(_5) {
      return arguments.length ? (domain = Array.from(_5, number), rescale()) : domain.slice();
    };
    scale.range = function(_5) {
      return arguments.length ? (range = Array.from(_5), rescale()) : range.slice();
    };
    scale.rangeRound = function(_5) {
      return range = Array.from(_5), interpolate2 = round_default, rescale();
    };
    scale.clamp = function(_5) {
      return arguments.length ? (clamp = _5 ? true : identity, rescale()) : clamp !== identity;
    };
    scale.interpolate = function(_5) {
      return arguments.length ? (interpolate2 = _5, rescale()) : interpolate2;
    };
    scale.unknown = function(_5) {
      return arguments.length ? (unknown = _5, scale) : unknown;
    };
    return function(t13, u4) {
      transform = t13, untransform = u4;
      return rescale();
    };
  }
  function continuous() {
    return transformer()(identity, identity);
  }

  // ../../node_modules/d3-scale/node_modules/d3-format/src/formatDecimal.js
  function formatDecimal_default(x7) {
    return Math.abs(x7 = Math.round(x7)) >= 1e21 ? x7.toLocaleString("en").replace(/,/g, "") : x7.toString(10);
  }
  function formatDecimalParts(x7, p6) {
    if ((i9 = (x7 = p6 ? x7.toExponential(p6 - 1) : x7.toExponential()).indexOf("e")) < 0)
      return null;
    var i9, coefficient = x7.slice(0, i9);
    return [
      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
      +x7.slice(i9 + 1)
    ];
  }

  // ../../node_modules/d3-scale/node_modules/d3-format/src/exponent.js
  function exponent_default(x7) {
    return x7 = formatDecimalParts(Math.abs(x7)), x7 ? x7[1] : NaN;
  }

  // ../../node_modules/d3-scale/node_modules/d3-format/src/formatGroup.js
  function formatGroup_default(grouping, thousands) {
    return function(value, width) {
      var i9 = value.length, t13 = [], j4 = 0, g6 = grouping[0], length = 0;
      while (i9 > 0 && g6 > 0) {
        if (length + g6 + 1 > width)
          g6 = Math.max(1, width - length);
        t13.push(value.substring(i9 -= g6, i9 + g6));
        if ((length += g6 + 1) > width)
          break;
        g6 = grouping[j4 = (j4 + 1) % grouping.length];
      }
      return t13.reverse().join(thousands);
    };
  }

  // ../../node_modules/d3-scale/node_modules/d3-format/src/formatNumerals.js
  function formatNumerals_default(numerals) {
    return function(value) {
      return value.replace(/[0-9]/g, function(i9) {
        return numerals[+i9];
      });
    };
  }

  // ../../node_modules/d3-scale/node_modules/d3-format/src/formatSpecifier.js
  var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
  function formatSpecifier(specifier) {
    if (!(match2 = re.exec(specifier)))
      throw new Error("invalid format: " + specifier);
    var match2;
    return new FormatSpecifier({
      fill: match2[1],
      align: match2[2],
      sign: match2[3],
      symbol: match2[4],
      zero: match2[5],
      width: match2[6],
      comma: match2[7],
      precision: match2[8] && match2[8].slice(1),
      trim: match2[9],
      type: match2[10]
    });
  }
  formatSpecifier.prototype = FormatSpecifier.prototype;
  function FormatSpecifier(specifier) {
    this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
    this.align = specifier.align === void 0 ? ">" : specifier.align + "";
    this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
    this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
    this.zero = !!specifier.zero;
    this.width = specifier.width === void 0 ? void 0 : +specifier.width;
    this.comma = !!specifier.comma;
    this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
    this.trim = !!specifier.trim;
    this.type = specifier.type === void 0 ? "" : specifier.type + "";
  }
  FormatSpecifier.prototype.toString = function() {
    return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
  };

  // ../../node_modules/d3-scale/node_modules/d3-format/src/formatTrim.js
  function formatTrim_default(s4) {
    out:
      for (var n11 = s4.length, i9 = 1, i0 = -1, i1; i9 < n11; ++i9) {
        switch (s4[i9]) {
          case ".":
            i0 = i1 = i9;
            break;
          case "0":
            if (i0 === 0)
              i0 = i9;
            i1 = i9;
            break;
          default:
            if (!+s4[i9])
              break out;
            if (i0 > 0)
              i0 = 0;
            break;
        }
      }
    return i0 > 0 ? s4.slice(0, i0) + s4.slice(i1 + 1) : s4;
  }

  // ../../node_modules/d3-scale/node_modules/d3-format/src/formatPrefixAuto.js
  var prefixExponent;
  function formatPrefixAuto_default(x7, p6) {
    var d4 = formatDecimalParts(x7, p6);
    if (!d4)
      return x7 + "";
    var coefficient = d4[0], exponent = d4[1], i9 = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1, n11 = coefficient.length;
    return i9 === n11 ? coefficient : i9 > n11 ? coefficient + new Array(i9 - n11 + 1).join("0") : i9 > 0 ? coefficient.slice(0, i9) + "." + coefficient.slice(i9) : "0." + new Array(1 - i9).join("0") + formatDecimalParts(x7, Math.max(0, p6 + i9 - 1))[0];
  }

  // ../../node_modules/d3-scale/node_modules/d3-format/src/formatRounded.js
  function formatRounded_default(x7, p6) {
    var d4 = formatDecimalParts(x7, p6);
    if (!d4)
      return x7 + "";
    var coefficient = d4[0], exponent = d4[1];
    return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
  }

  // ../../node_modules/d3-scale/node_modules/d3-format/src/formatTypes.js
  var formatTypes_default = {
    "%": (x7, p6) => (x7 * 100).toFixed(p6),
    b: (x7) => Math.round(x7).toString(2),
    c: (x7) => x7 + "",
    d: formatDecimal_default,
    e: (x7, p6) => x7.toExponential(p6),
    f: (x7, p6) => x7.toFixed(p6),
    g: (x7, p6) => x7.toPrecision(p6),
    o: (x7) => Math.round(x7).toString(8),
    p: (x7, p6) => formatRounded_default(x7 * 100, p6),
    r: formatRounded_default,
    s: formatPrefixAuto_default,
    X: (x7) => Math.round(x7).toString(16).toUpperCase(),
    x: (x7) => Math.round(x7).toString(16)
  };

  // ../../node_modules/d3-scale/node_modules/d3-format/src/identity.js
  function identity_default(x7) {
    return x7;
  }

  // ../../node_modules/d3-scale/node_modules/d3-format/src/locale.js
  var map2 = Array.prototype.map;
  var prefixes2 = ["y", "z", "a", "f", "p", "n", "\xB5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
  function locale_default(locale6) {
    var group = locale6.grouping === void 0 || locale6.thousands === void 0 ? identity_default : formatGroup_default(map2.call(locale6.grouping, Number), locale6.thousands + ""), currencyPrefix = locale6.currency === void 0 ? "" : locale6.currency[0] + "", currencySuffix = locale6.currency === void 0 ? "" : locale6.currency[1] + "", decimal = locale6.decimal === void 0 ? "." : locale6.decimal + "", numerals = locale6.numerals === void 0 ? identity_default : formatNumerals_default(map2.call(locale6.numerals, String)), percent = locale6.percent === void 0 ? "%" : locale6.percent + "", minus = locale6.minus === void 0 ? "\u2212" : locale6.minus + "", nan = locale6.nan === void 0 ? "NaN" : locale6.nan + "";
    function newFormat(specifier) {
      specifier = formatSpecifier(specifier);
      var fill = specifier.fill, align = specifier.align, sign3 = specifier.sign, symbol = specifier.symbol, zero2 = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim2 = specifier.trim, type2 = specifier.type;
      if (type2 === "n")
        comma = true, type2 = "g";
      else if (!formatTypes_default[type2])
        precision === void 0 && (precision = 12), trim2 = true, type2 = "g";
      if (zero2 || fill === "0" && align === "=")
        zero2 = true, fill = "0", align = "=";
      var prefix3 = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type2) ? "0" + type2.toLowerCase() : "", suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type2) ? percent : "";
      var formatType = formatTypes_default[type2], maybeSuffix = /[defgprs%]/.test(type2);
      precision = precision === void 0 ? 6 : /[gprs]/.test(type2) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
      function format4(value) {
        var valuePrefix = prefix3, valueSuffix = suffix, i9, n11, c6;
        if (type2 === "c") {
          valueSuffix = formatType(value) + valueSuffix;
          value = "";
        } else {
          value = +value;
          var valueNegative = value < 0 || 1 / value < 0;
          value = isNaN(value) ? nan : formatType(Math.abs(value), precision);
          if (trim2)
            value = formatTrim_default(value);
          if (valueNegative && +value === 0 && sign3 !== "+")
            valueNegative = false;
          valuePrefix = (valueNegative ? sign3 === "(" ? sign3 : minus : sign3 === "-" || sign3 === "(" ? "" : sign3) + valuePrefix;
          valueSuffix = (type2 === "s" ? prefixes2[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign3 === "(" ? ")" : "");
          if (maybeSuffix) {
            i9 = -1, n11 = value.length;
            while (++i9 < n11) {
              if (c6 = value.charCodeAt(i9), 48 > c6 || c6 > 57) {
                valueSuffix = (c6 === 46 ? decimal + value.slice(i9 + 1) : value.slice(i9)) + valueSuffix;
                value = value.slice(0, i9);
                break;
              }
            }
          }
        }
        if (comma && !zero2)
          value = group(value, Infinity);
        var length = valuePrefix.length + value.length + valueSuffix.length, padding = length < width ? new Array(width - length + 1).join(fill) : "";
        if (comma && zero2)
          value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
        switch (align) {
          case "<":
            value = valuePrefix + value + valueSuffix + padding;
            break;
          case "=":
            value = valuePrefix + padding + value + valueSuffix;
            break;
          case "^":
            value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
            break;
          default:
            value = padding + valuePrefix + value + valueSuffix;
            break;
        }
        return numerals(value);
      }
      format4.toString = function() {
        return specifier + "";
      };
      return format4;
    }
    function formatPrefix3(specifier, value) {
      var f4 = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)), e15 = Math.max(-8, Math.min(8, Math.floor(exponent_default(value) / 3))) * 3, k6 = Math.pow(10, -e15), prefix3 = prefixes2[8 + e15 / 3];
      return function(value2) {
        return f4(k6 * value2) + prefix3;
      };
    }
    return {
      format: newFormat,
      formatPrefix: formatPrefix3
    };
  }

  // ../../node_modules/d3-scale/node_modules/d3-format/src/defaultLocale.js
  var locale3;
  var format2;
  var formatPrefix;
  defaultLocale({
    thousands: ",",
    grouping: [3],
    currency: ["$", ""]
  });
  function defaultLocale(definition) {
    locale3 = locale_default(definition);
    format2 = locale3.format;
    formatPrefix = locale3.formatPrefix;
    return locale3;
  }

  // ../../node_modules/d3-scale/node_modules/d3-format/src/precisionFixed.js
  function precisionFixed_default(step) {
    return Math.max(0, -exponent_default(Math.abs(step)));
  }

  // ../../node_modules/d3-scale/node_modules/d3-format/src/precisionPrefix.js
  function precisionPrefix_default(step, value) {
    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent_default(value) / 3))) * 3 - exponent_default(Math.abs(step)));
  }

  // ../../node_modules/d3-scale/node_modules/d3-format/src/precisionRound.js
  function precisionRound_default(step, max) {
    step = Math.abs(step), max = Math.abs(max) - step;
    return Math.max(0, exponent_default(max) - exponent_default(step)) + 1;
  }

  // ../../node_modules/d3-scale/src/tickFormat.js
  function tickFormat(start2, stop, count2, specifier) {
    var step = tickStep(start2, stop, count2), precision;
    specifier = formatSpecifier(specifier == null ? ",f" : specifier);
    switch (specifier.type) {
      case "s": {
        var value = Math.max(Math.abs(start2), Math.abs(stop));
        if (specifier.precision == null && !isNaN(precision = precisionPrefix_default(step, value)))
          specifier.precision = precision;
        return formatPrefix(specifier, value);
      }
      case "":
      case "e":
      case "g":
      case "p":
      case "r": {
        if (specifier.precision == null && !isNaN(precision = precisionRound_default(step, Math.max(Math.abs(start2), Math.abs(stop)))))
          specifier.precision = precision - (specifier.type === "e");
        break;
      }
      case "f":
      case "%": {
        if (specifier.precision == null && !isNaN(precision = precisionFixed_default(step)))
          specifier.precision = precision - (specifier.type === "%") * 2;
        break;
      }
    }
    return format2(specifier);
  }

  // ../../node_modules/d3-scale/src/linear.js
  function linearish(scale) {
    var domain = scale.domain;
    scale.ticks = function(count2) {
      var d4 = domain();
      return ticks_default(d4[0], d4[d4.length - 1], count2 == null ? 10 : count2);
    };
    scale.tickFormat = function(count2, specifier) {
      var d4 = domain();
      return tickFormat(d4[0], d4[d4.length - 1], count2 == null ? 10 : count2, specifier);
    };
    scale.nice = function(count2) {
      if (count2 == null)
        count2 = 10;
      var d4 = domain();
      var i0 = 0;
      var i1 = d4.length - 1;
      var start2 = d4[i0];
      var stop = d4[i1];
      var prestep;
      var step;
      var maxIter = 10;
      if (stop < start2) {
        step = start2, start2 = stop, stop = step;
        step = i0, i0 = i1, i1 = step;
      }
      while (maxIter-- > 0) {
        step = tickIncrement(start2, stop, count2);
        if (step === prestep) {
          d4[i0] = start2;
          d4[i1] = stop;
          return domain(d4);
        } else if (step > 0) {
          start2 = Math.floor(start2 / step) * step;
          stop = Math.ceil(stop / step) * step;
        } else if (step < 0) {
          start2 = Math.ceil(start2 * step) / step;
          stop = Math.floor(stop * step) / step;
        } else {
          break;
        }
        prestep = step;
      }
      return scale;
    };
    return scale;
  }
  function linear3() {
    var scale = continuous();
    scale.copy = function() {
      return copy(scale, linear3());
    };
    initRange.apply(scale, arguments);
    return linearish(scale);
  }

  // ../../node_modules/d3-scale/src/nice.js
  function nice(domain, interval) {
    domain = domain.slice();
    var i0 = 0, i1 = domain.length - 1, x05 = domain[i0], x12 = domain[i1], t13;
    if (x12 < x05) {
      t13 = i0, i0 = i1, i1 = t13;
      t13 = x05, x05 = x12, x12 = t13;
    }
    domain[i0] = interval.floor(x05);
    domain[i1] = interval.ceil(x12);
    return domain;
  }

  // ../../node_modules/d3-scale/src/log.js
  function transformLog(x7) {
    return Math.log(x7);
  }
  function transformExp(x7) {
    return Math.exp(x7);
  }
  function transformLogn(x7) {
    return -Math.log(-x7);
  }
  function transformExpn(x7) {
    return -Math.exp(-x7);
  }
  function pow10(x7) {
    return isFinite(x7) ? +("1e" + x7) : x7 < 0 ? 0 : x7;
  }
  function powp(base) {
    return base === 10 ? pow10 : base === Math.E ? Math.exp : function(x7) {
      return Math.pow(base, x7);
    };
  }
  function logp(base) {
    return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function(x7) {
      return Math.log(x7) / base;
    });
  }
  function reflect(f4) {
    return function(x7) {
      return -f4(-x7);
    };
  }
  function loggish(transform) {
    var scale = transform(transformLog, transformExp), domain = scale.domain, base = 10, logs, pows;
    function rescale() {
      logs = logp(base), pows = powp(base);
      if (domain()[0] < 0) {
        logs = reflect(logs), pows = reflect(pows);
        transform(transformLogn, transformExpn);
      } else {
        transform(transformLog, transformExp);
      }
      return scale;
    }
    scale.base = function(_5) {
      return arguments.length ? (base = +_5, rescale()) : base;
    };
    scale.domain = function(_5) {
      return arguments.length ? (domain(_5), rescale()) : domain();
    };
    scale.ticks = function(count2) {
      var d4 = domain(), u4 = d4[0], v8 = d4[d4.length - 1], r9;
      if (r9 = v8 < u4)
        i9 = u4, u4 = v8, v8 = i9;
      var i9 = logs(u4), j4 = logs(v8), p6, k6, t13, n11 = count2 == null ? 10 : +count2, z6 = [];
      if (!(base % 1) && j4 - i9 < n11) {
        i9 = Math.floor(i9), j4 = Math.ceil(j4);
        if (u4 > 0)
          for (; i9 <= j4; ++i9) {
            for (k6 = 1, p6 = pows(i9); k6 < base; ++k6) {
              t13 = p6 * k6;
              if (t13 < u4)
                continue;
              if (t13 > v8)
                break;
              z6.push(t13);
            }
          }
        else
          for (; i9 <= j4; ++i9) {
            for (k6 = base - 1, p6 = pows(i9); k6 >= 1; --k6) {
              t13 = p6 * k6;
              if (t13 < u4)
                continue;
              if (t13 > v8)
                break;
              z6.push(t13);
            }
          }
        if (z6.length * 2 < n11)
          z6 = ticks_default(u4, v8, n11);
      } else {
        z6 = ticks_default(i9, j4, Math.min(j4 - i9, n11)).map(pows);
      }
      return r9 ? z6.reverse() : z6;
    };
    scale.tickFormat = function(count2, specifier) {
      if (specifier == null)
        specifier = base === 10 ? ".0e" : ",";
      if (typeof specifier !== "function")
        specifier = format2(specifier);
      if (count2 === Infinity)
        return specifier;
      if (count2 == null)
        count2 = 10;
      var k6 = Math.max(1, base * count2 / scale.ticks().length);
      return function(d4) {
        var i9 = d4 / pows(Math.round(logs(d4)));
        if (i9 * base < base - 0.5)
          i9 *= base;
        return i9 <= k6 ? specifier(d4) : "";
      };
    };
    scale.nice = function() {
      return domain(nice(domain(), {
        floor: function(x7) {
          return pows(Math.floor(logs(x7)));
        },
        ceil: function(x7) {
          return pows(Math.ceil(logs(x7)));
        }
      }));
    };
    return scale;
  }
  function log() {
    var scale = loggish(transformer()).domain([1, 10]);
    scale.copy = function() {
      return copy(scale, log()).base(scale.base());
    };
    initRange.apply(scale, arguments);
    return scale;
  }

  // ../../node_modules/d3-scale/src/symlog.js
  function transformSymlog(c6) {
    return function(x7) {
      return Math.sign(x7) * Math.log1p(Math.abs(x7 / c6));
    };
  }
  function transformSymexp(c6) {
    return function(x7) {
      return Math.sign(x7) * Math.expm1(Math.abs(x7)) * c6;
    };
  }
  function symlogish(transform) {
    var c6 = 1, scale = transform(transformSymlog(c6), transformSymexp(c6));
    scale.constant = function(_5) {
      return arguments.length ? transform(transformSymlog(c6 = +_5), transformSymexp(c6)) : c6;
    };
    return linearish(scale);
  }
  function symlog() {
    var scale = symlogish(transformer());
    scale.copy = function() {
      return copy(scale, symlog()).constant(scale.constant());
    };
    return initRange.apply(scale, arguments);
  }

  // ../../node_modules/d3-scale/src/quantize.js
  function quantize() {
    var x05 = 0, x12 = 1, n11 = 1, domain = [0.5], range = [0, 1], unknown;
    function scale(x7) {
      return x7 != null && x7 <= x7 ? range[bisect_default(domain, x7, 0, n11)] : unknown;
    }
    function rescale() {
      var i9 = -1;
      domain = new Array(n11);
      while (++i9 < n11)
        domain[i9] = ((i9 + 1) * x12 - (i9 - n11) * x05) / (n11 + 1);
      return scale;
    }
    scale.domain = function(_5) {
      return arguments.length ? ([x05, x12] = _5, x05 = +x05, x12 = +x12, rescale()) : [x05, x12];
    };
    scale.range = function(_5) {
      return arguments.length ? (n11 = (range = Array.from(_5)).length - 1, rescale()) : range.slice();
    };
    scale.invertExtent = function(y6) {
      var i9 = range.indexOf(y6);
      return i9 < 0 ? [NaN, NaN] : i9 < 1 ? [x05, domain[0]] : i9 >= n11 ? [domain[n11 - 1], x12] : [domain[i9 - 1], domain[i9]];
    };
    scale.unknown = function(_5) {
      return arguments.length ? (unknown = _5, scale) : scale;
    };
    scale.thresholds = function() {
      return domain.slice();
    };
    scale.copy = function() {
      return quantize().domain([x05, x12]).range(range).unknown(unknown);
    };
    return initRange.apply(linearish(scale), arguments);
  }

  // ../../node_modules/d3-time/src/interval.js
  var t0 = new Date();
  var t1 = new Date();
  function newInterval(floori, offseti, count2, field) {
    function interval(date2) {
      return floori(date2 = arguments.length === 0 ? new Date() : new Date(+date2)), date2;
    }
    interval.floor = function(date2) {
      return floori(date2 = new Date(+date2)), date2;
    };
    interval.ceil = function(date2) {
      return floori(date2 = new Date(date2 - 1)), offseti(date2, 1), floori(date2), date2;
    };
    interval.round = function(date2) {
      var d0 = interval(date2), d1 = interval.ceil(date2);
      return date2 - d0 < d1 - date2 ? d0 : d1;
    };
    interval.offset = function(date2, step) {
      return offseti(date2 = new Date(+date2), step == null ? 1 : Math.floor(step)), date2;
    };
    interval.range = function(start2, stop, step) {
      var range = [], previous;
      start2 = interval.ceil(start2);
      step = step == null ? 1 : Math.floor(step);
      if (!(start2 < stop) || !(step > 0))
        return range;
      do
        range.push(previous = new Date(+start2)), offseti(start2, step), floori(start2);
      while (previous < start2 && start2 < stop);
      return range;
    };
    interval.filter = function(test) {
      return newInterval(function(date2) {
        if (date2 >= date2)
          while (floori(date2), !test(date2))
            date2.setTime(date2 - 1);
      }, function(date2, step) {
        if (date2 >= date2) {
          if (step < 0)
            while (++step <= 0) {
              while (offseti(date2, -1), !test(date2)) {
              }
            }
          else
            while (--step >= 0) {
              while (offseti(date2, 1), !test(date2)) {
              }
            }
        }
      });
    };
    if (count2) {
      interval.count = function(start2, end) {
        t0.setTime(+start2), t1.setTime(+end);
        floori(t0), floori(t1);
        return Math.floor(count2(t0, t1));
      };
      interval.every = function(step) {
        step = Math.floor(step);
        return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function(d4) {
          return field(d4) % step === 0;
        } : function(d4) {
          return interval.count(0, d4) % step === 0;
        });
      };
    }
    return interval;
  }

  // ../../node_modules/d3-time/src/millisecond.js
  var millisecond = newInterval(function() {
  }, function(date2, step) {
    date2.setTime(+date2 + step);
  }, function(start2, end) {
    return end - start2;
  });
  millisecond.every = function(k6) {
    k6 = Math.floor(k6);
    if (!isFinite(k6) || !(k6 > 0))
      return null;
    if (!(k6 > 1))
      return millisecond;
    return newInterval(function(date2) {
      date2.setTime(Math.floor(date2 / k6) * k6);
    }, function(date2, step) {
      date2.setTime(+date2 + step * k6);
    }, function(start2, end) {
      return (end - start2) / k6;
    });
  };
  var millisecond_default = millisecond;
  var milliseconds = millisecond.range;

  // ../../node_modules/d3-time/src/duration.js
  var durationSecond = 1e3;
  var durationMinute = durationSecond * 60;
  var durationHour = durationMinute * 60;
  var durationDay = durationHour * 24;
  var durationWeek = durationDay * 7;
  var durationMonth = durationDay * 30;
  var durationYear = durationDay * 365;

  // ../../node_modules/d3-time/src/second.js
  var second = newInterval(function(date2) {
    date2.setTime(date2 - date2.getMilliseconds());
  }, function(date2, step) {
    date2.setTime(+date2 + step * durationSecond);
  }, function(start2, end) {
    return (end - start2) / durationSecond;
  }, function(date2) {
    return date2.getUTCSeconds();
  });
  var second_default = second;
  var seconds = second.range;

  // ../../node_modules/d3-time/src/minute.js
  var minute = newInterval(function(date2) {
    date2.setTime(date2 - date2.getMilliseconds() - date2.getSeconds() * durationSecond);
  }, function(date2, step) {
    date2.setTime(+date2 + step * durationMinute);
  }, function(start2, end) {
    return (end - start2) / durationMinute;
  }, function(date2) {
    return date2.getMinutes();
  });
  var minute_default = minute;
  var minutes = minute.range;

  // ../../node_modules/d3-time/src/hour.js
  var hour = newInterval(function(date2) {
    date2.setTime(date2 - date2.getMilliseconds() - date2.getSeconds() * durationSecond - date2.getMinutes() * durationMinute);
  }, function(date2, step) {
    date2.setTime(+date2 + step * durationHour);
  }, function(start2, end) {
    return (end - start2) / durationHour;
  }, function(date2) {
    return date2.getHours();
  });
  var hour_default = hour;
  var hours = hour.range;

  // ../../node_modules/d3-time/src/day.js
  var day = newInterval((date2) => date2.setHours(0, 0, 0, 0), (date2, step) => date2.setDate(date2.getDate() + step), (start2, end) => (end - start2 - (end.getTimezoneOffset() - start2.getTimezoneOffset()) * durationMinute) / durationDay, (date2) => date2.getDate() - 1);
  var day_default = day;
  var days = day.range;

  // ../../node_modules/d3-time/src/week.js
  function weekday(i9) {
    return newInterval(function(date2) {
      date2.setDate(date2.getDate() - (date2.getDay() + 7 - i9) % 7);
      date2.setHours(0, 0, 0, 0);
    }, function(date2, step) {
      date2.setDate(date2.getDate() + step * 7);
    }, function(start2, end) {
      return (end - start2 - (end.getTimezoneOffset() - start2.getTimezoneOffset()) * durationMinute) / durationWeek;
    });
  }
  var sunday = weekday(0);
  var monday = weekday(1);
  var tuesday = weekday(2);
  var wednesday = weekday(3);
  var thursday = weekday(4);
  var friday = weekday(5);
  var saturday = weekday(6);
  var sundays = sunday.range;
  var mondays = monday.range;
  var tuesdays = tuesday.range;
  var wednesdays = wednesday.range;
  var thursdays = thursday.range;
  var fridays = friday.range;
  var saturdays = saturday.range;

  // ../../node_modules/d3-time/src/month.js
  var month = newInterval(function(date2) {
    date2.setDate(1);
    date2.setHours(0, 0, 0, 0);
  }, function(date2, step) {
    date2.setMonth(date2.getMonth() + step);
  }, function(start2, end) {
    return end.getMonth() - start2.getMonth() + (end.getFullYear() - start2.getFullYear()) * 12;
  }, function(date2) {
    return date2.getMonth();
  });
  var month_default = month;
  var months = month.range;

  // ../../node_modules/d3-time/src/year.js
  var year = newInterval(function(date2) {
    date2.setMonth(0, 1);
    date2.setHours(0, 0, 0, 0);
  }, function(date2, step) {
    date2.setFullYear(date2.getFullYear() + step);
  }, function(start2, end) {
    return end.getFullYear() - start2.getFullYear();
  }, function(date2) {
    return date2.getFullYear();
  });
  year.every = function(k6) {
    return !isFinite(k6 = Math.floor(k6)) || !(k6 > 0) ? null : newInterval(function(date2) {
      date2.setFullYear(Math.floor(date2.getFullYear() / k6) * k6);
      date2.setMonth(0, 1);
      date2.setHours(0, 0, 0, 0);
    }, function(date2, step) {
      date2.setFullYear(date2.getFullYear() + step * k6);
    });
  };
  var year_default = year;
  var years = year.range;

  // ../../node_modules/d3-time/src/utcMinute.js
  var utcMinute = newInterval(function(date2) {
    date2.setUTCSeconds(0, 0);
  }, function(date2, step) {
    date2.setTime(+date2 + step * durationMinute);
  }, function(start2, end) {
    return (end - start2) / durationMinute;
  }, function(date2) {
    return date2.getUTCMinutes();
  });
  var utcMinute_default = utcMinute;
  var utcMinutes = utcMinute.range;

  // ../../node_modules/d3-time/src/utcHour.js
  var utcHour = newInterval(function(date2) {
    date2.setUTCMinutes(0, 0, 0);
  }, function(date2, step) {
    date2.setTime(+date2 + step * durationHour);
  }, function(start2, end) {
    return (end - start2) / durationHour;
  }, function(date2) {
    return date2.getUTCHours();
  });
  var utcHour_default = utcHour;
  var utcHours = utcHour.range;

  // ../../node_modules/d3-time/src/utcDay.js
  var utcDay = newInterval(function(date2) {
    date2.setUTCHours(0, 0, 0, 0);
  }, function(date2, step) {
    date2.setUTCDate(date2.getUTCDate() + step);
  }, function(start2, end) {
    return (end - start2) / durationDay;
  }, function(date2) {
    return date2.getUTCDate() - 1;
  });
  var utcDay_default = utcDay;
  var utcDays = utcDay.range;

  // ../../node_modules/d3-time/src/utcWeek.js
  function utcWeekday(i9) {
    return newInterval(function(date2) {
      date2.setUTCDate(date2.getUTCDate() - (date2.getUTCDay() + 7 - i9) % 7);
      date2.setUTCHours(0, 0, 0, 0);
    }, function(date2, step) {
      date2.setUTCDate(date2.getUTCDate() + step * 7);
    }, function(start2, end) {
      return (end - start2) / durationWeek;
    });
  }
  var utcSunday = utcWeekday(0);
  var utcMonday = utcWeekday(1);
  var utcTuesday = utcWeekday(2);
  var utcWednesday = utcWeekday(3);
  var utcThursday = utcWeekday(4);
  var utcFriday = utcWeekday(5);
  var utcSaturday = utcWeekday(6);
  var utcSundays = utcSunday.range;
  var utcMondays = utcMonday.range;
  var utcTuesdays = utcTuesday.range;
  var utcWednesdays = utcWednesday.range;
  var utcThursdays = utcThursday.range;
  var utcFridays = utcFriday.range;
  var utcSaturdays = utcSaturday.range;

  // ../../node_modules/d3-time/src/utcMonth.js
  var utcMonth = newInterval(function(date2) {
    date2.setUTCDate(1);
    date2.setUTCHours(0, 0, 0, 0);
  }, function(date2, step) {
    date2.setUTCMonth(date2.getUTCMonth() + step);
  }, function(start2, end) {
    return end.getUTCMonth() - start2.getUTCMonth() + (end.getUTCFullYear() - start2.getUTCFullYear()) * 12;
  }, function(date2) {
    return date2.getUTCMonth();
  });
  var utcMonth_default = utcMonth;
  var utcMonths = utcMonth.range;

  // ../../node_modules/d3-time/src/utcYear.js
  var utcYear = newInterval(function(date2) {
    date2.setUTCMonth(0, 1);
    date2.setUTCHours(0, 0, 0, 0);
  }, function(date2, step) {
    date2.setUTCFullYear(date2.getUTCFullYear() + step);
  }, function(start2, end) {
    return end.getUTCFullYear() - start2.getUTCFullYear();
  }, function(date2) {
    return date2.getUTCFullYear();
  });
  utcYear.every = function(k6) {
    return !isFinite(k6 = Math.floor(k6)) || !(k6 > 0) ? null : newInterval(function(date2) {
      date2.setUTCFullYear(Math.floor(date2.getUTCFullYear() / k6) * k6);
      date2.setUTCMonth(0, 1);
      date2.setUTCHours(0, 0, 0, 0);
    }, function(date2, step) {
      date2.setUTCFullYear(date2.getUTCFullYear() + step * k6);
    });
  };
  var utcYear_default = utcYear;
  var utcYears = utcYear.range;

  // ../../node_modules/d3-time/src/ticks.js
  function ticker(year3, month3, week, day2, hour3, minute3) {
    const tickIntervals = [
      [second_default, 1, durationSecond],
      [second_default, 5, 5 * durationSecond],
      [second_default, 15, 15 * durationSecond],
      [second_default, 30, 30 * durationSecond],
      [minute3, 1, durationMinute],
      [minute3, 5, 5 * durationMinute],
      [minute3, 15, 15 * durationMinute],
      [minute3, 30, 30 * durationMinute],
      [hour3, 1, durationHour],
      [hour3, 3, 3 * durationHour],
      [hour3, 6, 6 * durationHour],
      [hour3, 12, 12 * durationHour],
      [day2, 1, durationDay],
      [day2, 2, 2 * durationDay],
      [week, 1, durationWeek],
      [month3, 1, durationMonth],
      [month3, 3, 3 * durationMonth],
      [year3, 1, durationYear]
    ];
    function ticks(start2, stop, count2) {
      const reverse = stop < start2;
      if (reverse)
        [start2, stop] = [stop, start2];
      const interval = count2 && typeof count2.range === "function" ? count2 : tickInterval(start2, stop, count2);
      const ticks2 = interval ? interval.range(start2, +stop + 1) : [];
      return reverse ? ticks2.reverse() : ticks2;
    }
    function tickInterval(start2, stop, count2) {
      const target = Math.abs(stop - start2) / count2;
      const i9 = bisector_default(([, , step2]) => step2).right(tickIntervals, target);
      if (i9 === tickIntervals.length)
        return year3.every(tickStep(start2 / durationYear, stop / durationYear, count2));
      if (i9 === 0)
        return millisecond_default.every(Math.max(tickStep(start2, stop, count2), 1));
      const [t13, step] = tickIntervals[target / tickIntervals[i9 - 1][2] < tickIntervals[i9][2] / target ? i9 - 1 : i9];
      return t13.every(step);
    }
    return [ticks, tickInterval];
  }
  var [utcTicks, utcTickInterval] = ticker(utcYear_default, utcMonth_default, utcSunday, utcDay_default, utcHour_default, utcMinute_default);
  var [timeTicks, timeTickInterval] = ticker(year_default, month_default, sunday, day_default, hour_default, minute_default);

  // ../../node_modules/d3-time-format/src/locale.js
  function localDate(d4) {
    if (0 <= d4.y && d4.y < 100) {
      var date2 = new Date(-1, d4.m, d4.d, d4.H, d4.M, d4.S, d4.L);
      date2.setFullYear(d4.y);
      return date2;
    }
    return new Date(d4.y, d4.m, d4.d, d4.H, d4.M, d4.S, d4.L);
  }
  function utcDate(d4) {
    if (0 <= d4.y && d4.y < 100) {
      var date2 = new Date(Date.UTC(-1, d4.m, d4.d, d4.H, d4.M, d4.S, d4.L));
      date2.setUTCFullYear(d4.y);
      return date2;
    }
    return new Date(Date.UTC(d4.y, d4.m, d4.d, d4.H, d4.M, d4.S, d4.L));
  }
  function newDate(y6, m5, d4) {
    return {y: y6, m: m5, d: d4, H: 0, M: 0, S: 0, L: 0};
  }
  function formatLocale(locale6) {
    var locale_dateTime = locale6.dateTime, locale_date = locale6.date, locale_time = locale6.time, locale_periods = locale6.periods, locale_weekdays = locale6.days, locale_shortWeekdays = locale6.shortDays, locale_months = locale6.months, locale_shortMonths = locale6.shortMonths;
    var periodRe = formatRe(locale_periods), periodLookup = formatLookup(locale_periods), weekdayRe = formatRe(locale_weekdays), weekdayLookup = formatLookup(locale_weekdays), shortWeekdayRe = formatRe(locale_shortWeekdays), shortWeekdayLookup = formatLookup(locale_shortWeekdays), monthRe = formatRe(locale_months), monthLookup = formatLookup(locale_months), shortMonthRe = formatRe(locale_shortMonths), shortMonthLookup = formatLookup(locale_shortMonths);
    var formats = {
      a: formatShortWeekday,
      A: formatWeekday,
      b: formatShortMonth,
      B: formatMonth,
      c: null,
      d: formatDayOfMonth,
      e: formatDayOfMonth,
      f: formatMicroseconds,
      g: formatYearISO,
      G: formatFullYearISO,
      H: formatHour24,
      I: formatHour12,
      j: formatDayOfYear,
      L: formatMilliseconds,
      m: formatMonthNumber,
      M: formatMinutes,
      p: formatPeriod,
      q: formatQuarter,
      Q: formatUnixTimestamp,
      s: formatUnixTimestampSeconds,
      S: formatSeconds,
      u: formatWeekdayNumberMonday,
      U: formatWeekNumberSunday,
      V: formatWeekNumberISO,
      w: formatWeekdayNumberSunday,
      W: formatWeekNumberMonday,
      x: null,
      X: null,
      y: formatYear,
      Y: formatFullYear,
      Z: formatZone,
      "%": formatLiteralPercent
    };
    var utcFormats = {
      a: formatUTCShortWeekday,
      A: formatUTCWeekday,
      b: formatUTCShortMonth,
      B: formatUTCMonth,
      c: null,
      d: formatUTCDayOfMonth,
      e: formatUTCDayOfMonth,
      f: formatUTCMicroseconds,
      g: formatUTCYearISO,
      G: formatUTCFullYearISO,
      H: formatUTCHour24,
      I: formatUTCHour12,
      j: formatUTCDayOfYear,
      L: formatUTCMilliseconds,
      m: formatUTCMonthNumber,
      M: formatUTCMinutes,
      p: formatUTCPeriod,
      q: formatUTCQuarter,
      Q: formatUnixTimestamp,
      s: formatUnixTimestampSeconds,
      S: formatUTCSeconds,
      u: formatUTCWeekdayNumberMonday,
      U: formatUTCWeekNumberSunday,
      V: formatUTCWeekNumberISO,
      w: formatUTCWeekdayNumberSunday,
      W: formatUTCWeekNumberMonday,
      x: null,
      X: null,
      y: formatUTCYear,
      Y: formatUTCFullYear,
      Z: formatUTCZone,
      "%": formatLiteralPercent
    };
    var parses = {
      a: parseShortWeekday,
      A: parseWeekday,
      b: parseShortMonth,
      B: parseMonth,
      c: parseLocaleDateTime,
      d: parseDayOfMonth,
      e: parseDayOfMonth,
      f: parseMicroseconds,
      g: parseYear,
      G: parseFullYear,
      H: parseHour24,
      I: parseHour24,
      j: parseDayOfYear,
      L: parseMilliseconds,
      m: parseMonthNumber,
      M: parseMinutes,
      p: parsePeriod,
      q: parseQuarter,
      Q: parseUnixTimestamp,
      s: parseUnixTimestampSeconds,
      S: parseSeconds,
      u: parseWeekdayNumberMonday,
      U: parseWeekNumberSunday,
      V: parseWeekNumberISO,
      w: parseWeekdayNumberSunday,
      W: parseWeekNumberMonday,
      x: parseLocaleDate,
      X: parseLocaleTime,
      y: parseYear,
      Y: parseFullYear,
      Z: parseZone,
      "%": parseLiteralPercent
    };
    formats.x = newFormat(locale_date, formats);
    formats.X = newFormat(locale_time, formats);
    formats.c = newFormat(locale_dateTime, formats);
    utcFormats.x = newFormat(locale_date, utcFormats);
    utcFormats.X = newFormat(locale_time, utcFormats);
    utcFormats.c = newFormat(locale_dateTime, utcFormats);
    function newFormat(specifier, formats2) {
      return function(date2) {
        var string = [], i9 = -1, j4 = 0, n11 = specifier.length, c6, pad2, format4;
        if (!(date2 instanceof Date))
          date2 = new Date(+date2);
        while (++i9 < n11) {
          if (specifier.charCodeAt(i9) === 37) {
            string.push(specifier.slice(j4, i9));
            if ((pad2 = pads[c6 = specifier.charAt(++i9)]) != null)
              c6 = specifier.charAt(++i9);
            else
              pad2 = c6 === "e" ? " " : "0";
            if (format4 = formats2[c6])
              c6 = format4(date2, pad2);
            string.push(c6);
            j4 = i9 + 1;
          }
        }
        string.push(specifier.slice(j4, i9));
        return string.join("");
      };
    }
    function newParse(specifier, Z5) {
      return function(string) {
        var d4 = newDate(1900, void 0, 1), i9 = parseSpecifier(d4, specifier, string += "", 0), week, day2;
        if (i9 != string.length)
          return null;
        if ("Q" in d4)
          return new Date(d4.Q);
        if ("s" in d4)
          return new Date(d4.s * 1e3 + ("L" in d4 ? d4.L : 0));
        if (Z5 && !("Z" in d4))
          d4.Z = 0;
        if ("p" in d4)
          d4.H = d4.H % 12 + d4.p * 12;
        if (d4.m === void 0)
          d4.m = "q" in d4 ? d4.q : 0;
        if ("V" in d4) {
          if (d4.V < 1 || d4.V > 53)
            return null;
          if (!("w" in d4))
            d4.w = 1;
          if ("Z" in d4) {
            week = utcDate(newDate(d4.y, 0, 1)), day2 = week.getUTCDay();
            week = day2 > 4 || day2 === 0 ? utcMonday.ceil(week) : utcMonday(week);
            week = utcDay_default.offset(week, (d4.V - 1) * 7);
            d4.y = week.getUTCFullYear();
            d4.m = week.getUTCMonth();
            d4.d = week.getUTCDate() + (d4.w + 6) % 7;
          } else {
            week = localDate(newDate(d4.y, 0, 1)), day2 = week.getDay();
            week = day2 > 4 || day2 === 0 ? monday.ceil(week) : monday(week);
            week = day_default.offset(week, (d4.V - 1) * 7);
            d4.y = week.getFullYear();
            d4.m = week.getMonth();
            d4.d = week.getDate() + (d4.w + 6) % 7;
          }
        } else if ("W" in d4 || "U" in d4) {
          if (!("w" in d4))
            d4.w = "u" in d4 ? d4.u % 7 : "W" in d4 ? 1 : 0;
          day2 = "Z" in d4 ? utcDate(newDate(d4.y, 0, 1)).getUTCDay() : localDate(newDate(d4.y, 0, 1)).getDay();
          d4.m = 0;
          d4.d = "W" in d4 ? (d4.w + 6) % 7 + d4.W * 7 - (day2 + 5) % 7 : d4.w + d4.U * 7 - (day2 + 6) % 7;
        }
        if ("Z" in d4) {
          d4.H += d4.Z / 100 | 0;
          d4.M += d4.Z % 100;
          return utcDate(d4);
        }
        return localDate(d4);
      };
    }
    function parseSpecifier(d4, specifier, string, j4) {
      var i9 = 0, n11 = specifier.length, m5 = string.length, c6, parse2;
      while (i9 < n11) {
        if (j4 >= m5)
          return -1;
        c6 = specifier.charCodeAt(i9++);
        if (c6 === 37) {
          c6 = specifier.charAt(i9++);
          parse2 = parses[c6 in pads ? specifier.charAt(i9++) : c6];
          if (!parse2 || (j4 = parse2(d4, string, j4)) < 0)
            return -1;
        } else if (c6 != string.charCodeAt(j4++)) {
          return -1;
        }
      }
      return j4;
    }
    function parsePeriod(d4, string, i9) {
      var n11 = periodRe.exec(string.slice(i9));
      return n11 ? (d4.p = periodLookup.get(n11[0].toLowerCase()), i9 + n11[0].length) : -1;
    }
    function parseShortWeekday(d4, string, i9) {
      var n11 = shortWeekdayRe.exec(string.slice(i9));
      return n11 ? (d4.w = shortWeekdayLookup.get(n11[0].toLowerCase()), i9 + n11[0].length) : -1;
    }
    function parseWeekday(d4, string, i9) {
      var n11 = weekdayRe.exec(string.slice(i9));
      return n11 ? (d4.w = weekdayLookup.get(n11[0].toLowerCase()), i9 + n11[0].length) : -1;
    }
    function parseShortMonth(d4, string, i9) {
      var n11 = shortMonthRe.exec(string.slice(i9));
      return n11 ? (d4.m = shortMonthLookup.get(n11[0].toLowerCase()), i9 + n11[0].length) : -1;
    }
    function parseMonth(d4, string, i9) {
      var n11 = monthRe.exec(string.slice(i9));
      return n11 ? (d4.m = monthLookup.get(n11[0].toLowerCase()), i9 + n11[0].length) : -1;
    }
    function parseLocaleDateTime(d4, string, i9) {
      return parseSpecifier(d4, locale_dateTime, string, i9);
    }
    function parseLocaleDate(d4, string, i9) {
      return parseSpecifier(d4, locale_date, string, i9);
    }
    function parseLocaleTime(d4, string, i9) {
      return parseSpecifier(d4, locale_time, string, i9);
    }
    function formatShortWeekday(d4) {
      return locale_shortWeekdays[d4.getDay()];
    }
    function formatWeekday(d4) {
      return locale_weekdays[d4.getDay()];
    }
    function formatShortMonth(d4) {
      return locale_shortMonths[d4.getMonth()];
    }
    function formatMonth(d4) {
      return locale_months[d4.getMonth()];
    }
    function formatPeriod(d4) {
      return locale_periods[+(d4.getHours() >= 12)];
    }
    function formatQuarter(d4) {
      return 1 + ~~(d4.getMonth() / 3);
    }
    function formatUTCShortWeekday(d4) {
      return locale_shortWeekdays[d4.getUTCDay()];
    }
    function formatUTCWeekday(d4) {
      return locale_weekdays[d4.getUTCDay()];
    }
    function formatUTCShortMonth(d4) {
      return locale_shortMonths[d4.getUTCMonth()];
    }
    function formatUTCMonth(d4) {
      return locale_months[d4.getUTCMonth()];
    }
    function formatUTCPeriod(d4) {
      return locale_periods[+(d4.getUTCHours() >= 12)];
    }
    function formatUTCQuarter(d4) {
      return 1 + ~~(d4.getUTCMonth() / 3);
    }
    return {
      format: function(specifier) {
        var f4 = newFormat(specifier += "", formats);
        f4.toString = function() {
          return specifier;
        };
        return f4;
      },
      parse: function(specifier) {
        var p6 = newParse(specifier += "", false);
        p6.toString = function() {
          return specifier;
        };
        return p6;
      },
      utcFormat: function(specifier) {
        var f4 = newFormat(specifier += "", utcFormats);
        f4.toString = function() {
          return specifier;
        };
        return f4;
      },
      utcParse: function(specifier) {
        var p6 = newParse(specifier += "", true);
        p6.toString = function() {
          return specifier;
        };
        return p6;
      }
    };
  }
  var pads = {"-": "", _: " ", "0": "0"};
  var numberRe = /^\s*\d+/;
  var percentRe = /^%/;
  var requoteRe = /[\\^$*+?|[\]().{}]/g;
  function pad(value, fill, width) {
    var sign3 = value < 0 ? "-" : "", string = (sign3 ? -value : value) + "", length = string.length;
    return sign3 + (length < width ? new Array(width - length + 1).join(fill) + string : string);
  }
  function requote(s4) {
    return s4.replace(requoteRe, "\\$&");
  }
  function formatRe(names) {
    return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
  }
  function formatLookup(names) {
    return new Map(names.map((name, i9) => [name.toLowerCase(), i9]));
  }
  function parseWeekdayNumberSunday(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9, i9 + 1));
    return n11 ? (d4.w = +n11[0], i9 + n11[0].length) : -1;
  }
  function parseWeekdayNumberMonday(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9, i9 + 1));
    return n11 ? (d4.u = +n11[0], i9 + n11[0].length) : -1;
  }
  function parseWeekNumberSunday(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9, i9 + 2));
    return n11 ? (d4.U = +n11[0], i9 + n11[0].length) : -1;
  }
  function parseWeekNumberISO(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9, i9 + 2));
    return n11 ? (d4.V = +n11[0], i9 + n11[0].length) : -1;
  }
  function parseWeekNumberMonday(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9, i9 + 2));
    return n11 ? (d4.W = +n11[0], i9 + n11[0].length) : -1;
  }
  function parseFullYear(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9, i9 + 4));
    return n11 ? (d4.y = +n11[0], i9 + n11[0].length) : -1;
  }
  function parseYear(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9, i9 + 2));
    return n11 ? (d4.y = +n11[0] + (+n11[0] > 68 ? 1900 : 2e3), i9 + n11[0].length) : -1;
  }
  function parseZone(d4, string, i9) {
    var n11 = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i9, i9 + 6));
    return n11 ? (d4.Z = n11[1] ? 0 : -(n11[2] + (n11[3] || "00")), i9 + n11[0].length) : -1;
  }
  function parseQuarter(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9, i9 + 1));
    return n11 ? (d4.q = n11[0] * 3 - 3, i9 + n11[0].length) : -1;
  }
  function parseMonthNumber(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9, i9 + 2));
    return n11 ? (d4.m = n11[0] - 1, i9 + n11[0].length) : -1;
  }
  function parseDayOfMonth(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9, i9 + 2));
    return n11 ? (d4.d = +n11[0], i9 + n11[0].length) : -1;
  }
  function parseDayOfYear(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9, i9 + 3));
    return n11 ? (d4.m = 0, d4.d = +n11[0], i9 + n11[0].length) : -1;
  }
  function parseHour24(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9, i9 + 2));
    return n11 ? (d4.H = +n11[0], i9 + n11[0].length) : -1;
  }
  function parseMinutes(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9, i9 + 2));
    return n11 ? (d4.M = +n11[0], i9 + n11[0].length) : -1;
  }
  function parseSeconds(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9, i9 + 2));
    return n11 ? (d4.S = +n11[0], i9 + n11[0].length) : -1;
  }
  function parseMilliseconds(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9, i9 + 3));
    return n11 ? (d4.L = +n11[0], i9 + n11[0].length) : -1;
  }
  function parseMicroseconds(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9, i9 + 6));
    return n11 ? (d4.L = Math.floor(n11[0] / 1e3), i9 + n11[0].length) : -1;
  }
  function parseLiteralPercent(d4, string, i9) {
    var n11 = percentRe.exec(string.slice(i9, i9 + 1));
    return n11 ? i9 + n11[0].length : -1;
  }
  function parseUnixTimestamp(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9));
    return n11 ? (d4.Q = +n11[0], i9 + n11[0].length) : -1;
  }
  function parseUnixTimestampSeconds(d4, string, i9) {
    var n11 = numberRe.exec(string.slice(i9));
    return n11 ? (d4.s = +n11[0], i9 + n11[0].length) : -1;
  }
  function formatDayOfMonth(d4, p6) {
    return pad(d4.getDate(), p6, 2);
  }
  function formatHour24(d4, p6) {
    return pad(d4.getHours(), p6, 2);
  }
  function formatHour12(d4, p6) {
    return pad(d4.getHours() % 12 || 12, p6, 2);
  }
  function formatDayOfYear(d4, p6) {
    return pad(1 + day_default.count(year_default(d4), d4), p6, 3);
  }
  function formatMilliseconds(d4, p6) {
    return pad(d4.getMilliseconds(), p6, 3);
  }
  function formatMicroseconds(d4, p6) {
    return formatMilliseconds(d4, p6) + "000";
  }
  function formatMonthNumber(d4, p6) {
    return pad(d4.getMonth() + 1, p6, 2);
  }
  function formatMinutes(d4, p6) {
    return pad(d4.getMinutes(), p6, 2);
  }
  function formatSeconds(d4, p6) {
    return pad(d4.getSeconds(), p6, 2);
  }
  function formatWeekdayNumberMonday(d4) {
    var day2 = d4.getDay();
    return day2 === 0 ? 7 : day2;
  }
  function formatWeekNumberSunday(d4, p6) {
    return pad(sunday.count(year_default(d4) - 1, d4), p6, 2);
  }
  function dISO(d4) {
    var day2 = d4.getDay();
    return day2 >= 4 || day2 === 0 ? thursday(d4) : thursday.ceil(d4);
  }
  function formatWeekNumberISO(d4, p6) {
    d4 = dISO(d4);
    return pad(thursday.count(year_default(d4), d4) + (year_default(d4).getDay() === 4), p6, 2);
  }
  function formatWeekdayNumberSunday(d4) {
    return d4.getDay();
  }
  function formatWeekNumberMonday(d4, p6) {
    return pad(monday.count(year_default(d4) - 1, d4), p6, 2);
  }
  function formatYear(d4, p6) {
    return pad(d4.getFullYear() % 100, p6, 2);
  }
  function formatYearISO(d4, p6) {
    d4 = dISO(d4);
    return pad(d4.getFullYear() % 100, p6, 2);
  }
  function formatFullYear(d4, p6) {
    return pad(d4.getFullYear() % 1e4, p6, 4);
  }
  function formatFullYearISO(d4, p6) {
    var day2 = d4.getDay();
    d4 = day2 >= 4 || day2 === 0 ? thursday(d4) : thursday.ceil(d4);
    return pad(d4.getFullYear() % 1e4, p6, 4);
  }
  function formatZone(d4) {
    var z6 = d4.getTimezoneOffset();
    return (z6 > 0 ? "-" : (z6 *= -1, "+")) + pad(z6 / 60 | 0, "0", 2) + pad(z6 % 60, "0", 2);
  }
  function formatUTCDayOfMonth(d4, p6) {
    return pad(d4.getUTCDate(), p6, 2);
  }
  function formatUTCHour24(d4, p6) {
    return pad(d4.getUTCHours(), p6, 2);
  }
  function formatUTCHour12(d4, p6) {
    return pad(d4.getUTCHours() % 12 || 12, p6, 2);
  }
  function formatUTCDayOfYear(d4, p6) {
    return pad(1 + utcDay_default.count(utcYear_default(d4), d4), p6, 3);
  }
  function formatUTCMilliseconds(d4, p6) {
    return pad(d4.getUTCMilliseconds(), p6, 3);
  }
  function formatUTCMicroseconds(d4, p6) {
    return formatUTCMilliseconds(d4, p6) + "000";
  }
  function formatUTCMonthNumber(d4, p6) {
    return pad(d4.getUTCMonth() + 1, p6, 2);
  }
  function formatUTCMinutes(d4, p6) {
    return pad(d4.getUTCMinutes(), p6, 2);
  }
  function formatUTCSeconds(d4, p6) {
    return pad(d4.getUTCSeconds(), p6, 2);
  }
  function formatUTCWeekdayNumberMonday(d4) {
    var dow = d4.getUTCDay();
    return dow === 0 ? 7 : dow;
  }
  function formatUTCWeekNumberSunday(d4, p6) {
    return pad(utcSunday.count(utcYear_default(d4) - 1, d4), p6, 2);
  }
  function UTCdISO(d4) {
    var day2 = d4.getUTCDay();
    return day2 >= 4 || day2 === 0 ? utcThursday(d4) : utcThursday.ceil(d4);
  }
  function formatUTCWeekNumberISO(d4, p6) {
    d4 = UTCdISO(d4);
    return pad(utcThursday.count(utcYear_default(d4), d4) + (utcYear_default(d4).getUTCDay() === 4), p6, 2);
  }
  function formatUTCWeekdayNumberSunday(d4) {
    return d4.getUTCDay();
  }
  function formatUTCWeekNumberMonday(d4, p6) {
    return pad(utcMonday.count(utcYear_default(d4) - 1, d4), p6, 2);
  }
  function formatUTCYear(d4, p6) {
    return pad(d4.getUTCFullYear() % 100, p6, 2);
  }
  function formatUTCYearISO(d4, p6) {
    d4 = UTCdISO(d4);
    return pad(d4.getUTCFullYear() % 100, p6, 2);
  }
  function formatUTCFullYear(d4, p6) {
    return pad(d4.getUTCFullYear() % 1e4, p6, 4);
  }
  function formatUTCFullYearISO(d4, p6) {
    var day2 = d4.getUTCDay();
    d4 = day2 >= 4 || day2 === 0 ? utcThursday(d4) : utcThursday.ceil(d4);
    return pad(d4.getUTCFullYear() % 1e4, p6, 4);
  }
  function formatUTCZone() {
    return "+0000";
  }
  function formatLiteralPercent() {
    return "%";
  }
  function formatUnixTimestamp(d4) {
    return +d4;
  }
  function formatUnixTimestampSeconds(d4) {
    return Math.floor(+d4 / 1e3);
  }

  // ../../node_modules/d3-time-format/src/defaultLocale.js
  var locale4;
  var timeFormat;
  var timeParse;
  var utcFormat;
  var utcParse;
  defaultLocale2({
    dateTime: "%x, %X",
    date: "%-m/%-d/%Y",
    time: "%-I:%M:%S %p",
    periods: ["AM", "PM"],
    days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
  });
  function defaultLocale2(definition) {
    locale4 = formatLocale(definition);
    timeFormat = locale4.format;
    timeParse = locale4.parse;
    utcFormat = locale4.utcFormat;
    utcParse = locale4.utcParse;
    return locale4;
  }

  // ../../node_modules/d3-scale/src/time.js
  function date(t13) {
    return new Date(t13);
  }
  function number2(t13) {
    return t13 instanceof Date ? +t13 : +new Date(+t13);
  }
  function calendar(ticks, tickInterval, year3, month3, week, day2, hour3, minute3, second3, format4) {
    var scale = continuous(), invert = scale.invert, domain = scale.domain;
    var formatMillisecond = format4(".%L"), formatSecond = format4(":%S"), formatMinute = format4("%I:%M"), formatHour = format4("%I %p"), formatDay = format4("%a %d"), formatWeek = format4("%b %d"), formatMonth = format4("%B"), formatYear2 = format4("%Y");
    function tickFormat2(date2) {
      return (second3(date2) < date2 ? formatMillisecond : minute3(date2) < date2 ? formatSecond : hour3(date2) < date2 ? formatMinute : day2(date2) < date2 ? formatHour : month3(date2) < date2 ? week(date2) < date2 ? formatDay : formatWeek : year3(date2) < date2 ? formatMonth : formatYear2)(date2);
    }
    scale.invert = function(y6) {
      return new Date(invert(y6));
    };
    scale.domain = function(_5) {
      return arguments.length ? domain(Array.from(_5, number2)) : domain().map(date);
    };
    scale.ticks = function(interval) {
      var d4 = domain();
      return ticks(d4[0], d4[d4.length - 1], interval == null ? 10 : interval);
    };
    scale.tickFormat = function(count2, specifier) {
      return specifier == null ? tickFormat2 : format4(specifier);
    };
    scale.nice = function(interval) {
      var d4 = domain();
      if (!interval || typeof interval.range !== "function")
        interval = tickInterval(d4[0], d4[d4.length - 1], interval == null ? 10 : interval);
      return interval ? domain(nice(d4, interval)) : scale;
    };
    scale.copy = function() {
      return copy(scale, calendar(ticks, tickInterval, year3, month3, week, day2, hour3, minute3, second3, format4));
    };
    return scale;
  }
  function time2() {
    return initRange.apply(calendar(timeTicks, timeTickInterval, year_default, month_default, sunday, day_default, hour_default, minute_default, second_default, timeFormat).domain([new Date(2e3, 0, 1), new Date(2e3, 0, 2)]), arguments);
  }

  // ../../node_modules/d3-scale/src/utcTime.js
  function utcTime() {
    return initRange.apply(calendar(utcTicks, utcTickInterval, utcYear_default, utcMonth_default, utcSunday, utcDay_default, utcHour_default, utcMinute_default, second_default, utcFormat).domain([Date.UTC(2e3, 0, 1), Date.UTC(2e3, 0, 2)]), arguments);
  }

  // ../../node_modules/d3-scale-chromatic/src/colors.js
  function colors_default(specifier) {
    var n11 = specifier.length / 6 | 0, colors2 = new Array(n11), i9 = 0;
    while (i9 < n11)
      colors2[i9] = "#" + specifier.slice(i9 * 6, ++i9 * 6);
    return colors2;
  }

  // ../../node_modules/d3-scale-chromatic/src/categorical/category10.js
  var category10_default = colors_default("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");

  // ../../node_modules/d3-scale-chromatic/src/categorical/Accent.js
  var Accent_default = colors_default("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666");

  // ../../node_modules/d3-scale-chromatic/src/categorical/Dark2.js
  var Dark2_default = colors_default("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");

  // ../../node_modules/d3-scale-chromatic/src/categorical/Paired.js
  var Paired_default = colors_default("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");

  // ../../node_modules/d3-scale-chromatic/src/categorical/Pastel1.js
  var Pastel1_default = colors_default("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2");

  // ../../node_modules/d3-scale-chromatic/src/categorical/Pastel2.js
  var Pastel2_default = colors_default("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc");

  // ../../node_modules/d3-scale-chromatic/src/categorical/Set1.js
  var Set1_default = colors_default("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999");

  // ../../node_modules/d3-scale-chromatic/src/categorical/Set2.js
  var Set2_default = colors_default("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3");

  // ../../node_modules/d3-scale-chromatic/src/categorical/Set3.js
  var Set3_default = colors_default("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");

  // ../../node_modules/d3-scale-chromatic/src/ramp.js
  var ramp_default = (scheme28) => rgbBasis(scheme28[scheme28.length - 1]);

  // ../../node_modules/d3-scale-chromatic/src/diverging/BrBG.js
  var scheme = new Array(3).concat("d8b365f5f5f55ab4ac", "a6611adfc27d80cdc1018571", "a6611adfc27df5f5f580cdc1018571", "8c510ad8b365f6e8c3c7eae55ab4ac01665e", "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e", "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e", "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e", "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30", "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(colors_default);
  var BrBG_default = ramp_default(scheme);

  // ../../node_modules/d3-scale-chromatic/src/diverging/PRGn.js
  var scheme2 = new Array(3).concat("af8dc3f7f7f77fbf7b", "7b3294c2a5cfa6dba0008837", "7b3294c2a5cff7f7f7a6dba0008837", "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837", "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837", "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837", "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837", "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b", "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(colors_default);
  var PRGn_default = ramp_default(scheme2);

  // ../../node_modules/d3-scale-chromatic/src/diverging/PiYG.js
  var scheme3 = new Array(3).concat("e9a3c9f7f7f7a1d76a", "d01c8bf1b6dab8e1864dac26", "d01c8bf1b6daf7f7f7b8e1864dac26", "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221", "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221", "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221", "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221", "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419", "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(colors_default);
  var PiYG_default = ramp_default(scheme3);

  // ../../node_modules/d3-scale-chromatic/src/diverging/PuOr.js
  var scheme4 = new Array(3).concat("998ec3f7f7f7f1a340", "5e3c99b2abd2fdb863e66101", "5e3c99b2abd2f7f7f7fdb863e66101", "542788998ec3d8daebfee0b6f1a340b35806", "542788998ec3d8daebf7f7f7fee0b6f1a340b35806", "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806", "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806", "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08", "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(colors_default);
  var PuOr_default = ramp_default(scheme4);

  // ../../node_modules/d3-scale-chromatic/src/diverging/RdBu.js
  var scheme5 = new Array(3).concat("ef8a62f7f7f767a9cf", "ca0020f4a58292c5de0571b0", "ca0020f4a582f7f7f792c5de0571b0", "b2182bef8a62fddbc7d1e5f067a9cf2166ac", "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac", "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac", "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac", "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061", "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(colors_default);
  var RdBu_default = ramp_default(scheme5);

  // ../../node_modules/d3-scale-chromatic/src/diverging/RdGy.js
  var scheme6 = new Array(3).concat("ef8a62ffffff999999", "ca0020f4a582bababa404040", "ca0020f4a582ffffffbababa404040", "b2182bef8a62fddbc7e0e0e09999994d4d4d", "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d", "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d", "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d", "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a", "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(colors_default);
  var RdGy_default = ramp_default(scheme6);

  // ../../node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js
  var scheme7 = new Array(3).concat("fc8d59ffffbf91bfdb", "d7191cfdae61abd9e92c7bb6", "d7191cfdae61ffffbfabd9e92c7bb6", "d73027fc8d59fee090e0f3f891bfdb4575b4", "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4", "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4", "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4", "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695", "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(colors_default);
  var RdYlBu_default = ramp_default(scheme7);

  // ../../node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js
  var scheme8 = new Array(3).concat("fc8d59ffffbf91cf60", "d7191cfdae61a6d96a1a9641", "d7191cfdae61ffffbfa6d96a1a9641", "d73027fc8d59fee08bd9ef8b91cf601a9850", "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850", "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850", "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850", "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837", "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(colors_default);
  var RdYlGn_default = ramp_default(scheme8);

  // ../../node_modules/d3-scale-chromatic/src/diverging/Spectral.js
  var scheme9 = new Array(3).concat("fc8d59ffffbf99d594", "d7191cfdae61abdda42b83ba", "d7191cfdae61ffffbfabdda42b83ba", "d53e4ffc8d59fee08be6f59899d5943288bd", "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd", "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd", "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd", "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2", "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(colors_default);
  var Spectral_default = ramp_default(scheme9);

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js
  var scheme10 = new Array(3).concat("e5f5f999d8c92ca25f", "edf8fbb2e2e266c2a4238b45", "edf8fbb2e2e266c2a42ca25f006d2c", "edf8fbccece699d8c966c2a42ca25f006d2c", "edf8fbccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(colors_default);
  var BuGn_default = ramp_default(scheme10);

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js
  var scheme11 = new Array(3).concat("e0ecf49ebcda8856a7", "edf8fbb3cde38c96c688419d", "edf8fbb3cde38c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(colors_default);
  var BuPu_default = ramp_default(scheme11);

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js
  var scheme12 = new Array(3).concat("e0f3dba8ddb543a2ca", "f0f9e8bae4bc7bccc42b8cbe", "f0f9e8bae4bc7bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(colors_default);
  var GnBu_default = ramp_default(scheme12);

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js
  var scheme13 = new Array(3).concat("fee8c8fdbb84e34a33", "fef0d9fdcc8afc8d59d7301f", "fef0d9fdcc8afc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(colors_default);
  var OrRd_default = ramp_default(scheme13);

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js
  var scheme14 = new Array(3).concat("ece2f0a6bddb1c9099", "f6eff7bdc9e167a9cf02818a", "f6eff7bdc9e167a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(colors_default);
  var PuBuGn_default = ramp_default(scheme14);

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js
  var scheme15 = new Array(3).concat("ece7f2a6bddb2b8cbe", "f1eef6bdc9e174a9cf0570b0", "f1eef6bdc9e174a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(colors_default);
  var PuBu_default = ramp_default(scheme15);

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js
  var scheme16 = new Array(3).concat("e7e1efc994c7dd1c77", "f1eef6d7b5d8df65b0ce1256", "f1eef6d7b5d8df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(colors_default);
  var PuRd_default = ramp_default(scheme16);

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js
  var scheme17 = new Array(3).concat("fde0ddfa9fb5c51b8a", "feebe2fbb4b9f768a1ae017e", "feebe2fbb4b9f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(colors_default);
  var RdPu_default = ramp_default(scheme17);

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js
  var scheme18 = new Array(3).concat("edf8b17fcdbb2c7fb8", "ffffcca1dab441b6c4225ea8", "ffffcca1dab441b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(colors_default);
  var YlGnBu_default = ramp_default(scheme18);

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js
  var scheme19 = new Array(3).concat("f7fcb9addd8e31a354", "ffffccc2e69978c679238443", "ffffccc2e69978c67931a354006837", "ffffccd9f0a3addd8e78c67931a354006837", "ffffccd9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(colors_default);
  var YlGn_default = ramp_default(scheme19);

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js
  var scheme20 = new Array(3).concat("fff7bcfec44fd95f0e", "ffffd4fed98efe9929cc4c02", "ffffd4fed98efe9929d95f0e993404", "ffffd4fee391fec44ffe9929d95f0e993404", "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(colors_default);
  var YlOrBr_default = ramp_default(scheme20);

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js
  var scheme21 = new Array(3).concat("ffeda0feb24cf03b20", "ffffb2fecc5cfd8d3ce31a1c", "ffffb2fecc5cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(colors_default);
  var YlOrRd_default = ramp_default(scheme21);

  // ../../node_modules/d3-scale-chromatic/src/sequential-single/Blues.js
  var scheme22 = new Array(3).concat("deebf79ecae13182bd", "eff3ffbdd7e76baed62171b5", "eff3ffbdd7e76baed63182bd08519c", "eff3ffc6dbef9ecae16baed63182bd08519c", "eff3ffc6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(colors_default);
  var Blues_default = ramp_default(scheme22);

  // ../../node_modules/d3-scale-chromatic/src/sequential-single/Greens.js
  var scheme23 = new Array(3).concat("e5f5e0a1d99b31a354", "edf8e9bae4b374c476238b45", "edf8e9bae4b374c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(colors_default);
  var Greens_default = ramp_default(scheme23);

  // ../../node_modules/d3-scale-chromatic/src/sequential-single/Greys.js
  var scheme24 = new Array(3).concat("f0f0f0bdbdbd636363", "f7f7f7cccccc969696525252", "f7f7f7cccccc969696636363252525", "f7f7f7d9d9d9bdbdbd969696636363252525", "f7f7f7d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(colors_default);
  var Greys_default = ramp_default(scheme24);

  // ../../node_modules/d3-scale-chromatic/src/sequential-single/Purples.js
  var scheme25 = new Array(3).concat("efedf5bcbddc756bb1", "f2f0f7cbc9e29e9ac86a51a3", "f2f0f7cbc9e29e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(colors_default);
  var Purples_default = ramp_default(scheme25);

  // ../../node_modules/d3-scale-chromatic/src/sequential-single/Reds.js
  var scheme26 = new Array(3).concat("fee0d2fc9272de2d26", "fee5d9fcae91fb6a4acb181d", "fee5d9fcae91fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(colors_default);
  var Reds_default = ramp_default(scheme26);

  // ../../node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js
  var scheme27 = new Array(3).concat("fee6cefdae6be6550d", "feeddefdbe85fd8d3cd94701", "feeddefdbe85fd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(colors_default);
  var Oranges_default = ramp_default(scheme27);

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js
  function cividis_default(t13) {
    t13 = Math.max(0, Math.min(1, t13));
    return "rgb(" + Math.max(0, Math.min(255, Math.round(-4.54 - t13 * (35.34 - t13 * (2381.73 - t13 * (6402.7 - t13 * (7024.72 - t13 * 2710.57))))))) + ", " + Math.max(0, Math.min(255, Math.round(32.49 + t13 * (170.73 + t13 * (52.82 - t13 * (131.46 - t13 * (176.58 - t13 * 67.37))))))) + ", " + Math.max(0, Math.min(255, Math.round(81.24 + t13 * (442.36 - t13 * (2482.43 - t13 * (6167.24 - t13 * (6614.94 - t13 * 2475.67))))))) + ")";
  }

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js
  var cubehelix_default2 = cubehelixLong(cubehelix(300, 0.5, 0), cubehelix(-240, 0.5, 1));

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js
  var warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.5, 0.8));
  var cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.5, 0.8));
  var c = cubehelix();
  function rainbow_default(t13) {
    if (t13 < 0 || t13 > 1)
      t13 -= Math.floor(t13);
    var ts2 = Math.abs(t13 - 0.5);
    c.h = 360 * t13 - 100;
    c.s = 1.5 - 1.5 * ts2;
    c.l = 0.8 - 0.9 * ts2;
    return c + "";
  }

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js
  var c2 = rgb2();
  var pi_1_3 = Math.PI / 3;
  var pi_2_3 = Math.PI * 2 / 3;
  function sinebow_default(t13) {
    var x7;
    t13 = (0.5 - t13) * Math.PI;
    c2.r = 255 * (x7 = Math.sin(t13)) * x7;
    c2.g = 255 * (x7 = Math.sin(t13 + pi_1_3)) * x7;
    c2.b = 255 * (x7 = Math.sin(t13 + pi_2_3)) * x7;
    return c2 + "";
  }

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js
  function turbo_default(t13) {
    t13 = Math.max(0, Math.min(1, t13));
    return "rgb(" + Math.max(0, Math.min(255, Math.round(34.61 + t13 * (1172.33 - t13 * (10793.56 - t13 * (33300.12 - t13 * (38394.49 - t13 * 14825.05))))))) + ", " + Math.max(0, Math.min(255, Math.round(23.31 + t13 * (557.33 + t13 * (1225.33 - t13 * (3574.96 - t13 * (1073.77 + t13 * 707.56))))))) + ", " + Math.max(0, Math.min(255, Math.round(27.2 + t13 * (3211.1 - t13 * (15327.97 - t13 * (27814 - t13 * (22569.18 - t13 * 6838.66))))))) + ")";
  }

  // ../../node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js
  function ramp(range) {
    var n11 = range.length;
    return function(t13) {
      return range[Math.max(0, Math.min(n11 - 1, Math.floor(t13 * n11)))];
    };
  }
  var viridis_default = ramp(colors_default("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));
  var magma = ramp(colors_default("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
  var inferno = ramp(colors_default("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
  var plasma = ramp(colors_default("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));

  // ../../node_modules/@nivo/core/dist/nivo-core.es.js
  var import_isFunction5 = __toModule(require_isFunction());
  var import_without = __toModule(require_without());

  // ../../node_modules/d3-path/src/path.js
  var pi = Math.PI;
  var tau = 2 * pi;
  var epsilon = 1e-6;
  var tauEpsilon = tau - epsilon;
  function Path() {
    this._x0 = this._y0 = this._x1 = this._y1 = null;
    this._ = "";
  }
  function path() {
    return new Path();
  }
  Path.prototype = path.prototype = {
    constructor: Path,
    moveTo: function(x7, y6) {
      this._ += "M" + (this._x0 = this._x1 = +x7) + "," + (this._y0 = this._y1 = +y6);
    },
    closePath: function() {
      if (this._x1 !== null) {
        this._x1 = this._x0, this._y1 = this._y0;
        this._ += "Z";
      }
    },
    lineTo: function(x7, y6) {
      this._ += "L" + (this._x1 = +x7) + "," + (this._y1 = +y6);
    },
    quadraticCurveTo: function(x12, y12, x7, y6) {
      this._ += "Q" + +x12 + "," + +y12 + "," + (this._x1 = +x7) + "," + (this._y1 = +y6);
    },
    bezierCurveTo: function(x12, y12, x22, y22, x7, y6) {
      this._ += "C" + +x12 + "," + +y12 + "," + +x22 + "," + +y22 + "," + (this._x1 = +x7) + "," + (this._y1 = +y6);
    },
    arcTo: function(x12, y12, x22, y22, r9) {
      x12 = +x12, y12 = +y12, x22 = +x22, y22 = +y22, r9 = +r9;
      var x05 = this._x1, y05 = this._y1, x21 = x22 - x12, y21 = y22 - y12, x01 = x05 - x12, y01 = y05 - y12, l01_2 = x01 * x01 + y01 * y01;
      if (r9 < 0)
        throw new Error("negative radius: " + r9);
      if (this._x1 === null) {
        this._ += "M" + (this._x1 = x12) + "," + (this._y1 = y12);
      } else if (!(l01_2 > epsilon))
        ;
      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r9) {
        this._ += "L" + (this._x1 = x12) + "," + (this._y1 = y12);
      } else {
        var x20 = x22 - x05, y20 = y22 - y05, l21_2 = x21 * x21 + y21 * y21, l20_2 = x20 * x20 + y20 * y20, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l4 = r9 * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l4 / l01, t21 = l4 / l21;
        if (Math.abs(t01 - 1) > epsilon) {
          this._ += "L" + (x12 + t01 * x01) + "," + (y12 + t01 * y01);
        }
        this._ += "A" + r9 + "," + r9 + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x12 + t21 * x21) + "," + (this._y1 = y12 + t21 * y21);
      }
    },
    arc: function(x7, y6, r9, a0, a1, ccw) {
      x7 = +x7, y6 = +y6, r9 = +r9, ccw = !!ccw;
      var dx = r9 * Math.cos(a0), dy = r9 * Math.sin(a0), x05 = x7 + dx, y05 = y6 + dy, cw = 1 ^ ccw, da = ccw ? a0 - a1 : a1 - a0;
      if (r9 < 0)
        throw new Error("negative radius: " + r9);
      if (this._x1 === null) {
        this._ += "M" + x05 + "," + y05;
      } else if (Math.abs(this._x1 - x05) > epsilon || Math.abs(this._y1 - y05) > epsilon) {
        this._ += "L" + x05 + "," + y05;
      }
      if (!r9)
        return;
      if (da < 0)
        da = da % tau + tau;
      if (da > tauEpsilon) {
        this._ += "A" + r9 + "," + r9 + ",0,1," + cw + "," + (x7 - dx) + "," + (y6 - dy) + "A" + r9 + "," + r9 + ",0,1," + cw + "," + (this._x1 = x05) + "," + (this._y1 = y05);
      } else if (da > epsilon) {
        this._ += "A" + r9 + "," + r9 + ",0," + +(da >= pi) + "," + cw + "," + (this._x1 = x7 + r9 * Math.cos(a1)) + "," + (this._y1 = y6 + r9 * Math.sin(a1));
      }
    },
    rect: function(x7, y6, w5, h4) {
      this._ += "M" + (this._x0 = this._x1 = +x7) + "," + (this._y0 = this._y1 = +y6) + "h" + +w5 + "v" + +h4 + "h" + -w5 + "Z";
    },
    toString: function() {
      return this._;
    }
  };
  var path_default = path;

  // ../../node_modules/d3-shape/src/constant.js
  function constant_default2(x7) {
    return function constant() {
      return x7;
    };
  }

  // ../../node_modules/d3-shape/src/math.js
  var epsilon2 = 1e-12;
  var pi2 = Math.PI;
  var halfPi = pi2 / 2;
  var tau2 = 2 * pi2;

  // ../../node_modules/d3-shape/src/curve/linear.js
  function Linear(context) {
    this._context = context;
  }
  Linear.prototype = {
    areaStart: function() {
      this._line = 0;
    },
    areaEnd: function() {
      this._line = NaN;
    },
    lineStart: function() {
      this._point = 0;
    },
    lineEnd: function() {
      if (this._line || this._line !== 0 && this._point === 1)
        this._context.closePath();
      this._line = 1 - this._line;
    },
    point: function(x7, y6) {
      x7 = +x7, y6 = +y6;
      switch (this._point) {
        case 0:
          this._point = 1;
          this._line ? this._context.lineTo(x7, y6) : this._context.moveTo(x7, y6);
          break;
        case 1:
          this._point = 2;
        default:
          this._context.lineTo(x7, y6);
          break;
      }
    }
  };
  function linear_default(context) {
    return new Linear(context);
  }

  // ../../node_modules/d3-shape/src/point.js
  function x2(p6) {
    return p6[0];
  }
  function y2(p6) {
    return p6[1];
  }

  // ../../node_modules/d3-shape/src/line.js
  function line_default() {
    var x7 = x2, y6 = y2, defined = constant_default2(true), context = null, curve = linear_default, output = null;
    function line(data) {
      var i9, n11 = data.length, d4, defined0 = false, buffer;
      if (context == null)
        output = curve(buffer = path_default());
      for (i9 = 0; i9 <= n11; ++i9) {
        if (!(i9 < n11 && defined(d4 = data[i9], i9, data)) === defined0) {
          if (defined0 = !defined0)
            output.lineStart();
          else
            output.lineEnd();
        }
        if (defined0)
          output.point(+x7(d4, i9, data), +y6(d4, i9, data));
      }
      if (buffer)
        return output = null, buffer + "" || null;
    }
    line.x = function(_5) {
      return arguments.length ? (x7 = typeof _5 === "function" ? _5 : constant_default2(+_5), line) : x7;
    };
    line.y = function(_5) {
      return arguments.length ? (y6 = typeof _5 === "function" ? _5 : constant_default2(+_5), line) : y6;
    };
    line.defined = function(_5) {
      return arguments.length ? (defined = typeof _5 === "function" ? _5 : constant_default2(!!_5), line) : defined;
    };
    line.curve = function(_5) {
      return arguments.length ? (curve = _5, context != null && (output = curve(context)), line) : curve;
    };
    line.context = function(_5) {
      return arguments.length ? (_5 == null ? context = output = null : output = curve(context = _5), line) : context;
    };
    return line;
  }

  // ../../node_modules/d3-shape/src/area.js
  function area_default() {
    var x05 = x2, x12 = null, y05 = constant_default2(0), y12 = y2, defined = constant_default2(true), context = null, curve = linear_default, output = null;
    function area(data) {
      var i9, j4, k6, n11 = data.length, d4, defined0 = false, buffer, x0z = new Array(n11), y0z = new Array(n11);
      if (context == null)
        output = curve(buffer = path_default());
      for (i9 = 0; i9 <= n11; ++i9) {
        if (!(i9 < n11 && defined(d4 = data[i9], i9, data)) === defined0) {
          if (defined0 = !defined0) {
            j4 = i9;
            output.areaStart();
            output.lineStart();
          } else {
            output.lineEnd();
            output.lineStart();
            for (k6 = i9 - 1; k6 >= j4; --k6) {
              output.point(x0z[k6], y0z[k6]);
            }
            output.lineEnd();
            output.areaEnd();
          }
        }
        if (defined0) {
          x0z[i9] = +x05(d4, i9, data), y0z[i9] = +y05(d4, i9, data);
          output.point(x12 ? +x12(d4, i9, data) : x0z[i9], y12 ? +y12(d4, i9, data) : y0z[i9]);
        }
      }
      if (buffer)
        return output = null, buffer + "" || null;
    }
    function arealine() {
      return line_default().defined(defined).curve(curve).context(context);
    }
    area.x = function(_5) {
      return arguments.length ? (x05 = typeof _5 === "function" ? _5 : constant_default2(+_5), x12 = null, area) : x05;
    };
    area.x0 = function(_5) {
      return arguments.length ? (x05 = typeof _5 === "function" ? _5 : constant_default2(+_5), area) : x05;
    };
    area.x1 = function(_5) {
      return arguments.length ? (x12 = _5 == null ? null : typeof _5 === "function" ? _5 : constant_default2(+_5), area) : x12;
    };
    area.y = function(_5) {
      return arguments.length ? (y05 = typeof _5 === "function" ? _5 : constant_default2(+_5), y12 = null, area) : y05;
    };
    area.y0 = function(_5) {
      return arguments.length ? (y05 = typeof _5 === "function" ? _5 : constant_default2(+_5), area) : y05;
    };
    area.y1 = function(_5) {
      return arguments.length ? (y12 = _5 == null ? null : typeof _5 === "function" ? _5 : constant_default2(+_5), area) : y12;
    };
    area.lineX0 = area.lineY0 = function() {
      return arealine().x(x05).y(y05);
    };
    area.lineY1 = function() {
      return arealine().x(x05).y(y12);
    };
    area.lineX1 = function() {
      return arealine().x(x12).y(y05);
    };
    area.defined = function(_5) {
      return arguments.length ? (defined = typeof _5 === "function" ? _5 : constant_default2(!!_5), area) : defined;
    };
    area.curve = function(_5) {
      return arguments.length ? (curve = _5, context != null && (output = curve(context)), area) : curve;
    };
    area.context = function(_5) {
      return arguments.length ? (_5 == null ? context = output = null : output = curve(context = _5), area) : context;
    };
    return area;
  }

  // ../../node_modules/d3-shape/src/array.js
  var slice = Array.prototype.slice;

  // ../../node_modules/d3-shape/src/noop.js
  function noop_default() {
  }

  // ../../node_modules/d3-shape/src/curve/basis.js
  function point2(that, x7, y6) {
    that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x7) / 6, (that._y0 + 4 * that._y1 + y6) / 6);
  }
  function Basis(context) {
    this._context = context;
  }
  Basis.prototype = {
    areaStart: function() {
      this._line = 0;
    },
    areaEnd: function() {
      this._line = NaN;
    },
    lineStart: function() {
      this._x0 = this._x1 = this._y0 = this._y1 = NaN;
      this._point = 0;
    },
    lineEnd: function() {
      switch (this._point) {
        case 3:
          point2(this, this._x1, this._y1);
        case 2:
          this._context.lineTo(this._x1, this._y1);
          break;
      }
      if (this._line || this._line !== 0 && this._point === 1)
        this._context.closePath();
      this._line = 1 - this._line;
    },
    point: function(x7, y6) {
      x7 = +x7, y6 = +y6;
      switch (this._point) {
        case 0:
          this._point = 1;
          this._line ? this._context.lineTo(x7, y6) : this._context.moveTo(x7, y6);
          break;
        case 1:
          this._point = 2;
          break;
        case 2:
          this._point = 3;
          this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
        default:
          point2(this, x7, y6);
          break;
      }
      this._x0 = this._x1, this._x1 = x7;
      this._y0 = this._y1, this._y1 = y6;
    }
  };
  function basis_default2(context) {
    return new Basis(context);
  }

  // ../../node_modules/d3-shape/src/curve/basisClosed.js
  function BasisClosed(context) {
    this._context = context;
  }
  BasisClosed.prototype = {
    areaStart: noop_default,
    areaEnd: noop_default,
    lineStart: function() {
      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
      this._point = 0;
    },
    lineEnd: function() {
      switch (this._point) {
        case 1: {
          this._context.moveTo(this._x2, this._y2);
          this._context.closePath();
          break;
        }
        case 2: {
          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
          this._context.closePath();
          break;
        }
        case 3: {
          this.point(this._x2, this._y2);
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          break;
        }
      }
    },
    point: function(x7, y6) {
      x7 = +x7, y6 = +y6;
      switch (this._point) {
        case 0:
          this._point = 1;
          this._x2 = x7, this._y2 = y6;
          break;
        case 1:
          this._point = 2;
          this._x3 = x7, this._y3 = y6;
          break;
        case 2:
          this._point = 3;
          this._x4 = x7, this._y4 = y6;
          this._context.moveTo((this._x0 + 4 * this._x1 + x7) / 6, (this._y0 + 4 * this._y1 + y6) / 6);
          break;
        default:
          point2(this, x7, y6);
          break;
      }
      this._x0 = this._x1, this._x1 = x7;
      this._y0 = this._y1, this._y1 = y6;
    }
  };
  function basisClosed_default2(context) {
    return new BasisClosed(context);
  }

  // ../../node_modules/d3-shape/src/curve/basisOpen.js
  function BasisOpen(context) {
    this._context = context;
  }
  BasisOpen.prototype = {
    areaStart: function() {
      this._line = 0;
    },
    areaEnd: function() {
      this._line = NaN;
    },
    lineStart: function() {
      this._x0 = this._x1 = this._y0 = this._y1 = NaN;
      this._point = 0;
    },
    lineEnd: function() {
      if (this._line || this._line !== 0 && this._point === 3)
        this._context.closePath();
      this._line = 1 - this._line;
    },
    point: function(x7, y6) {
      x7 = +x7, y6 = +y6;
      switch (this._point) {
        case 0:
          this._point = 1;
          break;
        case 1:
          this._point = 2;
          break;
        case 2:
          this._point = 3;
          var x05 = (this._x0 + 4 * this._x1 + x7) / 6, y05 = (this._y0 + 4 * this._y1 + y6) / 6;
          this._line ? this._context.lineTo(x05, y05) : this._context.moveTo(x05, y05);
          break;
        case 3:
          this._point = 4;
        default:
          point2(this, x7, y6);
          break;
      }
      this._x0 = this._x1, this._x1 = x7;
      this._y0 = this._y1, this._y1 = y6;
    }
  };
  function basisOpen_default(context) {
    return new BasisOpen(context);
  }

  // ../../node_modules/d3-shape/src/curve/bundle.js
  function Bundle(context, beta) {
    this._basis = new Basis(context);
    this._beta = beta;
  }
  Bundle.prototype = {
    lineStart: function() {
      this._x = [];
      this._y = [];
      this._basis.lineStart();
    },
    lineEnd: function() {
      var x7 = this._x, y6 = this._y, j4 = x7.length - 1;
      if (j4 > 0) {
        var x05 = x7[0], y05 = y6[0], dx = x7[j4] - x05, dy = y6[j4] - y05, i9 = -1, t13;
        while (++i9 <= j4) {
          t13 = i9 / j4;
          this._basis.point(this._beta * x7[i9] + (1 - this._beta) * (x05 + t13 * dx), this._beta * y6[i9] + (1 - this._beta) * (y05 + t13 * dy));
        }
      }
      this._x = this._y = null;
      this._basis.lineEnd();
    },
    point: function(x7, y6) {
      this._x.push(+x7);
      this._y.push(+y6);
    }
  };
  var bundle_default = function custom(beta) {
    function bundle(context) {
      return beta === 1 ? new Basis(context) : new Bundle(context, beta);
    }
    bundle.beta = function(beta2) {
      return custom(+beta2);
    };
    return bundle;
  }(0.85);

  // ../../node_modules/d3-shape/src/curve/cardinal.js
  function point3(that, x7, y6) {
    that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x7), that._y2 + that._k * (that._y1 - y6), that._x2, that._y2);
  }
  function Cardinal(context, tension) {
    this._context = context;
    this._k = (1 - tension) / 6;
  }
  Cardinal.prototype = {
    areaStart: function() {
      this._line = 0;
    },
    areaEnd: function() {
      this._line = NaN;
    },
    lineStart: function() {
      this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
      this._point = 0;
    },
    lineEnd: function() {
      switch (this._point) {
        case 2:
          this._context.lineTo(this._x2, this._y2);
          break;
        case 3:
          point3(this, this._x1, this._y1);
          break;
      }
      if (this._line || this._line !== 0 && this._point === 1)
        this._context.closePath();
      this._line = 1 - this._line;
    },
    point: function(x7, y6) {
      x7 = +x7, y6 = +y6;
      switch (this._point) {
        case 0:
          this._point = 1;
          this._line ? this._context.lineTo(x7, y6) : this._context.moveTo(x7, y6);
          break;
        case 1:
          this._point = 2;
          this._x1 = x7, this._y1 = y6;
          break;
        case 2:
          this._point = 3;
        default:
          point3(this, x7, y6);
          break;
      }
      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x7;
      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y6;
    }
  };
  var cardinal_default = function custom2(tension) {
    function cardinal(context) {
      return new Cardinal(context, tension);
    }
    cardinal.tension = function(tension2) {
      return custom2(+tension2);
    };
    return cardinal;
  }(0);

  // ../../node_modules/d3-shape/src/curve/cardinalClosed.js
  function CardinalClosed(context, tension) {
    this._context = context;
    this._k = (1 - tension) / 6;
  }
  CardinalClosed.prototype = {
    areaStart: noop_default,
    areaEnd: noop_default,
    lineStart: function() {
      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
      this._point = 0;
    },
    lineEnd: function() {
      switch (this._point) {
        case 1: {
          this._context.moveTo(this._x3, this._y3);
          this._context.closePath();
          break;
        }
        case 2: {
          this._context.lineTo(this._x3, this._y3);
          this._context.closePath();
          break;
        }
        case 3: {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
      }
    },
    point: function(x7, y6) {
      x7 = +x7, y6 = +y6;
      switch (this._point) {
        case 0:
          this._point = 1;
          this._x3 = x7, this._y3 = y6;
          break;
        case 1:
          this._point = 2;
          this._context.moveTo(this._x4 = x7, this._y4 = y6);
          break;
        case 2:
          this._point = 3;
          this._x5 = x7, this._y5 = y6;
          break;
        default:
          point3(this, x7, y6);
          break;
      }
      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x7;
      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y6;
    }
  };
  var cardinalClosed_default = function custom3(tension) {
    function cardinal(context) {
      return new CardinalClosed(context, tension);
    }
    cardinal.tension = function(tension2) {
      return custom3(+tension2);
    };
    return cardinal;
  }(0);

  // ../../node_modules/d3-shape/src/curve/cardinalOpen.js
  function CardinalOpen(context, tension) {
    this._context = context;
    this._k = (1 - tension) / 6;
  }
  CardinalOpen.prototype = {
    areaStart: function() {
      this._line = 0;
    },
    areaEnd: function() {
      this._line = NaN;
    },
    lineStart: function() {
      this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
      this._point = 0;
    },
    lineEnd: function() {
      if (this._line || this._line !== 0 && this._point === 3)
        this._context.closePath();
      this._line = 1 - this._line;
    },
    point: function(x7, y6) {
      x7 = +x7, y6 = +y6;
      switch (this._point) {
        case 0:
          this._point = 1;
          break;
        case 1:
          this._point = 2;
          break;
        case 2:
          this._point = 3;
          this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
          break;
        case 3:
          this._point = 4;
        default:
          point3(this, x7, y6);
          break;
      }
      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x7;
      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y6;
    }
  };
  var cardinalOpen_default = function custom4(tension) {
    function cardinal(context) {
      return new CardinalOpen(context, tension);
    }
    cardinal.tension = function(tension2) {
      return custom4(+tension2);
    };
    return cardinal;
  }(0);

  // ../../node_modules/d3-shape/src/curve/catmullRom.js
  function point4(that, x7, y6) {
    var x12 = that._x1, y12 = that._y1, x22 = that._x2, y22 = that._y2;
    if (that._l01_a > epsilon2) {
      var a7 = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a, n11 = 3 * that._l01_a * (that._l01_a + that._l12_a);
      x12 = (x12 * a7 - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n11;
      y12 = (y12 * a7 - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n11;
    }
    if (that._l23_a > epsilon2) {
      var b8 = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a, m5 = 3 * that._l23_a * (that._l23_a + that._l12_a);
      x22 = (x22 * b8 + that._x1 * that._l23_2a - x7 * that._l12_2a) / m5;
      y22 = (y22 * b8 + that._y1 * that._l23_2a - y6 * that._l12_2a) / m5;
    }
    that._context.bezierCurveTo(x12, y12, x22, y22, that._x2, that._y2);
  }
  function CatmullRom(context, alpha) {
    this._context = context;
    this._alpha = alpha;
  }
  CatmullRom.prototype = {
    areaStart: function() {
      this._line = 0;
    },
    areaEnd: function() {
      this._line = NaN;
    },
    lineStart: function() {
      this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
      this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
    },
    lineEnd: function() {
      switch (this._point) {
        case 2:
          this._context.lineTo(this._x2, this._y2);
          break;
        case 3:
          this.point(this._x2, this._y2);
          break;
      }
      if (this._line || this._line !== 0 && this._point === 1)
        this._context.closePath();
      this._line = 1 - this._line;
    },
    point: function(x7, y6) {
      x7 = +x7, y6 = +y6;
      if (this._point) {
        var x23 = this._x2 - x7, y23 = this._y2 - y6;
        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
      }
      switch (this._point) {
        case 0:
          this._point = 1;
          this._line ? this._context.lineTo(x7, y6) : this._context.moveTo(x7, y6);
          break;
        case 1:
          this._point = 2;
          break;
        case 2:
          this._point = 3;
        default:
          point4(this, x7, y6);
          break;
      }
      this._l01_a = this._l12_a, this._l12_a = this._l23_a;
      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x7;
      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y6;
    }
  };
  var catmullRom_default = function custom5(alpha) {
    function catmullRom(context) {
      return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);
    }
    catmullRom.alpha = function(alpha2) {
      return custom5(+alpha2);
    };
    return catmullRom;
  }(0.5);

  // ../../node_modules/d3-shape/src/curve/catmullRomClosed.js
  function CatmullRomClosed(context, alpha) {
    this._context = context;
    this._alpha = alpha;
  }
  CatmullRomClosed.prototype = {
    areaStart: noop_default,
    areaEnd: noop_default,
    lineStart: function() {
      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
      this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
    },
    lineEnd: function() {
      switch (this._point) {
        case 1: {
          this._context.moveTo(this._x3, this._y3);
          this._context.closePath();
          break;
        }
        case 2: {
          this._context.lineTo(this._x3, this._y3);
          this._context.closePath();
          break;
        }
        case 3: {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
      }
    },
    point: function(x7, y6) {
      x7 = +x7, y6 = +y6;
      if (this._point) {
        var x23 = this._x2 - x7, y23 = this._y2 - y6;
        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
      }
      switch (this._point) {
        case 0:
          this._point = 1;
          this._x3 = x7, this._y3 = y6;
          break;
        case 1:
          this._point = 2;
          this._context.moveTo(this._x4 = x7, this._y4 = y6);
          break;
        case 2:
          this._point = 3;
          this._x5 = x7, this._y5 = y6;
          break;
        default:
          point4(this, x7, y6);
          break;
      }
      this._l01_a = this._l12_a, this._l12_a = this._l23_a;
      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x7;
      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y6;
    }
  };
  var catmullRomClosed_default = function custom6(alpha) {
    function catmullRom(context) {
      return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);
    }
    catmullRom.alpha = function(alpha2) {
      return custom6(+alpha2);
    };
    return catmullRom;
  }(0.5);

  // ../../node_modules/d3-shape/src/curve/catmullRomOpen.js
  function CatmullRomOpen(context, alpha) {
    this._context = context;
    this._alpha = alpha;
  }
  CatmullRomOpen.prototype = {
    areaStart: function() {
      this._line = 0;
    },
    areaEnd: function() {
      this._line = NaN;
    },
    lineStart: function() {
      this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
      this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
    },
    lineEnd: function() {
      if (this._line || this._line !== 0 && this._point === 3)
        this._context.closePath();
      this._line = 1 - this._line;
    },
    point: function(x7, y6) {
      x7 = +x7, y6 = +y6;
      if (this._point) {
        var x23 = this._x2 - x7, y23 = this._y2 - y6;
        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
      }
      switch (this._point) {
        case 0:
          this._point = 1;
          break;
        case 1:
          this._point = 2;
          break;
        case 2:
          this._point = 3;
          this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
          break;
        case 3:
          this._point = 4;
        default:
          point4(this, x7, y6);
          break;
      }
      this._l01_a = this._l12_a, this._l12_a = this._l23_a;
      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x7;
      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y6;
    }
  };
  var catmullRomOpen_default = function custom7(alpha) {
    function catmullRom(context) {
      return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);
    }
    catmullRom.alpha = function(alpha2) {
      return custom7(+alpha2);
    };
    return catmullRom;
  }(0.5);

  // ../../node_modules/d3-shape/src/curve/linearClosed.js
  function LinearClosed(context) {
    this._context = context;
  }
  LinearClosed.prototype = {
    areaStart: noop_default,
    areaEnd: noop_default,
    lineStart: function() {
      this._point = 0;
    },
    lineEnd: function() {
      if (this._point)
        this._context.closePath();
    },
    point: function(x7, y6) {
      x7 = +x7, y6 = +y6;
      if (this._point)
        this._context.lineTo(x7, y6);
      else
        this._point = 1, this._context.moveTo(x7, y6);
    }
  };
  function linearClosed_default(context) {
    return new LinearClosed(context);
  }

  // ../../node_modules/d3-shape/src/curve/monotone.js
  function sign(x7) {
    return x7 < 0 ? -1 : 1;
  }
  function slope3(that, x22, y22) {
    var h0 = that._x1 - that._x0, h1 = x22 - that._x1, s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0), s1 = (y22 - that._y1) / (h1 || h0 < 0 && -0), p6 = (s0 * h1 + s1 * h0) / (h0 + h1);
    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p6)) || 0;
  }
  function slope2(that, t13) {
    var h4 = that._x1 - that._x0;
    return h4 ? (3 * (that._y1 - that._y0) / h4 - t13) / 2 : t13;
  }
  function point5(that, t03, t13) {
    var x05 = that._x0, y05 = that._y0, x12 = that._x1, y12 = that._y1, dx = (x12 - x05) / 3;
    that._context.bezierCurveTo(x05 + dx, y05 + dx * t03, x12 - dx, y12 - dx * t13, x12, y12);
  }
  function MonotoneX(context) {
    this._context = context;
  }
  MonotoneX.prototype = {
    areaStart: function() {
      this._line = 0;
    },
    areaEnd: function() {
      this._line = NaN;
    },
    lineStart: function() {
      this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
      this._point = 0;
    },
    lineEnd: function() {
      switch (this._point) {
        case 2:
          this._context.lineTo(this._x1, this._y1);
          break;
        case 3:
          point5(this, this._t0, slope2(this, this._t0));
          break;
      }
      if (this._line || this._line !== 0 && this._point === 1)
        this._context.closePath();
      this._line = 1 - this._line;
    },
    point: function(x7, y6) {
      var t13 = NaN;
      x7 = +x7, y6 = +y6;
      if (x7 === this._x1 && y6 === this._y1)
        return;
      switch (this._point) {
        case 0:
          this._point = 1;
          this._line ? this._context.lineTo(x7, y6) : this._context.moveTo(x7, y6);
          break;
        case 1:
          this._point = 2;
          break;
        case 2:
          this._point = 3;
          point5(this, slope2(this, t13 = slope3(this, x7, y6)), t13);
          break;
        default:
          point5(this, this._t0, t13 = slope3(this, x7, y6));
          break;
      }
      this._x0 = this._x1, this._x1 = x7;
      this._y0 = this._y1, this._y1 = y6;
      this._t0 = t13;
    }
  };
  function MonotoneY(context) {
    this._context = new ReflectContext(context);
  }
  (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x7, y6) {
    MonotoneX.prototype.point.call(this, y6, x7);
  };
  function ReflectContext(context) {
    this._context = context;
  }
  ReflectContext.prototype = {
    moveTo: function(x7, y6) {
      this._context.moveTo(y6, x7);
    },
    closePath: function() {
      this._context.closePath();
    },
    lineTo: function(x7, y6) {
      this._context.lineTo(y6, x7);
    },
    bezierCurveTo: function(x12, y12, x22, y22, x7, y6) {
      this._context.bezierCurveTo(y12, x12, y22, x22, y6, x7);
    }
  };
  function monotoneX(context) {
    return new MonotoneX(context);
  }
  function monotoneY(context) {
    return new MonotoneY(context);
  }

  // ../../node_modules/d3-shape/src/curve/natural.js
  function Natural(context) {
    this._context = context;
  }
  Natural.prototype = {
    areaStart: function() {
      this._line = 0;
    },
    areaEnd: function() {
      this._line = NaN;
    },
    lineStart: function() {
      this._x = [];
      this._y = [];
    },
    lineEnd: function() {
      var x7 = this._x, y6 = this._y, n11 = x7.length;
      if (n11) {
        this._line ? this._context.lineTo(x7[0], y6[0]) : this._context.moveTo(x7[0], y6[0]);
        if (n11 === 2) {
          this._context.lineTo(x7[1], y6[1]);
        } else {
          var px = controlPoints(x7), py = controlPoints(y6);
          for (var i0 = 0, i1 = 1; i1 < n11; ++i0, ++i1) {
            this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x7[i1], y6[i1]);
          }
        }
      }
      if (this._line || this._line !== 0 && n11 === 1)
        this._context.closePath();
      this._line = 1 - this._line;
      this._x = this._y = null;
    },
    point: function(x7, y6) {
      this._x.push(+x7);
      this._y.push(+y6);
    }
  };
  function controlPoints(x7) {
    var i9, n11 = x7.length - 1, m5, a7 = new Array(n11), b8 = new Array(n11), r9 = new Array(n11);
    a7[0] = 0, b8[0] = 2, r9[0] = x7[0] + 2 * x7[1];
    for (i9 = 1; i9 < n11 - 1; ++i9)
      a7[i9] = 1, b8[i9] = 4, r9[i9] = 4 * x7[i9] + 2 * x7[i9 + 1];
    a7[n11 - 1] = 2, b8[n11 - 1] = 7, r9[n11 - 1] = 8 * x7[n11 - 1] + x7[n11];
    for (i9 = 1; i9 < n11; ++i9)
      m5 = a7[i9] / b8[i9 - 1], b8[i9] -= m5, r9[i9] -= m5 * r9[i9 - 1];
    a7[n11 - 1] = r9[n11 - 1] / b8[n11 - 1];
    for (i9 = n11 - 2; i9 >= 0; --i9)
      a7[i9] = (r9[i9] - a7[i9 + 1]) / b8[i9];
    b8[n11 - 1] = (x7[n11] + a7[n11 - 1]) / 2;
    for (i9 = 0; i9 < n11 - 1; ++i9)
      b8[i9] = 2 * x7[i9 + 1] - a7[i9 + 1];
    return [a7, b8];
  }
  function natural_default(context) {
    return new Natural(context);
  }

  // ../../node_modules/d3-shape/src/curve/step.js
  function Step(context, t13) {
    this._context = context;
    this._t = t13;
  }
  Step.prototype = {
    areaStart: function() {
      this._line = 0;
    },
    areaEnd: function() {
      this._line = NaN;
    },
    lineStart: function() {
      this._x = this._y = NaN;
      this._point = 0;
    },
    lineEnd: function() {
      if (0 < this._t && this._t < 1 && this._point === 2)
        this._context.lineTo(this._x, this._y);
      if (this._line || this._line !== 0 && this._point === 1)
        this._context.closePath();
      if (this._line >= 0)
        this._t = 1 - this._t, this._line = 1 - this._line;
    },
    point: function(x7, y6) {
      x7 = +x7, y6 = +y6;
      switch (this._point) {
        case 0:
          this._point = 1;
          this._line ? this._context.lineTo(x7, y6) : this._context.moveTo(x7, y6);
          break;
        case 1:
          this._point = 2;
        default: {
          if (this._t <= 0) {
            this._context.lineTo(this._x, y6);
            this._context.lineTo(x7, y6);
          } else {
            var x12 = this._x * (1 - this._t) + x7 * this._t;
            this._context.lineTo(x12, this._y);
            this._context.lineTo(x12, y6);
          }
          break;
        }
      }
      this._x = x7, this._y = y6;
    }
  };
  function step_default(context) {
    return new Step(context, 0.5);
  }
  function stepBefore(context) {
    return new Step(context, 0);
  }
  function stepAfter(context) {
    return new Step(context, 1);
  }

  // ../../node_modules/d3-shape/src/offset/none.js
  function none_default(series, order) {
    if (!((n11 = series.length) > 1))
      return;
    for (var i9 = 1, j4, s0, s1 = series[order[0]], n11, m5 = s1.length; i9 < n11; ++i9) {
      s0 = s1, s1 = series[order[i9]];
      for (j4 = 0; j4 < m5; ++j4) {
        s1[j4][1] += s1[j4][0] = isNaN(s0[j4][1]) ? s0[j4][0] : s0[j4][1];
      }
    }
  }

  // ../../node_modules/d3-shape/src/order/none.js
  function none_default2(series) {
    var n11 = series.length, o8 = new Array(n11);
    while (--n11 >= 0)
      o8[n11] = n11;
    return o8;
  }

  // ../../node_modules/d3-shape/src/stack.js
  function stackValue(d4, key) {
    return d4[key];
  }
  function stack_default() {
    var keys = constant_default2([]), order = none_default2, offset = none_default, value = stackValue;
    function stack(data) {
      var kz = keys.apply(this, arguments), i9, m5 = data.length, n11 = kz.length, sz = new Array(n11), oz;
      for (i9 = 0; i9 < n11; ++i9) {
        for (var ki2 = kz[i9], si2 = sz[i9] = new Array(m5), j4 = 0, sij; j4 < m5; ++j4) {
          si2[j4] = sij = [0, +value(data[j4], ki2, j4, data)];
          sij.data = data[j4];
        }
        si2.key = ki2;
      }
      for (i9 = 0, oz = order(sz); i9 < n11; ++i9) {
        sz[oz[i9]].index = i9;
      }
      offset(sz, oz);
      return sz;
    }
    stack.keys = function(_5) {
      return arguments.length ? (keys = typeof _5 === "function" ? _5 : constant_default2(slice.call(_5)), stack) : keys;
    };
    stack.value = function(_5) {
      return arguments.length ? (value = typeof _5 === "function" ? _5 : constant_default2(+_5), stack) : value;
    };
    stack.order = function(_5) {
      return arguments.length ? (order = _5 == null ? none_default2 : typeof _5 === "function" ? _5 : constant_default2(slice.call(_5)), stack) : order;
    };
    stack.offset = function(_5) {
      return arguments.length ? (offset = _5 == null ? none_default : _5, stack) : offset;
    };
    return stack;
  }

  // ../../node_modules/d3-shape/src/offset/expand.js
  function expand_default(series, order) {
    if (!((n11 = series.length) > 0))
      return;
    for (var i9, n11, j4 = 0, m5 = series[0].length, y6; j4 < m5; ++j4) {
      for (y6 = i9 = 0; i9 < n11; ++i9)
        y6 += series[i9][j4][1] || 0;
      if (y6)
        for (i9 = 0; i9 < n11; ++i9)
          series[i9][j4][1] /= y6;
    }
    none_default(series, order);
  }

  // ../../node_modules/d3-shape/src/offset/diverging.js
  function diverging_default(series, order) {
    if (!((n11 = series.length) > 0))
      return;
    for (var i9, j4 = 0, d4, dy, yp, yn2, n11, m5 = series[order[0]].length; j4 < m5; ++j4) {
      for (yp = yn2 = 0, i9 = 0; i9 < n11; ++i9) {
        if ((dy = (d4 = series[order[i9]][j4])[1] - d4[0]) > 0) {
          d4[0] = yp, d4[1] = yp += dy;
        } else if (dy < 0) {
          d4[1] = yn2, d4[0] = yn2 += dy;
        } else {
          d4[0] = 0, d4[1] = dy;
        }
      }
    }
  }

  // ../../node_modules/d3-shape/src/offset/silhouette.js
  function silhouette_default(series, order) {
    if (!((n11 = series.length) > 0))
      return;
    for (var j4 = 0, s0 = series[order[0]], n11, m5 = s0.length; j4 < m5; ++j4) {
      for (var i9 = 0, y6 = 0; i9 < n11; ++i9)
        y6 += series[i9][j4][1] || 0;
      s0[j4][1] += s0[j4][0] = -y6 / 2;
    }
    none_default(series, order);
  }

  // ../../node_modules/d3-shape/src/offset/wiggle.js
  function wiggle_default(series, order) {
    if (!((n11 = series.length) > 0) || !((m5 = (s0 = series[order[0]]).length) > 0))
      return;
    for (var y6 = 0, j4 = 1, s0, m5, n11; j4 < m5; ++j4) {
      for (var i9 = 0, s1 = 0, s22 = 0; i9 < n11; ++i9) {
        var si2 = series[order[i9]], sij0 = si2[j4][1] || 0, sij1 = si2[j4 - 1][1] || 0, s32 = (sij0 - sij1) / 2;
        for (var k6 = 0; k6 < i9; ++k6) {
          var sk = series[order[k6]], skj0 = sk[j4][1] || 0, skj1 = sk[j4 - 1][1] || 0;
          s32 += skj0 - skj1;
        }
        s1 += sij0, s22 += s32 * sij0;
      }
      s0[j4 - 1][1] += s0[j4 - 1][0] = y6;
      if (s1)
        y6 -= s22 / s1;
    }
    s0[j4 - 1][1] += s0[j4 - 1][0] = y6;
    none_default(series, order);
  }

  // ../../node_modules/d3-shape/src/order/appearance.js
  function appearance_default(series) {
    var peaks = series.map(peak);
    return none_default2(series).sort(function(a7, b8) {
      return peaks[a7] - peaks[b8];
    });
  }
  function peak(series) {
    var i9 = -1, j4 = 0, n11 = series.length, vi, vj = -Infinity;
    while (++i9 < n11)
      if ((vi = +series[i9][1]) > vj)
        vj = vi, j4 = i9;
    return j4;
  }

  // ../../node_modules/d3-shape/src/order/ascending.js
  function ascending_default2(series) {
    var sums = series.map(sum);
    return none_default2(series).sort(function(a7, b8) {
      return sums[a7] - sums[b8];
    });
  }
  function sum(series) {
    var s4 = 0, i9 = -1, n11 = series.length, v8;
    while (++i9 < n11)
      if (v8 = +series[i9][1])
        s4 += v8;
    return s4;
  }

  // ../../node_modules/d3-shape/src/order/descending.js
  function descending_default(series) {
    return ascending_default2(series).reverse();
  }

  // ../../node_modules/d3-shape/src/order/insideOut.js
  function insideOut_default(series) {
    var n11 = series.length, i9, j4, sums = series.map(sum), order = appearance_default(series), top = 0, bottom = 0, tops = [], bottoms = [];
    for (i9 = 0; i9 < n11; ++i9) {
      j4 = order[i9];
      if (top < bottom) {
        top += sums[j4];
        tops.push(j4);
      } else {
        bottom += sums[j4];
        bottoms.push(j4);
      }
    }
    return bottoms.reverse().concat(tops);
  }

  // ../../node_modules/d3-shape/src/order/reverse.js
  function reverse_default(series) {
    return none_default2(series).reverse();
  }

  // ../../node_modules/d3-format/src/formatDecimal.js
  function formatDecimal_default2(x7) {
    return Math.abs(x7 = Math.round(x7)) >= 1e21 ? x7.toLocaleString("en").replace(/,/g, "") : x7.toString(10);
  }
  function formatDecimalParts2(x7, p6) {
    if ((i9 = (x7 = p6 ? x7.toExponential(p6 - 1) : x7.toExponential()).indexOf("e")) < 0)
      return null;
    var i9, coefficient = x7.slice(0, i9);
    return [
      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
      +x7.slice(i9 + 1)
    ];
  }

  // ../../node_modules/d3-format/src/exponent.js
  function exponent_default2(x7) {
    return x7 = formatDecimalParts2(Math.abs(x7)), x7 ? x7[1] : NaN;
  }

  // ../../node_modules/d3-format/src/formatGroup.js
  function formatGroup_default2(grouping, thousands) {
    return function(value, width) {
      var i9 = value.length, t13 = [], j4 = 0, g6 = grouping[0], length = 0;
      while (i9 > 0 && g6 > 0) {
        if (length + g6 + 1 > width)
          g6 = Math.max(1, width - length);
        t13.push(value.substring(i9 -= g6, i9 + g6));
        if ((length += g6 + 1) > width)
          break;
        g6 = grouping[j4 = (j4 + 1) % grouping.length];
      }
      return t13.reverse().join(thousands);
    };
  }

  // ../../node_modules/d3-format/src/formatNumerals.js
  function formatNumerals_default2(numerals) {
    return function(value) {
      return value.replace(/[0-9]/g, function(i9) {
        return numerals[+i9];
      });
    };
  }

  // ../../node_modules/d3-format/src/formatSpecifier.js
  var re2 = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
  function formatSpecifier2(specifier) {
    if (!(match2 = re2.exec(specifier)))
      throw new Error("invalid format: " + specifier);
    var match2;
    return new FormatSpecifier2({
      fill: match2[1],
      align: match2[2],
      sign: match2[3],
      symbol: match2[4],
      zero: match2[5],
      width: match2[6],
      comma: match2[7],
      precision: match2[8] && match2[8].slice(1),
      trim: match2[9],
      type: match2[10]
    });
  }
  formatSpecifier2.prototype = FormatSpecifier2.prototype;
  function FormatSpecifier2(specifier) {
    this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
    this.align = specifier.align === void 0 ? ">" : specifier.align + "";
    this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
    this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
    this.zero = !!specifier.zero;
    this.width = specifier.width === void 0 ? void 0 : +specifier.width;
    this.comma = !!specifier.comma;
    this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
    this.trim = !!specifier.trim;
    this.type = specifier.type === void 0 ? "" : specifier.type + "";
  }
  FormatSpecifier2.prototype.toString = function() {
    return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
  };

  // ../../node_modules/d3-format/src/formatTrim.js
  function formatTrim_default2(s4) {
    out:
      for (var n11 = s4.length, i9 = 1, i0 = -1, i1; i9 < n11; ++i9) {
        switch (s4[i9]) {
          case ".":
            i0 = i1 = i9;
            break;
          case "0":
            if (i0 === 0)
              i0 = i9;
            i1 = i9;
            break;
          default:
            if (!+s4[i9])
              break out;
            if (i0 > 0)
              i0 = 0;
            break;
        }
      }
    return i0 > 0 ? s4.slice(0, i0) + s4.slice(i1 + 1) : s4;
  }

  // ../../node_modules/d3-format/src/formatPrefixAuto.js
  var prefixExponent2;
  function formatPrefixAuto_default2(x7, p6) {
    var d4 = formatDecimalParts2(x7, p6);
    if (!d4)
      return x7 + "";
    var coefficient = d4[0], exponent = d4[1], i9 = exponent - (prefixExponent2 = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1, n11 = coefficient.length;
    return i9 === n11 ? coefficient : i9 > n11 ? coefficient + new Array(i9 - n11 + 1).join("0") : i9 > 0 ? coefficient.slice(0, i9) + "." + coefficient.slice(i9) : "0." + new Array(1 - i9).join("0") + formatDecimalParts2(x7, Math.max(0, p6 + i9 - 1))[0];
  }

  // ../../node_modules/d3-format/src/formatRounded.js
  function formatRounded_default2(x7, p6) {
    var d4 = formatDecimalParts2(x7, p6);
    if (!d4)
      return x7 + "";
    var coefficient = d4[0], exponent = d4[1];
    return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
  }

  // ../../node_modules/d3-format/src/formatTypes.js
  var formatTypes_default2 = {
    "%": function(x7, p6) {
      return (x7 * 100).toFixed(p6);
    },
    b: function(x7) {
      return Math.round(x7).toString(2);
    },
    c: function(x7) {
      return x7 + "";
    },
    d: formatDecimal_default2,
    e: function(x7, p6) {
      return x7.toExponential(p6);
    },
    f: function(x7, p6) {
      return x7.toFixed(p6);
    },
    g: function(x7, p6) {
      return x7.toPrecision(p6);
    },
    o: function(x7) {
      return Math.round(x7).toString(8);
    },
    p: function(x7, p6) {
      return formatRounded_default2(x7 * 100, p6);
    },
    r: formatRounded_default2,
    s: formatPrefixAuto_default2,
    X: function(x7) {
      return Math.round(x7).toString(16).toUpperCase();
    },
    x: function(x7) {
      return Math.round(x7).toString(16);
    }
  };

  // ../../node_modules/d3-format/src/identity.js
  function identity_default2(x7) {
    return x7;
  }

  // ../../node_modules/d3-format/src/locale.js
  var map3 = Array.prototype.map;
  var prefixes3 = ["y", "z", "a", "f", "p", "n", "\xB5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
  function locale_default2(locale6) {
    var group = locale6.grouping === void 0 || locale6.thousands === void 0 ? identity_default2 : formatGroup_default2(map3.call(locale6.grouping, Number), locale6.thousands + ""), currencyPrefix = locale6.currency === void 0 ? "" : locale6.currency[0] + "", currencySuffix = locale6.currency === void 0 ? "" : locale6.currency[1] + "", decimal = locale6.decimal === void 0 ? "." : locale6.decimal + "", numerals = locale6.numerals === void 0 ? identity_default2 : formatNumerals_default2(map3.call(locale6.numerals, String)), percent = locale6.percent === void 0 ? "%" : locale6.percent + "", minus = locale6.minus === void 0 ? "-" : locale6.minus + "", nan = locale6.nan === void 0 ? "NaN" : locale6.nan + "";
    function newFormat(specifier) {
      specifier = formatSpecifier2(specifier);
      var fill = specifier.fill, align = specifier.align, sign3 = specifier.sign, symbol = specifier.symbol, zero2 = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim2 = specifier.trim, type2 = specifier.type;
      if (type2 === "n")
        comma = true, type2 = "g";
      else if (!formatTypes_default2[type2])
        precision === void 0 && (precision = 12), trim2 = true, type2 = "g";
      if (zero2 || fill === "0" && align === "=")
        zero2 = true, fill = "0", align = "=";
      var prefix3 = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type2) ? "0" + type2.toLowerCase() : "", suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type2) ? percent : "";
      var formatType = formatTypes_default2[type2], maybeSuffix = /[defgprs%]/.test(type2);
      precision = precision === void 0 ? 6 : /[gprs]/.test(type2) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
      function format4(value) {
        var valuePrefix = prefix3, valueSuffix = suffix, i9, n11, c6;
        if (type2 === "c") {
          valueSuffix = formatType(value) + valueSuffix;
          value = "";
        } else {
          value = +value;
          var valueNegative = value < 0 || 1 / value < 0;
          value = isNaN(value) ? nan : formatType(Math.abs(value), precision);
          if (trim2)
            value = formatTrim_default2(value);
          if (valueNegative && +value === 0 && sign3 !== "+")
            valueNegative = false;
          valuePrefix = (valueNegative ? sign3 === "(" ? sign3 : minus : sign3 === "-" || sign3 === "(" ? "" : sign3) + valuePrefix;
          valueSuffix = (type2 === "s" ? prefixes3[8 + prefixExponent2 / 3] : "") + valueSuffix + (valueNegative && sign3 === "(" ? ")" : "");
          if (maybeSuffix) {
            i9 = -1, n11 = value.length;
            while (++i9 < n11) {
              if (c6 = value.charCodeAt(i9), 48 > c6 || c6 > 57) {
                valueSuffix = (c6 === 46 ? decimal + value.slice(i9 + 1) : value.slice(i9)) + valueSuffix;
                value = value.slice(0, i9);
                break;
              }
            }
          }
        }
        if (comma && !zero2)
          value = group(value, Infinity);
        var length = valuePrefix.length + value.length + valueSuffix.length, padding = length < width ? new Array(width - length + 1).join(fill) : "";
        if (comma && zero2)
          value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
        switch (align) {
          case "<":
            value = valuePrefix + value + valueSuffix + padding;
            break;
          case "=":
            value = valuePrefix + padding + value + valueSuffix;
            break;
          case "^":
            value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
            break;
          default:
            value = padding + valuePrefix + value + valueSuffix;
            break;
        }
        return numerals(value);
      }
      format4.toString = function() {
        return specifier + "";
      };
      return format4;
    }
    function formatPrefix3(specifier, value) {
      var f4 = newFormat((specifier = formatSpecifier2(specifier), specifier.type = "f", specifier)), e15 = Math.max(-8, Math.min(8, Math.floor(exponent_default2(value) / 3))) * 3, k6 = Math.pow(10, -e15), prefix3 = prefixes3[8 + e15 / 3];
      return function(value2) {
        return f4(k6 * value2) + prefix3;
      };
    }
    return {
      format: newFormat,
      formatPrefix: formatPrefix3
    };
  }

  // ../../node_modules/d3-format/src/defaultLocale.js
  var locale5;
  var format3;
  var formatPrefix2;
  defaultLocale3({
    decimal: ".",
    thousands: ",",
    grouping: [3],
    currency: ["$", ""],
    minus: "-"
  });
  function defaultLocale3(definition) {
    locale5 = locale_default2(definition);
    format3 = locale5.format;
    formatPrefix2 = locale5.formatPrefix;
    return locale5;
  }

  // ../../node_modules/@nivo/recompose/dist/nivo-recompose.es.js
  var import_react50 = __toModule(require_react());
  var import_react_lifecycles_compat = __toModule(require_react_lifecycles_compat_cjs());

  // ../../node_modules/@nivo/core/dist/nivo-core.es.js
  var import_isEqual = __toModule(require_isEqual());
  var import_isPlainObject = __toModule(require_isPlainObject());
  var import_pick5 = __toModule(require_pick());
  function Gr() {
    return Gr = Object.assign || function(e15) {
      for (var r9 = 1; r9 < arguments.length; r9++) {
        var t13 = arguments[r9];
        for (var i9 in t13)
          Object.prototype.hasOwnProperty.call(t13, i9) && (e15[i9] = t13[i9]);
      }
      return e15;
    }, Gr.apply(this, arguments);
  }
  function Br(e15, r9) {
    return Br = Object.setPrototypeOf || function(e16, r10) {
      return e16.__proto__ = r10, e16;
    }, Br(e15, r9);
  }
  function Lr(e15, r9) {
    if (e15 == null)
      return {};
    var t13, i9, n11 = {}, o8 = Object.keys(e15);
    for (i9 = 0; i9 < o8.length; i9++)
      t13 = o8[i9], r9.indexOf(t13) >= 0 || (n11[t13] = e15[t13]);
    return n11;
  }
  var Ir = {fill: import_prop_types23.default.string, fontSize: import_prop_types23.default.number, fontFamily: import_prop_types23.default.string};
  var Yr = import_prop_types23.default.shape({domain: import_prop_types23.default.shape({line: import_prop_types23.default.shape({stroke: import_prop_types23.default.string.isRequired, strokeWidth: import_prop_types23.default.number.isRequired, strokeDasharray: import_prop_types23.default.string}).isRequired}).isRequired, ticks: import_prop_types23.default.shape({line: import_prop_types23.default.shape({stroke: import_prop_types23.default.string.isRequired, strokeWidth: import_prop_types23.default.number.isRequired, strokeDasharray: import_prop_types23.default.string}).isRequired, text: import_prop_types23.default.shape(Gr({}, Ir)).isRequired}).isRequired, legend: import_prop_types23.default.shape({text: import_prop_types23.default.shape(Gr({}, Ir)).isRequired}).isRequired});
  var Ar = import_prop_types23.default.shape({line: import_prop_types23.default.shape({stroke: import_prop_types23.default.string.isRequired, strokeWidth: import_prop_types23.default.number.isRequired, strokeDasharray: import_prop_types23.default.string}).isRequired});
  var Fr = import_prop_types23.default.shape({hidden: import_prop_types23.default.shape({symbol: import_prop_types23.default.shape({fill: import_prop_types23.default.string.isRequired, opacity: import_prop_types23.default.number}).isRequired, text: import_prop_types23.default.shape(Gr({}, Ir, {opacity: import_prop_types23.default.number})).isRequired}).isRequired, text: import_prop_types23.default.shape(Gr({}, Ir)).isRequired});
  var Er = import_prop_types23.default.shape({text: import_prop_types23.default.shape(Gr({}, Ir)).isRequired});
  var Ur = import_prop_types23.default.shape({text: import_prop_types23.default.shape(Gr({}, Ir)).isRequired});
  var Xr = import_prop_types23.default.shape({text: import_prop_types23.default.shape(Gr({}, Ir)).isRequired});
  var Kr = import_prop_types23.default.shape({line: import_prop_types23.default.shape({stroke: import_prop_types23.default.string.isRequired, strokeWidth: import_prop_types23.default.number.isRequired, strokeDasharray: import_prop_types23.default.string}).isRequired});
  var Hr = import_prop_types23.default.shape({text: import_prop_types23.default.shape(Gr({}, Ir, {outlineWidth: import_prop_types23.default.number.isRequired, outlineColor: import_prop_types23.default.string.isRequired})).isRequired, link: import_prop_types23.default.shape({stroke: import_prop_types23.default.string.isRequired, strokeWidth: import_prop_types23.default.number.isRequired, outlineWidth: import_prop_types23.default.number.isRequired, outlineColor: import_prop_types23.default.string.isRequired}).isRequired, outline: import_prop_types23.default.shape({stroke: import_prop_types23.default.string.isRequired, strokeWidth: import_prop_types23.default.number.isRequired, outlineWidth: import_prop_types23.default.number.isRequired, outlineColor: import_prop_types23.default.string.isRequired}).isRequired, symbol: import_prop_types23.default.shape({fill: import_prop_types23.default.string.isRequired, outlineWidth: import_prop_types23.default.number.isRequired, outlineColor: import_prop_types23.default.string.isRequired}).isRequired});
  var Nr = import_prop_types23.default.shape({background: import_prop_types23.default.string.isRequired, fontFamily: import_prop_types23.default.string.isRequired, fontSize: import_prop_types23.default.number.isRequired, textColor: import_prop_types23.default.string.isRequired, axis: Yr.isRequired, grid: Ar.isRequired, legends: Fr.isRequired, labels: Er.isRequired, dots: Ur.isRequired, markers: Xr, crosshair: Kr.isRequired, annotations: Hr.isRequired});
  var Vr = {background: "transparent", fontFamily: "sans-serif", fontSize: 11, textColor: "#333333", axis: {domain: {line: {stroke: "transparent", strokeWidth: 1}}, ticks: {line: {stroke: "#777777", strokeWidth: 1}, text: {}}, legend: {text: {fontSize: 12}}}, grid: {line: {stroke: "#dddddd", strokeWidth: 1}}, legends: {hidden: {symbol: {fill: "#333333", opacity: 0.6}, text: {fill: "#333333", opacity: 0.6}}, text: {}, ticks: {line: {stroke: "#777777", strokeWidth: 1}, text: {fontSize: 10}}, title: {text: {}}}, labels: {text: {}}, markers: {lineColor: "#000000", lineStrokeWidth: 1, text: {}}, dots: {text: {}}, tooltip: {container: {background: "white", color: "inherit", fontSize: "inherit", borderRadius: "2px", boxShadow: "0 1px 2px rgba(0, 0, 0, 0.25)", padding: "5px 9px"}, basic: {whiteSpace: "pre", display: "flex", alignItems: "center"}, chip: {marginRight: 7}, table: {}, tableCell: {padding: "3px 5px"}, tableCellValue: {fontWeight: "bold"}}, crosshair: {line: {stroke: "#000000", strokeWidth: 1, strokeOpacity: 0.75, strokeDasharray: "6 6"}}, annotations: {text: {fontSize: 13, outlineWidth: 2, outlineColor: "#ffffff", outlineOpacity: 1}, link: {stroke: "#000000", strokeWidth: 1, outlineWidth: 2, outlineColor: "#ffffff", outlineOpacity: 1}, outline: {fill: "none", stroke: "#000000", strokeWidth: 2, outlineWidth: 2, outlineColor: "#ffffff", outlineOpacity: 1}, symbol: {fill: "#000000", outlineWidth: 2, outlineColor: "#ffffff", outlineOpacity: 1}}};
  var Jr = ["axis.ticks.text", "axis.legend.text", "legends.title.text", "legends.text", "legends.ticks.text", "legends.title.text", "labels.text", "dots.text", "markers.text", "annotations.text"];
  var Qr = function(e15, r9) {
    var t13 = (0, import_merge.default)({}, e15, r9);
    return Jr.forEach(function(e16) {
      (0, import_get6.default)(t13, e16 + ".fontFamily") === void 0 && (0, import_set.default)(t13, e16 + ".fontFamily", t13.fontFamily), (0, import_get6.default)(t13, e16 + ".fontSize") === void 0 && (0, import_set.default)(t13, e16 + ".fontSize", t13.fontSize), (0, import_get6.default)(t13, e16 + ".fill") === void 0 && (0, import_set.default)(t13, e16 + ".fill", t13.textColor);
    }), t13;
  };
  var Zr = (0, import_react51.createContext)();
  var $r = function(e15) {
    var t13 = e15.children, i9 = e15.animate, n11 = e15.stiffness, o8 = e15.damping, a7 = e15.config, s4 = (0, import_react51.useMemo)(function() {
      var e16 = (0, import_isString3.default)(a7) ? config[a7] : a7;
      return {animate: i9, springConfig: {stiffness: n11, damping: o8}, config: e16};
    }, [i9, n11, o8, a7]);
    return (0, import_jsx_runtime2.jsx)(Zr.Provider, {value: s4, children: t13});
  };
  var et = {animate: import_prop_types23.default.bool, motionStiffness: import_prop_types23.default.number, motionDamping: import_prop_types23.default.number, motionConfig: import_prop_types23.default.oneOfType([import_prop_types23.default.oneOf(Object.keys(config)), import_prop_types23.default.shape({mass: import_prop_types23.default.number, tension: import_prop_types23.default.number, friction: import_prop_types23.default.number, clamp: import_prop_types23.default.bool, precision: import_prop_types23.default.number, velocity: import_prop_types23.default.number, duration: import_prop_types23.default.number, easing: import_prop_types23.default.func})])};
  $r.propTypes = {children: import_prop_types23.default.node.isRequired, animate: et.animate, stiffness: et.motionStiffness, damping: et.motionDamping, config: et.motionConfig};
  var rt = {animate: true, stiffness: 90, damping: 15, config: "default"};
  $r.defaultProps = rt;
  var tt = function() {
    return (0, import_react51.useContext)(Zr);
  };
  var it = function(e15) {
    var t13 = tt(), o8 = t13.animate, a7 = t13.config, s4 = function(e16) {
      var r9 = (0, import_react51.useRef)();
      return (0, import_react51.useEffect)(function() {
        r9.current = e16;
      }, [e16]), r9.current;
    }(e15), l4 = (0, import_react51.useMemo)(function() {
      return string_default(s4, e15);
    }, [s4, e15]), d4 = useSpring({from: {value: 0}, to: {value: 1}, reset: true, config: a7, immediate: !o8}).value;
    return to2(d4, l4);
  };
  var nt = {nivo: ["#d76445", "#f47560", "#e8c1a0", "#97e3d5", "#61cdbb", "#00b0a7"], BrBG: (0, import_last.default)(scheme), PRGn: (0, import_last.default)(scheme2), PiYG: (0, import_last.default)(scheme3), PuOr: (0, import_last.default)(scheme4), RdBu: (0, import_last.default)(scheme5), RdGy: (0, import_last.default)(scheme6), RdYlBu: (0, import_last.default)(scheme7), RdYlGn: (0, import_last.default)(scheme8), spectral: (0, import_last.default)(scheme9), blues: (0, import_last.default)(scheme22), greens: (0, import_last.default)(scheme23), greys: (0, import_last.default)(scheme24), oranges: (0, import_last.default)(scheme27), purples: (0, import_last.default)(scheme25), reds: (0, import_last.default)(scheme26), BuGn: (0, import_last.default)(scheme10), BuPu: (0, import_last.default)(scheme11), GnBu: (0, import_last.default)(scheme12), OrRd: (0, import_last.default)(scheme13), PuBuGn: (0, import_last.default)(scheme14), PuBu: (0, import_last.default)(scheme15), PuRd: (0, import_last.default)(scheme16), RdPu: (0, import_last.default)(scheme17), YlGnBu: (0, import_last.default)(scheme18), YlGn: (0, import_last.default)(scheme19), YlOrBr: (0, import_last.default)(scheme20), YlOrRd: (0, import_last.default)(scheme21)};
  var ot = Object.keys(nt);
  var at = function(e15) {
    if ((0, import_isFunction5.default)(e15)) {
      if (!(0, import_isFunction5.default)(e15.domain))
        throw new Error("Provided colors should be a valid quantize scale providing a 'domain()' function");
      return e15;
    }
    if (nt[e15])
      return quantize().range(nt[e15]);
    if ((0, import_isArray2.default)(e15))
      return quantize().range(e15);
    throw new Error("Unable to guess quantize color scale from '" + e15 + "',\nmust be a function or one of:\n'" + ot.join("', '") + "'");
  };
  var st = {nivo: ["#e8c1a0", "#f47560", "#f1e15b", "#e8a838", "#61cdbb", "#97e3d5"], category10: category10_default, accent: Accent_default, dark2: Dark2_default, paired: Paired_default, pastel1: Pastel1_default, pastel2: Pastel2_default, set1: Set1_default, set2: Set2_default, set3: Set3_default, brown_blueGreen: (0, import_last.default)(scheme), purpleRed_green: (0, import_last.default)(scheme2), pink_yellowGreen: (0, import_last.default)(scheme3), purple_orange: (0, import_last.default)(scheme4), red_blue: (0, import_last.default)(scheme5), red_grey: (0, import_last.default)(scheme6), red_yellow_blue: (0, import_last.default)(scheme7), red_yellow_green: (0, import_last.default)(scheme8), spectral: (0, import_last.default)(scheme9), blues: (0, import_last.default)(scheme22), greens: (0, import_last.default)(scheme23), greys: (0, import_last.default)(scheme24), oranges: (0, import_last.default)(scheme27), purples: (0, import_last.default)(scheme25), reds: (0, import_last.default)(scheme26), blue_green: (0, import_last.default)(scheme10), blue_purple: (0, import_last.default)(scheme11), green_blue: (0, import_last.default)(scheme12), orange_red: (0, import_last.default)(scheme13), purple_blue_green: (0, import_last.default)(scheme14), purple_blue: (0, import_last.default)(scheme15), purple_red: (0, import_last.default)(scheme16), red_purple: (0, import_last.default)(scheme17), yellow_green_blue: (0, import_last.default)(scheme18), yellow_green: (0, import_last.default)(scheme19), yellow_orange_brown: (0, import_last.default)(scheme20), yellow_orange_red: (0, import_last.default)(scheme21)};
  var pt = import_prop_types23.default.oneOfType([import_prop_types23.default.oneOf(ot), import_prop_types23.default.func, import_prop_types23.default.arrayOf(import_prop_types23.default.string)]);
  var ht = {basis: basis_default2, basisClosed: basisClosed_default2, basisOpen: basisOpen_default, bundle: bundle_default, cardinal: cardinal_default, cardinalClosed: cardinalClosed_default, cardinalOpen: cardinalOpen_default, catmullRom: catmullRom_default, catmullRomClosed: catmullRomClosed_default, catmullRomOpen: catmullRomOpen_default, linear: linear_default, linearClosed: linearClosed_default, monotoneX, monotoneY, natural: natural_default, step: step_default, stepAfter, stepBefore};
  var gt = Object.keys(ht);
  var mt = import_prop_types23.default.oneOf(gt);
  var bt = gt.filter(function(e15) {
    return e15.endsWith("Closed");
  });
  var yt = (0, import_without.default)(gt, "bundle", "basisClosed", "basisOpen", "cardinalClosed", "cardinalOpen", "catmullRomClosed", "catmullRomOpen", "linearClosed");
  var vt = (0, import_without.default)(gt, "bundle", "basisClosed", "basisOpen", "cardinalClosed", "cardinalOpen", "catmullRomClosed", "catmullRomOpen", "linearClosed");
  var Rt = import_prop_types23.default.oneOf(vt);
  var qt = function(e15) {
    if (!ht[e15])
      throw new TypeError("'" + e15 + "', is not a valid curve interpolator identifier.");
    return ht[e15];
  };
  var kt = {defs: import_prop_types23.default.arrayOf(import_prop_types23.default.shape({id: import_prop_types23.default.string.isRequired})).isRequired, fill: import_prop_types23.default.arrayOf(import_prop_types23.default.shape({id: import_prop_types23.default.string.isRequired, match: import_prop_types23.default.oneOfType([import_prop_types23.default.oneOf(["*"]), import_prop_types23.default.object, import_prop_types23.default.func]).isRequired})).isRequired};
  var _t = {ascending: ascending_default2, descending: descending_default, insideOut: insideOut_default, none: none_default2, reverse: reverse_default};
  var wt = Object.keys(_t);
  var xt = import_prop_types23.default.oneOf(wt);
  var Ct = {expand: expand_default, diverging: diverging_default, none: none_default, silhouette: silhouette_default, wiggle: wiggle_default};
  var Wt = Object.keys(Ct);
  var St = import_prop_types23.default.oneOf(Wt);
  var Pt = import_prop_types23.default.shape({top: import_prop_types23.default.number, right: import_prop_types23.default.number, bottom: import_prop_types23.default.number, left: import_prop_types23.default.number}).isRequired;
  var Tt = ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"];
  var Mt = import_prop_types23.default.oneOf(Tt);
  var It = ordinal(Set3_default);
  var Yt = {top: 0, right: 0, bottom: 0, left: 0};
  var At = function(e15, t13, i9) {
    return i9 === void 0 && (i9 = {}), (0, import_react51.useMemo)(function() {
      var r9 = Gr({}, Yt, i9);
      return {margin: r9, innerWidth: e15 - r9.left - r9.right, innerHeight: t13 - r9.top - r9.bottom, outerWidth: e15, outerHeight: t13};
    }, [e15, t13, i9.top, i9.right, i9.bottom, i9.left]);
  };
  var Ft = function() {
    var e15 = (0, import_react51.useRef)(null), r9 = (0, import_react51.useState)({left: 0, top: 0, width: 0, height: 0}), t13 = r9[0], a7 = r9[1], s4 = (0, import_react51.useState)(function() {
      return new ResizeObserver(function(e16) {
        var r10 = e16[0];
        return a7(r10.contentRect);
      });
    })[0];
    return (0, import_react51.useEffect)(function() {
      return e15.current && s4.observe(e15.current), function() {
        return s4.disconnect();
      };
    }, []), [e15, t13];
  };
  var Et = function(e15) {
    return (0, import_react51.useMemo)(function() {
      return Qr(Vr, e15);
    }, [e15]);
  };
  var Ut = function(e15) {
    return typeof e15 == "function" ? e15 : typeof e15 == "string" ? e15.indexOf("time:") === 0 ? timeFormat(e15.slice("5")) : format3(e15) : function(e16) {
      return "" + e16;
    };
  };
  var Xt = function(e15) {
    return (0, import_react51.useMemo)(function() {
      return Ut(e15);
    }, [e15]);
  };
  var Kt = (0, import_react51.createContext)();
  var Ht = {};
  var Nt = function(e15) {
    var r9 = e15.theme, t13 = r9 === void 0 ? Ht : r9, i9 = e15.children, n11 = Et(t13);
    return (0, import_jsx_runtime2.jsx)(Kt.Provider, {value: n11, children: i9});
  };
  Nt.propTypes = {children: import_prop_types23.default.node.isRequired, theme: import_prop_types23.default.object};
  var Vt = function() {
    return (0, import_react51.useContext)(Kt);
  };
  var Jt = function(e15) {
    var r9 = e15.children, t13 = e15.condition, i9 = e15.wrapper;
    return t13 ? (0, import_react51.cloneElement)(i9, {}, r9) : r9;
  };
  Jt.propTypes = {children: import_prop_types23.default.node.isRequired, condition: import_prop_types23.default.bool.isRequired, wrapper: import_prop_types23.default.element.isRequired};
  var Qt = {position: "relative"};
  var Zt = function(e15) {
    var r9 = e15.children, t13 = e15.theme, n11 = e15.renderWrapper, o8 = n11 === void 0 || n11, a7 = e15.isInteractive, s4 = a7 === void 0 || a7, l4 = e15.animate, d4 = e15.motionStiffness, u4 = e15.motionDamping, c6 = e15.motionConfig, h4 = (0, import_react51.useRef)(null);
    return (0, import_jsx_runtime2.jsx)(Nt, {theme: t13, children: (0, import_jsx_runtime2.jsx)($r, {animate: l4, stiffness: d4, damping: u4, config: c6, children: (0, import_jsx_runtime2.jsx)(M, {container: h4, children: (0, import_jsx_runtime2.jsxs)(Jt, {condition: o8, wrapper: (0, import_jsx_runtime2.jsx)("div", {style: Qt, ref: h4}), children: [r9, s4 && (0, import_jsx_runtime2.jsx)(F, {})]})})})});
  };
  Zt.propTypes = {children: import_prop_types23.default.element.isRequired, isInteractive: import_prop_types23.default.bool, renderWrapper: import_prop_types23.default.bool, theme: import_prop_types23.default.object, animate: import_prop_types23.default.bool, motionStiffness: import_prop_types23.default.number, motionDamping: import_prop_types23.default.number, motionConfig: import_prop_types23.default.string};
  var $t = function() {
  };
  var ei = {position: "relative"};
  var ri = function(e15) {
    var t13 = e15.children, n11 = e15.theme, o8 = e15.isInteractive, a7 = o8 === void 0 || o8, l4 = e15.renderWrapper, d4 = l4 === void 0 || l4, u4 = e15.animate, c6 = e15.motionStiffness, f4 = e15.motionDamping, b8 = e15.motionConfig, y6 = (0, import_react51.useRef)(null), v8 = O(y6), R3 = v8.actions, q4 = v8.state, k6 = (0, import_react51.useCallback)(function(e16, r9) {
      return R3.showTooltipFromEvent(e16, r9);
    }, [R3.showTooltipFromEvent]), _5 = (0, import_react51.useMemo)(function() {
      return {showTooltip: a7 ? k6 : $t, hideTooltip: a7 ? R3.hideTooltip : $t};
    }, [R3.hideTooltip, a7, k6]);
    return (0, import_jsx_runtime2.jsx)(Nt, {theme: n11, children: (0, import_jsx_runtime2.jsx)($r, {animate: u4, stiffness: c6, damping: f4, config: b8, children: (0, import_jsx_runtime2.jsx)(N.Provider, {value: R3, children: (0, import_jsx_runtime2.jsx)(j.Provider, {value: q4, children: (0, import_jsx_runtime2.jsxs)(Jt, {condition: d4, wrapper: (0, import_jsx_runtime2.jsx)("div", {style: ei, ref: y6}), children: [t13(_5), a7 && (0, import_jsx_runtime2.jsx)(F, {})]})})})})});
  };
  ri.propTypes = {children: import_prop_types23.default.func.isRequired, isInteractive: import_prop_types23.default.bool, renderWrapper: import_prop_types23.default.bool, theme: import_prop_types23.default.object.isRequired, animate: import_prop_types23.default.bool.isRequired, motionStiffness: import_prop_types23.default.number, motionDamping: import_prop_types23.default.number, motionConfig: import_prop_types23.default.string};
  var ti = function(e15) {
    var r9 = e15.children, t13 = Ft(), i9 = t13[0], n11 = t13[1], o8 = n11.width > 0 && n11.height > 0;
    return (0, import_jsx_runtime2.jsx)("div", {ref: i9, style: {width: "100%", height: "100%"}, children: o8 && r9({width: n11.width, height: n11.height})});
  };
  ti.propTypes = {children: import_prop_types23.default.func.isRequired};
  var ii = ["id", "colors"];
  var ni = function(e15) {
    var r9 = e15.id, t13 = e15.colors, i9 = Lr(e15, ii);
    return (0, import_jsx_runtime2.jsx)("linearGradient", Gr({id: r9, x1: 0, x2: 0, y1: 0, y2: 1}, i9, {children: t13.map(function(e16) {
      var r10 = e16.offset, t14 = e16.color, i10 = e16.opacity;
      return (0, import_jsx_runtime2.jsx)("stop", {offset: r10 + "%", stopColor: t14, stopOpacity: i10 !== void 0 ? i10 : 1}, r10);
    })}));
  };
  ni.propTypes = {id: import_prop_types23.default.string.isRequired, colors: import_prop_types23.default.arrayOf(import_prop_types23.default.shape({offset: import_prop_types23.default.number.isRequired, color: import_prop_types23.default.string.isRequired, opacity: import_prop_types23.default.number})).isRequired, gradientTransform: import_prop_types23.default.string};
  var ai = {linearGradient: ni};
  var si = (0, import_react51.memo)(function(e15) {
    var r9 = e15.id, t13 = e15.background, i9 = e15.color, n11 = e15.size, o8 = e15.padding, a7 = e15.stagger, s4 = n11 + o8, l4 = n11 / 2, d4 = o8 / 2;
    return a7 === true && (s4 = 2 * n11 + 2 * o8), (0, import_jsx_runtime2.jsxs)("pattern", {id: r9, width: s4, height: s4, patternUnits: "userSpaceOnUse", children: [(0, import_jsx_runtime2.jsx)("rect", {width: s4, height: s4, fill: t13}), (0, import_jsx_runtime2.jsx)("circle", {cx: d4 + l4, cy: d4 + l4, r: l4, fill: i9}), a7 && (0, import_jsx_runtime2.jsx)("circle", {cx: 1.5 * o8 + n11 + l4, cy: 1.5 * o8 + n11 + l4, r: l4, fill: i9})]});
  });
  si.displayName = "PatternDots", si.propTypes = {id: import_prop_types23.default.string.isRequired, color: import_prop_types23.default.string.isRequired, background: import_prop_types23.default.string.isRequired, size: import_prop_types23.default.number.isRequired, padding: import_prop_types23.default.number.isRequired, stagger: import_prop_types23.default.bool.isRequired}, si.defaultProps = {color: "#000000", background: "#ffffff", size: 4, padding: 4, stagger: false};
  var di = 2 * Math.PI;
  var ui = function(e15) {
    return e15 * Math.PI / 180;
  };
  var ci = function(e15) {
    return 180 * e15 / Math.PI;
  };
  var pi3 = function(e15, r9) {
    return {x: Math.cos(e15) * r9, y: Math.sin(e15) * r9};
  };
  var hi = function(e15) {
    var r9 = e15 % 360;
    return r9 < 0 && (r9 += 360), r9;
  };
  var yi = {svg: {align: {left: "start", center: "middle", right: "end", start: "start", middle: "middle", end: "end"}, baseline: {top: "text-before-edge", center: "central", bottom: "alphabetic"}}, canvas: {align: {left: "left", center: "center", right: "right", start: "left", middle: "center", end: "right"}, baseline: {top: "top", center: "middle", bottom: "bottom"}}};
  var Ri = (0, import_react51.memo)(function(e15) {
    var r9 = e15.id, t13 = e15.spacing, i9 = e15.rotation, n11 = e15.background, o8 = e15.color, a7 = e15.lineWidth, s4 = Math.round(i9) % 360, l4 = Math.abs(t13);
    s4 > 180 ? s4 -= 360 : s4 > 90 ? s4 -= 180 : s4 < -180 ? s4 += 360 : s4 < -90 && (s4 += 180);
    var d4, u4 = l4, c6 = l4;
    return s4 === 0 ? d4 = "\n                M 0 0 L " + u4 + " 0\n                M 0 " + c6 + " L " + u4 + " " + c6 + "\n            " : s4 === 90 ? d4 = "\n                M 0 0 L 0 " + c6 + "\n                M " + u4 + " 0 L " + u4 + " " + c6 + "\n            " : (u4 = Math.abs(l4 / Math.sin(ui(s4))), c6 = l4 / Math.sin(ui(90 - s4)), d4 = s4 > 0 ? "\n                    M 0 " + -c6 + " L " + 2 * u4 + " " + c6 + "\n                    M " + -u4 + " " + -c6 + " L " + u4 + " " + c6 + "\n                    M " + -u4 + " 0 L " + u4 + " " + 2 * c6 + "\n                " : "\n                    M " + -u4 + " " + c6 + " L " + u4 + " " + -c6 + "\n                    M " + -u4 + " " + 2 * c6 + " L " + 2 * u4 + " " + -c6 + "\n                    M 0 " + 2 * c6 + " L " + 2 * u4 + " 0\n                "), (0, import_jsx_runtime2.jsxs)("pattern", {id: r9, width: u4, height: c6, patternUnits: "userSpaceOnUse", children: [(0, import_jsx_runtime2.jsx)("rect", {width: u4, height: c6, fill: n11, stroke: "rgba(255, 0, 0, 0.1)", strokeWidth: 0}), (0, import_jsx_runtime2.jsx)("path", {d: d4, strokeWidth: a7, stroke: o8, strokeLinecap: "square"})]});
  });
  Ri.displayName = "PatternLines", Ri.propTypes = {id: import_prop_types23.default.string.isRequired, spacing: import_prop_types23.default.number.isRequired, rotation: import_prop_types23.default.number.isRequired, background: import_prop_types23.default.string.isRequired, color: import_prop_types23.default.string.isRequired, lineWidth: import_prop_types23.default.number.isRequired}, Ri.defaultProps = {spacing: 5, rotation: 0, color: "#000000", background: "#ffffff", lineWidth: 2};
  var ki = (0, import_react51.memo)(function(e15) {
    var r9 = e15.id, t13 = e15.background, i9 = e15.color, n11 = e15.size, o8 = e15.padding, a7 = e15.stagger, s4 = n11 + o8, l4 = o8 / 2;
    return a7 === true && (s4 = 2 * n11 + 2 * o8), (0, import_jsx_runtime2.jsxs)("pattern", {id: r9, width: s4, height: s4, patternUnits: "userSpaceOnUse", children: [(0, import_jsx_runtime2.jsx)("rect", {width: s4, height: s4, fill: t13}), (0, import_jsx_runtime2.jsx)("rect", {x: l4, y: l4, width: n11, height: n11, fill: i9}), a7 && (0, import_jsx_runtime2.jsx)("rect", {x: 1.5 * o8 + n11, y: 1.5 * o8 + n11, width: n11, height: n11, fill: i9})]});
  });
  ki.displayName = "PatternSquares", ki.propTypes = {id: import_prop_types23.default.string.isRequired, color: import_prop_types23.default.string.isRequired, background: import_prop_types23.default.string.isRequired, size: import_prop_types23.default.number.isRequired, padding: import_prop_types23.default.number.isRequired, stagger: import_prop_types23.default.bool.isRequired}, ki.defaultProps = {color: "#000000", background: "#ffffff", size: 4, padding: 4, stagger: false};
  var wi = {patternDots: si, patternLines: Ri, patternSquares: ki};
  var xi = ["type"];
  var Oi = Gr({}, ai, wi);
  var Ci = function(e15) {
    var r9 = e15.defs;
    return !r9 || r9.length < 1 ? null : (0, import_jsx_runtime2.jsx)("defs", {"aria-hidden": true, children: r9.map(function(e16) {
      var r10 = e16.type, t13 = Lr(e16, xi);
      return Oi[r10] ? (0, import_react51.createElement)(Oi[r10], Gr({key: t13.id}, t13)) : null;
    })});
  };
  Ci.propTypes = {defs: import_prop_types23.default.arrayOf(import_prop_types23.default.shape({type: import_prop_types23.default.oneOf(Object.keys(Oi)).isRequired, id: import_prop_types23.default.string.isRequired}))};
  var Wi = (0, import_react51.memo)(Ci);
  var Si = function(e15) {
    var r9 = e15.width, t13 = e15.height, i9 = e15.margin, n11 = e15.defs, o8 = e15.children, a7 = e15.role, s4 = e15.ariaLabel, l4 = e15.ariaLabelledBy, d4 = e15.ariaDescribedBy, u4 = e15.isFocusable, c6 = Vt();
    return (0, import_jsx_runtime2.jsxs)("svg", {xmlns: "http://www.w3.org/2000/svg", width: r9, height: t13, role: a7, "aria-label": s4, "aria-labelledby": l4, "aria-describedby": d4, focusable: u4, tabIndex: u4 ? 0 : void 0, children: [(0, import_jsx_runtime2.jsx)(Wi, {defs: n11}), (0, import_jsx_runtime2.jsx)("rect", {width: r9, height: t13, fill: c6.background}), (0, import_jsx_runtime2.jsx)("g", {transform: "translate(" + i9.left + "," + i9.top + ")", children: o8})]});
  };
  Si.propTypes = {width: import_prop_types23.default.number.isRequired, height: import_prop_types23.default.number.isRequired, margin: import_prop_types23.default.shape({top: import_prop_types23.default.number.isRequired, left: import_prop_types23.default.number.isRequired}).isRequired, defs: import_prop_types23.default.array, children: import_prop_types23.default.oneOfType([import_prop_types23.default.arrayOf(import_prop_types23.default.node), import_prop_types23.default.node]).isRequired, role: import_prop_types23.default.string, isFocusable: import_prop_types23.default.bool, ariaLabel: import_prop_types23.default.string, ariaLabelledBy: import_prop_types23.default.string, ariaDescribedBy: import_prop_types23.default.string};
  var zi = function(e15) {
    var r9 = e15.size, t13 = e15.color, i9 = e15.borderWidth, n11 = e15.borderColor;
    return (0, import_jsx_runtime2.jsx)("circle", {r: r9 / 2, fill: t13, stroke: n11, strokeWidth: i9, style: {pointerEvents: "none"}});
  };
  zi.propTypes = {size: import_prop_types23.default.number.isRequired, color: import_prop_types23.default.string.isRequired, borderWidth: import_prop_types23.default.number.isRequired, borderColor: import_prop_types23.default.string.isRequired};
  var Pi = (0, import_react51.memo)(zi);
  var Ti = function(e15) {
    var r9 = e15.x, t13 = e15.y, i9 = e15.symbol, n11 = i9 === void 0 ? Pi : i9, o8 = e15.size, a7 = e15.datum, s4 = e15.color, l4 = e15.borderWidth, u4 = e15.borderColor, c6 = e15.label, f4 = e15.labelTextAnchor, p6 = f4 === void 0 ? "middle" : f4, h4 = e15.labelYOffset, g6 = h4 === void 0 ? -12 : h4, m5 = Vt(), b8 = tt(), y6 = b8.animate, v8 = b8.config, R3 = useSpring({transform: "translate(" + r9 + ", " + t13 + ")", config: v8, immediate: !y6});
    return (0, import_jsx_runtime2.jsxs)(animated.g, {transform: R3.transform, style: {pointerEvents: "none"}, children: [(0, import_react51.createElement)(n11, {size: o8, color: s4, datum: a7, borderWidth: l4, borderColor: u4}), c6 && (0, import_jsx_runtime2.jsx)("text", {textAnchor: p6, y: g6, style: m5.dots.text, children: c6})]});
  };
  Ti.propTypes = {x: import_prop_types23.default.number.isRequired, y: import_prop_types23.default.number.isRequired, datum: import_prop_types23.default.object.isRequired, size: import_prop_types23.default.number.isRequired, color: import_prop_types23.default.string.isRequired, borderWidth: import_prop_types23.default.number.isRequired, borderColor: import_prop_types23.default.string.isRequired, symbol: import_prop_types23.default.oneOfType([import_prop_types23.default.func, import_prop_types23.default.object]), label: import_prop_types23.default.oneOfType([import_prop_types23.default.string, import_prop_types23.default.number]), labelTextAnchor: import_prop_types23.default.oneOf(["start", "middle", "end"]), labelYOffset: import_prop_types23.default.number.isRequired};
  var Mi = (0, import_react51.memo)(Ti);
  var ji = function(e15) {
    var r9 = e15.width, t13 = e15.height, i9 = e15.axis, n11 = e15.scale, o8 = e15.value, a7 = e15.lineStyle, s4 = e15.textStyle, l4 = e15.legend, d4 = e15.legendPosition, u4 = e15.legendOffsetX, c6 = e15.legendOffsetY, f4 = e15.legendOrientation, p6 = Vt(), h4 = 0, g6 = 0, m5 = 0, b8 = 0;
    i9 === "y" ? (m5 = n11(o8), g6 = r9) : (h4 = n11(o8), b8 = t13);
    var y6 = null;
    if (l4) {
      var v8 = function(e16) {
        var r10 = e16.axis, t14 = e16.width, i10 = e16.height, n12 = e16.position, o9 = e16.offsetX, a8 = e16.offsetY, s5 = e16.orientation, l5 = 0, d5 = 0, u5 = s5 === "vertical" ? -90 : 0, c7 = "start";
        if (r10 === "x")
          switch (n12) {
            case "top-left":
              l5 = -o9, d5 = a8, c7 = "end";
              break;
            case "top":
              d5 = -a8, c7 = s5 === "horizontal" ? "middle" : "start";
              break;
            case "top-right":
              l5 = o9, d5 = a8, c7 = s5 === "horizontal" ? "start" : "end";
              break;
            case "right":
              l5 = o9, d5 = i10 / 2, c7 = s5 === "horizontal" ? "start" : "middle";
              break;
            case "bottom-right":
              l5 = o9, d5 = i10 - a8, c7 = "start";
              break;
            case "bottom":
              d5 = i10 + a8, c7 = s5 === "horizontal" ? "middle" : "end";
              break;
            case "bottom-left":
              d5 = i10 - a8, l5 = -o9, c7 = s5 === "horizontal" ? "end" : "start";
              break;
            case "left":
              l5 = -o9, d5 = i10 / 2, c7 = s5 === "horizontal" ? "end" : "middle";
          }
        else
          switch (n12) {
            case "top-left":
              l5 = o9, d5 = -a8, c7 = "start";
              break;
            case "top":
              l5 = t14 / 2, d5 = -a8, c7 = s5 === "horizontal" ? "middle" : "start";
              break;
            case "top-right":
              l5 = t14 - o9, d5 = -a8, c7 = s5 === "horizontal" ? "end" : "start";
              break;
            case "right":
              l5 = t14 + o9, c7 = s5 === "horizontal" ? "start" : "middle";
              break;
            case "bottom-right":
              l5 = t14 - o9, d5 = a8, c7 = "end";
              break;
            case "bottom":
              l5 = t14 / 2, d5 = a8, c7 = s5 === "horizontal" ? "middle" : "end";
              break;
            case "bottom-left":
              l5 = o9, d5 = a8, c7 = s5 === "horizontal" ? "start" : "end";
              break;
            case "left":
              l5 = -o9, c7 = s5 === "horizontal" ? "end" : "middle";
          }
        return {x: l5, y: d5, rotation: u5, textAnchor: c7};
      }({axis: i9, width: r9, height: t13, position: d4, offsetX: u4, offsetY: c6, orientation: f4});
      y6 = (0, import_jsx_runtime2.jsx)("text", {transform: "translate(" + v8.x + ", " + v8.y + ") rotate(" + v8.rotation + ")", textAnchor: v8.textAnchor, dominantBaseline: "central", style: s4, children: l4});
    }
    return (0, import_jsx_runtime2.jsxs)("g", {transform: "translate(" + h4 + ", " + m5 + ")", children: [(0, import_jsx_runtime2.jsx)("line", {x1: 0, x2: g6, y1: 0, y2: b8, stroke: p6.markers.lineColor, strokeWidth: p6.markers.lineStrokeWidth, style: a7}), y6]});
  };
  ji.propTypes = {width: import_prop_types23.default.number.isRequired, height: import_prop_types23.default.number.isRequired, axis: import_prop_types23.default.oneOf(["x", "y"]).isRequired, scale: import_prop_types23.default.func.isRequired, value: import_prop_types23.default.oneOfType([import_prop_types23.default.number, import_prop_types23.default.string, import_prop_types23.default.instanceOf(Date)]).isRequired, lineStyle: import_prop_types23.default.object, textStyle: import_prop_types23.default.object, legend: import_prop_types23.default.string, legendPosition: import_prop_types23.default.oneOf(["top-left", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left"]), legendOffsetX: import_prop_types23.default.number.isRequired, legendOffsetY: import_prop_types23.default.number.isRequired, legendOrientation: import_prop_types23.default.oneOf(["horizontal", "vertical"]).isRequired}, ji.defaultProps = {legendPosition: "top-right", legendOffsetX: 14, legendOffsetY: 14, legendOrientation: "horizontal"};
  var Di = (0, import_react51.memo)(ji);
  var Gi = function(e15) {
    var r9 = e15.markers, t13 = e15.width, i9 = e15.height, n11 = e15.xScale, o8 = e15.yScale;
    return r9 && r9.length !== 0 ? r9.map(function(e16, r10) {
      return (0, import_jsx_runtime2.jsx)(Di, Gr({}, e16, {width: t13, height: i9, scale: e16.axis === "y" ? o8 : n11}), r10);
    }) : null;
  };
  Gi.propTypes = {width: import_prop_types23.default.number.isRequired, height: import_prop_types23.default.number.isRequired, xScale: import_prop_types23.default.func.isRequired, yScale: import_prop_types23.default.func.isRequired, markers: import_prop_types23.default.arrayOf(import_prop_types23.default.shape({axis: import_prop_types23.default.oneOf(["x", "y"]).isRequired, value: import_prop_types23.default.oneOfType([import_prop_types23.default.number, import_prop_types23.default.string, import_prop_types23.default.instanceOf(Date)]).isRequired, lineStyle: import_prop_types23.default.object, textStyle: import_prop_types23.default.object}))};
  var Bi = (0, import_react51.memo)(Gi);
  var Ai = ["theme", "renderWrapper", "animate", "motionStiffness", "motionDamping", "motionConfig"];
  var Fi = function(e15) {
    return function(r9) {
      var t13, i9;
      function n11() {
        return r9.apply(this, arguments) || this;
      }
      return i9 = r9, (t13 = n11).prototype = Object.create(i9.prototype), t13.prototype.constructor = t13, Br(t13, i9), n11.prototype.render = function() {
        var r10 = this.props, t14 = r10.theme, i10 = r10.renderWrapper, n12 = r10.animate, o8 = r10.motionStiffness, a7 = r10.motionDamping, s4 = r10.motionConfig, l4 = Lr(r10, Ai);
        return (0, import_jsx_runtime2.jsx)(Zt, {theme: t14, renderWrapper: i10, isInteractive: l4.isInteractive, animate: n12, motionStiffness: o8, motionDamping: a7, motionConfig: s4, children: (0, import_jsx_runtime2.jsx)(e15, Gr({}, l4))});
      }, n11;
    }(import_react51.Component);
  };
  var Ei = function(e15, r9) {
    var t13, i9 = (0, import_isFunction5.default)(e15) ? e15 : function(r10) {
      return (0, import_get6.default)(r10, e15);
    };
    return r9 && (t13 = (0, import_isFunction5.default)(r9) ? r9 : format3(r9)), t13 ? function(e16) {
      return t13(i9(e16));
    } : i9;
  };
  var Ui = function(e15) {
    return (0, import_isFunction5.default)(e15) ? e15 : function(r9) {
      return (0, import_get6.default)(r9, e15);
    };
  };
  var Xi = function(e15) {
    return (0, import_react51.useMemo)(function() {
      return Ui(e15);
    }, [e15]);
  };
  var Ji = function(e15, r9, t13, i9, n11, o8) {
    return e15 <= n11 && n11 <= e15 + t13 && r9 <= o8 && o8 <= r9 + i9;
  };
  var Qi = function(e15, r9) {
    var t13 = r9.clientX, i9 = r9.clientY, n11 = e15.getBoundingClientRect();
    return [t13 - n11.left, i9 - n11.top];
  };
  var Zi = Object.keys(ai);
  var $i = Object.keys(wi);
  var en = function(e15, r9, t13) {
    if (e15 === "*")
      return true;
    if ((0, import_isFunction5.default)(e15))
      return e15(r9);
    if ((0, import_isPlainObject.default)(e15)) {
      var i9 = t13 ? (0, import_get6.default)(r9, t13) : r9;
      return (0, import_isEqual.default)((0, import_pick5.default)(i9, Object.keys(e15)), e15);
    }
    return false;
  };
  var rn = function(e15, r9, t13, i9) {
    var n11 = i9 === void 0 ? {} : i9, o8 = n11.dataKey, a7 = n11.colorKey, s4 = a7 === void 0 ? "color" : a7, l4 = n11.targetKey, d4 = l4 === void 0 ? "fill" : l4, u4 = [], c6 = {};
    return e15.length && r9.length && (u4 = [].concat(e15), r9.forEach(function(r10) {
      for (var i10 = function(i11) {
        var n13 = t13[i11], a8 = n13.id, l5 = n13.match;
        if (en(l5, r10, o8)) {
          var f4 = e15.find(function(e16) {
            return e16.id === a8;
          });
          if (f4) {
            if ($i.includes(f4.type))
              if (f4.background === "inherit" || f4.color === "inherit") {
                var p6 = (0, import_get6.default)(r10, s4), h4 = f4.background, g6 = f4.color, m5 = a8;
                f4.background === "inherit" && (m5 = m5 + ".bg." + p6, h4 = p6), f4.color === "inherit" && (m5 = m5 + ".fg." + p6, g6 = p6), (0, import_set.default)(r10, d4, "url(#" + m5 + ")"), c6[m5] || (u4.push(Gr({}, f4, {id: m5, background: h4, color: g6})), c6[m5] = 1);
              } else
                (0, import_set.default)(r10, d4, "url(#" + a8 + ")");
            else if (Zi.includes(f4.type)) {
              if (f4.colors.map(function(e16) {
                return e16.color;
              }).includes("inherit")) {
                var b8 = (0, import_get6.default)(r10, s4), R3 = a8, q4 = Gr({}, f4, {colors: f4.colors.map(function(e16, r11) {
                  return e16.color !== "inherit" ? e16 : (R3 = R3 + "." + r11 + "." + b8, Gr({}, e16, {color: e16.color === "inherit" ? b8 : e16.color}));
                })});
                q4.id = R3, (0, import_set.default)(r10, d4, "url(#" + R3 + ")"), c6[R3] || (u4.push(q4), c6[R3] = 1);
              } else
                (0, import_set.default)(r10, d4, "url(#" + a8 + ")");
            }
          }
          return "break";
        }
      }, n12 = 0; n12 < t13.length; n12++) {
        if (i10(n12) === "break")
          break;
      }
    })), u4;
  };

  // ../../node_modules/@nivo/geo/dist/nivo-geo.es.js
  var import_prop_types26 = __toModule(require_prop_types());

  // ../../node_modules/@nivo/colors/dist/nivo-colors.es.js
  var import_isPlainObject2 = __toModule(require_isPlainObject());
  var import_get7 = __toModule(require_get());
  var import_react52 = __toModule(require_react());
  var import_prop_types24 = __toModule(require_prop_types());
  function qe() {
    return qe = Object.assign || function(e15) {
      for (var r9 = 1; r9 < arguments.length; r9++) {
        var n11 = arguments[r9];
        for (var t13 in n11)
          Object.prototype.hasOwnProperty.call(n11, t13) && (e15[t13] = n11[t13]);
      }
      return e15;
    }, qe.apply(this, arguments);
  }
  function Re(e15, r9) {
    (r9 == null || r9 > e15.length) && (r9 = e15.length);
    for (var n11 = 0, t13 = new Array(r9); n11 < r9; n11++)
      t13[n11] = e15[n11];
    return t13;
  }
  function Se(e15, r9) {
    var n11 = typeof Symbol != "undefined" && e15[Symbol.iterator] || e15["@@iterator"];
    if (n11)
      return (n11 = n11.call(e15)).next.bind(n11);
    if (Array.isArray(e15) || (n11 = function(e16, r10) {
      if (e16) {
        if (typeof e16 == "string")
          return Re(e16, r10);
        var n12 = Object.prototype.toString.call(e16).slice(8, -1);
        return n12 === "Object" && e16.constructor && (n12 = e16.constructor.name), n12 === "Map" || n12 === "Set" ? Array.from(e16) : n12 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n12) ? Re(e16, r10) : void 0;
      }
    }(e15)) || r9 && e15 && typeof e15.length == "number") {
      n11 && (e15 = n11);
      var t13 = 0;
      return function() {
        return t13 >= e15.length ? {done: true} : {done: false, value: e15[t13++]};
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var Ce = {nivo: ["#e8c1a0", "#f47560", "#f1e15b", "#e8a838", "#61cdbb", "#97e3d5"], category10: category10_default, accent: Accent_default, dark2: Dark2_default, paired: Paired_default, pastel1: Pastel1_default, pastel2: Pastel2_default, set1: Set1_default, set2: Set2_default, set3: Set3_default};
  var Ge = Object.keys(Ce);
  var Ve = {brown_blueGreen: scheme, purpleRed_green: scheme2, pink_yellowGreen: scheme3, purple_orange: scheme4, red_blue: scheme5, red_grey: scheme6, red_yellow_blue: scheme7, red_yellow_green: scheme8, spectral: scheme9};
  var Te = Object.keys(Ve);
  var Pe = {brown_blueGreen: BrBG_default, purpleRed_green: PRGn_default, pink_yellowGreen: PiYG_default, purple_orange: PuOr_default, red_blue: RdBu_default, red_grey: RdGy_default, red_yellow_blue: RdYlBu_default, red_yellow_green: RdYlGn_default, spectral: Spectral_default};
  var Ue = {blues: scheme22, greens: scheme23, greys: scheme24, oranges: scheme27, purples: scheme25, reds: scheme26, blue_green: scheme10, blue_purple: scheme11, green_blue: scheme12, orange_red: scheme13, purple_blue_green: scheme14, purple_blue: scheme15, purple_red: scheme16, red_purple: scheme17, yellow_green_blue: scheme18, yellow_green: scheme19, yellow_orange_brown: scheme20, yellow_orange_red: scheme21};
  var De = Object.keys(Ue);
  var Me = {blues: Blues_default, greens: Greens_default, greys: Greys_default, oranges: Oranges_default, purples: Purples_default, reds: Reds_default, turbo: turbo_default, viridis: viridis_default, inferno, magma, plasma, cividis: cividis_default, warm, cool, cubehelixDefault: cubehelix_default2, blue_green: BuGn_default, blue_purple: BuPu_default, green_blue: GnBu_default, orange_red: OrRd_default, purple_blue_green: PuBuGn_default, purple_blue: PuBu_default, purple_red: PuRd_default, red_purple: RdPu_default, yellow_green_blue: YlGnBu_default, yellow_green: YlGn_default, yellow_orange_brown: YlOrBr_default, yellow_orange_red: YlOrRd_default};
  var $e = qe({}, Ce, Ve, Ue);
  var Be = Object.keys($e);
  var Fe = function(e15) {
    return Ge.includes(e15);
  };
  var He = function(e15) {
    return Te.includes(e15);
  };
  var Je = function(e15) {
    return De.includes(e15);
  };
  var Ke = {rainbow: rainbow_default, sinebow: sinebow_default};
  var Le = qe({}, Pe, Me, Ke);
  var Ne = Object.keys(Le);
  var Qe2 = function(e15, r9) {
    if (typeof e15 == "function")
      return e15;
    if ((0, import_isPlainObject2.default)(e15)) {
      if (function(e16) {
        return e16.theme !== void 0;
      }(e15)) {
        if (r9 === void 0)
          throw new Error("Unable to use color from theme as no theme was provided");
        var n11 = (0, import_get7.default)(r9, e15.theme);
        if (n11 === void 0)
          throw new Error("Color from theme is undefined at path: '" + e15.theme + "'");
        return function() {
          return n11;
        };
      }
      if (function(e16) {
        return e16.from !== void 0;
      }(e15)) {
        var t13 = function(r10) {
          return (0, import_get7.default)(r10, e15.from);
        };
        if (Array.isArray(e15.modifiers)) {
          for (var o8, i9 = [], u4 = function() {
            var e16 = o8.value, r10 = e16[0], n12 = e16[1];
            if (r10 === "brighter")
              i9.push(function(e17) {
                return e17.brighter(n12);
              });
            else if (r10 === "darker")
              i9.push(function(e17) {
                return e17.darker(n12);
              });
            else {
              if (r10 !== "opacity")
                throw new Error("Invalid color modifier: '" + r10 + "', must be one of: 'brighter', 'darker', 'opacity'");
              i9.push(function(e17) {
                return e17.opacity = n12, e17;
              });
            }
          }, a7 = Se(e15.modifiers); !(o8 = a7()).done; )
            u4();
          return i9.length === 0 ? t13 : function(e16) {
            return i9.reduce(function(e17, r10) {
              return r10(e17);
            }, rgb2(t13(e16))).toString();
          };
        }
        return t13;
      }
      throw new Error("Invalid color spec, you should either specify 'theme' or 'from' when using a config object");
    }
    return function() {
      return e15;
    };
  };
  var We = function(e15, r9) {
    return (0, import_react52.useMemo)(function() {
      return Qe2(e15, r9);
    }, [e15, r9]);
  };
  var Xe = import_prop_types24.default.oneOfType([import_prop_types24.default.func, import_prop_types24.default.arrayOf(import_prop_types24.default.string), import_prop_types24.default.shape({scheme: import_prop_types24.default.oneOf(Be).isRequired, size: import_prop_types24.default.number}), import_prop_types24.default.shape({datum: import_prop_types24.default.string.isRequired}), import_prop_types24.default.string]);
  var Ye = import_prop_types24.default.oneOfType([import_prop_types24.default.string, import_prop_types24.default.func, import_prop_types24.default.shape({theme: import_prop_types24.default.string.isRequired}), import_prop_types24.default.shape({from: import_prop_types24.default.string.isRequired, modifiers: import_prop_types24.default.arrayOf(import_prop_types24.default.array)})]);
  var fr = function(e15, r9) {
    if (typeof e15 == "function")
      return e15;
    var n11 = typeof r9 == "function" ? r9 : function(e16) {
      return (0, import_get7.default)(e16, r9);
    };
    if (Array.isArray(e15)) {
      var t13 = ordinal(e15), o8 = function(e16) {
        return t13(n11(e16));
      };
      return o8.scale = t13, o8;
    }
    if ((0, import_isPlainObject2.default)(e15)) {
      if (function(e16) {
        return e16.datum !== void 0;
      }(e15))
        return function(r10) {
          return (0, import_get7.default)(r10, e15.datum);
        };
      if (function(e16) {
        return e16.scheme !== void 0;
      }(e15)) {
        if (Fe(e15.scheme)) {
          var i9 = ordinal($e[e15.scheme]), u4 = function(e16) {
            return i9(n11(e16));
          };
          return u4.scale = i9, u4;
        }
        if (He(e15.scheme)) {
          if (e15.size !== void 0 && (e15.size < 3 || e15.size > 11))
            throw new Error("Invalid size '" + e15.size + "' for diverging color scheme '" + e15.scheme + "', must be between 3~11");
          var a7 = ordinal($e[e15.scheme][e15.size || 11]), s4 = function(e16) {
            return a7(n11(e16));
          };
          return s4.scale = a7, s4;
        }
        if (Je(e15.scheme)) {
          if (e15.size !== void 0 && (e15.size < 3 || e15.size > 9))
            throw new Error("Invalid size '" + e15.size + "' for sequential color scheme '" + e15.scheme + "', must be between 3~9");
          var c6 = ordinal($e[e15.scheme][e15.size || 9]), l4 = function(e16) {
            return c6(n11(e16));
          };
          return l4.scale = c6, l4;
        }
      }
      throw new Error("Invalid colors, when using an object, you should either pass a 'datum' or a 'scheme' property");
    }
    return function() {
      return e15;
    };
  };
  var dr = function(e15, r9) {
    return (0, import_react52.useMemo)(function() {
      return fr(e15, r9);
    }, [e15, r9]);
  };

  // ../../node_modules/@nivo/geo/dist/nivo-geo.es.js
  var import_get8 = __toModule(require_get());
  var import_isFunction6 = __toModule(require_isFunction());

  // ../../node_modules/d3-geo/src/adder.js
  function adder_default() {
    return new Adder();
  }
  function Adder() {
    this.reset();
  }
  Adder.prototype = {
    constructor: Adder,
    reset: function() {
      this.s = this.t = 0;
    },
    add: function(y6) {
      add(temp, y6, this.t);
      add(this, temp.s, this.s);
      if (this.s)
        this.t += temp.t;
      else
        this.s = temp.t;
    },
    valueOf: function() {
      return this.s;
    }
  };
  var temp = new Adder();
  function add(adder, a7, b8) {
    var x7 = adder.s = a7 + b8, bv = x7 - a7, av = x7 - bv;
    adder.t = a7 - av + (b8 - bv);
  }

  // ../../node_modules/d3-geo/src/math.js
  var epsilon3 = 1e-6;
  var epsilon22 = 1e-12;
  var pi4 = Math.PI;
  var halfPi2 = pi4 / 2;
  var quarterPi = pi4 / 4;
  var tau3 = pi4 * 2;
  var degrees2 = 180 / pi4;
  var radians2 = pi4 / 180;
  var abs = Math.abs;
  var atan = Math.atan;
  var atan2 = Math.atan2;
  var cos = Math.cos;
  var ceil = Math.ceil;
  var exp = Math.exp;
  var log2 = Math.log;
  var sin = Math.sin;
  var sign2 = Math.sign || function(x7) {
    return x7 > 0 ? 1 : x7 < 0 ? -1 : 0;
  };
  var sqrt = Math.sqrt;
  var tan = Math.tan;
  function acos(x7) {
    return x7 > 1 ? 0 : x7 < -1 ? pi4 : Math.acos(x7);
  }
  function asin(x7) {
    return x7 > 1 ? halfPi2 : x7 < -1 ? -halfPi2 : Math.asin(x7);
  }

  // ../../node_modules/d3-geo/src/noop.js
  function noop2() {
  }

  // ../../node_modules/d3-geo/src/stream.js
  function streamGeometry(geometry, stream) {
    if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
      streamGeometryType[geometry.type](geometry, stream);
    }
  }
  var streamObjectType = {
    Feature: function(object2, stream) {
      streamGeometry(object2.geometry, stream);
    },
    FeatureCollection: function(object2, stream) {
      var features2 = object2.features, i9 = -1, n11 = features2.length;
      while (++i9 < n11)
        streamGeometry(features2[i9].geometry, stream);
    }
  };
  var streamGeometryType = {
    Sphere: function(object2, stream) {
      stream.sphere();
    },
    Point: function(object2, stream) {
      object2 = object2.coordinates;
      stream.point(object2[0], object2[1], object2[2]);
    },
    MultiPoint: function(object2, stream) {
      var coordinates2 = object2.coordinates, i9 = -1, n11 = coordinates2.length;
      while (++i9 < n11)
        object2 = coordinates2[i9], stream.point(object2[0], object2[1], object2[2]);
    },
    LineString: function(object2, stream) {
      streamLine(object2.coordinates, stream, 0);
    },
    MultiLineString: function(object2, stream) {
      var coordinates2 = object2.coordinates, i9 = -1, n11 = coordinates2.length;
      while (++i9 < n11)
        streamLine(coordinates2[i9], stream, 0);
    },
    Polygon: function(object2, stream) {
      streamPolygon(object2.coordinates, stream);
    },
    MultiPolygon: function(object2, stream) {
      var coordinates2 = object2.coordinates, i9 = -1, n11 = coordinates2.length;
      while (++i9 < n11)
        streamPolygon(coordinates2[i9], stream);
    },
    GeometryCollection: function(object2, stream) {
      var geometries = object2.geometries, i9 = -1, n11 = geometries.length;
      while (++i9 < n11)
        streamGeometry(geometries[i9], stream);
    }
  };
  function streamLine(coordinates2, stream, closed) {
    var i9 = -1, n11 = coordinates2.length - closed, coordinate;
    stream.lineStart();
    while (++i9 < n11)
      coordinate = coordinates2[i9], stream.point(coordinate[0], coordinate[1], coordinate[2]);
    stream.lineEnd();
  }
  function streamPolygon(coordinates2, stream) {
    var i9 = -1, n11 = coordinates2.length;
    stream.polygonStart();
    while (++i9 < n11)
      streamLine(coordinates2[i9], stream, 1);
    stream.polygonEnd();
  }
  function stream_default(object2, stream) {
    if (object2 && streamObjectType.hasOwnProperty(object2.type)) {
      streamObjectType[object2.type](object2, stream);
    } else {
      streamGeometry(object2, stream);
    }
  }

  // ../../node_modules/d3-geo/src/cartesian.js
  function spherical(cartesian2) {
    return [atan2(cartesian2[1], cartesian2[0]), asin(cartesian2[2])];
  }
  function cartesian(spherical2) {
    var lambda = spherical2[0], phi = spherical2[1], cosPhi = cos(phi);
    return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];
  }
  function cartesianDot(a7, b8) {
    return a7[0] * b8[0] + a7[1] * b8[1] + a7[2] * b8[2];
  }
  function cartesianCross(a7, b8) {
    return [a7[1] * b8[2] - a7[2] * b8[1], a7[2] * b8[0] - a7[0] * b8[2], a7[0] * b8[1] - a7[1] * b8[0]];
  }
  function cartesianAddInPlace(a7, b8) {
    a7[0] += b8[0], a7[1] += b8[1], a7[2] += b8[2];
  }
  function cartesianScale(vector, k6) {
    return [vector[0] * k6, vector[1] * k6, vector[2] * k6];
  }
  function cartesianNormalizeInPlace(d4) {
    var l4 = sqrt(d4[0] * d4[0] + d4[1] * d4[1] + d4[2] * d4[2]);
    d4[0] /= l4, d4[1] /= l4, d4[2] /= l4;
  }

  // ../../node_modules/d3-geo/src/compose.js
  function compose_default(a7, b8) {
    function compose(x7, y6) {
      return x7 = a7(x7, y6), b8(x7[0], x7[1]);
    }
    if (a7.invert && b8.invert)
      compose.invert = function(x7, y6) {
        return x7 = b8.invert(x7, y6), x7 && a7.invert(x7[0], x7[1]);
      };
    return compose;
  }

  // ../../node_modules/d3-geo/src/rotation.js
  function rotationIdentity(lambda, phi) {
    return [abs(lambda) > pi4 ? lambda + Math.round(-lambda / tau3) * tau3 : lambda, phi];
  }
  rotationIdentity.invert = rotationIdentity;
  function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
    return (deltaLambda %= tau3) ? deltaPhi || deltaGamma ? compose_default(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;
  }
  function forwardRotationLambda(deltaLambda) {
    return function(lambda, phi) {
      return lambda += deltaLambda, [lambda > pi4 ? lambda - tau3 : lambda < -pi4 ? lambda + tau3 : lambda, phi];
    };
  }
  function rotationLambda(deltaLambda) {
    var rotation = forwardRotationLambda(deltaLambda);
    rotation.invert = forwardRotationLambda(-deltaLambda);
    return rotation;
  }
  function rotationPhiGamma(deltaPhi, deltaGamma) {
    var cosDeltaPhi = cos(deltaPhi), sinDeltaPhi = sin(deltaPhi), cosDeltaGamma = cos(deltaGamma), sinDeltaGamma = sin(deltaGamma);
    function rotation(lambda, phi) {
      var cosPhi = cos(phi), x7 = cos(lambda) * cosPhi, y6 = sin(lambda) * cosPhi, z6 = sin(phi), k6 = z6 * cosDeltaPhi + x7 * sinDeltaPhi;
      return [
        atan2(y6 * cosDeltaGamma - k6 * sinDeltaGamma, x7 * cosDeltaPhi - z6 * sinDeltaPhi),
        asin(k6 * cosDeltaGamma + y6 * sinDeltaGamma)
      ];
    }
    rotation.invert = function(lambda, phi) {
      var cosPhi = cos(phi), x7 = cos(lambda) * cosPhi, y6 = sin(lambda) * cosPhi, z6 = sin(phi), k6 = z6 * cosDeltaGamma - y6 * sinDeltaGamma;
      return [
        atan2(y6 * cosDeltaGamma + z6 * sinDeltaGamma, x7 * cosDeltaPhi + k6 * sinDeltaPhi),
        asin(k6 * cosDeltaPhi - x7 * sinDeltaPhi)
      ];
    };
    return rotation;
  }
  function rotation_default(rotate) {
    rotate = rotateRadians(rotate[0] * radians2, rotate[1] * radians2, rotate.length > 2 ? rotate[2] * radians2 : 0);
    function forward(coordinates2) {
      coordinates2 = rotate(coordinates2[0] * radians2, coordinates2[1] * radians2);
      return coordinates2[0] *= degrees2, coordinates2[1] *= degrees2, coordinates2;
    }
    forward.invert = function(coordinates2) {
      coordinates2 = rotate.invert(coordinates2[0] * radians2, coordinates2[1] * radians2);
      return coordinates2[0] *= degrees2, coordinates2[1] *= degrees2, coordinates2;
    };
    return forward;
  }

  // ../../node_modules/d3-geo/src/circle.js
  function circleStream(stream, radius, delta, direction, t03, t13) {
    if (!delta)
      return;
    var cosRadius = cos(radius), sinRadius = sin(radius), step = direction * delta;
    if (t03 == null) {
      t03 = radius + direction * tau3;
      t13 = radius - step / 2;
    } else {
      t03 = circleRadius(cosRadius, t03);
      t13 = circleRadius(cosRadius, t13);
      if (direction > 0 ? t03 < t13 : t03 > t13)
        t03 += direction * tau3;
    }
    for (var point6, t14 = t03; direction > 0 ? t14 > t13 : t14 < t13; t14 -= step) {
      point6 = spherical([cosRadius, -sinRadius * cos(t14), -sinRadius * sin(t14)]);
      stream.point(point6[0], point6[1]);
    }
  }
  function circleRadius(cosRadius, point6) {
    point6 = cartesian(point6), point6[0] -= cosRadius;
    cartesianNormalizeInPlace(point6);
    var radius = acos(-point6[1]);
    return ((-point6[2] < 0 ? -radius : radius) + tau3 - epsilon3) % tau3;
  }

  // ../../node_modules/d3-geo/src/clip/buffer.js
  function buffer_default() {
    var lines = [], line;
    return {
      point: function(x7, y6, m5) {
        line.push([x7, y6, m5]);
      },
      lineStart: function() {
        lines.push(line = []);
      },
      lineEnd: noop2,
      rejoin: function() {
        if (lines.length > 1)
          lines.push(lines.pop().concat(lines.shift()));
      },
      result: function() {
        var result = lines;
        lines = [];
        line = null;
        return result;
      }
    };
  }

  // ../../node_modules/d3-geo/src/pointEqual.js
  function pointEqual_default(a7, b8) {
    return abs(a7[0] - b8[0]) < epsilon3 && abs(a7[1] - b8[1]) < epsilon3;
  }

  // ../../node_modules/d3-geo/src/clip/rejoin.js
  function Intersection(point6, points, other, entry) {
    this.x = point6;
    this.z = points;
    this.o = other;
    this.e = entry;
    this.v = false;
    this.n = this.p = null;
  }
  function rejoin_default(segments, compareIntersection2, startInside, interpolate2, stream) {
    var subject = [], clip = [], i9, n11;
    segments.forEach(function(segment) {
      if ((n12 = segment.length - 1) <= 0)
        return;
      var n12, p0 = segment[0], p1 = segment[n12], x7;
      if (pointEqual_default(p0, p1)) {
        if (!p0[2] && !p1[2]) {
          stream.lineStart();
          for (i9 = 0; i9 < n12; ++i9)
            stream.point((p0 = segment[i9])[0], p0[1]);
          stream.lineEnd();
          return;
        }
        p1[0] += 2 * epsilon3;
      }
      subject.push(x7 = new Intersection(p0, segment, null, true));
      clip.push(x7.o = new Intersection(p0, null, x7, false));
      subject.push(x7 = new Intersection(p1, segment, null, false));
      clip.push(x7.o = new Intersection(p1, null, x7, true));
    });
    if (!subject.length)
      return;
    clip.sort(compareIntersection2);
    link(subject);
    link(clip);
    for (i9 = 0, n11 = clip.length; i9 < n11; ++i9) {
      clip[i9].e = startInside = !startInside;
    }
    var start2 = subject[0], points, point6;
    while (1) {
      var current = start2, isSubject = true;
      while (current.v)
        if ((current = current.n) === start2)
          return;
      points = current.z;
      stream.lineStart();
      do {
        current.v = current.o.v = true;
        if (current.e) {
          if (isSubject) {
            for (i9 = 0, n11 = points.length; i9 < n11; ++i9)
              stream.point((point6 = points[i9])[0], point6[1]);
          } else {
            interpolate2(current.x, current.n.x, 1, stream);
          }
          current = current.n;
        } else {
          if (isSubject) {
            points = current.p.z;
            for (i9 = points.length - 1; i9 >= 0; --i9)
              stream.point((point6 = points[i9])[0], point6[1]);
          } else {
            interpolate2(current.x, current.p.x, -1, stream);
          }
          current = current.p;
        }
        current = current.o;
        points = current.z;
        isSubject = !isSubject;
      } while (!current.v);
      stream.lineEnd();
    }
  }
  function link(array2) {
    if (!(n11 = array2.length))
      return;
    var n11, i9 = 0, a7 = array2[0], b8;
    while (++i9 < n11) {
      a7.n = b8 = array2[i9];
      b8.p = a7;
      a7 = b8;
    }
    a7.n = b8 = array2[0];
    b8.p = a7;
  }

  // ../../node_modules/d3-geo/src/polygonContains.js
  var sum2 = adder_default();
  function longitude(point6) {
    if (abs(point6[0]) <= pi4)
      return point6[0];
    else
      return sign2(point6[0]) * ((abs(point6[0]) + pi4) % tau3 - pi4);
  }
  function polygonContains_default(polygon, point6) {
    var lambda = longitude(point6), phi = point6[1], sinPhi = sin(phi), normal = [sin(lambda), -cos(lambda), 0], angle = 0, winding = 0;
    sum2.reset();
    if (sinPhi === 1)
      phi = halfPi2 + epsilon3;
    else if (sinPhi === -1)
      phi = -halfPi2 - epsilon3;
    for (var i9 = 0, n11 = polygon.length; i9 < n11; ++i9) {
      if (!(m5 = (ring = polygon[i9]).length))
        continue;
      var ring, m5, point0 = ring[m5 - 1], lambda02 = longitude(point0), phi0 = point0[1] / 2 + quarterPi, sinPhi02 = sin(phi0), cosPhi02 = cos(phi0);
      for (var j4 = 0; j4 < m5; ++j4, lambda02 = lambda1, sinPhi02 = sinPhi1, cosPhi02 = cosPhi1, point0 = point1) {
        var point1 = ring[j4], lambda1 = longitude(point1), phi1 = point1[1] / 2 + quarterPi, sinPhi1 = sin(phi1), cosPhi1 = cos(phi1), delta = lambda1 - lambda02, sign3 = delta >= 0 ? 1 : -1, absDelta = sign3 * delta, antimeridian = absDelta > pi4, k6 = sinPhi02 * sinPhi1;
        sum2.add(atan2(k6 * sign3 * sin(absDelta), cosPhi02 * cosPhi1 + k6 * cos(absDelta)));
        angle += antimeridian ? delta + sign3 * tau3 : delta;
        if (antimeridian ^ lambda02 >= lambda ^ lambda1 >= lambda) {
          var arc = cartesianCross(cartesian(point0), cartesian(point1));
          cartesianNormalizeInPlace(arc);
          var intersection = cartesianCross(normal, arc);
          cartesianNormalizeInPlace(intersection);
          var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);
          if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
            winding += antimeridian ^ delta >= 0 ? 1 : -1;
          }
        }
      }
    }
    return (angle < -epsilon3 || angle < epsilon3 && sum2 < -epsilon3) ^ winding & 1;
  }

  // ../../node_modules/d3-geo/node_modules/d3-array/src/ascending.js
  function ascending_default3(a7, b8) {
    return a7 < b8 ? -1 : a7 > b8 ? 1 : a7 >= b8 ? 0 : NaN;
  }

  // ../../node_modules/d3-geo/node_modules/d3-array/src/bisector.js
  function bisector_default2(compare) {
    if (compare.length === 1)
      compare = ascendingComparator2(compare);
    return {
      left: function(a7, x7, lo, hi2) {
        if (lo == null)
          lo = 0;
        if (hi2 == null)
          hi2 = a7.length;
        while (lo < hi2) {
          var mid = lo + hi2 >>> 1;
          if (compare(a7[mid], x7) < 0)
            lo = mid + 1;
          else
            hi2 = mid;
        }
        return lo;
      },
      right: function(a7, x7, lo, hi2) {
        if (lo == null)
          lo = 0;
        if (hi2 == null)
          hi2 = a7.length;
        while (lo < hi2) {
          var mid = lo + hi2 >>> 1;
          if (compare(a7[mid], x7) > 0)
            hi2 = mid;
          else
            lo = mid + 1;
        }
        return lo;
      }
    };
  }
  function ascendingComparator2(f4) {
    return function(d4, x7) {
      return ascending_default3(f4(d4), x7);
    };
  }

  // ../../node_modules/d3-geo/node_modules/d3-array/src/bisect.js
  var ascendingBisect2 = bisector_default2(ascending_default3);
  var bisectRight2 = ascendingBisect2.right;
  var bisectLeft2 = ascendingBisect2.left;

  // ../../node_modules/d3-geo/node_modules/d3-array/src/array.js
  var array = Array.prototype;
  var slice2 = array.slice;
  var map4 = array.map;

  // ../../node_modules/d3-geo/node_modules/d3-array/src/range.js
  function range_default2(start2, stop, step) {
    start2 = +start2, stop = +stop, step = (n11 = arguments.length) < 2 ? (stop = start2, start2 = 0, 1) : n11 < 3 ? 1 : +step;
    var i9 = -1, n11 = Math.max(0, Math.ceil((stop - start2) / step)) | 0, range = new Array(n11);
    while (++i9 < n11) {
      range[i9] = start2 + i9 * step;
    }
    return range;
  }

  // ../../node_modules/d3-geo/node_modules/d3-array/src/ticks.js
  var e102 = Math.sqrt(50);
  var e52 = Math.sqrt(10);
  var e22 = Math.sqrt(2);

  // ../../node_modules/d3-geo/node_modules/d3-array/src/merge.js
  function merge_default(arrays) {
    var n11 = arrays.length, m5, i9 = -1, j4 = 0, merged, array2;
    while (++i9 < n11)
      j4 += arrays[i9].length;
    merged = new Array(j4);
    while (--n11 >= 0) {
      array2 = arrays[n11];
      m5 = array2.length;
      while (--m5 >= 0) {
        merged[--j4] = array2[m5];
      }
    }
    return merged;
  }

  // ../../node_modules/d3-geo/src/clip/index.js
  function clip_default(pointVisible, clipLine, interpolate2, start2) {
    return function(sink) {
      var line = clipLine(sink), ringBuffer = buffer_default(), ringSink = clipLine(ringBuffer), polygonStarted = false, polygon, segments, ring;
      var clip = {
        point: point6,
        lineStart,
        lineEnd,
        polygonStart: function() {
          clip.point = pointRing;
          clip.lineStart = ringStart;
          clip.lineEnd = ringEnd;
          segments = [];
          polygon = [];
        },
        polygonEnd: function() {
          clip.point = point6;
          clip.lineStart = lineStart;
          clip.lineEnd = lineEnd;
          segments = merge_default(segments);
          var startInside = polygonContains_default(polygon, start2);
          if (segments.length) {
            if (!polygonStarted)
              sink.polygonStart(), polygonStarted = true;
            rejoin_default(segments, compareIntersection, startInside, interpolate2, sink);
          } else if (startInside) {
            if (!polygonStarted)
              sink.polygonStart(), polygonStarted = true;
            sink.lineStart();
            interpolate2(null, null, 1, sink);
            sink.lineEnd();
          }
          if (polygonStarted)
            sink.polygonEnd(), polygonStarted = false;
          segments = polygon = null;
        },
        sphere: function() {
          sink.polygonStart();
          sink.lineStart();
          interpolate2(null, null, 1, sink);
          sink.lineEnd();
          sink.polygonEnd();
        }
      };
      function point6(lambda, phi) {
        if (pointVisible(lambda, phi))
          sink.point(lambda, phi);
      }
      function pointLine(lambda, phi) {
        line.point(lambda, phi);
      }
      function lineStart() {
        clip.point = pointLine;
        line.lineStart();
      }
      function lineEnd() {
        clip.point = point6;
        line.lineEnd();
      }
      function pointRing(lambda, phi) {
        ring.push([lambda, phi]);
        ringSink.point(lambda, phi);
      }
      function ringStart() {
        ringSink.lineStart();
        ring = [];
      }
      function ringEnd() {
        pointRing(ring[0][0], ring[0][1]);
        ringSink.lineEnd();
        var clean = ringSink.clean(), ringSegments = ringBuffer.result(), i9, n11 = ringSegments.length, m5, segment, point7;
        ring.pop();
        polygon.push(ring);
        ring = null;
        if (!n11)
          return;
        if (clean & 1) {
          segment = ringSegments[0];
          if ((m5 = segment.length - 1) > 0) {
            if (!polygonStarted)
              sink.polygonStart(), polygonStarted = true;
            sink.lineStart();
            for (i9 = 0; i9 < m5; ++i9)
              sink.point((point7 = segment[i9])[0], point7[1]);
            sink.lineEnd();
          }
          return;
        }
        if (n11 > 1 && clean & 2)
          ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
        segments.push(ringSegments.filter(validSegment));
      }
      return clip;
    };
  }
  function validSegment(segment) {
    return segment.length > 1;
  }
  function compareIntersection(a7, b8) {
    return ((a7 = a7.x)[0] < 0 ? a7[1] - halfPi2 - epsilon3 : halfPi2 - a7[1]) - ((b8 = b8.x)[0] < 0 ? b8[1] - halfPi2 - epsilon3 : halfPi2 - b8[1]);
  }

  // ../../node_modules/d3-geo/src/clip/antimeridian.js
  var antimeridian_default = clip_default(function() {
    return true;
  }, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi4, -halfPi2]);
  function clipAntimeridianLine(stream) {
    var lambda02 = NaN, phi0 = NaN, sign0 = NaN, clean;
    return {
      lineStart: function() {
        stream.lineStart();
        clean = 1;
      },
      point: function(lambda1, phi1) {
        var sign1 = lambda1 > 0 ? pi4 : -pi4, delta = abs(lambda1 - lambda02);
        if (abs(delta - pi4) < epsilon3) {
          stream.point(lambda02, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi2 : -halfPi2);
          stream.point(sign0, phi0);
          stream.lineEnd();
          stream.lineStart();
          stream.point(sign1, phi0);
          stream.point(lambda1, phi0);
          clean = 0;
        } else if (sign0 !== sign1 && delta >= pi4) {
          if (abs(lambda02 - sign0) < epsilon3)
            lambda02 -= sign0 * epsilon3;
          if (abs(lambda1 - sign1) < epsilon3)
            lambda1 -= sign1 * epsilon3;
          phi0 = clipAntimeridianIntersect(lambda02, phi0, lambda1, phi1);
          stream.point(sign0, phi0);
          stream.lineEnd();
          stream.lineStart();
          stream.point(sign1, phi0);
          clean = 0;
        }
        stream.point(lambda02 = lambda1, phi0 = phi1);
        sign0 = sign1;
      },
      lineEnd: function() {
        stream.lineEnd();
        lambda02 = phi0 = NaN;
      },
      clean: function() {
        return 2 - clean;
      }
    };
  }
  function clipAntimeridianIntersect(lambda02, phi0, lambda1, phi1) {
    var cosPhi02, cosPhi1, sinLambda0Lambda1 = sin(lambda02 - lambda1);
    return abs(sinLambda0Lambda1) > epsilon3 ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi02 = cos(phi0)) * sin(lambda02)) / (cosPhi02 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;
  }
  function clipAntimeridianInterpolate(from, to3, direction, stream) {
    var phi;
    if (from == null) {
      phi = direction * halfPi2;
      stream.point(-pi4, phi);
      stream.point(0, phi);
      stream.point(pi4, phi);
      stream.point(pi4, 0);
      stream.point(pi4, -phi);
      stream.point(0, -phi);
      stream.point(-pi4, -phi);
      stream.point(-pi4, 0);
      stream.point(-pi4, phi);
    } else if (abs(from[0] - to3[0]) > epsilon3) {
      var lambda = from[0] < to3[0] ? pi4 : -pi4;
      phi = direction * lambda / 2;
      stream.point(-lambda, phi);
      stream.point(0, phi);
      stream.point(lambda, phi);
    } else {
      stream.point(to3[0], to3[1]);
    }
  }

  // ../../node_modules/d3-geo/src/clip/circle.js
  function circle_default(radius) {
    var cr = cos(radius), delta = 6 * radians2, smallRadius = cr > 0, notHemisphere = abs(cr) > epsilon3;
    function interpolate2(from, to3, direction, stream) {
      circleStream(stream, radius, delta, direction, from, to3);
    }
    function visible(lambda, phi) {
      return cos(lambda) * cos(phi) > cr;
    }
    function clipLine(stream) {
      var point0, c0, v0, v00, clean;
      return {
        lineStart: function() {
          v00 = v0 = false;
          clean = 1;
        },
        point: function(lambda, phi) {
          var point1 = [lambda, phi], point22, v8 = visible(lambda, phi), c6 = smallRadius ? v8 ? 0 : code(lambda, phi) : v8 ? code(lambda + (lambda < 0 ? pi4 : -pi4), phi) : 0;
          if (!point0 && (v00 = v0 = v8))
            stream.lineStart();
          if (v8 !== v0) {
            point22 = intersect(point0, point1);
            if (!point22 || pointEqual_default(point0, point22) || pointEqual_default(point1, point22))
              point1[2] = 1;
          }
          if (v8 !== v0) {
            clean = 0;
            if (v8) {
              stream.lineStart();
              point22 = intersect(point1, point0);
              stream.point(point22[0], point22[1]);
            } else {
              point22 = intersect(point0, point1);
              stream.point(point22[0], point22[1], 2);
              stream.lineEnd();
            }
            point0 = point22;
          } else if (notHemisphere && point0 && smallRadius ^ v8) {
            var t13;
            if (!(c6 & c0) && (t13 = intersect(point1, point0, true))) {
              clean = 0;
              if (smallRadius) {
                stream.lineStart();
                stream.point(t13[0][0], t13[0][1]);
                stream.point(t13[1][0], t13[1][1]);
                stream.lineEnd();
              } else {
                stream.point(t13[1][0], t13[1][1]);
                stream.lineEnd();
                stream.lineStart();
                stream.point(t13[0][0], t13[0][1], 3);
              }
            }
          }
          if (v8 && (!point0 || !pointEqual_default(point0, point1))) {
            stream.point(point1[0], point1[1]);
          }
          point0 = point1, v0 = v8, c0 = c6;
        },
        lineEnd: function() {
          if (v0)
            stream.lineEnd();
          point0 = null;
        },
        clean: function() {
          return clean | (v00 && v0) << 1;
        }
      };
    }
    function intersect(a7, b8, two) {
      var pa = cartesian(a7), pb = cartesian(b8);
      var n1 = [1, 0, 0], n22 = cartesianCross(pa, pb), n2n2 = cartesianDot(n22, n22), n1n2 = n22[0], determinant = n2n2 - n1n2 * n1n2;
      if (!determinant)
        return !two && a7;
      var c1 = cr * n2n2 / determinant, c22 = -cr * n1n2 / determinant, n1xn2 = cartesianCross(n1, n22), A8 = cartesianScale(n1, c1), B5 = cartesianScale(n22, c22);
      cartesianAddInPlace(A8, B5);
      var u4 = n1xn2, w5 = cartesianDot(A8, u4), uu = cartesianDot(u4, u4), t22 = w5 * w5 - uu * (cartesianDot(A8, A8) - 1);
      if (t22 < 0)
        return;
      var t13 = sqrt(t22), q4 = cartesianScale(u4, (-w5 - t13) / uu);
      cartesianAddInPlace(q4, A8);
      q4 = spherical(q4);
      if (!two)
        return q4;
      var lambda02 = a7[0], lambda1 = b8[0], phi0 = a7[1], phi1 = b8[1], z6;
      if (lambda1 < lambda02)
        z6 = lambda02, lambda02 = lambda1, lambda1 = z6;
      var delta2 = lambda1 - lambda02, polar = abs(delta2 - pi4) < epsilon3, meridian = polar || delta2 < epsilon3;
      if (!polar && phi1 < phi0)
        z6 = phi0, phi0 = phi1, phi1 = z6;
      if (meridian ? polar ? phi0 + phi1 > 0 ^ q4[1] < (abs(q4[0] - lambda02) < epsilon3 ? phi0 : phi1) : phi0 <= q4[1] && q4[1] <= phi1 : delta2 > pi4 ^ (lambda02 <= q4[0] && q4[0] <= lambda1)) {
        var q1 = cartesianScale(u4, (-w5 + t13) / uu);
        cartesianAddInPlace(q1, A8);
        return [q4, spherical(q1)];
      }
    }
    function code(lambda, phi) {
      var r9 = smallRadius ? radius : pi4 - radius, code2 = 0;
      if (lambda < -r9)
        code2 |= 1;
      else if (lambda > r9)
        code2 |= 2;
      if (phi < -r9)
        code2 |= 4;
      else if (phi > r9)
        code2 |= 8;
      return code2;
    }
    return clip_default(visible, clipLine, interpolate2, smallRadius ? [0, -radius] : [-pi4, radius - pi4]);
  }

  // ../../node_modules/d3-geo/src/clip/line.js
  function line_default2(a7, b8, x05, y05, x12, y12) {
    var ax = a7[0], ay = a7[1], bx = b8[0], by = b8[1], t03 = 0, t13 = 1, dx = bx - ax, dy = by - ay, r9;
    r9 = x05 - ax;
    if (!dx && r9 > 0)
      return;
    r9 /= dx;
    if (dx < 0) {
      if (r9 < t03)
        return;
      if (r9 < t13)
        t13 = r9;
    } else if (dx > 0) {
      if (r9 > t13)
        return;
      if (r9 > t03)
        t03 = r9;
    }
    r9 = x12 - ax;
    if (!dx && r9 < 0)
      return;
    r9 /= dx;
    if (dx < 0) {
      if (r9 > t13)
        return;
      if (r9 > t03)
        t03 = r9;
    } else if (dx > 0) {
      if (r9 < t03)
        return;
      if (r9 < t13)
        t13 = r9;
    }
    r9 = y05 - ay;
    if (!dy && r9 > 0)
      return;
    r9 /= dy;
    if (dy < 0) {
      if (r9 < t03)
        return;
      if (r9 < t13)
        t13 = r9;
    } else if (dy > 0) {
      if (r9 > t13)
        return;
      if (r9 > t03)
        t03 = r9;
    }
    r9 = y12 - ay;
    if (!dy && r9 < 0)
      return;
    r9 /= dy;
    if (dy < 0) {
      if (r9 > t13)
        return;
      if (r9 > t03)
        t03 = r9;
    } else if (dy > 0) {
      if (r9 < t03)
        return;
      if (r9 < t13)
        t13 = r9;
    }
    if (t03 > 0)
      a7[0] = ax + t03 * dx, a7[1] = ay + t03 * dy;
    if (t13 < 1)
      b8[0] = ax + t13 * dx, b8[1] = ay + t13 * dy;
    return true;
  }

  // ../../node_modules/d3-geo/src/clip/rectangle.js
  var clipMax = 1e9;
  var clipMin = -clipMax;
  function clipRectangle(x05, y05, x12, y12) {
    function visible(x7, y6) {
      return x05 <= x7 && x7 <= x12 && y05 <= y6 && y6 <= y12;
    }
    function interpolate2(from, to3, direction, stream) {
      var a7 = 0, a1 = 0;
      if (from == null || (a7 = corner(from, direction)) !== (a1 = corner(to3, direction)) || comparePoint(from, to3) < 0 ^ direction > 0) {
        do
          stream.point(a7 === 0 || a7 === 3 ? x05 : x12, a7 > 1 ? y12 : y05);
        while ((a7 = (a7 + direction + 4) % 4) !== a1);
      } else {
        stream.point(to3[0], to3[1]);
      }
    }
    function corner(p6, direction) {
      return abs(p6[0] - x05) < epsilon3 ? direction > 0 ? 0 : 3 : abs(p6[0] - x12) < epsilon3 ? direction > 0 ? 2 : 1 : abs(p6[1] - y05) < epsilon3 ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
    }
    function compareIntersection2(a7, b8) {
      return comparePoint(a7.x, b8.x);
    }
    function comparePoint(a7, b8) {
      var ca = corner(a7, 1), cb = corner(b8, 1);
      return ca !== cb ? ca - cb : ca === 0 ? b8[1] - a7[1] : ca === 1 ? a7[0] - b8[0] : ca === 2 ? a7[1] - b8[1] : b8[0] - a7[0];
    }
    return function(stream) {
      var activeStream = stream, bufferStream = buffer_default(), segments, polygon, ring, x__, y__, v__, x_, y_, v_, first, clean;
      var clipStream = {
        point: point6,
        lineStart,
        lineEnd,
        polygonStart,
        polygonEnd
      };
      function point6(x7, y6) {
        if (visible(x7, y6))
          activeStream.point(x7, y6);
      }
      function polygonInside() {
        var winding = 0;
        for (var i9 = 0, n11 = polygon.length; i9 < n11; ++i9) {
          for (var ring2 = polygon[i9], j4 = 1, m5 = ring2.length, point7 = ring2[0], a0, a1, b0 = point7[0], b1 = point7[1]; j4 < m5; ++j4) {
            a0 = b0, a1 = b1, point7 = ring2[j4], b0 = point7[0], b1 = point7[1];
            if (a1 <= y12) {
              if (b1 > y12 && (b0 - a0) * (y12 - a1) > (b1 - a1) * (x05 - a0))
                ++winding;
            } else {
              if (b1 <= y12 && (b0 - a0) * (y12 - a1) < (b1 - a1) * (x05 - a0))
                --winding;
            }
          }
        }
        return winding;
      }
      function polygonStart() {
        activeStream = bufferStream, segments = [], polygon = [], clean = true;
      }
      function polygonEnd() {
        var startInside = polygonInside(), cleanInside = clean && startInside, visible2 = (segments = merge_default(segments)).length;
        if (cleanInside || visible2) {
          stream.polygonStart();
          if (cleanInside) {
            stream.lineStart();
            interpolate2(null, null, 1, stream);
            stream.lineEnd();
          }
          if (visible2) {
            rejoin_default(segments, compareIntersection2, startInside, interpolate2, stream);
          }
          stream.polygonEnd();
        }
        activeStream = stream, segments = polygon = ring = null;
      }
      function lineStart() {
        clipStream.point = linePoint;
        if (polygon)
          polygon.push(ring = []);
        first = true;
        v_ = false;
        x_ = y_ = NaN;
      }
      function lineEnd() {
        if (segments) {
          linePoint(x__, y__);
          if (v__ && v_)
            bufferStream.rejoin();
          segments.push(bufferStream.result());
        }
        clipStream.point = point6;
        if (v_)
          activeStream.lineEnd();
      }
      function linePoint(x7, y6) {
        var v8 = visible(x7, y6);
        if (polygon)
          ring.push([x7, y6]);
        if (first) {
          x__ = x7, y__ = y6, v__ = v8;
          first = false;
          if (v8) {
            activeStream.lineStart();
            activeStream.point(x7, y6);
          }
        } else {
          if (v8 && v_)
            activeStream.point(x7, y6);
          else {
            var a7 = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))], b8 = [x7 = Math.max(clipMin, Math.min(clipMax, x7)), y6 = Math.max(clipMin, Math.min(clipMax, y6))];
            if (line_default2(a7, b8, x05, y05, x12, y12)) {
              if (!v_) {
                activeStream.lineStart();
                activeStream.point(a7[0], a7[1]);
              }
              activeStream.point(b8[0], b8[1]);
              if (!v8)
                activeStream.lineEnd();
              clean = false;
            } else if (v8) {
              activeStream.lineStart();
              activeStream.point(x7, y6);
              clean = false;
            }
          }
        }
        x_ = x7, y_ = y6, v_ = v8;
      }
      return clipStream;
    };
  }

  // ../../node_modules/d3-geo/src/length.js
  var lengthSum = adder_default();
  var lambda0;
  var sinPhi0;
  var cosPhi0;
  var lengthStream = {
    sphere: noop2,
    point: noop2,
    lineStart: lengthLineStart,
    lineEnd: noop2,
    polygonStart: noop2,
    polygonEnd: noop2
  };
  function lengthLineStart() {
    lengthStream.point = lengthPointFirst;
    lengthStream.lineEnd = lengthLineEnd;
  }
  function lengthLineEnd() {
    lengthStream.point = lengthStream.lineEnd = noop2;
  }
  function lengthPointFirst(lambda, phi) {
    lambda *= radians2, phi *= radians2;
    lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);
    lengthStream.point = lengthPoint;
  }
  function lengthPoint(lambda, phi) {
    lambda *= radians2, phi *= radians2;
    var sinPhi = sin(phi), cosPhi = cos(phi), delta = abs(lambda - lambda0), cosDelta = cos(delta), sinDelta = sin(delta), x7 = cosPhi * sinDelta, y6 = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta, z6 = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;
    lengthSum.add(atan2(sqrt(x7 * x7 + y6 * y6), z6));
    lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;
  }
  function length_default(object2) {
    lengthSum.reset();
    stream_default(object2, lengthStream);
    return +lengthSum;
  }

  // ../../node_modules/d3-geo/src/distance.js
  var coordinates = [null, null];
  var object = {type: "LineString", coordinates};
  function distance_default(a7, b8) {
    coordinates[0] = a7;
    coordinates[1] = b8;
    return length_default(object);
  }

  // ../../node_modules/d3-geo/src/contains.js
  var containsObjectType = {
    Feature: function(object2, point6) {
      return containsGeometry(object2.geometry, point6);
    },
    FeatureCollection: function(object2, point6) {
      var features2 = object2.features, i9 = -1, n11 = features2.length;
      while (++i9 < n11)
        if (containsGeometry(features2[i9].geometry, point6))
          return true;
      return false;
    }
  };
  var containsGeometryType = {
    Sphere: function() {
      return true;
    },
    Point: function(object2, point6) {
      return containsPoint(object2.coordinates, point6);
    },
    MultiPoint: function(object2, point6) {
      var coordinates2 = object2.coordinates, i9 = -1, n11 = coordinates2.length;
      while (++i9 < n11)
        if (containsPoint(coordinates2[i9], point6))
          return true;
      return false;
    },
    LineString: function(object2, point6) {
      return containsLine(object2.coordinates, point6);
    },
    MultiLineString: function(object2, point6) {
      var coordinates2 = object2.coordinates, i9 = -1, n11 = coordinates2.length;
      while (++i9 < n11)
        if (containsLine(coordinates2[i9], point6))
          return true;
      return false;
    },
    Polygon: function(object2, point6) {
      return containsPolygon(object2.coordinates, point6);
    },
    MultiPolygon: function(object2, point6) {
      var coordinates2 = object2.coordinates, i9 = -1, n11 = coordinates2.length;
      while (++i9 < n11)
        if (containsPolygon(coordinates2[i9], point6))
          return true;
      return false;
    },
    GeometryCollection: function(object2, point6) {
      var geometries = object2.geometries, i9 = -1, n11 = geometries.length;
      while (++i9 < n11)
        if (containsGeometry(geometries[i9], point6))
          return true;
      return false;
    }
  };
  function containsGeometry(geometry, point6) {
    return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point6) : false;
  }
  function containsPoint(coordinates2, point6) {
    return distance_default(coordinates2, point6) === 0;
  }
  function containsLine(coordinates2, point6) {
    var ao, bo, ab;
    for (var i9 = 0, n11 = coordinates2.length; i9 < n11; i9++) {
      bo = distance_default(coordinates2[i9], point6);
      if (bo === 0)
        return true;
      if (i9 > 0) {
        ab = distance_default(coordinates2[i9], coordinates2[i9 - 1]);
        if (ab > 0 && ao <= ab && bo <= ab && (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon22 * ab)
          return true;
      }
      ao = bo;
    }
    return false;
  }
  function containsPolygon(coordinates2, point6) {
    return !!polygonContains_default(coordinates2.map(ringRadians), pointRadians(point6));
  }
  function ringRadians(ring) {
    return ring = ring.map(pointRadians), ring.pop(), ring;
  }
  function pointRadians(point6) {
    return [point6[0] * radians2, point6[1] * radians2];
  }
  function contains_default2(object2, point6) {
    return (object2 && containsObjectType.hasOwnProperty(object2.type) ? containsObjectType[object2.type] : containsGeometry)(object2, point6);
  }

  // ../../node_modules/d3-geo/src/graticule.js
  function graticuleX(y05, y12, dy) {
    var y6 = range_default2(y05, y12 - epsilon3, dy).concat(y12);
    return function(x7) {
      return y6.map(function(y7) {
        return [x7, y7];
      });
    };
  }
  function graticuleY(x05, x12, dx) {
    var x7 = range_default2(x05, x12 - epsilon3, dx).concat(x12);
    return function(y6) {
      return x7.map(function(x8) {
        return [x8, y6];
      });
    };
  }
  function graticule() {
    var x12, x05, X12, X02, y12, y05, Y12, Y02, dx = 10, dy = dx, DX = 90, DY = 360, x7, y6, X7, Y6, precision = 2.5;
    function graticule2() {
      return {type: "MultiLineString", coordinates: lines()};
    }
    function lines() {
      return range_default2(ceil(X02 / DX) * DX, X12, DX).map(X7).concat(range_default2(ceil(Y02 / DY) * DY, Y12, DY).map(Y6)).concat(range_default2(ceil(x05 / dx) * dx, x12, dx).filter(function(x8) {
        return abs(x8 % DX) > epsilon3;
      }).map(x7)).concat(range_default2(ceil(y05 / dy) * dy, y12, dy).filter(function(y7) {
        return abs(y7 % DY) > epsilon3;
      }).map(y6));
    }
    graticule2.lines = function() {
      return lines().map(function(coordinates2) {
        return {type: "LineString", coordinates: coordinates2};
      });
    };
    graticule2.outline = function() {
      return {
        type: "Polygon",
        coordinates: [
          X7(X02).concat(Y6(Y12).slice(1), X7(X12).reverse().slice(1), Y6(Y02).reverse().slice(1))
        ]
      };
    };
    graticule2.extent = function(_5) {
      if (!arguments.length)
        return graticule2.extentMinor();
      return graticule2.extentMajor(_5).extentMinor(_5);
    };
    graticule2.extentMajor = function(_5) {
      if (!arguments.length)
        return [[X02, Y02], [X12, Y12]];
      X02 = +_5[0][0], X12 = +_5[1][0];
      Y02 = +_5[0][1], Y12 = +_5[1][1];
      if (X02 > X12)
        _5 = X02, X02 = X12, X12 = _5;
      if (Y02 > Y12)
        _5 = Y02, Y02 = Y12, Y12 = _5;
      return graticule2.precision(precision);
    };
    graticule2.extentMinor = function(_5) {
      if (!arguments.length)
        return [[x05, y05], [x12, y12]];
      x05 = +_5[0][0], x12 = +_5[1][0];
      y05 = +_5[0][1], y12 = +_5[1][1];
      if (x05 > x12)
        _5 = x05, x05 = x12, x12 = _5;
      if (y05 > y12)
        _5 = y05, y05 = y12, y12 = _5;
      return graticule2.precision(precision);
    };
    graticule2.step = function(_5) {
      if (!arguments.length)
        return graticule2.stepMinor();
      return graticule2.stepMajor(_5).stepMinor(_5);
    };
    graticule2.stepMajor = function(_5) {
      if (!arguments.length)
        return [DX, DY];
      DX = +_5[0], DY = +_5[1];
      return graticule2;
    };
    graticule2.stepMinor = function(_5) {
      if (!arguments.length)
        return [dx, dy];
      dx = +_5[0], dy = +_5[1];
      return graticule2;
    };
    graticule2.precision = function(_5) {
      if (!arguments.length)
        return precision;
      precision = +_5;
      x7 = graticuleX(y05, y12, 90);
      y6 = graticuleY(x05, x12, precision);
      X7 = graticuleX(Y02, Y12, 90);
      Y6 = graticuleY(X02, X12, precision);
      return graticule2;
    };
    return graticule2.extentMajor([[-180, -90 + epsilon3], [180, 90 - epsilon3]]).extentMinor([[-180, -80 - epsilon3], [180, 80 + epsilon3]]);
  }

  // ../../node_modules/d3-geo/src/identity.js
  function identity_default4(x7) {
    return x7;
  }

  // ../../node_modules/d3-geo/src/path/area.js
  var areaSum = adder_default();
  var areaRingSum = adder_default();
  var x00;
  var y00;
  var x0;
  var y0;
  var areaStream = {
    point: noop2,
    lineStart: noop2,
    lineEnd: noop2,
    polygonStart: function() {
      areaStream.lineStart = areaRingStart;
      areaStream.lineEnd = areaRingEnd;
    },
    polygonEnd: function() {
      areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop2;
      areaSum.add(abs(areaRingSum));
      areaRingSum.reset();
    },
    result: function() {
      var area = areaSum / 2;
      areaSum.reset();
      return area;
    }
  };
  function areaRingStart() {
    areaStream.point = areaPointFirst;
  }
  function areaPointFirst(x7, y6) {
    areaStream.point = areaPoint;
    x00 = x0 = x7, y00 = y0 = y6;
  }
  function areaPoint(x7, y6) {
    areaRingSum.add(y0 * x7 - x0 * y6);
    x0 = x7, y0 = y6;
  }
  function areaRingEnd() {
    areaPoint(x00, y00);
  }
  var area_default2 = areaStream;

  // ../../node_modules/d3-geo/src/path/bounds.js
  var x02 = Infinity;
  var y02 = x02;
  var x1 = -x02;
  var y1 = x1;
  var boundsStream = {
    point: boundsPoint,
    lineStart: noop2,
    lineEnd: noop2,
    polygonStart: noop2,
    polygonEnd: noop2,
    result: function() {
      var bounds = [[x02, y02], [x1, y1]];
      x1 = y1 = -(y02 = x02 = Infinity);
      return bounds;
    }
  };
  function boundsPoint(x7, y6) {
    if (x7 < x02)
      x02 = x7;
    if (x7 > x1)
      x1 = x7;
    if (y6 < y02)
      y02 = y6;
    if (y6 > y1)
      y1 = y6;
  }
  var bounds_default = boundsStream;

  // ../../node_modules/d3-geo/src/path/centroid.js
  var X0 = 0;
  var Y0 = 0;
  var Z0 = 0;
  var X1 = 0;
  var Y1 = 0;
  var Z1 = 0;
  var X2 = 0;
  var Y2 = 0;
  var Z2 = 0;
  var x002;
  var y002;
  var x03;
  var y03;
  var centroidStream = {
    point: centroidPoint,
    lineStart: centroidLineStart,
    lineEnd: centroidLineEnd,
    polygonStart: function() {
      centroidStream.lineStart = centroidRingStart;
      centroidStream.lineEnd = centroidRingEnd;
    },
    polygonEnd: function() {
      centroidStream.point = centroidPoint;
      centroidStream.lineStart = centroidLineStart;
      centroidStream.lineEnd = centroidLineEnd;
    },
    result: function() {
      var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];
      X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
      return centroid;
    }
  };
  function centroidPoint(x7, y6) {
    X0 += x7;
    Y0 += y6;
    ++Z0;
  }
  function centroidLineStart() {
    centroidStream.point = centroidPointFirstLine;
  }
  function centroidPointFirstLine(x7, y6) {
    centroidStream.point = centroidPointLine;
    centroidPoint(x03 = x7, y03 = y6);
  }
  function centroidPointLine(x7, y6) {
    var dx = x7 - x03, dy = y6 - y03, z6 = sqrt(dx * dx + dy * dy);
    X1 += z6 * (x03 + x7) / 2;
    Y1 += z6 * (y03 + y6) / 2;
    Z1 += z6;
    centroidPoint(x03 = x7, y03 = y6);
  }
  function centroidLineEnd() {
    centroidStream.point = centroidPoint;
  }
  function centroidRingStart() {
    centroidStream.point = centroidPointFirstRing;
  }
  function centroidRingEnd() {
    centroidPointRing(x002, y002);
  }
  function centroidPointFirstRing(x7, y6) {
    centroidStream.point = centroidPointRing;
    centroidPoint(x002 = x03 = x7, y002 = y03 = y6);
  }
  function centroidPointRing(x7, y6) {
    var dx = x7 - x03, dy = y6 - y03, z6 = sqrt(dx * dx + dy * dy);
    X1 += z6 * (x03 + x7) / 2;
    Y1 += z6 * (y03 + y6) / 2;
    Z1 += z6;
    z6 = y03 * x7 - x03 * y6;
    X2 += z6 * (x03 + x7);
    Y2 += z6 * (y03 + y6);
    Z2 += z6 * 3;
    centroidPoint(x03 = x7, y03 = y6);
  }
  var centroid_default = centroidStream;

  // ../../node_modules/d3-geo/src/path/context.js
  function PathContext(context) {
    this._context = context;
  }
  PathContext.prototype = {
    _radius: 4.5,
    pointRadius: function(_5) {
      return this._radius = _5, this;
    },
    polygonStart: function() {
      this._line = 0;
    },
    polygonEnd: function() {
      this._line = NaN;
    },
    lineStart: function() {
      this._point = 0;
    },
    lineEnd: function() {
      if (this._line === 0)
        this._context.closePath();
      this._point = NaN;
    },
    point: function(x7, y6) {
      switch (this._point) {
        case 0: {
          this._context.moveTo(x7, y6);
          this._point = 1;
          break;
        }
        case 1: {
          this._context.lineTo(x7, y6);
          break;
        }
        default: {
          this._context.moveTo(x7 + this._radius, y6);
          this._context.arc(x7, y6, this._radius, 0, tau3);
          break;
        }
      }
    },
    result: noop2
  };

  // ../../node_modules/d3-geo/src/path/measure.js
  var lengthSum2 = adder_default();
  var lengthRing;
  var x003;
  var y003;
  var x04;
  var y04;
  var lengthStream2 = {
    point: noop2,
    lineStart: function() {
      lengthStream2.point = lengthPointFirst2;
    },
    lineEnd: function() {
      if (lengthRing)
        lengthPoint2(x003, y003);
      lengthStream2.point = noop2;
    },
    polygonStart: function() {
      lengthRing = true;
    },
    polygonEnd: function() {
      lengthRing = null;
    },
    result: function() {
      var length = +lengthSum2;
      lengthSum2.reset();
      return length;
    }
  };
  function lengthPointFirst2(x7, y6) {
    lengthStream2.point = lengthPoint2;
    x003 = x04 = x7, y003 = y04 = y6;
  }
  function lengthPoint2(x7, y6) {
    x04 -= x7, y04 -= y6;
    lengthSum2.add(sqrt(x04 * x04 + y04 * y04));
    x04 = x7, y04 = y6;
  }
  var measure_default = lengthStream2;

  // ../../node_modules/d3-geo/src/path/string.js
  function PathString() {
    this._string = [];
  }
  PathString.prototype = {
    _radius: 4.5,
    _circle: circle(4.5),
    pointRadius: function(_5) {
      if ((_5 = +_5) !== this._radius)
        this._radius = _5, this._circle = null;
      return this;
    },
    polygonStart: function() {
      this._line = 0;
    },
    polygonEnd: function() {
      this._line = NaN;
    },
    lineStart: function() {
      this._point = 0;
    },
    lineEnd: function() {
      if (this._line === 0)
        this._string.push("Z");
      this._point = NaN;
    },
    point: function(x7, y6) {
      switch (this._point) {
        case 0: {
          this._string.push("M", x7, ",", y6);
          this._point = 1;
          break;
        }
        case 1: {
          this._string.push("L", x7, ",", y6);
          break;
        }
        default: {
          if (this._circle == null)
            this._circle = circle(this._radius);
          this._string.push("M", x7, ",", y6, this._circle);
          break;
        }
      }
    },
    result: function() {
      if (this._string.length) {
        var result = this._string.join("");
        this._string = [];
        return result;
      } else {
        return null;
      }
    }
  };
  function circle(radius) {
    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
  }

  // ../../node_modules/d3-geo/src/path/index.js
  function path_default2(projection2, context) {
    var pointRadius = 4.5, projectionStream, contextStream;
    function path2(object2) {
      if (object2) {
        if (typeof pointRadius === "function")
          contextStream.pointRadius(+pointRadius.apply(this, arguments));
        stream_default(object2, projectionStream(contextStream));
      }
      return contextStream.result();
    }
    path2.area = function(object2) {
      stream_default(object2, projectionStream(area_default2));
      return area_default2.result();
    };
    path2.measure = function(object2) {
      stream_default(object2, projectionStream(measure_default));
      return measure_default.result();
    };
    path2.bounds = function(object2) {
      stream_default(object2, projectionStream(bounds_default));
      return bounds_default.result();
    };
    path2.centroid = function(object2) {
      stream_default(object2, projectionStream(centroid_default));
      return centroid_default.result();
    };
    path2.projection = function(_5) {
      return arguments.length ? (projectionStream = _5 == null ? (projection2 = null, identity_default4) : (projection2 = _5).stream, path2) : projection2;
    };
    path2.context = function(_5) {
      if (!arguments.length)
        return context;
      contextStream = _5 == null ? (context = null, new PathString()) : new PathContext(context = _5);
      if (typeof pointRadius !== "function")
        contextStream.pointRadius(pointRadius);
      return path2;
    };
    path2.pointRadius = function(_5) {
      if (!arguments.length)
        return pointRadius;
      pointRadius = typeof _5 === "function" ? _5 : (contextStream.pointRadius(+_5), +_5);
      return path2;
    };
    return path2.projection(projection2).context(context);
  }

  // ../../node_modules/d3-geo/src/transform.js
  function transformer2(methods) {
    return function(stream) {
      var s4 = new TransformStream();
      for (var key in methods)
        s4[key] = methods[key];
      s4.stream = stream;
      return s4;
    };
  }
  function TransformStream() {
  }
  TransformStream.prototype = {
    constructor: TransformStream,
    point: function(x7, y6) {
      this.stream.point(x7, y6);
    },
    sphere: function() {
      this.stream.sphere();
    },
    lineStart: function() {
      this.stream.lineStart();
    },
    lineEnd: function() {
      this.stream.lineEnd();
    },
    polygonStart: function() {
      this.stream.polygonStart();
    },
    polygonEnd: function() {
      this.stream.polygonEnd();
    }
  };

  // ../../node_modules/d3-geo/src/projection/fit.js
  function fit(projection2, fitBounds, object2) {
    var clip = projection2.clipExtent && projection2.clipExtent();
    projection2.scale(150).translate([0, 0]);
    if (clip != null)
      projection2.clipExtent(null);
    stream_default(object2, projection2.stream(bounds_default));
    fitBounds(bounds_default.result());
    if (clip != null)
      projection2.clipExtent(clip);
    return projection2;
  }
  function fitExtent(projection2, extent, object2) {
    return fit(projection2, function(b8) {
      var w5 = extent[1][0] - extent[0][0], h4 = extent[1][1] - extent[0][1], k6 = Math.min(w5 / (b8[1][0] - b8[0][0]), h4 / (b8[1][1] - b8[0][1])), x7 = +extent[0][0] + (w5 - k6 * (b8[1][0] + b8[0][0])) / 2, y6 = +extent[0][1] + (h4 - k6 * (b8[1][1] + b8[0][1])) / 2;
      projection2.scale(150 * k6).translate([x7, y6]);
    }, object2);
  }
  function fitSize(projection2, size2, object2) {
    return fitExtent(projection2, [[0, 0], size2], object2);
  }
  function fitWidth(projection2, width, object2) {
    return fit(projection2, function(b8) {
      var w5 = +width, k6 = w5 / (b8[1][0] - b8[0][0]), x7 = (w5 - k6 * (b8[1][0] + b8[0][0])) / 2, y6 = -k6 * b8[0][1];
      projection2.scale(150 * k6).translate([x7, y6]);
    }, object2);
  }
  function fitHeight(projection2, height, object2) {
    return fit(projection2, function(b8) {
      var h4 = +height, k6 = h4 / (b8[1][1] - b8[0][1]), x7 = -k6 * b8[0][0], y6 = (h4 - k6 * (b8[1][1] + b8[0][1])) / 2;
      projection2.scale(150 * k6).translate([x7, y6]);
    }, object2);
  }

  // ../../node_modules/d3-geo/src/projection/resample.js
  var maxDepth = 16;
  var cosMinDistance = cos(30 * radians2);
  function resample_default(project, delta2) {
    return +delta2 ? resample(project, delta2) : resampleNone(project);
  }
  function resampleNone(project) {
    return transformer2({
      point: function(x7, y6) {
        x7 = project(x7, y6);
        this.stream.point(x7[0], x7[1]);
      }
    });
  }
  function resample(project, delta2) {
    function resampleLineTo(x05, y05, lambda02, a0, b0, c0, x12, y12, lambda1, a1, b1, c1, depth, stream) {
      var dx = x12 - x05, dy = y12 - y05, d22 = dx * dx + dy * dy;
      if (d22 > 4 * delta2 && depth--) {
        var a7 = a0 + a1, b8 = b0 + b1, c6 = c0 + c1, m5 = sqrt(a7 * a7 + b8 * b8 + c6 * c6), phi2 = asin(c6 /= m5), lambda2 = abs(abs(c6) - 1) < epsilon3 || abs(lambda02 - lambda1) < epsilon3 ? (lambda02 + lambda1) / 2 : atan2(b8, a7), p6 = project(lambda2, phi2), x22 = p6[0], y22 = p6[1], dx2 = x22 - x05, dy2 = y22 - y05, dz = dy * dx2 - dx * dy2;
        if (dz * dz / d22 > delta2 || abs((dx * dx2 + dy * dy2) / d22 - 0.5) > 0.3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
          resampleLineTo(x05, y05, lambda02, a0, b0, c0, x22, y22, lambda2, a7 /= m5, b8 /= m5, c6, depth, stream);
          stream.point(x22, y22);
          resampleLineTo(x22, y22, lambda2, a7, b8, c6, x12, y12, lambda1, a1, b1, c1, depth, stream);
        }
      }
    }
    return function(stream) {
      var lambda00, x004, y004, a00, b00, c00, lambda02, x05, y05, a0, b0, c0;
      var resampleStream = {
        point: point6,
        lineStart,
        lineEnd,
        polygonStart: function() {
          stream.polygonStart();
          resampleStream.lineStart = ringStart;
        },
        polygonEnd: function() {
          stream.polygonEnd();
          resampleStream.lineStart = lineStart;
        }
      };
      function point6(x7, y6) {
        x7 = project(x7, y6);
        stream.point(x7[0], x7[1]);
      }
      function lineStart() {
        x05 = NaN;
        resampleStream.point = linePoint;
        stream.lineStart();
      }
      function linePoint(lambda, phi) {
        var c6 = cartesian([lambda, phi]), p6 = project(lambda, phi);
        resampleLineTo(x05, y05, lambda02, a0, b0, c0, x05 = p6[0], y05 = p6[1], lambda02 = lambda, a0 = c6[0], b0 = c6[1], c0 = c6[2], maxDepth, stream);
        stream.point(x05, y05);
      }
      function lineEnd() {
        resampleStream.point = point6;
        stream.lineEnd();
      }
      function ringStart() {
        lineStart();
        resampleStream.point = ringPoint;
        resampleStream.lineEnd = ringEnd;
      }
      function ringPoint(lambda, phi) {
        linePoint(lambda00 = lambda, phi), x004 = x05, y004 = y05, a00 = a0, b00 = b0, c00 = c0;
        resampleStream.point = linePoint;
      }
      function ringEnd() {
        resampleLineTo(x05, y05, lambda02, a0, b0, c0, x004, y004, lambda00, a00, b00, c00, maxDepth, stream);
        resampleStream.lineEnd = lineEnd;
        lineEnd();
      }
      return resampleStream;
    };
  }

  // ../../node_modules/d3-geo/src/projection/index.js
  var transformRadians = transformer2({
    point: function(x7, y6) {
      this.stream.point(x7 * radians2, y6 * radians2);
    }
  });
  function transformRotate(rotate) {
    return transformer2({
      point: function(x7, y6) {
        var r9 = rotate(x7, y6);
        return this.stream.point(r9[0], r9[1]);
      }
    });
  }
  function scaleTranslate(k6, dx, dy, sx, sy) {
    function transform(x7, y6) {
      x7 *= sx;
      y6 *= sy;
      return [dx + k6 * x7, dy - k6 * y6];
    }
    transform.invert = function(x7, y6) {
      return [(x7 - dx) / k6 * sx, (dy - y6) / k6 * sy];
    };
    return transform;
  }
  function scaleTranslateRotate(k6, dx, dy, sx, sy, alpha) {
    var cosAlpha = cos(alpha), sinAlpha = sin(alpha), a7 = cosAlpha * k6, b8 = sinAlpha * k6, ai2 = cosAlpha / k6, bi = sinAlpha / k6, ci2 = (sinAlpha * dy - cosAlpha * dx) / k6, fi = (sinAlpha * dx + cosAlpha * dy) / k6;
    function transform(x7, y6) {
      x7 *= sx;
      y6 *= sy;
      return [a7 * x7 - b8 * y6 + dx, dy - b8 * x7 - a7 * y6];
    }
    transform.invert = function(x7, y6) {
      return [sx * (ai2 * x7 - bi * y6 + ci2), sy * (fi - bi * x7 - ai2 * y6)];
    };
    return transform;
  }
  function projection(project) {
    return projectionMutator(function() {
      return project;
    })();
  }
  function projectionMutator(projectAt) {
    var project, k6 = 150, x7 = 480, y6 = 250, lambda = 0, phi = 0, deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, alpha = 0, sx = 1, sy = 1, theta = null, preclip = antimeridian_default, x05 = null, y05, x12, y12, postclip = identity_default4, delta2 = 0.5, projectResample, projectTransform, projectRotateTransform, cache2, cacheStream;
    function projection2(point6) {
      return projectRotateTransform(point6[0] * radians2, point6[1] * radians2);
    }
    function invert(point6) {
      point6 = projectRotateTransform.invert(point6[0], point6[1]);
      return point6 && [point6[0] * degrees2, point6[1] * degrees2];
    }
    projection2.stream = function(stream) {
      return cache2 && cacheStream === stream ? cache2 : cache2 = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
    };
    projection2.preclip = function(_5) {
      return arguments.length ? (preclip = _5, theta = void 0, reset()) : preclip;
    };
    projection2.postclip = function(_5) {
      return arguments.length ? (postclip = _5, x05 = y05 = x12 = y12 = null, reset()) : postclip;
    };
    projection2.clipAngle = function(_5) {
      return arguments.length ? (preclip = +_5 ? circle_default(theta = _5 * radians2) : (theta = null, antimeridian_default), reset()) : theta * degrees2;
    };
    projection2.clipExtent = function(_5) {
      return arguments.length ? (postclip = _5 == null ? (x05 = y05 = x12 = y12 = null, identity_default4) : clipRectangle(x05 = +_5[0][0], y05 = +_5[0][1], x12 = +_5[1][0], y12 = +_5[1][1]), reset()) : x05 == null ? null : [[x05, y05], [x12, y12]];
    };
    projection2.scale = function(_5) {
      return arguments.length ? (k6 = +_5, recenter()) : k6;
    };
    projection2.translate = function(_5) {
      return arguments.length ? (x7 = +_5[0], y6 = +_5[1], recenter()) : [x7, y6];
    };
    projection2.center = function(_5) {
      return arguments.length ? (lambda = _5[0] % 360 * radians2, phi = _5[1] % 360 * radians2, recenter()) : [lambda * degrees2, phi * degrees2];
    };
    projection2.rotate = function(_5) {
      return arguments.length ? (deltaLambda = _5[0] % 360 * radians2, deltaPhi = _5[1] % 360 * radians2, deltaGamma = _5.length > 2 ? _5[2] % 360 * radians2 : 0, recenter()) : [deltaLambda * degrees2, deltaPhi * degrees2, deltaGamma * degrees2];
    };
    projection2.angle = function(_5) {
      return arguments.length ? (alpha = _5 % 360 * radians2, recenter()) : alpha * degrees2;
    };
    projection2.reflectX = function(_5) {
      return arguments.length ? (sx = _5 ? -1 : 1, recenter()) : sx < 0;
    };
    projection2.reflectY = function(_5) {
      return arguments.length ? (sy = _5 ? -1 : 1, recenter()) : sy < 0;
    };
    projection2.precision = function(_5) {
      return arguments.length ? (projectResample = resample_default(projectTransform, delta2 = _5 * _5), reset()) : sqrt(delta2);
    };
    projection2.fitExtent = function(extent, object2) {
      return fitExtent(projection2, extent, object2);
    };
    projection2.fitSize = function(size2, object2) {
      return fitSize(projection2, size2, object2);
    };
    projection2.fitWidth = function(width, object2) {
      return fitWidth(projection2, width, object2);
    };
    projection2.fitHeight = function(height, object2) {
      return fitHeight(projection2, height, object2);
    };
    function recenter() {
      var center = scaleTranslateRotate(k6, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)), transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k6, x7 - center[0], y6 - center[1], sx, sy, alpha);
      rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);
      projectTransform = compose_default(project, transform);
      projectRotateTransform = compose_default(rotate, projectTransform);
      projectResample = resample_default(projectTransform, delta2);
      return reset();
    }
    function reset() {
      cache2 = cacheStream = null;
      return projection2;
    }
    return function() {
      project = projectAt.apply(this, arguments);
      projection2.invert = project.invert && invert;
      return recenter();
    };
  }

  // ../../node_modules/d3-geo/src/projection/azimuthal.js
  function azimuthalRaw(scale) {
    return function(x7, y6) {
      var cx = cos(x7), cy = cos(y6), k6 = scale(cx * cy);
      return [
        k6 * cy * sin(x7),
        k6 * sin(y6)
      ];
    };
  }
  function azimuthalInvert(angle) {
    return function(x7, y6) {
      var z6 = sqrt(x7 * x7 + y6 * y6), c6 = angle(z6), sc = sin(c6), cc = cos(c6);
      return [
        atan2(x7 * sc, z6 * cc),
        asin(z6 && y6 * sc / z6)
      ];
    };
  }

  // ../../node_modules/d3-geo/src/projection/azimuthalEqualArea.js
  var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {
    return sqrt(2 / (1 + cxcy));
  });
  azimuthalEqualAreaRaw.invert = azimuthalInvert(function(z6) {
    return 2 * asin(z6 / 2);
  });
  function azimuthalEqualArea_default() {
    return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);
  }

  // ../../node_modules/d3-geo/src/projection/azimuthalEquidistant.js
  var azimuthalEquidistantRaw = azimuthalRaw(function(c6) {
    return (c6 = acos(c6)) && c6 / sin(c6);
  });
  azimuthalEquidistantRaw.invert = azimuthalInvert(function(z6) {
    return z6;
  });
  function azimuthalEquidistant_default() {
    return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);
  }

  // ../../node_modules/d3-geo/src/projection/mercator.js
  function mercatorRaw(lambda, phi) {
    return [lambda, log2(tan((halfPi2 + phi) / 2))];
  }
  mercatorRaw.invert = function(x7, y6) {
    return [x7, 2 * atan(exp(y6)) - halfPi2];
  };
  function mercator_default() {
    return mercatorProjection(mercatorRaw).scale(961 / tau3);
  }
  function mercatorProjection(project) {
    var m5 = projection(project), center = m5.center, scale = m5.scale, translate = m5.translate, clipExtent = m5.clipExtent, x05 = null, y05, x12, y12;
    m5.scale = function(_5) {
      return arguments.length ? (scale(_5), reclip()) : scale();
    };
    m5.translate = function(_5) {
      return arguments.length ? (translate(_5), reclip()) : translate();
    };
    m5.center = function(_5) {
      return arguments.length ? (center(_5), reclip()) : center();
    };
    m5.clipExtent = function(_5) {
      return arguments.length ? (_5 == null ? x05 = y05 = x12 = y12 = null : (x05 = +_5[0][0], y05 = +_5[0][1], x12 = +_5[1][0], y12 = +_5[1][1]), reclip()) : x05 == null ? null : [[x05, y05], [x12, y12]];
    };
    function reclip() {
      var k6 = pi4 * scale(), t13 = m5(rotation_default(m5.rotate()).invert([0, 0]));
      return clipExtent(x05 == null ? [[t13[0] - k6, t13[1] - k6], [t13[0] + k6, t13[1] + k6]] : project === mercatorRaw ? [[Math.max(t13[0] - k6, x05), y05], [Math.min(t13[0] + k6, x12), y12]] : [[x05, Math.max(t13[1] - k6, y05)], [x12, Math.min(t13[1] + k6, y12)]]);
    }
    return reclip();
  }

  // ../../node_modules/d3-geo/src/projection/equirectangular.js
  function equirectangularRaw(lambda, phi) {
    return [lambda, phi];
  }
  equirectangularRaw.invert = equirectangularRaw;
  function equirectangular_default() {
    return projection(equirectangularRaw).scale(152.63);
  }

  // ../../node_modules/d3-geo/src/projection/equalEarth.js
  var A1 = 1.340264;
  var A22 = -0.081106;
  var A3 = 893e-6;
  var A4 = 3796e-6;
  var M2 = sqrt(3) / 2;
  var iterations = 12;
  function equalEarthRaw(lambda, phi) {
    var l4 = asin(M2 * sin(phi)), l22 = l4 * l4, l6 = l22 * l22 * l22;
    return [
      lambda * cos(l4) / (M2 * (A1 + 3 * A22 * l22 + l6 * (7 * A3 + 9 * A4 * l22))),
      l4 * (A1 + A22 * l22 + l6 * (A3 + A4 * l22))
    ];
  }
  equalEarthRaw.invert = function(x7, y6) {
    var l4 = y6, l22 = l4 * l4, l6 = l22 * l22 * l22;
    for (var i9 = 0, delta, fy, fpy; i9 < iterations; ++i9) {
      fy = l4 * (A1 + A22 * l22 + l6 * (A3 + A4 * l22)) - y6;
      fpy = A1 + 3 * A22 * l22 + l6 * (7 * A3 + 9 * A4 * l22);
      l4 -= delta = fy / fpy, l22 = l4 * l4, l6 = l22 * l22 * l22;
      if (abs(delta) < epsilon22)
        break;
    }
    return [
      M2 * x7 * (A1 + 3 * A22 * l22 + l6 * (7 * A3 + 9 * A4 * l22)) / cos(l4),
      asin(sin(l4) / M2)
    ];
  };
  function equalEarth_default() {
    return projection(equalEarthRaw).scale(177.158);
  }

  // ../../node_modules/d3-geo/src/projection/gnomonic.js
  function gnomonicRaw(x7, y6) {
    var cy = cos(y6), k6 = cos(x7) * cy;
    return [cy * sin(x7) / k6, sin(y6) / k6];
  }
  gnomonicRaw.invert = azimuthalInvert(atan);
  function gnomonic_default() {
    return projection(gnomonicRaw).scale(144.049).clipAngle(60);
  }

  // ../../node_modules/d3-geo/src/projection/naturalEarth1.js
  function naturalEarth1Raw(lambda, phi) {
    var phi2 = phi * phi, phi4 = phi2 * phi2;
    return [
      lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (3971e-6 * phi2 - 1529e-6 * phi4))),
      phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 5916e-6 * phi4)))
    ];
  }
  naturalEarth1Raw.invert = function(x7, y6) {
    var phi = y6, i9 = 25, delta;
    do {
      var phi2 = phi * phi, phi4 = phi2 * phi2;
      phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 5916e-6 * phi4))) - y6) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 5916e-6 * 11 * phi4)));
    } while (abs(delta) > epsilon3 && --i9 > 0);
    return [
      x7 / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (3971e-6 - 1529e-6 * phi2)))),
      phi
    ];
  };
  function naturalEarth1_default() {
    return projection(naturalEarth1Raw).scale(175.295);
  }

  // ../../node_modules/d3-geo/src/projection/orthographic.js
  function orthographicRaw(x7, y6) {
    return [cos(y6) * sin(x7), sin(y6)];
  }
  orthographicRaw.invert = azimuthalInvert(asin);
  function orthographic_default() {
    return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon3);
  }

  // ../../node_modules/d3-geo/src/projection/stereographic.js
  function stereographicRaw(x7, y6) {
    var cy = cos(y6), k6 = 1 + cos(x7) * cy;
    return [cy * sin(x7) / k6, sin(y6) / k6];
  }
  stereographicRaw.invert = azimuthalInvert(function(z6) {
    return 2 * atan(z6);
  });
  function stereographic_default() {
    return projection(stereographicRaw).scale(250).clipAngle(142);
  }

  // ../../node_modules/d3-geo/src/projection/transverseMercator.js
  function transverseMercatorRaw(lambda, phi) {
    return [log2(tan((halfPi2 + phi) / 2)), -lambda];
  }
  transverseMercatorRaw.invert = function(x7, y6) {
    return [-y6, 2 * atan(exp(x7)) - halfPi2];
  };
  function transverseMercator_default() {
    var m5 = mercatorProjection(transverseMercatorRaw), center = m5.center, rotate = m5.rotate;
    m5.center = function(_5) {
      return arguments.length ? center([-_5[1], _5[0]]) : (_5 = center(), [_5[1], -_5[0]]);
    };
    m5.rotate = function(_5) {
      return arguments.length ? rotate([_5[0], _5[1], _5.length > 2 ? _5[2] + 90 : 90]) : (_5 = rotate(), [_5[0], _5[1], _5[2] - 90]);
    };
    return rotate([0, 0, 90]).scale(159.155);
  }

  // ../../node_modules/@nivo/legends/dist/nivo-legends.es.js
  var import_jsx_runtime3 = __toModule(require_jsx_runtime());
  var a2 = __toModule(require_react());
  var import_react53 = __toModule(require_react());
  var import_prop_types25 = __toModule(require_prop_types());
  var m3 = function(e15) {
    var i9 = e15.x, n11 = e15.y, o8 = e15.size, r9 = e15.fill, l4 = e15.opacity, a7 = l4 === void 0 ? 1 : l4, c6 = e15.borderWidth, s4 = c6 === void 0 ? 0 : c6, d4 = e15.borderColor;
    return (0, import_jsx_runtime3.jsx)("circle", {r: o8 / 2, cx: i9 + o8 / 2, cy: n11 + o8 / 2, fill: r9, opacity: a7, strokeWidth: s4, stroke: d4 === void 0 ? "transparent" : d4, style: {pointerEvents: "none"}});
  };
  var f2 = function(e15) {
    var i9 = e15.x, n11 = e15.y, o8 = e15.size, r9 = e15.fill, l4 = e15.opacity, a7 = l4 === void 0 ? 1 : l4, c6 = e15.borderWidth, s4 = c6 === void 0 ? 0 : c6, d4 = e15.borderColor;
    return (0, import_jsx_runtime3.jsx)("g", {transform: "translate(" + i9 + "," + n11 + ")", children: (0, import_jsx_runtime3.jsx)("path", {d: "\n                    M" + o8 / 2 + " 0\n                    L" + 0.8 * o8 + " " + o8 / 2 + "\n                    L" + o8 / 2 + " " + o8 + "\n                    L" + 0.2 * o8 + " " + o8 / 2 + "\n                    L" + o8 / 2 + " 0\n                ", fill: r9, opacity: a7, strokeWidth: s4, stroke: d4 === void 0 ? "transparent" : d4, style: {pointerEvents: "none"}})});
  };
  var u2 = function(e15) {
    var i9 = e15.x, n11 = e15.y, o8 = e15.size, r9 = e15.fill, l4 = e15.opacity, a7 = l4 === void 0 ? 1 : l4, c6 = e15.borderWidth, s4 = c6 === void 0 ? 0 : c6, d4 = e15.borderColor;
    return (0, import_jsx_runtime3.jsx)("rect", {x: i9, y: n11, fill: r9, opacity: a7, strokeWidth: s4, stroke: d4 === void 0 ? "transparent" : d4, width: o8, height: o8, style: {pointerEvents: "none"}});
  };
  var v3 = function(e15) {
    var i9 = e15.x, n11 = e15.y, o8 = e15.size, r9 = e15.fill, l4 = e15.opacity, a7 = l4 === void 0 ? 1 : l4, c6 = e15.borderWidth, s4 = c6 === void 0 ? 0 : c6, d4 = e15.borderColor;
    return (0, import_jsx_runtime3.jsx)("g", {transform: "translate(" + i9 + "," + n11 + ")", children: (0, import_jsx_runtime3.jsx)("path", {d: "\n                M" + o8 / 2 + " 0\n                L" + o8 + " " + o8 + "\n                L0 " + o8 + "\n                L" + o8 / 2 + " 0\n            ", fill: r9, opacity: a7, strokeWidth: s4, stroke: d4 === void 0 ? "transparent" : d4, style: {pointerEvents: "none"}})});
  };
  function p2() {
    return p2 = Object.assign || function(t13) {
      for (var e15 = 1; e15 < arguments.length; e15++) {
        var i9 = arguments[e15];
        for (var n11 in i9)
          Object.prototype.hasOwnProperty.call(i9, n11) && (t13[n11] = i9[n11]);
      }
      return t13;
    }, p2.apply(this, arguments);
  }
  var b3 = {top: 0, right: 0, bottom: 0, left: 0};
  var k2 = function(t13) {
    var e15, i9 = t13.direction, n11 = t13.itemsSpacing, o8 = t13.padding, r9 = t13.itemCount, l4 = t13.itemWidth, a7 = t13.itemHeight;
    if (typeof o8 != "number" && (typeof (e15 = o8) != "object" || Array.isArray(e15) || e15 === null))
      throw new Error("Invalid property padding, must be one of: number, object");
    var c6 = typeof o8 == "number" ? {top: o8, right: o8, bottom: o8, left: o8} : p2({}, b3, o8), s4 = c6.left + c6.right, d4 = c6.top + c6.bottom, h4 = l4 + s4, g6 = a7 + d4, m5 = (r9 - 1) * n11;
    return i9 === "row" ? h4 = l4 * r9 + m5 + s4 : i9 === "column" && (g6 = a7 * r9 + m5 + d4), {width: h4, height: g6, padding: c6};
  };
  var x4 = function(t13) {
    var e15 = t13.anchor, i9 = t13.translateX, n11 = t13.translateY, o8 = t13.containerWidth, r9 = t13.containerHeight, l4 = t13.width, a7 = t13.height, c6 = i9, s4 = n11;
    switch (e15) {
      case "top":
        c6 += (o8 - l4) / 2;
        break;
      case "top-right":
        c6 += o8 - l4;
        break;
      case "right":
        c6 += o8 - l4, s4 += (r9 - a7) / 2;
        break;
      case "bottom-right":
        c6 += o8 - l4, s4 += r9 - a7;
        break;
      case "bottom":
        c6 += (o8 - l4) / 2, s4 += r9 - a7;
        break;
      case "bottom-left":
        s4 += r9 - a7;
        break;
      case "left":
        s4 += (r9 - a7) / 2;
        break;
      case "center":
        c6 += (o8 - l4) / 2, s4 += (r9 - a7) / 2;
    }
    return {x: c6, y: s4};
  };
  var S2 = function(t13) {
    var e15, i9, n11, o8, r9, l4, a7 = t13.direction, c6 = t13.justify, s4 = t13.symbolSize, d4 = t13.symbolSpacing, h4 = t13.width, g6 = t13.height;
    switch (a7) {
      case "left-to-right":
        e15 = 0, i9 = (g6 - s4) / 2, o8 = g6 / 2, l4 = "central", c6 ? (n11 = h4, r9 = "end") : (n11 = s4 + d4, r9 = "start");
        break;
      case "right-to-left":
        e15 = h4 - s4, i9 = (g6 - s4) / 2, o8 = g6 / 2, l4 = "central", c6 ? (n11 = 0, r9 = "start") : (n11 = h4 - s4 - d4, r9 = "end");
        break;
      case "top-to-bottom":
        e15 = (h4 - s4) / 2, i9 = 0, n11 = h4 / 2, r9 = "middle", c6 ? (o8 = g6, l4 = "alphabetic") : (o8 = s4 + d4, l4 = "text-before-edge");
        break;
      case "bottom-to-top":
        e15 = (h4 - s4) / 2, i9 = g6 - s4, n11 = h4 / 2, r9 = "middle", c6 ? (o8 = 0, l4 = "text-before-edge") : (o8 = g6 - s4 - d4, l4 = "alphabetic");
    }
    return {symbolX: e15, symbolY: i9, labelX: n11, labelY: o8, labelAnchor: r9, labelAlignment: l4};
  };
  var O4 = {circle: m3, diamond: f2, square: u2, triangle: v3};
  var B2 = function(i9) {
    var n11, r9, l4, c6, h4, g6, m5, f4, u4, v8, y6, b8 = i9.x, k6 = i9.y, x7 = i9.width, A8 = i9.height, W7 = i9.data, z6 = i9.direction, C6 = z6 === void 0 ? "left-to-right" : z6, B5 = i9.justify, w5 = B5 !== void 0 && B5, X7 = i9.textColor, Y6 = i9.background, H4 = Y6 === void 0 ? "transparent" : Y6, E4 = i9.opacity, j4 = E4 === void 0 ? 1 : E4, T7 = i9.symbolShape, L5 = T7 === void 0 ? "square" : T7, M5 = i9.symbolSize, F3 = M5 === void 0 ? 16 : M5, P8 = i9.symbolSpacing, R3 = P8 === void 0 ? 8 : P8, q4 = i9.symbolBorderWidth, V5 = q4 === void 0 ? 0 : q4, D4 = i9.symbolBorderColor, G = D4 === void 0 ? "transparent" : D4, I4 = i9.onClick, N5 = i9.onMouseEnter, _5 = i9.onMouseLeave, J6 = i9.toggleSerie, K6 = i9.effects, Q6 = (0, import_react53.useState)({}), U4 = Q6[0], Z5 = Q6[1], $5 = Vt(), tt2 = (0, import_react53.useCallback)(function(t13) {
      if (K6) {
        var e15 = K6.filter(function(t14) {
          return t14.on === "hover";
        }).reduce(function(t14, e16) {
          return p2({}, t14, e16.style);
        }, {});
        Z5(e15);
      }
      N5 == null || N5(W7, t13);
    }, [N5, W7, K6]), et2 = (0, import_react53.useCallback)(function(t13) {
      if (K6) {
        var e15 = K6.filter(function(t14) {
          return t14.on !== "hover";
        }).reduce(function(t14, e16) {
          return p2({}, t14, e16.style);
        }, {});
        Z5(e15);
      }
      _5 == null || _5(W7, t13);
    }, [_5, W7, K6]), it2 = S2({direction: C6, justify: w5, symbolSize: (n11 = U4.symbolSize) != null ? n11 : F3, symbolSpacing: R3, width: x7, height: A8}), nt2 = it2.symbolX, ot2 = it2.symbolY, rt2 = it2.labelX, lt = it2.labelY, at2 = it2.labelAnchor, ct = it2.labelAlignment, st2 = [I4, N5, _5, J6].some(function(t13) {
      return t13 !== void 0;
    }), dt = typeof L5 == "function" ? L5 : O4[L5];
    return (0, import_jsx_runtime3.jsxs)("g", {transform: "translate(" + b8 + "," + k6 + ")", style: {opacity: (r9 = U4.itemOpacity) != null ? r9 : j4}, children: [(0, import_jsx_runtime3.jsx)("rect", {width: x7, height: A8, fill: (l4 = U4.itemBackground) != null ? l4 : H4, style: {cursor: st2 ? "pointer" : "auto"}, onClick: function(t13) {
      I4 == null || I4(W7, t13), J6 == null || J6(W7.id);
    }, onMouseEnter: tt2, onMouseLeave: et2}), a2.createElement(dt, p2({id: W7.id, x: nt2, y: ot2, size: (c6 = U4.symbolSize) != null ? c6 : F3, fill: (h4 = (g6 = W7.fill) != null ? g6 : W7.color) != null ? h4 : "black", borderWidth: (m5 = U4.symbolBorderWidth) != null ? m5 : V5, borderColor: (f4 = U4.symbolBorderColor) != null ? f4 : G}, W7.hidden ? $5.legends.hidden.symbol : void 0)), (0, import_jsx_runtime3.jsx)("text", {textAnchor: at2, style: p2({}, $5.legends.text, {fill: (u4 = (v8 = (y6 = U4.itemTextColor) != null ? y6 : X7) != null ? v8 : $5.legends.text.fill) != null ? u4 : "black", dominantBaseline: ct, pointerEvents: "none", userSelect: "none"}, W7.hidden ? $5.legends.hidden.text : void 0), x: rt2, y: lt, children: W7.label})]});
  };
  var w2 = function(e15) {
    var i9 = e15.data, n11 = e15.x, o8 = e15.y, r9 = e15.direction, l4 = e15.padding, a7 = l4 === void 0 ? 0 : l4, c6 = e15.justify, s4 = e15.effects, d4 = e15.itemWidth, h4 = e15.itemHeight, g6 = e15.itemDirection, m5 = g6 === void 0 ? "left-to-right" : g6, f4 = e15.itemsSpacing, u4 = f4 === void 0 ? 0 : f4, v8 = e15.itemTextColor, p6 = e15.itemBackground, y6 = p6 === void 0 ? "transparent" : p6, b8 = e15.itemOpacity, x7 = b8 === void 0 ? 1 : b8, S6 = e15.symbolShape, A8 = e15.symbolSize, W7 = e15.symbolSpacing, z6 = e15.symbolBorderWidth, C6 = e15.symbolBorderColor, O8 = e15.onClick, w5 = e15.onMouseEnter, X7 = e15.onMouseLeave, Y6 = e15.toggleSerie, H4 = k2({itemCount: i9.length, itemWidth: d4, itemHeight: h4, itemsSpacing: u4, direction: r9, padding: a7}).padding, E4 = r9 === "row" ? d4 + u4 : 0, j4 = r9 === "column" ? h4 + u4 : 0;
    return (0, import_jsx_runtime3.jsx)("g", {transform: "translate(" + n11 + "," + o8 + ")", children: i9.map(function(e16, i10) {
      return (0, import_jsx_runtime3.jsx)(B2, {data: e16, x: i10 * E4 + H4.left, y: i10 * j4 + H4.top, width: d4, height: h4, direction: m5, justify: c6, effects: s4, textColor: v8, background: y6, opacity: x7, symbolShape: S6, symbolSize: A8, symbolSpacing: W7, symbolBorderWidth: z6, symbolBorderColor: C6, onClick: O8, onMouseEnter: w5, onMouseLeave: X7, toggleSerie: Y6}, i10);
    })});
  };
  var X = function(e15) {
    var i9 = e15.data, n11 = e15.containerWidth, o8 = e15.containerHeight, r9 = e15.translateX, l4 = r9 === void 0 ? 0 : r9, a7 = e15.translateY, c6 = a7 === void 0 ? 0 : a7, s4 = e15.anchor, d4 = e15.direction, h4 = e15.padding, g6 = h4 === void 0 ? 0 : h4, m5 = e15.justify, f4 = e15.itemsSpacing, u4 = f4 === void 0 ? 0 : f4, v8 = e15.itemWidth, p6 = e15.itemHeight, y6 = e15.itemDirection, b8 = e15.itemTextColor, S6 = e15.itemBackground, A8 = e15.itemOpacity, W7 = e15.symbolShape, z6 = e15.symbolSize, C6 = e15.symbolSpacing, O8 = e15.symbolBorderWidth, B5 = e15.symbolBorderColor, X7 = e15.onClick, Y6 = e15.onMouseEnter, H4 = e15.onMouseLeave, E4 = e15.toggleSerie, j4 = e15.effects, T7 = k2({itemCount: i9.length, itemsSpacing: u4, itemWidth: v8, itemHeight: p6, direction: d4, padding: g6}), L5 = T7.width, M5 = T7.height, F3 = x4({anchor: s4, translateX: l4, translateY: c6, containerWidth: n11, containerHeight: o8, width: L5, height: M5}), P8 = F3.x, R3 = F3.y;
    return (0, import_jsx_runtime3.jsx)(w2, {data: i9, x: P8, y: R3, direction: d4, padding: g6, justify: m5, effects: j4, itemsSpacing: u4, itemWidth: v8, itemHeight: p6, itemDirection: y6, itemTextColor: b8, itemBackground: S6, itemOpacity: A8, symbolShape: W7, symbolSize: z6, symbolSpacing: C6, symbolBorderWidth: O8, symbolBorderColor: B5, onClick: X7, onMouseEnter: Y6, onMouseLeave: H4, toggleSerie: typeof E4 == "boolean" ? void 0 : E4});
  };
  var Y = {start: "left", middle: "center", end: "right"};
  var H = function(t13, e15) {
    var i9 = e15.data, n11 = e15.containerWidth, o8 = e15.containerHeight, r9 = e15.translateX, l4 = r9 === void 0 ? 0 : r9, a7 = e15.translateY, c6 = a7 === void 0 ? 0 : a7, s4 = e15.anchor, d4 = e15.direction, h4 = e15.padding, g6 = h4 === void 0 ? 0 : h4, m5 = e15.justify, f4 = m5 !== void 0 && m5, u4 = e15.itemsSpacing, v8 = u4 === void 0 ? 0 : u4, p6 = e15.itemWidth, y6 = e15.itemHeight, b8 = e15.itemDirection, A8 = b8 === void 0 ? "left-to-right" : b8, W7 = e15.itemTextColor, z6 = e15.symbolSize, C6 = z6 === void 0 ? 16 : z6, O8 = e15.symbolSpacing, B5 = O8 === void 0 ? 8 : O8, w5 = e15.theme, X7 = k2({itemCount: i9.length, itemWidth: p6, itemHeight: y6, itemsSpacing: v8, direction: d4, padding: g6}), H4 = X7.width, E4 = X7.height, j4 = X7.padding, T7 = x4({anchor: s4, translateX: l4, translateY: c6, containerWidth: n11, containerHeight: o8, width: H4, height: E4}), L5 = T7.x, M5 = T7.y, F3 = d4 === "row" ? p6 + v8 : 0, P8 = d4 === "column" ? y6 + v8 : 0;
    t13.save(), t13.translate(L5, M5), t13.font = w5.legends.text.fontSize + "px " + (w5.legends.text.fontFamily || "sans-serif"), i9.forEach(function(e16, i10) {
      var n12, o9, r10 = i10 * F3 + j4.left, l5 = i10 * P8 + j4.top, a8 = S2({direction: A8, justify: f4, symbolSize: C6, symbolSpacing: B5, width: p6, height: y6}), c7 = a8.symbolX, s5 = a8.symbolY, d5 = a8.labelX, h5 = a8.labelY, g7 = a8.labelAnchor, m6 = a8.labelAlignment;
      t13.fillStyle = (n12 = e16.color) != null ? n12 : "black", t13.fillRect(r10 + c7, l5 + s5, C6, C6), t13.textAlign = Y[g7], m6 === "central" && (t13.textBaseline = "middle"), t13.fillStyle = (o9 = W7 != null ? W7 : w5.legends.text.fill) != null ? o9 : "black", t13.fillText(String(e16.label), r10 + d5, l5 + h5);
    }), t13.restore();
  };
  var j2 = function(t13) {
    var e15 = t13.scale, i9 = t13.domain, n11 = t13.reverse, o8 = n11 !== void 0 && n11, r9 = t13.valueFormat, l4 = r9 === void 0 ? function(t14) {
      return t14;
    } : r9, a7 = t13.separator, c6 = a7 === void 0 ? " - " : a7;
    return (0, import_react53.useMemo)(function() {
      var t14 = (i9 != null ? i9 : e15.range()).map(function(t15, i10) {
        var n12 = e15.invertExtent(t15), o9 = n12[0], r10 = n12[1];
        return {id: t15, index: i10, extent: [o9, r10], label: "" + l4(o9) + c6 + l4(r10), value: e15(o9), color: t15};
      });
      return o8 && t14.reverse(), t14;
    }, [i9, e15, o8, c6, l4]);
  };
  var T2 = {data: import_prop_types25.default.arrayOf(import_prop_types25.default.object), anchor: import_prop_types25.default.oneOf(["top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", "center"]).isRequired, translateX: import_prop_types25.default.number, translateY: import_prop_types25.default.number, direction: import_prop_types25.default.oneOf(["row", "column"]).isRequired, itemsSpacing: import_prop_types25.default.number, itemWidth: import_prop_types25.default.number.isRequired, itemHeight: import_prop_types25.default.number.isRequired, itemDirection: import_prop_types25.default.oneOf(["left-to-right", "right-to-left", "top-to-bottom", "bottom-to-top"]), itemTextColor: import_prop_types25.default.string, itemBackground: import_prop_types25.default.string, itemOpacity: import_prop_types25.default.number, symbolShape: import_prop_types25.default.oneOfType([import_prop_types25.default.oneOf(["circle", "diamond", "square", "triangle"]), import_prop_types25.default.func]), symbolSize: import_prop_types25.default.number, symbolSpacing: import_prop_types25.default.number, symbolBorderWidth: import_prop_types25.default.number, symbolBorderColor: import_prop_types25.default.string, onClick: import_prop_types25.default.func, onMouseEnter: import_prop_types25.default.func, onMouseLeave: import_prop_types25.default.func, effects: import_prop_types25.default.arrayOf(import_prop_types25.default.shape({on: import_prop_types25.default.oneOfType([import_prop_types25.default.oneOf(["hover"])]).isRequired, style: import_prop_types25.default.shape({itemTextColor: import_prop_types25.default.string, itemBackground: import_prop_types25.default.string, itemOpacity: import_prop_types25.default.number, symbolSize: import_prop_types25.default.number, symbolBorderWidth: import_prop_types25.default.number, symbolBorderColor: import_prop_types25.default.string}).isRequired}))};

  // ../../node_modules/@nivo/geo/dist/nivo-geo.es.js
  var import_jsx_runtime4 = __toModule(require_jsx_runtime());
  function H2() {
    return H2 = Object.assign || function(e15) {
      for (var r9 = 1; r9 < arguments.length; r9++) {
        var o8 = arguments[r9];
        for (var t13 in o8)
          Object.prototype.hasOwnProperty.call(o8, t13) && (e15[t13] = o8[t13]);
      }
      return e15;
    }, H2.apply(this, arguments);
  }
  var I = {azimuthalEqualArea: azimuthalEqualArea_default, azimuthalEquidistant: azimuthalEquidistant_default, gnomonic: gnomonic_default, orthographic: orthographic_default, stereographic: stereographic_default, equalEarth: equalEarth_default, equirectangular: equirectangular_default, mercator: mercator_default, transverseMercator: transverseMercator_default, naturalEarth1: naturalEarth1_default};
  var D2 = function(r9) {
    var o8 = r9.width, t13 = r9.height, i9 = r9.projectionType, n11 = r9.projectionScale, u4 = r9.projectionTranslation, l4 = r9.projectionRotation, c6 = r9.fillColor, d4 = r9.borderWidth, s4 = r9.borderColor, f4 = (0, import_react54.useMemo)(function() {
      return I[i9]().scale(n11).translate([o8 * u4[0], t13 * u4[1]]).rotate(l4);
    }, [o8, t13, i9, n11, u4[0], u4[1], l4[0], l4[1], l4[2]]), h4 = (0, import_react54.useMemo)(function() {
      return path_default2(f4);
    }, [f4]), p6 = (0, import_react54.useMemo)(function() {
      return graticule();
    }), g6 = Vt(), v8 = (0, import_react54.useMemo)(function() {
      return typeof d4 == "function" ? d4 : function() {
        return d4;
      };
    }, [d4]), C6 = We(s4, g6), b8 = (0, import_react54.useMemo)(function() {
      return typeof c6 == "function" ? c6 : function() {
        return c6;
      };
    }, [c6]);
    return {projection: f4, path: h4, graticule: p6, getBorderWidth: v8, getBorderColor: C6, getFillColor: b8};
  };
  var z2 = function(r9) {
    var o8 = r9.features, t13 = r9.data, i9 = r9.match, n11 = r9.label, a7 = r9.value, l4 = r9.valueFormat, c6 = r9.colors, d4 = r9.unknownColor, s4 = r9.domain, f4 = (0, import_react54.useMemo)(function() {
      return (0, import_isFunction6.default)(i9) ? i9 : function(e15, r10) {
        var o9 = (0, import_get8.default)(e15, i9), t14 = (0, import_get8.default)(r10, i9);
        return o9 && o9 === t14;
      };
    }, [i9]), h4 = (0, import_react54.useMemo)(function() {
      return (0, import_isFunction6.default)(n11) ? n11 : function(e15) {
        return (0, import_get8.default)(e15, n11);
      };
    }, [n11]), p6 = (0, import_react54.useMemo)(function() {
      return (0, import_isFunction6.default)(a7) ? a7 : function(e15) {
        return (0, import_get8.default)(e15, a7);
      };
    }, [a7]), g6 = (0, import_react54.useMemo)(function() {
      return l4 === void 0 ? function(e15) {
        return e15;
      } : (0, import_isFunction6.default)(l4) ? l4 : format3(l4);
    }, [l4]), v8 = (0, import_react54.useMemo)(function() {
      return at(c6).domain(s4);
    }, [c6, s4]), m5 = (0, import_react54.useMemo)(function() {
      return function(e15) {
        return e15.value === void 0 ? d4 : v8(e15.value);
      };
    }, [v8, d4]), C6 = (0, import_react54.useMemo)(function() {
      return o8.map(function(e15) {
        var r10 = t13.find(function(r11) {
          return f4(e15, r11);
        }), o9 = p6(r10);
        if (r10) {
          var i10 = H2({}, e15, {data: r10, value: o9, formattedValue: g6(o9)});
          return i10.color = m5(i10), i10.label = h4(i10), i10;
        }
        return e15;
      });
    }, [o8, t13, f4, p6, g6, m5]), j4 = j2({scale: v8, valueFormat: g6});
    return {colorScale: v8, getFillColor: m5, boundFeatures: C6, valueFormatter: g6, legendData: j4};
  };
  var V2 = (0, import_react54.memo)(function(e15) {
    var r9 = e15.feature;
    return r9.data === void 0 ? null : (0, import_jsx_runtime4.jsx)(w, {id: r9.label, color: r9.color, enableChip: true, value: r9.formattedValue});
  });
  V2.propTypes = {feature: import_prop_types26.default.object.isRequired}, V2.displayName = "ChoroplethTooltip";
  var A5 = {features: import_prop_types26.default.arrayOf(import_prop_types26.default.shape({id: import_prop_types26.default.string.isRequired, type: import_prop_types26.default.oneOf(["Feature"]).isRequired, properties: import_prop_types26.default.object, geometry: import_prop_types26.default.object.isRequired})).isRequired, projectionType: import_prop_types26.default.oneOf(Object.keys(I)).isRequired, projectionScale: import_prop_types26.default.number.isRequired, projectionTranslation: import_prop_types26.default.arrayOf(import_prop_types26.default.number).isRequired, projectionRotation: import_prop_types26.default.arrayOf(import_prop_types26.default.number).isRequired, fillColor: import_prop_types26.default.oneOfType([import_prop_types26.default.string, import_prop_types26.default.func]).isRequired, borderWidth: import_prop_types26.default.oneOfType([import_prop_types26.default.number, import_prop_types26.default.func]).isRequired, borderColor: Ye.isRequired, enableGraticule: import_prop_types26.default.bool.isRequired, graticuleLineWidth: import_prop_types26.default.number.isRequired, graticuleLineColor: import_prop_types26.default.string.isRequired, isInteractive: import_prop_types26.default.bool.isRequired, onMouseEnter: import_prop_types26.default.func.isRequired, onMouseMove: import_prop_types26.default.func.isRequired, onMouseLeave: import_prop_types26.default.func.isRequired, onClick: import_prop_types26.default.func.isRequired, tooltip: import_prop_types26.default.any, layers: import_prop_types26.default.arrayOf(import_prop_types26.default.oneOfType([import_prop_types26.default.oneOf(["graticule", "features"]), import_prop_types26.default.func])).isRequired};
  var J = H2({}, A5, {role: import_prop_types26.default.string.isRequired});
  var K = H2({pixelRatio: import_prop_types26.default.number.isRequired}, A5);
  var Q = {data: import_prop_types26.default.arrayOf(import_prop_types26.default.object).isRequired, match: import_prop_types26.default.oneOfType([import_prop_types26.default.string, import_prop_types26.default.func]).isRequired, label: import_prop_types26.default.oneOfType([import_prop_types26.default.string, import_prop_types26.default.func]).isRequired, value: import_prop_types26.default.oneOfType([import_prop_types26.default.string, import_prop_types26.default.func]).isRequired, valueFormat: import_prop_types26.default.oneOfType([import_prop_types26.default.string, import_prop_types26.default.func]), colors: pt.isRequired, domain: import_prop_types26.default.arrayOf(import_prop_types26.default.number).isRequired, unknownColor: import_prop_types26.default.string.isRequired, layers: import_prop_types26.default.arrayOf(import_prop_types26.default.oneOfType([import_prop_types26.default.oneOf(["graticule", "features", "legends"]), import_prop_types26.default.func])).isRequired};
  var U = H2({}, J, Q, {role: import_prop_types26.default.string.isRequired});
  var X3 = H2({}, K, Q);
  var Y3 = {projectionType: "mercator", projectionScale: 100, projectionTranslation: [0.5, 0.5], projectionRotation: [0, 0, 0], enableGraticule: false, graticuleLineWidth: 0.5, graticuleLineColor: "#999999", fillColor: "#dddddd", borderWidth: 0, borderColor: "#000000", isInteractive: true, onMouseEnter: function() {
  }, onMouseLeave: function() {
  }, onMouseMove: function() {
  }, onClick: function() {
  }, layers: ["graticule", "features"], legends: []};
  var Z = H2({}, Y3, {role: "img"});
  var $ = H2({}, Y3, {pixelRatio: typeof window != "undefined" && window.devicePixelRatio || 1});
  var _ = {match: "id", label: "id", value: "value", colors: "PuBuGn", unknownColor: "#999", tooltip: V2, layers: ["graticule", "features", "legends"]};
  var ee = H2({}, Z, _, {role: "img"});
  var re3 = H2({}, $, _);
  var oe = (0, import_react54.memo)(function(e15) {
    var r9 = e15.path, o8 = e15.graticule, t13 = e15.lineWidth, i9 = e15.lineColor;
    return (0, import_jsx_runtime4.jsx)("path", {fill: "none", strokeWidth: t13, stroke: i9, d: r9(o8())});
  });
  oe.propTypes = {path: import_prop_types26.default.func.isRequired, graticule: import_prop_types26.default.func.isRequired, lineWidth: import_prop_types26.default.number.isRequired, lineColor: import_prop_types26.default.string.isRequired}, oe.displayName = "GeoGraticule";
  var te = (0, import_react54.memo)(function(e15) {
    var r9 = e15.feature, o8 = e15.path, t13 = e15.fillColor, i9 = e15.borderWidth, n11 = e15.borderColor, a7 = e15.onClick, u4 = e15.onMouseEnter, l4 = e15.onMouseMove, c6 = e15.onMouseLeave;
    return (0, import_jsx_runtime4.jsx)("path", {fill: t13, strokeWidth: i9, stroke: n11, strokeLinejoin: "bevel", d: o8(r9), onMouseEnter: function(e16) {
      return u4(r9, e16);
    }, onMouseMove: function(e16) {
      return l4(r9, e16);
    }, onMouseLeave: function(e16) {
      return c6(r9, e16);
    }, onClick: function(e16) {
      return a7(r9, e16);
    }}, r9.id);
  });
  te.propTypes = {feature: import_prop_types26.default.shape({id: import_prop_types26.default.string.isRequired, type: import_prop_types26.default.oneOf(["Feature"]).isRequired, properties: import_prop_types26.default.object, geometry: import_prop_types26.default.object.isRequired}).isRequired, path: import_prop_types26.default.func.isRequired, fillColor: import_prop_types26.default.string.isRequired, borderWidth: import_prop_types26.default.number.isRequired, borderColor: import_prop_types26.default.string.isRequired, onMouseEnter: import_prop_types26.default.func.isRequired, onMouseMove: import_prop_types26.default.func.isRequired, onMouseLeave: import_prop_types26.default.func.isRequired, onClick: import_prop_types26.default.func.isRequired}, te.displayName = "GeoMapFeature";
  var ie = (0, import_react54.memo)(function(e15) {
    var r9 = e15.width, i9 = e15.height, n11 = e15.margin, u4 = e15.features, l4 = e15.layers, s4 = e15.projectionType, f4 = e15.projectionScale, h4 = e15.projectionTranslation, p6 = e15.projectionRotation, v8 = e15.fillColor, m5 = e15.borderWidth, C6 = e15.borderColor, b8 = e15.enableGraticule, y6 = e15.graticuleLineWidth, R3 = e15.graticuleLineColor, j4 = e15.isInteractive, q4 = e15.onClick, T7 = e15.tooltip, M5 = e15.role, W7 = At(r9, i9, n11), w5 = W7.margin, k6 = W7.outerWidth, F3 = W7.outerHeight, O8 = D2({width: r9, height: i9, projectionType: s4, projectionScale: f4, projectionTranslation: h4, projectionRotation: p6, fillColor: v8, borderWidth: m5, borderColor: C6}), L5 = O8.graticule, E4 = O8.path, S6 = O8.getFillColor, G = O8.getBorderWidth, x7 = O8.getBorderColor, B5 = Vt(), P8 = k(), H4 = P8.showTooltipFromEvent, I4 = P8.hideTooltip, z6 = (0, import_react54.useCallback)(function(e16, r10) {
      return j4 && q4 && q4(e16, r10);
    }, [j4, q4]), V5 = (0, import_react54.useCallback)(function(e16, r10) {
      return j4 && T7 && H4((0, import_jsx_runtime4.jsx)(T7, {feature: e16}), r10);
    }, [j4, H4, T7]), A8 = (0, import_react54.useCallback)(function(e16, r10) {
      return j4 && T7 && H4((0, import_jsx_runtime4.jsx)(T7, {feature: e16}), r10);
    }, [j4, H4, T7]), J6 = (0, import_react54.useCallback)(function() {
      return j4 && I4();
    }, [j4, I4]);
    return (0, import_jsx_runtime4.jsx)(Si, {width: k6, height: F3, margin: w5, theme: B5, role: M5, children: l4.map(function(r10, o8) {
      return r10 === "graticule" ? b8 !== true ? null : (0, import_jsx_runtime4.jsx)(oe, {path: E4, graticule: L5, lineWidth: y6, lineColor: R3}, "graticule") : r10 === "features" ? (0, import_jsx_runtime4.jsx)(import_react54.Fragment, {children: u4.map(function(e16) {
        return (0, import_jsx_runtime4.jsx)(te, {feature: e16, path: E4, fillColor: S6(e16), borderWidth: G(e16), borderColor: x7(e16), onMouseEnter: V5, onMouseMove: A8, onMouseLeave: J6, onClick: z6}, e16.id);
      })}, "features") : (0, import_jsx_runtime4.jsx)(import_react54.Fragment, {children: r10(e15)}, o8);
    })});
  });
  ie.displayName = "GeoMap", ie.propTypes = J, ie.defaultProps = Z;
  var ne = Fi(ie);
  var ue = function(e15, r9, o8, t13) {
    var i9 = Qi(r9, e15), n11 = i9[0], a7 = i9[1];
    return o8.find(function(e16) {
      return contains_default2(e16, t13.invert([n11, a7]));
    });
  };
  var le = (0, import_react54.memo)(function(e15) {
    var r9 = e15.width, t13 = e15.height, u4 = e15.margin, l4 = e15.pixelRatio, d4 = e15.features, s4 = e15.layers, f4 = e15.projectionType, h4 = e15.projectionScale, p6 = e15.projectionTranslation, v8 = e15.projectionRotation, m5 = e15.fillColor, C6 = e15.borderWidth, b8 = e15.borderColor, y6 = e15.enableGraticule, R3 = e15.graticuleLineWidth, j4 = e15.graticuleLineColor, q4 = e15.isInteractive, T7 = e15.onClick, M5 = e15.onMouseMove, W7 = e15.tooltip, w5 = (0, import_react54.useRef)(null), k6 = Vt(), F3 = At(r9, t13, u4), O8 = F3.margin, L5 = F3.outerWidth, E4 = F3.outerHeight, S6 = D2({width: r9, height: t13, projectionType: f4, projectionScale: h4, projectionTranslation: p6, projectionRotation: v8, fillColor: m5, borderWidth: C6, borderColor: b8}), G = S6.projection, x7 = S6.graticule, B5 = S6.path, P8 = S6.getFillColor, H4 = S6.getBorderWidth, I4 = S6.getBorderColor;
    (0, import_react54.useEffect)(function() {
      if (w5) {
        w5.current.width = L5 * l4, w5.current.height = E4 * l4;
        var r10 = w5.current.getContext("2d");
        r10.scale(l4, l4), r10.fillStyle = k6.background, r10.fillRect(0, 0, L5, E4), r10.translate(O8.left, O8.top), B5.context(r10), s4.forEach(function(o8) {
          o8 === "graticule" ? y6 === true && (r10.lineWidth = R3, r10.strokeStyle = j4, r10.beginPath(), B5(x7()), r10.stroke()) : o8 === "features" ? d4.forEach(function(e16) {
            r10.beginPath(), B5(e16), r10.fillStyle = P8(e16), r10.fill();
            var o9 = H4(e16);
            o9 > 0 && (r10.strokeStyle = I4(e16), r10.lineWidth = o9, r10.stroke());
          }) : o8(r10, e15);
        });
      }
    }, [w5, L5, E4, O8, l4, k6, B5, x7, P8, H4, I4, d4, s4]);
    var z6 = k(), V5 = z6.showTooltipFromEvent, A8 = z6.hideTooltip, J6 = (0, import_react54.useCallback)(function(e16) {
      if (q4 && W7) {
        var r10 = ue(e16, w5.current, d4, G);
        r10 ? V5((0, import_jsx_runtime4.jsx)(W7, {feature: r10}), e16) : A8(), M5 && M5(r10 || null, e16);
      }
    }, [V5, A8, q4, W7, w5, d4, G]), K6 = (0, import_react54.useCallback)(function() {
      return q4 && A8();
    }, [q4, A8]), Q6 = (0, import_react54.useCallback)(function(e16) {
      if (q4 && T7) {
        var r10 = ue(e16, w5.current, d4, G);
        r10 && T7(r10, e16);
      }
    }, [q4, w5, d4, G, T7]);
    return (0, import_jsx_runtime4.jsx)("canvas", {ref: w5, width: L5 * l4, height: E4 * l4, style: {width: L5, height: E4, cursor: q4 ? "auto" : "normal"}, onMouseMove: J6, onMouseLeave: K6, onClick: Q6});
  });
  le.displatName = "GeoMapCanvas", le.propTypes = K, le.defaultProps = $;
  var ce = Fi(le);
  var se = (0, import_react54.memo)(function(e15) {
    var r9 = e15.width, i9 = e15.height, n11 = e15.margin, u4 = e15.features, l4 = e15.data, s4 = e15.match, f4 = e15.label, h4 = e15.value, p6 = e15.valueFormat, v8 = e15.projectionType, m5 = e15.projectionScale, C6 = e15.projectionTranslation, b8 = e15.projectionRotation, y6 = e15.colors, R3 = e15.domain, j4 = e15.unknownColor, q4 = e15.borderWidth, T7 = e15.borderColor, M5 = e15.enableGraticule, W7 = e15.graticuleLineWidth, w5 = e15.graticuleLineColor, k6 = e15.layers, F3 = e15.legends, O8 = e15.isInteractive, L5 = e15.onClick, E4 = e15.tooltip, S6 = e15.role, G = At(r9, i9, n11), x7 = G.margin, P8 = G.outerWidth, I4 = G.outerHeight, V5 = D2({width: r9, height: i9, projectionType: v8, projectionScale: m5, projectionTranslation: C6, projectionRotation: b8, fillColor: function() {
    }, borderWidth: q4, borderColor: T7}), A8 = V5.graticule, J6 = V5.path, K6 = V5.getBorderWidth, Q6 = V5.getBorderColor, U4 = z2({features: u4, data: l4, match: s4, label: f4, value: h4, valueFormat: p6, colors: y6, unknownColor: j4, domain: R3}), X7 = U4.getFillColor, Y6 = U4.boundFeatures, Z5 = U4.legendData, $5 = Vt(), _5 = k(), ee4 = _5.showTooltipFromEvent, re6 = _5.hideTooltip, ie5 = (0, import_react54.useCallback)(function(e16, r10) {
      return O8 && L5 && L5(e16, r10);
    }, [O8, L5]), ne5 = (0, import_react54.useCallback)(function(e16, r10) {
      return O8 && E4 && ee4((0, import_jsx_runtime4.jsx)(E4, {feature: e16}), r10);
    }, [O8, ee4, E4]), ae4 = (0, import_react54.useCallback)(function(e16, r10) {
      return O8 && E4 && ee4((0, import_jsx_runtime4.jsx)(E4, {feature: e16}), r10);
    }, [O8, ee4, E4]), ue4 = (0, import_react54.useCallback)(function() {
      return O8 && re6();
    }, [O8, re6]);
    return (0, import_jsx_runtime4.jsx)(Si, {width: P8, height: I4, margin: x7, theme: $5, role: S6, children: k6.map(function(e16, o8) {
      return e16 === "graticule" ? M5 !== true ? null : (0, import_jsx_runtime4.jsx)(oe, {path: J6, graticule: A8, lineWidth: W7, lineColor: w5}, "graticule") : e16 === "features" ? (0, import_jsx_runtime4.jsx)(import_react54.Fragment, {children: Y6.map(function(e17) {
        return (0, import_jsx_runtime4.jsx)(te, {feature: e17, path: J6, fillColor: X7(e17), borderWidth: K6(e17), borderColor: Q6(e17), onMouseEnter: ne5, onMouseMove: ae4, onMouseLeave: ue4, onClick: ie5}, e17.id);
      })}, "features") : e16 === "legends" ? F3.map(function(e17, o9) {
        return (0, import_jsx_runtime4.jsx)(X, H2({containerWidth: r9, containerHeight: i9, data: Z5}, e17), o9);
      }) : (0, import_jsx_runtime4.jsx)(import_react54.Fragment, {children: e16({})}, o8);
    })});
  });
  se.displayName = "Choropleth", se.propTypes = U, se.defaultProps = ee;
  var fe = Fi(se);
  var he = function(e15) {
    return (0, import_jsx_runtime4.jsx)(ti, {children: function(r9) {
      var o8 = r9.width, t13 = r9.height;
      return (0, import_jsx_runtime4.jsx)(fe, H2({width: o8, height: t13}, e15));
    }});
  };
  var pe = function(e15, r9, o8, t13) {
    var i9 = Qi(r9, e15), n11 = i9[0], a7 = i9[1];
    return o8.find(function(e16) {
      return contains_default2(e16, t13.invert([n11, a7]));
    });
  };
  var ge = (0, import_react54.memo)(function(e15) {
    var r9 = e15.width, t13 = e15.height, u4 = e15.margin, l4 = e15.pixelRatio, d4 = e15.features, s4 = e15.data, f4 = e15.match, h4 = e15.label, p6 = e15.value, v8 = e15.valueFormat, m5 = e15.projectionType, C6 = e15.projectionScale, b8 = e15.projectionTranslation, y6 = e15.projectionRotation, R3 = e15.colors, j4 = e15.domain, q4 = e15.unknownColor, T7 = e15.borderWidth, M5 = e15.borderColor, W7 = e15.enableGraticule, w5 = e15.graticuleLineWidth, k6 = e15.graticuleLineColor, F3 = e15.layers, O8 = e15.legends, L5 = e15.isInteractive, E4 = e15.onClick, S6 = e15.onMouseMove, G = e15.tooltip, x7 = (0, import_react54.useRef)(null), B5 = Vt(), I4 = At(r9, t13, u4), V5 = I4.margin, A8 = I4.outerWidth, J6 = I4.outerHeight, K6 = D2({width: r9, height: t13, projectionType: m5, projectionScale: C6, projectionTranslation: b8, projectionRotation: y6, fillColor: function() {
    }, borderWidth: T7, borderColor: M5}), Q6 = K6.projection, U4 = K6.graticule, X7 = K6.path, Y6 = K6.getBorderWidth, Z5 = K6.getBorderColor, $5 = z2({features: d4, data: s4, match: f4, label: h4, value: p6, valueFormat: v8, colors: R3, unknownColor: q4, domain: j4}), _5 = $5.getFillColor, ee4 = $5.boundFeatures, re6 = $5.legendData;
    (0, import_react54.useEffect)(function() {
      if (x7) {
        x7.current.width = A8 * l4, x7.current.height = J6 * l4;
        var e16 = x7.current.getContext("2d");
        e16.scale(l4, l4), e16.fillStyle = B5.background, e16.fillRect(0, 0, A8, J6), e16.translate(V5.left, V5.top), X7.context(e16), F3.forEach(function(o8) {
          o8 === "graticule" ? W7 === true && (e16.lineWidth = w5, e16.strokeStyle = k6, e16.beginPath(), X7(U4()), e16.stroke()) : o8 === "features" ? ee4.forEach(function(r10) {
            e16.beginPath(), X7(r10), e16.fillStyle = _5(r10), e16.fill();
            var o9 = Y6(r10);
            o9 > 0 && (e16.strokeStyle = Z5(r10), e16.lineWidth = o9, e16.stroke());
          }) : o8 === "legends" && O8.forEach(function(o9) {
            H(e16, H2({}, o9, {data: re6, containerWidth: r9, containerHeight: t13, theme: B5}));
          });
        });
      }
    }, [x7, A8, J6, V5, l4, B5, X7, U4, _5, Y6, Z5, ee4, O8, F3]);
    var oe5 = k(), te5 = oe5.showTooltipFromEvent, ie5 = oe5.hideTooltip, ne5 = (0, import_react54.useCallback)(function(e16) {
      if (L5 && G) {
        var r10 = pe(e16, x7.current, ee4, Q6);
        r10 ? te5((0, import_jsx_runtime4.jsx)(G, {feature: r10}), e16) : ie5(), S6 && S6(r10 || null, e16);
      }
    }, [te5, ie5, L5, G, x7, ee4, Q6]), ae4 = (0, import_react54.useCallback)(function() {
      return L5 && ie5();
    }, [L5, ie5]), ue4 = (0, import_react54.useCallback)(function(e16) {
      if (L5 && E4) {
        var r10 = pe(e16, x7.current, ee4, Q6);
        r10 && E4(r10, e16);
      }
    }, [L5, x7, ee4, Q6, E4]);
    return (0, import_jsx_runtime4.jsx)("canvas", {ref: x7, width: A8 * l4, height: J6 * l4, style: {width: A8, height: J6, cursor: L5 ? "auto" : "normal"}, onMouseMove: ne5, onMouseLeave: ae4, onClick: ue4});
  });
  ge.displayName = "ChoroplethCanvas", ge.propTypes = X3, ge.defaultProps = re3;
  var ve = Fi(ge);

  // src/static/world_countries.json
  var type = "FeatureCollection";
  var features = [
    {
      type: "Feature",
      properties: {
        name: "Afghanistan"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              61.210817,
              35.650072
            ],
            [
              62.230651,
              35.270664
            ],
            [
              62.984662,
              35.404041
            ],
            [
              63.193538,
              35.857166
            ],
            [
              63.982896,
              36.007957
            ],
            [
              64.546479,
              36.312073
            ],
            [
              64.746105,
              37.111818
            ],
            [
              65.588948,
              37.305217
            ],
            [
              65.745631,
              37.661164
            ],
            [
              66.217385,
              37.39379
            ],
            [
              66.518607,
              37.362784
            ],
            [
              67.075782,
              37.356144
            ],
            [
              67.83,
              37.144994
            ],
            [
              68.135562,
              37.023115
            ],
            [
              68.859446,
              37.344336
            ],
            [
              69.196273,
              37.151144
            ],
            [
              69.518785,
              37.608997
            ],
            [
              70.116578,
              37.588223
            ],
            [
              70.270574,
              37.735165
            ],
            [
              70.376304,
              38.138396
            ],
            [
              70.806821,
              38.486282
            ],
            [
              71.348131,
              38.258905
            ],
            [
              71.239404,
              37.953265
            ],
            [
              71.541918,
              37.905774
            ],
            [
              71.448693,
              37.065645
            ],
            [
              71.844638,
              36.738171
            ],
            [
              72.193041,
              36.948288
            ],
            [
              72.63689,
              37.047558
            ],
            [
              73.260056,
              37.495257
            ],
            [
              73.948696,
              37.421566
            ],
            [
              74.980002,
              37.41999
            ],
            [
              75.158028,
              37.133031
            ],
            [
              74.575893,
              37.020841
            ],
            [
              74.067552,
              36.836176
            ],
            [
              72.920025,
              36.720007
            ],
            [
              71.846292,
              36.509942
            ],
            [
              71.262348,
              36.074388
            ],
            [
              71.498768,
              35.650563
            ],
            [
              71.613076,
              35.153203
            ],
            [
              71.115019,
              34.733126
            ],
            [
              71.156773,
              34.348911
            ],
            [
              70.881803,
              33.988856
            ],
            [
              69.930543,
              34.02012
            ],
            [
              70.323594,
              33.358533
            ],
            [
              69.687147,
              33.105499
            ],
            [
              69.262522,
              32.501944
            ],
            [
              69.317764,
              31.901412
            ],
            [
              68.926677,
              31.620189
            ],
            [
              68.556932,
              31.71331
            ],
            [
              67.792689,
              31.58293
            ],
            [
              67.683394,
              31.303154
            ],
            [
              66.938891,
              31.304911
            ],
            [
              66.381458,
              30.738899
            ],
            [
              66.346473,
              29.887943
            ],
            [
              65.046862,
              29.472181
            ],
            [
              64.350419,
              29.560031
            ],
            [
              64.148002,
              29.340819
            ],
            [
              63.550261,
              29.468331
            ],
            [
              62.549857,
              29.318572
            ],
            [
              60.874248,
              29.829239
            ],
            [
              61.781222,
              30.73585
            ],
            [
              61.699314,
              31.379506
            ],
            [
              60.941945,
              31.548075
            ],
            [
              60.863655,
              32.18292
            ],
            [
              60.536078,
              32.981269
            ],
            [
              60.9637,
              33.528832
            ],
            [
              60.52843,
              33.676446
            ],
            [
              60.803193,
              34.404102
            ],
            [
              61.210817,
              35.650072
            ]
          ]
        ]
      },
      id: "AFG"
    },
    {
      type: "Feature",
      properties: {
        name: "Angola"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                16.326528,
                -5.87747
              ],
              [
                16.57318,
                -6.622645
              ],
              [
                16.860191,
                -7.222298
              ],
              [
                17.089996,
                -7.545689
              ],
              [
                17.47297,
                -8.068551
              ],
              [
                18.134222,
                -7.987678
              ],
              [
                18.464176,
                -7.847014
              ],
              [
                19.016752,
                -7.988246
              ],
              [
                19.166613,
                -7.738184
              ],
              [
                19.417502,
                -7.155429
              ],
              [
                20.037723,
                -7.116361
              ],
              [
                20.091622,
                -6.94309
              ],
              [
                20.601823,
                -6.939318
              ],
              [
                20.514748,
                -7.299606
              ],
              [
                21.728111,
                -7.290872
              ],
              [
                21.746456,
                -7.920085
              ],
              [
                21.949131,
                -8.305901
              ],
              [
                21.801801,
                -8.908707
              ],
              [
                21.875182,
                -9.523708
              ],
              [
                22.208753,
                -9.894796
              ],
              [
                22.155268,
                -11.084801
              ],
              [
                22.402798,
                -10.993075
              ],
              [
                22.837345,
                -11.017622
              ],
              [
                23.456791,
                -10.867863
              ],
              [
                23.912215,
                -10.926826
              ],
              [
                24.017894,
                -11.237298
              ],
              [
                23.904154,
                -11.722282
              ],
              [
                24.079905,
                -12.191297
              ],
              [
                23.930922,
                -12.565848
              ],
              [
                24.016137,
                -12.911046
              ],
              [
                21.933886,
                -12.898437
              ],
              [
                21.887843,
                -16.08031
              ],
              [
                22.562478,
                -16.898451
              ],
              [
                23.215048,
                -17.523116
              ],
              [
                21.377176,
                -17.930636
              ],
              [
                18.956187,
                -17.789095
              ],
              [
                18.263309,
                -17.309951
              ],
              [
                14.209707,
                -17.353101
              ],
              [
                14.058501,
                -17.423381
              ],
              [
                13.462362,
                -16.971212
              ],
              [
                12.814081,
                -16.941343
              ],
              [
                12.215461,
                -17.111668
              ],
              [
                11.734199,
                -17.301889
              ],
              [
                11.640096,
                -16.673142
              ],
              [
                11.778537,
                -15.793816
              ],
              [
                12.123581,
                -14.878316
              ],
              [
                12.175619,
                -14.449144
              ],
              [
                12.500095,
                -13.5477
              ],
              [
                12.738479,
                -13.137906
              ],
              [
                13.312914,
                -12.48363
              ],
              [
                13.633721,
                -12.038645
              ],
              [
                13.738728,
                -11.297863
              ],
              [
                13.686379,
                -10.731076
              ],
              [
                13.387328,
                -10.373578
              ],
              [
                13.120988,
                -9.766897
              ],
              [
                12.87537,
                -9.166934
              ],
              [
                12.929061,
                -8.959091
              ],
              [
                13.236433,
                -8.562629
              ],
              [
                12.93304,
                -7.596539
              ],
              [
                12.728298,
                -6.927122
              ],
              [
                12.227347,
                -6.294448
              ],
              [
                12.322432,
                -6.100092
              ],
              [
                12.735171,
                -5.965682
              ],
              [
                13.024869,
                -5.984389
              ],
              [
                13.375597,
                -5.864241
              ],
              [
                16.326528,
                -5.87747
              ]
            ]
          ],
          [
            [
              [
                12.436688,
                -5.684304
              ],
              [
                12.182337,
                -5.789931
              ],
              [
                11.914963,
                -5.037987
              ],
              [
                12.318608,
                -4.60623
              ],
              [
                12.62076,
                -4.438023
              ],
              [
                12.995517,
                -4.781103
              ],
              [
                12.631612,
                -4.991271
              ],
              [
                12.468004,
                -5.248362
              ],
              [
                12.436688,
                -5.684304
              ]
            ]
          ]
        ]
      },
      id: "AGO"
    },
    {
      type: "Feature",
      properties: {
        name: "Albania"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              20.590247,
              41.855404
            ],
            [
              20.463175,
              41.515089
            ],
            [
              20.605182,
              41.086226
            ],
            [
              21.02004,
              40.842727
            ],
            [
              20.99999,
              40.580004
            ],
            [
              20.674997,
              40.435
            ],
            [
              20.615,
              40.110007
            ],
            [
              20.150016,
              39.624998
            ],
            [
              19.98,
              39.694993
            ],
            [
              19.960002,
              39.915006
            ],
            [
              19.406082,
              40.250773
            ],
            [
              19.319059,
              40.72723
            ],
            [
              19.40355,
              41.409566
            ],
            [
              19.540027,
              41.719986
            ],
            [
              19.371769,
              41.877548
            ],
            [
              19.304486,
              42.195745
            ],
            [
              19.738051,
              42.688247
            ],
            [
              19.801613,
              42.500093
            ],
            [
              20.0707,
              42.58863
            ],
            [
              20.283755,
              42.32026
            ],
            [
              20.52295,
              42.21787
            ],
            [
              20.590247,
              41.855404
            ]
          ]
        ]
      },
      id: "ALB"
    },
    {
      type: "Feature",
      properties: {
        name: "United Arab Emirates"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              51.579519,
              24.245497
            ],
            [
              51.757441,
              24.294073
            ],
            [
              51.794389,
              24.019826
            ],
            [
              52.577081,
              24.177439
            ],
            [
              53.404007,
              24.151317
            ],
            [
              54.008001,
              24.121758
            ],
            [
              54.693024,
              24.797892
            ],
            [
              55.439025,
              25.439145
            ],
            [
              56.070821,
              26.055464
            ],
            [
              56.261042,
              25.714606
            ],
            [
              56.396847,
              24.924732
            ],
            [
              55.886233,
              24.920831
            ],
            [
              55.804119,
              24.269604
            ],
            [
              55.981214,
              24.130543
            ],
            [
              55.528632,
              23.933604
            ],
            [
              55.525841,
              23.524869
            ],
            [
              55.234489,
              23.110993
            ],
            [
              55.208341,
              22.70833
            ],
            [
              55.006803,
              22.496948
            ],
            [
              52.000733,
              23.001154
            ],
            [
              51.617708,
              24.014219
            ],
            [
              51.579519,
              24.245497
            ]
          ]
        ]
      },
      id: "ARE"
    },
    {
      type: "Feature",
      properties: {
        name: "Argentina"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                -65.5,
                -55.2
              ],
              [
                -66.45,
                -55.25
              ],
              [
                -66.95992,
                -54.89681
              ],
              [
                -67.56244,
                -54.87001
              ],
              [
                -68.63335,
                -54.8695
              ],
              [
                -68.63401,
                -52.63637
              ],
              [
                -68.25,
                -53.1
              ],
              [
                -67.75,
                -53.85
              ],
              [
                -66.45,
                -54.45
              ],
              [
                -65.05,
                -54.7
              ],
              [
                -65.5,
                -55.2
              ]
            ]
          ],
          [
            [
              [
                -64.964892,
                -22.075862
              ],
              [
                -64.377021,
                -22.798091
              ],
              [
                -63.986838,
                -21.993644
              ],
              [
                -62.846468,
                -22.034985
              ],
              [
                -62.685057,
                -22.249029
              ],
              [
                -60.846565,
                -23.880713
              ],
              [
                -60.028966,
                -24.032796
              ],
              [
                -58.807128,
                -24.771459
              ],
              [
                -57.777217,
                -25.16234
              ],
              [
                -57.63366,
                -25.603657
              ],
              [
                -58.618174,
                -27.123719
              ],
              [
                -57.60976,
                -27.395899
              ],
              [
                -56.486702,
                -27.548499
              ],
              [
                -55.695846,
                -27.387837
              ],
              [
                -54.788795,
                -26.621786
              ],
              [
                -54.625291,
                -25.739255
              ],
              [
                -54.13005,
                -25.547639
              ],
              [
                -53.628349,
                -26.124865
              ],
              [
                -53.648735,
                -26.923473
              ],
              [
                -54.490725,
                -27.474757
              ],
              [
                -55.162286,
                -27.881915
              ],
              [
                -56.2909,
                -28.852761
              ],
              [
                -57.625133,
                -30.216295
              ],
              [
                -57.874937,
                -31.016556
              ],
              [
                -58.14244,
                -32.044504
              ],
              [
                -58.132648,
                -33.040567
              ],
              [
                -58.349611,
                -33.263189
              ],
              [
                -58.427074,
                -33.909454
              ],
              [
                -58.495442,
                -34.43149
              ],
              [
                -57.22583,
                -35.288027
              ],
              [
                -57.362359,
                -35.97739
              ],
              [
                -56.737487,
                -36.413126
              ],
              [
                -56.788285,
                -36.901572
              ],
              [
                -57.749157,
                -38.183871
              ],
              [
                -59.231857,
                -38.72022
              ],
              [
                -61.237445,
                -38.928425
              ],
              [
                -62.335957,
                -38.827707
              ],
              [
                -62.125763,
                -39.424105
              ],
              [
                -62.330531,
                -40.172586
              ],
              [
                -62.145994,
                -40.676897
              ],
              [
                -62.745803,
                -41.028761
              ],
              [
                -63.770495,
                -41.166789
              ],
              [
                -64.73209,
                -40.802677
              ],
              [
                -65.118035,
                -41.064315
              ],
              [
                -64.978561,
                -42.058001
              ],
              [
                -64.303408,
                -42.359016
              ],
              [
                -63.755948,
                -42.043687
              ],
              [
                -63.458059,
                -42.563138
              ],
              [
                -64.378804,
                -42.873558
              ],
              [
                -65.181804,
                -43.495381
              ],
              [
                -65.328823,
                -44.501366
              ],
              [
                -65.565269,
                -45.036786
              ],
              [
                -66.509966,
                -45.039628
              ],
              [
                -67.293794,
                -45.551896
              ],
              [
                -67.580546,
                -46.301773
              ],
              [
                -66.597066,
                -47.033925
              ],
              [
                -65.641027,
                -47.236135
              ],
              [
                -65.985088,
                -48.133289
              ],
              [
                -67.166179,
                -48.697337
              ],
              [
                -67.816088,
                -49.869669
              ],
              [
                -68.728745,
                -50.264218
              ],
              [
                -69.138539,
                -50.73251
              ],
              [
                -68.815561,
                -51.771104
              ],
              [
                -68.149995,
                -52.349983
              ],
              [
                -68.571545,
                -52.299444
              ],
              [
                -69.498362,
                -52.142761
              ],
              [
                -71.914804,
                -52.009022
              ],
              [
                -72.329404,
                -51.425956
              ],
              [
                -72.309974,
                -50.67701
              ],
              [
                -72.975747,
                -50.74145
              ],
              [
                -73.328051,
                -50.378785
              ],
              [
                -73.415436,
                -49.318436
              ],
              [
                -72.648247,
                -48.878618
              ],
              [
                -72.331161,
                -48.244238
              ],
              [
                -72.447355,
                -47.738533
              ],
              [
                -71.917258,
                -46.884838
              ],
              [
                -71.552009,
                -45.560733
              ],
              [
                -71.659316,
                -44.973689
              ],
              [
                -71.222779,
                -44.784243
              ],
              [
                -71.329801,
                -44.407522
              ],
              [
                -71.793623,
                -44.207172
              ],
              [
                -71.464056,
                -43.787611
              ],
              [
                -71.915424,
                -43.408565
              ],
              [
                -72.148898,
                -42.254888
              ],
              [
                -71.746804,
                -42.051386
              ],
              [
                -71.915734,
                -40.832339
              ],
              [
                -71.680761,
                -39.808164
              ],
              [
                -71.413517,
                -38.916022
              ],
              [
                -70.814664,
                -38.552995
              ],
              [
                -71.118625,
                -37.576827
              ],
              [
                -71.121881,
                -36.658124
              ],
              [
                -70.364769,
                -36.005089
              ],
              [
                -70.388049,
                -35.169688
              ],
              [
                -69.817309,
                -34.193571
              ],
              [
                -69.814777,
                -33.273886
              ],
              [
                -70.074399,
                -33.09121
              ],
              [
                -70.535069,
                -31.36501
              ],
              [
                -69.919008,
                -30.336339
              ],
              [
                -70.01355,
                -29.367923
              ],
              [
                -69.65613,
                -28.459141
              ],
              [
                -69.001235,
                -27.521214
              ],
              [
                -68.295542,
                -26.89934
              ],
              [
                -68.5948,
                -26.506909
              ],
              [
                -68.386001,
                -26.185016
              ],
              [
                -68.417653,
                -24.518555
              ],
              [
                -67.328443,
                -24.025303
              ],
              [
                -66.985234,
                -22.986349
              ],
              [
                -67.106674,
                -22.735925
              ],
              [
                -66.273339,
                -21.83231
              ],
              [
                -64.964892,
                -22.075862
              ]
            ]
          ]
        ]
      },
      id: "ARG"
    },
    {
      type: "Feature",
      properties: {
        name: "Armenia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              43.582746,
              41.092143
            ],
            [
              44.97248,
              41.248129
            ],
            [
              45.179496,
              40.985354
            ],
            [
              45.560351,
              40.81229
            ],
            [
              45.359175,
              40.561504
            ],
            [
              45.891907,
              40.218476
            ],
            [
              45.610012,
              39.899994
            ],
            [
              46.034534,
              39.628021
            ],
            [
              46.483499,
              39.464155
            ],
            [
              46.50572,
              38.770605
            ],
            [
              46.143623,
              38.741201
            ],
            [
              45.735379,
              39.319719
            ],
            [
              45.739978,
              39.473999
            ],
            [
              45.298145,
              39.471751
            ],
            [
              45.001987,
              39.740004
            ],
            [
              44.79399,
              39.713003
            ],
            [
              44.400009,
              40.005
            ],
            [
              43.656436,
              40.253564
            ],
            [
              43.752658,
              40.740201
            ],
            [
              43.582746,
              41.092143
            ]
          ]
        ]
      },
      id: "ARM"
    },
    {
      type: "Feature",
      properties: {
        name: "Antarctica"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                -59.572095,
                -80.040179
              ],
              [
                -59.865849,
                -80.549657
              ],
              [
                -60.159656,
                -81.000327
              ],
              [
                -62.255393,
                -80.863178
              ],
              [
                -64.488125,
                -80.921934
              ],
              [
                -65.741666,
                -80.588827
              ],
              [
                -65.741666,
                -80.549657
              ],
              [
                -66.290031,
                -80.255773
              ],
              [
                -64.037688,
                -80.294944
              ],
              [
                -61.883246,
                -80.39287
              ],
              [
                -61.138976,
                -79.981371
              ],
              [
                -60.610119,
                -79.628679
              ],
              [
                -59.572095,
                -80.040179
              ]
            ]
          ],
          [
            [
              [
                -159.208184,
                -79.497059
              ],
              [
                -161.127601,
                -79.634209
              ],
              [
                -162.439847,
                -79.281465
              ],
              [
                -163.027408,
                -78.928774
              ],
              [
                -163.066604,
                -78.869966
              ],
              [
                -163.712896,
                -78.595667
              ],
              [
                -163.712896,
                -78.595667
              ],
              [
                -163.105801,
                -78.223338
              ],
              [
                -161.245113,
                -78.380176
              ],
              [
                -160.246208,
                -78.693645
              ],
              [
                -159.482405,
                -79.046338
              ],
              [
                -159.208184,
                -79.497059
              ]
            ]
          ],
          [
            [
              [
                -45.154758,
                -78.04707
              ],
              [
                -43.920828,
                -78.478103
              ],
              [
                -43.48995,
                -79.08556
              ],
              [
                -43.372438,
                -79.516645
              ],
              [
                -43.333267,
                -80.026123
              ],
              [
                -44.880537,
                -80.339644
              ],
              [
                -46.506174,
                -80.594357
              ],
              [
                -48.386421,
                -80.829485
              ],
              [
                -50.482107,
                -81.025442
              ],
              [
                -52.851988,
                -80.966685
              ],
              [
                -54.164259,
                -80.633528
              ],
              [
                -53.987991,
                -80.222028
              ],
              [
                -51.853134,
                -79.94773
              ],
              [
                -50.991326,
                -79.614623
              ],
              [
                -50.364595,
                -79.183487
              ],
              [
                -49.914131,
                -78.811209
              ],
              [
                -49.306959,
                -78.458569
              ],
              [
                -48.660616,
                -78.047018
              ],
              [
                -48.660616,
                -78.047019
              ],
              [
                -48.151396,
                -78.04707
              ],
              [
                -46.662857,
                -77.831476
              ],
              [
                -45.154758,
                -78.04707
              ]
            ]
          ],
          [
            [
              [
                -121.211511,
                -73.50099
              ],
              [
                -119.918851,
                -73.657725
              ],
              [
                -118.724143,
                -73.481353
              ],
              [
                -119.292119,
                -73.834097
              ],
              [
                -120.232217,
                -74.08881
              ],
              [
                -121.62283,
                -74.010468
              ],
              [
                -122.621735,
                -73.657778
              ],
              [
                -122.621735,
                -73.657777
              ],
              [
                -122.406245,
                -73.324619
              ],
              [
                -121.211511,
                -73.50099
              ]
            ]
          ],
          [
            [
              [
                -125.559566,
                -73.481353
              ],
              [
                -124.031882,
                -73.873268
              ],
              [
                -124.619469,
                -73.834097
              ],
              [
                -125.912181,
                -73.736118
              ],
              [
                -127.28313,
                -73.461769
              ],
              [
                -127.28313,
                -73.461768
              ],
              [
                -126.558472,
                -73.246226
              ],
              [
                -125.559566,
                -73.481353
              ]
            ]
          ],
          [
            [
              [
                -98.98155,
                -71.933334
              ],
              [
                -97.884743,
                -72.070535
              ],
              [
                -96.787937,
                -71.952971
              ],
              [
                -96.20035,
                -72.521205
              ],
              [
                -96.983765,
                -72.442864
              ],
              [
                -98.198083,
                -72.482035
              ],
              [
                -99.432013,
                -72.442864
              ],
              [
                -100.783455,
                -72.50162
              ],
              [
                -101.801868,
                -72.305663
              ],
              [
                -102.330725,
                -71.894164
              ],
              [
                -102.330725,
                -71.894164
              ],
              [
                -101.703967,
                -71.717792
              ],
              [
                -100.430919,
                -71.854993
              ],
              [
                -98.98155,
                -71.933334
              ]
            ]
          ],
          [
            [
              [
                -68.451346,
                -70.955823
              ],
              [
                -68.333834,
                -71.406493
              ],
              [
                -68.510128,
                -71.798407
              ],
              [
                -68.784297,
                -72.170736
              ],
              [
                -69.959471,
                -72.307885
              ],
              [
                -71.075889,
                -72.503842
              ],
              [
                -72.388134,
                -72.484257
              ],
              [
                -71.8985,
                -72.092343
              ],
              [
                -73.073622,
                -72.229492
              ],
              [
                -74.19004,
                -72.366693
              ],
              [
                -74.953895,
                -72.072757
              ],
              [
                -75.012625,
                -71.661258
              ],
              [
                -73.915819,
                -71.269345
              ],
              [
                -73.915819,
                -71.269344
              ],
              [
                -73.230331,
                -71.15178
              ],
              [
                -72.074717,
                -71.190951
              ],
              [
                -71.780962,
                -70.681473
              ],
              [
                -71.72218,
                -70.309196
              ],
              [
                -71.741791,
                -69.505782
              ],
              [
                -71.173815,
                -69.035475
              ],
              [
                -70.253252,
                -68.87874
              ],
              [
                -69.724447,
                -69.251017
              ],
              [
                -69.489422,
                -69.623346
              ],
              [
                -69.058518,
                -70.074016
              ],
              [
                -68.725541,
                -70.505153
              ],
              [
                -68.451346,
                -70.955823
              ]
            ]
          ],
          [
            [
              [
                -58.614143,
                -64.152467
              ],
              [
                -59.045073,
                -64.36801
              ],
              [
                -59.789342,
                -64.211223
              ],
              [
                -60.611928,
                -64.309202
              ],
              [
                -61.297416,
                -64.54433
              ],
              [
                -62.0221,
                -64.799094
              ],
              [
                -62.51176,
                -65.09303
              ],
              [
                -62.648858,
                -65.484942
              ],
              [
                -62.590128,
                -65.857219
              ],
              [
                -62.120079,
                -66.190326
              ],
              [
                -62.805567,
                -66.425505
              ],
              [
                -63.74569,
                -66.503847
              ],
              [
                -64.294106,
                -66.837004
              ],
              [
                -64.881693,
                -67.150474
              ],
              [
                -65.508425,
                -67.58161
              ],
              [
                -65.665082,
                -67.953887
              ],
              [
                -65.312545,
                -68.365335
              ],
              [
                -64.783715,
                -68.678908
              ],
              [
                -63.961103,
                -68.913984
              ],
              [
                -63.1973,
                -69.227556
              ],
              [
                -62.785955,
                -69.619419
              ],
              [
                -62.570516,
                -69.991747
              ],
              [
                -62.276736,
                -70.383661
              ],
              [
                -61.806661,
                -70.716768
              ],
              [
                -61.512906,
                -71.089045
              ],
              [
                -61.375809,
                -72.010074
              ],
              [
                -61.081977,
                -72.382351
              ],
              [
                -61.003661,
                -72.774265
              ],
              [
                -60.690269,
                -73.166179
              ],
              [
                -60.827367,
                -73.695242
              ],
              [
                -61.375809,
                -74.106742
              ],
              [
                -61.96337,
                -74.439848
              ],
              [
                -63.295201,
                -74.576997
              ],
              [
                -63.74569,
                -74.92974
              ],
              [
                -64.352836,
                -75.262847
              ],
              [
                -65.860987,
                -75.635124
              ],
              [
                -67.192818,
                -75.79191
              ],
              [
                -68.446282,
                -76.007452
              ],
              [
                -69.797724,
                -76.222995
              ],
              [
                -70.600724,
                -76.634494
              ],
              [
                -72.206776,
                -76.673665
              ],
              [
                -73.969536,
                -76.634494
              ],
              [
                -75.555977,
                -76.712887
              ],
              [
                -77.24037,
                -76.712887
              ],
              [
                -76.926979,
                -77.104802
              ],
              [
                -75.399294,
                -77.28107
              ],
              [
                -74.282876,
                -77.55542
              ],
              [
                -73.656119,
                -77.908112
              ],
              [
                -74.772536,
                -78.221633
              ],
              [
                -76.4961,
                -78.123654
              ],
              [
                -77.925858,
                -78.378419
              ],
              [
                -77.984666,
                -78.789918
              ],
              [
                -78.023785,
                -79.181833
              ],
              [
                -76.848637,
                -79.514939
              ],
              [
                -76.633224,
                -79.887216
              ],
              [
                -75.360097,
                -80.259545
              ],
              [
                -73.244852,
                -80.416331
              ],
              [
                -71.442946,
                -80.69063
              ],
              [
                -70.013163,
                -81.004151
              ],
              [
                -68.191646,
                -81.317672
              ],
              [
                -65.704279,
                -81.474458
              ],
              [
                -63.25603,
                -81.748757
              ],
              [
                -61.552026,
                -82.042692
              ],
              [
                -59.691416,
                -82.37585
              ],
              [
                -58.712121,
                -82.846106
              ],
              [
                -58.222487,
                -83.218434
              ],
              [
                -57.008117,
                -82.865691
              ],
              [
                -55.362894,
                -82.571755
              ],
              [
                -53.619771,
                -82.258235
              ],
              [
                -51.543644,
                -82.003521
              ],
              [
                -49.76135,
                -81.729171
              ],
              [
                -47.273931,
                -81.709586
              ],
              [
                -44.825708,
                -81.846735
              ],
              [
                -42.808363,
                -82.081915
              ],
              [
                -42.16202,
                -81.65083
              ],
              [
                -40.771433,
                -81.356894
              ],
              [
                -38.244818,
                -81.337309
              ],
              [
                -36.26667,
                -81.121715
              ],
              [
                -34.386397,
                -80.906172
              ],
              [
                -32.310296,
                -80.769023
              ],
              [
                -30.097098,
                -80.592651
              ],
              [
                -28.549802,
                -80.337938
              ],
              [
                -29.254901,
                -79.985195
              ],
              [
                -29.685805,
                -79.632503
              ],
              [
                -29.685805,
                -79.260226
              ],
              [
                -31.624808,
                -79.299397
              ],
              [
                -33.681324,
                -79.456132
              ],
              [
                -35.639912,
                -79.456132
              ],
              [
                -35.914107,
                -79.083855
              ],
              [
                -35.77701,
                -78.339248
              ],
              [
                -35.326546,
                -78.123654
              ],
              [
                -33.896763,
                -77.888526
              ],
              [
                -32.212369,
                -77.65345
              ],
              [
                -30.998051,
                -77.359515
              ],
              [
                -29.783732,
                -77.065579
              ],
              [
                -28.882779,
                -76.673665
              ],
              [
                -27.511752,
                -76.497345
              ],
              [
                -26.160336,
                -76.360144
              ],
              [
                -25.474822,
                -76.281803
              ],
              [
                -23.927552,
                -76.24258
              ],
              [
                -22.458598,
                -76.105431
              ],
              [
                -21.224694,
                -75.909474
              ],
              [
                -20.010375,
                -75.674346
              ],
              [
                -18.913543,
                -75.439218
              ],
              [
                -17.522982,
                -75.125698
              ],
              [
                -16.641589,
                -74.79254
              ],
              [
                -15.701491,
                -74.498604
              ],
              [
                -15.40771,
                -74.106742
              ],
              [
                -16.46532,
                -73.871614
              ],
              [
                -16.112784,
                -73.460114
              ],
              [
                -15.446855,
                -73.146542
              ],
              [
                -14.408805,
                -72.950585
              ],
              [
                -13.311973,
                -72.715457
              ],
              [
                -12.293508,
                -72.401936
              ],
              [
                -11.510067,
                -72.010074
              ],
              [
                -11.020433,
                -71.539767
              ],
              [
                -10.295774,
                -71.265416
              ],
              [
                -9.101015,
                -71.324224
              ],
              [
                -8.611381,
                -71.65733
              ],
              [
                -7.416622,
                -71.696501
              ],
              [
                -7.377451,
                -71.324224
              ],
              [
                -6.868232,
                -70.93231
              ],
              [
                -5.790985,
                -71.030289
              ],
              [
                -5.536375,
                -71.402617
              ],
              [
                -4.341667,
                -71.461373
              ],
              [
                -3.048981,
                -71.285053
              ],
              [
                -1.795492,
                -71.167438
              ],
              [
                -0.659489,
                -71.226246
              ],
              [
                -0.228637,
                -71.637745
              ],
              [
                0.868195,
                -71.304639
              ],
              [
                1.886686,
                -71.128267
              ],
              [
                3.022638,
                -70.991118
              ],
              [
                4.139055,
                -70.853917
              ],
              [
                5.157546,
                -70.618789
              ],
              [
                6.273912,
                -70.462055
              ],
              [
                7.13572,
                -70.246512
              ],
              [
                7.742866,
                -69.893769
              ],
              [
                8.48711,
                -70.148534
              ],
              [
                9.525135,
                -70.011333
              ],
              [
                10.249845,
                -70.48164
              ],
              [
                10.817821,
                -70.834332
              ],
              [
                11.953824,
                -70.638375
              ],
              [
                12.404287,
                -70.246512
              ],
              [
                13.422778,
                -69.972162
              ],
              [
                14.734998,
                -70.030918
              ],
              [
                15.126757,
                -70.403247
              ],
              [
                15.949342,
                -70.030918
              ],
              [
                17.026589,
                -69.913354
              ],
              [
                18.201711,
                -69.874183
              ],
              [
                19.259373,
                -69.893769
              ],
              [
                20.375739,
                -70.011333
              ],
              [
                21.452985,
                -70.07014
              ],
              [
                21.923034,
                -70.403247
              ],
              [
                22.569403,
                -70.697182
              ],
              [
                23.666184,
                -70.520811
              ],
              [
                24.841357,
                -70.48164
              ],
              [
                25.977309,
                -70.48164
              ],
              [
                27.093726,
                -70.462055
              ],
              [
                28.09258,
                -70.324854
              ],
              [
                29.150242,
                -70.20729
              ],
              [
                30.031583,
                -69.93294
              ],
              [
                30.971733,
                -69.75662
              ],
              [
                31.990172,
                -69.658641
              ],
              [
                32.754053,
                -69.384291
              ],
              [
                33.302443,
                -68.835642
              ],
              [
                33.870419,
                -68.502588
              ],
              [
                34.908495,
                -68.659271
              ],
              [
                35.300202,
                -69.012014
              ],
              [
                36.16201,
                -69.247142
              ],
              [
                37.200035,
                -69.168748
              ],
              [
                37.905108,
                -69.52144
              ],
              [
                38.649404,
                -69.776205
              ],
              [
                39.667894,
                -69.541077
              ],
              [
                40.020431,
                -69.109941
              ],
              [
                40.921358,
                -68.933621
              ],
              [
                41.959434,
                -68.600514
              ],
              [
                42.938702,
                -68.463313
              ],
              [
                44.113876,
                -68.267408
              ],
              [
                44.897291,
                -68.051866
              ],
              [
                45.719928,
                -67.816738
              ],
              [
                46.503343,
                -67.601196
              ],
              [
                47.44344,
                -67.718759
              ],
              [
                48.344419,
                -67.366068
              ],
              [
                48.990736,
                -67.091718
              ],
              [
                49.930885,
                -67.111303
              ],
              [
                50.753471,
                -66.876175
              ],
              [
                50.949325,
                -66.523484
              ],
              [
                51.791547,
                -66.249133
              ],
              [
                52.614133,
                -66.053176
              ],
              [
                53.613038,
                -65.89639
              ],
              [
                54.53355,
                -65.818049
              ],
              [
                55.414943,
                -65.876805
              ],
              [
                56.355041,
                -65.974783
              ],
              [
                57.158093,
                -66.249133
              ],
              [
                57.255968,
                -66.680218
              ],
              [
                58.137361,
                -67.013324
              ],
              [
                58.744508,
                -67.287675
              ],
              [
                59.939318,
                -67.405239
              ],
              [
                60.605221,
                -67.679589
              ],
              [
                61.427806,
                -67.953887
              ],
              [
                62.387489,
                -68.012695
              ],
              [
                63.19049,
                -67.816738
              ],
              [
                64.052349,
                -67.405239
              ],
              [
                64.992447,
                -67.620729
              ],
              [
                65.971715,
                -67.738345
              ],
              [
                66.911864,
                -67.855909
              ],
              [
                67.891133,
                -67.934302
              ],
              [
                68.890038,
                -67.934302
              ],
              [
                69.712624,
                -68.972791
              ],
              [
                69.673453,
                -69.227556
              ],
              [
                69.555941,
                -69.678226
              ],
              [
                68.596258,
                -69.93294
              ],
              [
                67.81274,
                -70.305268
              ],
              [
                67.949889,
                -70.697182
              ],
              [
                69.066307,
                -70.677545
              ],
              [
                68.929157,
                -71.069459
              ],
              [
                68.419989,
                -71.441788
              ],
              [
                67.949889,
                -71.853287
              ],
              [
                68.71377,
                -72.166808
              ],
              [
                69.869307,
                -72.264787
              ],
              [
                71.024895,
                -72.088415
              ],
              [
                71.573285,
                -71.696501
              ],
              [
                71.906288,
                -71.324224
              ],
              [
                72.454627,
                -71.010703
              ],
              [
                73.08141,
                -70.716768
              ],
              [
                73.33602,
                -70.364024
              ],
              [
                73.864877,
                -69.874183
              ],
              [
                74.491557,
                -69.776205
              ],
              [
                75.62756,
                -69.737034
              ],
              [
                76.626465,
                -69.619419
              ],
              [
                77.644904,
                -69.462684
              ],
              [
                78.134539,
                -69.07077
              ],
              [
                78.428371,
                -68.698441
              ],
              [
                79.113859,
                -68.326216
              ],
              [
                80.093127,
                -68.071503
              ],
              [
                80.93535,
                -67.875546
              ],
              [
                81.483792,
                -67.542388
              ],
              [
                82.051767,
                -67.366068
              ],
              [
                82.776426,
                -67.209282
              ],
              [
                83.775331,
                -67.30726
              ],
              [
                84.676206,
                -67.209282
              ],
              [
                85.655527,
                -67.091718
              ],
              [
                86.752359,
                -67.150474
              ],
              [
                87.477017,
                -66.876175
              ],
              [
                87.986289,
                -66.209911
              ],
              [
                88.358411,
                -66.484261
              ],
              [
                88.828408,
                -66.954568
              ],
              [
                89.67063,
                -67.150474
              ],
              [
                90.630365,
                -67.228867
              ],
              [
                91.5901,
                -67.111303
              ],
              [
                92.608539,
                -67.189696
              ],
              [
                93.548637,
                -67.209282
              ],
              [
                94.17542,
                -67.111303
              ],
              [
                95.017591,
                -67.170111
              ],
              [
                95.781472,
                -67.385653
              ],
              [
                96.682399,
                -67.248504
              ],
              [
                97.759646,
                -67.248504
              ],
              [
                98.68021,
                -67.111303
              ],
              [
                99.718182,
                -67.248504
              ],
              [
                100.384188,
                -66.915346
              ],
              [
                100.893356,
                -66.58224
              ],
              [
                101.578896,
                -66.30789
              ],
              [
                102.832411,
                -65.563284
              ],
              [
                103.478676,
                -65.700485
              ],
              [
                104.242557,
                -65.974783
              ],
              [
                104.90846,
                -66.327527
              ],
              [
                106.181561,
                -66.934931
              ],
              [
                107.160881,
                -66.954568
              ],
              [
                108.081393,
                -66.954568
              ],
              [
                109.15864,
                -66.837004
              ],
              [
                110.235835,
                -66.699804
              ],
              [
                111.058472,
                -66.425505
              ],
              [
                111.74396,
                -66.13157
              ],
              [
                112.860378,
                -66.092347
              ],
              [
                113.604673,
                -65.876805
              ],
              [
                114.388088,
                -66.072762
              ],
              [
                114.897308,
                -66.386283
              ],
              [
                115.602381,
                -66.699804
              ],
              [
                116.699161,
                -66.660633
              ],
              [
                117.384701,
                -66.915346
              ],
              [
                118.57946,
                -67.170111
              ],
              [
                119.832924,
                -67.268089
              ],
              [
                120.871,
                -67.189696
              ],
              [
                121.654415,
                -66.876175
              ],
              [
                122.320369,
                -66.562654
              ],
              [
                123.221296,
                -66.484261
              ],
              [
                124.122274,
                -66.621462
              ],
              [
                125.160247,
                -66.719389
              ],
              [
                126.100396,
                -66.562654
              ],
              [
                127.001427,
                -66.562654
              ],
              [
                127.882768,
                -66.660633
              ],
              [
                128.80328,
                -66.758611
              ],
              [
                129.704259,
                -66.58224
              ],
              [
                130.781454,
                -66.425505
              ],
              [
                131.799945,
                -66.386283
              ],
              [
                132.935896,
                -66.386283
              ],
              [
                133.85646,
                -66.288304
              ],
              [
                134.757387,
                -66.209963
              ],
              [
                135.031582,
                -65.72007
              ],
              [
                135.070753,
                -65.308571
              ],
              [
                135.697485,
                -65.582869
              ],
              [
                135.873805,
                -66.033591
              ],
              [
                136.206705,
                -66.44509
              ],
              [
                136.618049,
                -66.778197
              ],
              [
                137.460271,
                -66.954568
              ],
              [
                138.596223,
                -66.895761
              ],
              [
                139.908442,
                -66.876175
              ],
              [
                140.809421,
                -66.817367
              ],
              [
                142.121692,
                -66.817367
              ],
              [
                143.061842,
                -66.797782
              ],
              [
                144.374061,
                -66.837004
              ],
              [
                145.490427,
                -66.915346
              ],
              [
                146.195552,
                -67.228867
              ],
              [
                145.999699,
                -67.601196
              ],
              [
                146.646067,
                -67.895131
              ],
              [
                147.723263,
                -68.130259
              ],
              [
                148.839629,
                -68.385024
              ],
              [
                150.132314,
                -68.561292
              ],
              [
                151.483705,
                -68.71813
              ],
              [
                152.502247,
                -68.874813
              ],
              [
                153.638199,
                -68.894502
              ],
              [
                154.284567,
                -68.561292
              ],
              [
                155.165857,
                -68.835642
              ],
              [
                155.92979,
                -69.149215
              ],
              [
                156.811132,
                -69.384291
              ],
              [
                158.025528,
                -69.482269
              ],
              [
                159.181013,
                -69.599833
              ],
              [
                159.670699,
                -69.991747
              ],
              [
                160.80665,
                -70.226875
              ],
              [
                161.570479,
                -70.579618
              ],
              [
                162.686897,
                -70.736353
              ],
              [
                163.842434,
                -70.716768
              ],
              [
                164.919681,
                -70.775524
              ],
              [
                166.11444,
                -70.755938
              ],
              [
                167.309095,
                -70.834332
              ],
              [
                168.425616,
                -70.971481
              ],
              [
                169.463589,
                -71.20666
              ],
              [
                170.501665,
                -71.402617
              ],
              [
                171.20679,
                -71.696501
              ],
              [
                171.089227,
                -72.088415
              ],
              [
                170.560422,
                -72.441159
              ],
              [
                170.109958,
                -72.891829
              ],
              [
                169.75737,
                -73.24452
              ],
              [
                169.287321,
                -73.65602
              ],
              [
                167.975101,
                -73.812806
              ],
              [
                167.387489,
                -74.165498
              ],
              [
                166.094803,
                -74.38104
              ],
              [
                165.644391,
                -74.772954
              ],
              [
                164.958851,
                -75.145283
              ],
              [
                164.234193,
                -75.458804
              ],
              [
                163.822797,
                -75.870303
              ],
              [
                163.568239,
                -76.24258
              ],
              [
                163.47026,
                -76.693302
              ],
              [
                163.489897,
                -77.065579
              ],
              [
                164.057873,
                -77.457442
              ],
              [
                164.273363,
                -77.82977
              ],
              [
                164.743464,
                -78.182514
              ],
              [
                166.604126,
                -78.319611
              ],
              [
                166.995781,
                -78.750748
              ],
              [
                165.193876,
                -78.907483
              ],
              [
                163.666217,
                -79.123025
              ],
              [
                161.766385,
                -79.162248
              ],
              [
                160.924162,
                -79.730482
              ],
              [
                160.747894,
                -80.200737
              ],
              [
                160.316964,
                -80.573066
              ],
              [
                159.788211,
                -80.945395
              ],
              [
                161.120016,
                -81.278501
              ],
              [
                161.629287,
                -81.690001
              ],
              [
                162.490992,
                -82.062278
              ],
              [
                163.705336,
                -82.395435
              ],
              [
                165.095949,
                -82.708956
              ],
              [
                166.604126,
                -83.022477
              ],
              [
                168.895665,
                -83.335998
              ],
              [
                169.404782,
                -83.825891
              ],
              [
                172.283934,
                -84.041433
              ],
              [
                172.477049,
                -84.117914
              ],
              [
                173.224083,
                -84.41371
              ],
              [
                175.985672,
                -84.158997
              ],
              [
                178.277212,
                -84.472518
              ],
              [
                180,
                -84.71338
              ],
              [
                -179.942499,
                -84.721443
              ],
              [
                -179.058677,
                -84.139412
              ],
              [
                -177.256772,
                -84.452933
              ],
              [
                -177.140807,
                -84.417941
              ],
              [
                -176.084673,
                -84.099259
              ],
              [
                -175.947235,
                -84.110449
              ],
              [
                -175.829882,
                -84.117914
              ],
              [
                -174.382503,
                -84.534323
              ],
              [
                -173.116559,
                -84.117914
              ],
              [
                -172.889106,
                -84.061019
              ],
              [
                -169.951223,
                -83.884647
              ],
              [
                -168.999989,
                -84.117914
              ],
              [
                -168.530199,
                -84.23739
              ],
              [
                -167.022099,
                -84.570497
              ],
              [
                -164.182144,
                -84.82521
              ],
              [
                -161.929775,
                -85.138731
              ],
              [
                -158.07138,
                -85.37391
              ],
              [
                -155.192253,
                -85.09956
              ],
              [
                -150.942099,
                -85.295517
              ],
              [
                -148.533073,
                -85.609038
              ],
              [
                -145.888918,
                -85.315102
              ],
              [
                -143.107718,
                -85.040752
              ],
              [
                -142.892279,
                -84.570497
              ],
              [
                -146.829068,
                -84.531274
              ],
              [
                -150.060732,
                -84.296146
              ],
              [
                -150.902928,
                -83.904232
              ],
              [
                -153.586201,
                -83.68869
              ],
              [
                -153.409907,
                -83.23802
              ],
              [
                -153.037759,
                -82.82652
              ],
              [
                -152.665637,
                -82.454192
              ],
              [
                -152.861517,
                -82.042692
              ],
              [
                -154.526299,
                -81.768394
              ],
              [
                -155.29018,
                -81.41565
              ],
              [
                -156.83745,
                -81.102129
              ],
              [
                -154.408787,
                -81.160937
              ],
              [
                -152.097662,
                -81.004151
              ],
              [
                -150.648293,
                -81.337309
              ],
              [
                -148.865998,
                -81.043373
              ],
              [
                -147.22075,
                -80.671045
              ],
              [
                -146.417749,
                -80.337938
              ],
              [
                -146.770286,
                -79.926439
              ],
              [
                -148.062947,
                -79.652089
              ],
              [
                -149.531901,
                -79.358205
              ],
              [
                -151.588416,
                -79.299397
              ],
              [
                -153.390322,
                -79.162248
              ],
              [
                -155.329376,
                -79.064269
              ],
              [
                -155.975668,
                -78.69194
              ],
              [
                -157.268302,
                -78.378419
              ],
              [
                -158.051768,
                -78.025676
              ],
              [
                -158.365134,
                -76.889207
              ],
              [
                -157.875474,
                -76.987238
              ],
              [
                -156.974573,
                -77.300759
              ],
              [
                -155.329376,
                -77.202728
              ],
              [
                -153.742832,
                -77.065579
              ],
              [
                -152.920247,
                -77.496664
              ],
              [
                -151.33378,
                -77.398737
              ],
              [
                -150.00195,
                -77.183143
              ],
              [
                -148.748486,
                -76.908845
              ],
              [
                -147.612483,
                -76.575738
              ],
              [
                -146.104409,
                -76.47776
              ],
              [
                -146.143528,
                -76.105431
              ],
              [
                -146.496091,
                -75.733154
              ],
              [
                -146.20231,
                -75.380411
              ],
              [
                -144.909624,
                -75.204039
              ],
              [
                -144.322037,
                -75.537197
              ],
              [
                -142.794353,
                -75.34124
              ],
              [
                -141.638764,
                -75.086475
              ],
              [
                -140.209007,
                -75.06689
              ],
              [
                -138.85759,
                -74.968911
              ],
              [
                -137.5062,
                -74.733783
              ],
              [
                -136.428901,
                -74.518241
              ],
              [
                -135.214583,
                -74.302699
              ],
              [
                -134.431194,
                -74.361455
              ],
              [
                -133.745654,
                -74.439848
              ],
              [
                -132.257168,
                -74.302699
              ],
              [
                -130.925311,
                -74.479019
              ],
              [
                -129.554284,
                -74.459433
              ],
              [
                -128.242038,
                -74.322284
              ],
              [
                -126.890622,
                -74.420263
              ],
              [
                -125.402082,
                -74.518241
              ],
              [
                -124.011496,
                -74.479019
              ],
              [
                -122.562152,
                -74.498604
              ],
              [
                -121.073613,
                -74.518241
              ],
              [
                -119.70256,
                -74.479019
              ],
              [
                -118.684145,
                -74.185083
              ],
              [
                -117.469801,
                -74.028348
              ],
              [
                -116.216312,
                -74.243891
              ],
              [
                -115.021552,
                -74.067519
              ],
              [
                -113.944331,
                -73.714828
              ],
              [
                -113.297988,
                -74.028348
              ],
              [
                -112.945452,
                -74.38104
              ],
              [
                -112.299083,
                -74.714198
              ],
              [
                -111.261059,
                -74.420263
              ],
              [
                -110.066325,
                -74.79254
              ],
              [
                -108.714909,
                -74.910103
              ],
              [
                -107.559346,
                -75.184454
              ],
              [
                -106.149148,
                -75.125698
              ],
              [
                -104.876074,
                -74.949326
              ],
              [
                -103.367949,
                -74.988497
              ],
              [
                -102.016507,
                -75.125698
              ],
              [
                -100.645531,
                -75.302018
              ],
              [
                -100.1167,
                -74.870933
              ],
              [
                -100.763043,
                -74.537826
              ],
              [
                -101.252703,
                -74.185083
              ],
              [
                -102.545337,
                -74.106742
              ],
              [
                -103.113313,
                -73.734413
              ],
              [
                -103.328752,
                -73.362084
              ],
              [
                -103.681289,
                -72.61753
              ],
              [
                -102.917485,
                -72.754679
              ],
              [
                -101.60524,
                -72.813436
              ],
              [
                -100.312528,
                -72.754679
              ],
              [
                -99.13738,
                -72.911414
              ],
              [
                -98.118889,
                -73.20535
              ],
              [
                -97.688037,
                -73.558041
              ],
              [
                -96.336595,
                -73.616849
              ],
              [
                -95.043961,
                -73.4797
              ],
              [
                -93.672907,
                -73.283743
              ],
              [
                -92.439003,
                -73.166179
              ],
              [
                -91.420564,
                -73.401307
              ],
              [
                -90.088733,
                -73.322914
              ],
              [
                -89.226951,
                -72.558722
              ],
              [
                -88.423951,
                -73.009393
              ],
              [
                -87.268337,
                -73.185764
              ],
              [
                -86.014822,
                -73.087786
              ],
              [
                -85.192236,
                -73.4797
              ],
              [
                -83.879991,
                -73.518871
              ],
              [
                -82.665646,
                -73.636434
              ],
              [
                -81.470913,
                -73.851977
              ],
              [
                -80.687447,
                -73.4797
              ],
              [
                -80.295791,
                -73.126956
              ],
              [
                -79.296886,
                -73.518871
              ],
              [
                -77.925858,
                -73.420892
              ],
              [
                -76.907367,
                -73.636434
              ],
              [
                -76.221879,
                -73.969541
              ],
              [
                -74.890049,
                -73.871614
              ],
              [
                -73.852024,
                -73.65602
              ],
              [
                -72.833533,
                -73.401307
              ],
              [
                -71.619215,
                -73.264157
              ],
              [
                -70.209042,
                -73.146542
              ],
              [
                -68.935916,
                -73.009393
              ],
              [
                -67.956622,
                -72.79385
              ],
              [
                -67.369061,
                -72.480329
              ],
              [
                -67.134036,
                -72.049244
              ],
              [
                -67.251548,
                -71.637745
              ],
              [
                -67.56494,
                -71.245831
              ],
              [
                -67.917477,
                -70.853917
              ],
              [
                -68.230843,
                -70.462055
              ],
              [
                -68.485452,
                -70.109311
              ],
              [
                -68.544209,
                -69.717397
              ],
              [
                -68.446282,
                -69.325535
              ],
              [
                -67.976233,
                -68.953206
              ],
              [
                -67.5845,
                -68.541707
              ],
              [
                -67.427843,
                -68.149844
              ],
              [
                -67.62367,
                -67.718759
              ],
              [
                -67.741183,
                -67.326845
              ],
              [
                -67.251548,
                -66.876175
              ],
              [
                -66.703184,
                -66.58224
              ],
              [
                -66.056815,
                -66.209963
              ],
              [
                -65.371327,
                -65.89639
              ],
              [
                -64.568276,
                -65.602506
              ],
              [
                -64.176542,
                -65.171423
              ],
              [
                -63.628152,
                -64.897073
              ],
              [
                -63.001394,
                -64.642308
              ],
              [
                -62.041686,
                -64.583552
              ],
              [
                -61.414928,
                -64.270031
              ],
              [
                -60.709855,
                -64.074074
              ],
              [
                -59.887269,
                -63.95651
              ],
              [
                -59.162585,
                -63.701745
              ],
              [
                -58.594557,
                -63.388224
              ],
              [
                -57.811143,
                -63.27066
              ],
              [
                -57.223582,
                -63.525425
              ],
              [
                -57.59573,
                -63.858532
              ],
              [
                -58.614143,
                -64.152467
              ]
            ]
          ]
        ]
      },
      id: "ATA"
    },
    {
      type: "Feature",
      properties: {
        name: "French Southern and Antarctic Lands"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              68.935,
              -48.625
            ],
            [
              69.58,
              -48.94
            ],
            [
              70.525,
              -49.065
            ],
            [
              70.56,
              -49.255
            ],
            [
              70.28,
              -49.71
            ],
            [
              68.745,
              -49.775
            ],
            [
              68.72,
              -49.2425
            ],
            [
              68.8675,
              -48.83
            ],
            [
              68.935,
              -48.625
            ]
          ]
        ]
      },
      id: "ATF"
    },
    {
      type: "Feature",
      properties: {
        name: "Australia"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                145.397978,
                -40.792549
              ],
              [
                146.364121,
                -41.137695
              ],
              [
                146.908584,
                -41.000546
              ],
              [
                147.689259,
                -40.808258
              ],
              [
                148.289068,
                -40.875438
              ],
              [
                148.359865,
                -42.062445
              ],
              [
                148.017301,
                -42.407024
              ],
              [
                147.914052,
                -43.211522
              ],
              [
                147.564564,
                -42.937689
              ],
              [
                146.870343,
                -43.634597
              ],
              [
                146.663327,
                -43.580854
              ],
              [
                146.048378,
                -43.549745
              ],
              [
                145.43193,
                -42.693776
              ],
              [
                145.29509,
                -42.03361
              ],
              [
                144.718071,
                -41.162552
              ],
              [
                144.743755,
                -40.703975
              ],
              [
                145.397978,
                -40.792549
              ]
            ]
          ],
          [
            [
              [
                143.561811,
                -13.763656
              ],
              [
                143.922099,
                -14.548311
              ],
              [
                144.563714,
                -14.171176
              ],
              [
                144.894908,
                -14.594458
              ],
              [
                145.374724,
                -14.984976
              ],
              [
                145.271991,
                -15.428205
              ],
              [
                145.48526,
                -16.285672
              ],
              [
                145.637033,
                -16.784918
              ],
              [
                145.888904,
                -16.906926
              ],
              [
                146.160309,
                -17.761655
              ],
              [
                146.063674,
                -18.280073
              ],
              [
                146.387478,
                -18.958274
              ],
              [
                147.471082,
                -19.480723
              ],
              [
                148.177602,
                -19.955939
              ],
              [
                148.848414,
                -20.39121
              ],
              [
                148.717465,
                -20.633469
              ],
              [
                149.28942,
                -21.260511
              ],
              [
                149.678337,
                -22.342512
              ],
              [
                150.077382,
                -22.122784
              ],
              [
                150.482939,
                -22.556142
              ],
              [
                150.727265,
                -22.402405
              ],
              [
                150.899554,
                -23.462237
              ],
              [
                151.609175,
                -24.076256
              ],
              [
                152.07354,
                -24.457887
              ],
              [
                152.855197,
                -25.267501
              ],
              [
                153.136162,
                -26.071173
              ],
              [
                153.161949,
                -26.641319
              ],
              [
                153.092909,
                -27.2603
              ],
              [
                153.569469,
                -28.110067
              ],
              [
                153.512108,
                -28.995077
              ],
              [
                153.339095,
                -29.458202
              ],
              [
                153.069241,
                -30.35024
              ],
              [
                153.089602,
                -30.923642
              ],
              [
                152.891578,
                -31.640446
              ],
              [
                152.450002,
                -32.550003
              ],
              [
                151.709117,
                -33.041342
              ],
              [
                151.343972,
                -33.816023
              ],
              [
                151.010555,
                -34.31036
              ],
              [
                150.714139,
                -35.17346
              ],
              [
                150.32822,
                -35.671879
              ],
              [
                150.075212,
                -36.420206
              ],
              [
                149.946124,
                -37.109052
              ],
              [
                149.997284,
                -37.425261
              ],
              [
                149.423882,
                -37.772681
              ],
              [
                148.304622,
                -37.809061
              ],
              [
                147.381733,
                -38.219217
              ],
              [
                146.922123,
                -38.606532
              ],
              [
                146.317922,
                -39.035757
              ],
              [
                145.489652,
                -38.593768
              ],
              [
                144.876976,
                -38.417448
              ],
              [
                145.032212,
                -37.896188
              ],
              [
                144.485682,
                -38.085324
              ],
              [
                143.609974,
                -38.809465
              ],
              [
                142.745427,
                -38.538268
              ],
              [
                142.17833,
                -38.380034
              ],
              [
                141.606582,
                -38.308514
              ],
              [
                140.638579,
                -38.019333
              ],
              [
                139.992158,
                -37.402936
              ],
              [
                139.806588,
                -36.643603
              ],
              [
                139.574148,
                -36.138362
              ],
              [
                139.082808,
                -35.732754
              ],
              [
                138.120748,
                -35.612296
              ],
              [
                138.449462,
                -35.127261
              ],
              [
                138.207564,
                -34.384723
              ],
              [
                137.71917,
                -35.076825
              ],
              [
                136.829406,
                -35.260535
              ],
              [
                137.352371,
                -34.707339
              ],
              [
                137.503886,
                -34.130268
              ],
              [
                137.890116,
                -33.640479
              ],
              [
                137.810328,
                -32.900007
              ],
              [
                136.996837,
                -33.752771
              ],
              [
                136.372069,
                -34.094766
              ],
              [
                135.989043,
                -34.890118
              ],
              [
                135.208213,
                -34.47867
              ],
              [
                135.239218,
                -33.947953
              ],
              [
                134.613417,
                -33.222778
              ],
              [
                134.085904,
                -32.848072
              ],
              [
                134.273903,
                -32.617234
              ],
              [
                132.990777,
                -32.011224
              ],
              [
                132.288081,
                -31.982647
              ],
              [
                131.326331,
                -31.495803
              ],
              [
                129.535794,
                -31.590423
              ],
              [
                128.240938,
                -31.948489
              ],
              [
                127.102867,
                -32.282267
              ],
              [
                126.148714,
                -32.215966
              ],
              [
                125.088623,
                -32.728751
              ],
              [
                124.221648,
                -32.959487
              ],
              [
                124.028947,
                -33.483847
              ],
              [
                123.659667,
                -33.890179
              ],
              [
                122.811036,
                -33.914467
              ],
              [
                122.183064,
                -34.003402
              ],
              [
                121.299191,
                -33.821036
              ],
              [
                120.580268,
                -33.930177
              ],
              [
                119.893695,
                -33.976065
              ],
              [
                119.298899,
                -34.509366
              ],
              [
                119.007341,
                -34.464149
              ],
              [
                118.505718,
                -34.746819
              ],
              [
                118.024972,
                -35.064733
              ],
              [
                117.295507,
                -35.025459
              ],
              [
                116.625109,
                -35.025097
              ],
              [
                115.564347,
                -34.386428
              ],
              [
                115.026809,
                -34.196517
              ],
              [
                115.048616,
                -33.623425
              ],
              [
                115.545123,
                -33.487258
              ],
              [
                115.714674,
                -33.259572
              ],
              [
                115.679379,
                -32.900369
              ],
              [
                115.801645,
                -32.205062
              ],
              [
                115.689611,
                -31.612437
              ],
              [
                115.160909,
                -30.601594
              ],
              [
                114.997043,
                -30.030725
              ],
              [
                115.040038,
                -29.461095
              ],
              [
                114.641974,
                -28.810231
              ],
              [
                114.616498,
                -28.516399
              ],
              [
                114.173579,
                -28.118077
              ],
              [
                114.048884,
                -27.334765
              ],
              [
                113.477498,
                -26.543134
              ],
              [
                113.338953,
                -26.116545
              ],
              [
                113.778358,
                -26.549025
              ],
              [
                113.440962,
                -25.621278
              ],
              [
                113.936901,
                -25.911235
              ],
              [
                114.232852,
                -26.298446
              ],
              [
                114.216161,
                -25.786281
              ],
              [
                113.721255,
                -24.998939
              ],
              [
                113.625344,
                -24.683971
              ],
              [
                113.393523,
                -24.384764
              ],
              [
                113.502044,
                -23.80635
              ],
              [
                113.706993,
                -23.560215
              ],
              [
                113.843418,
                -23.059987
              ],
              [
                113.736552,
                -22.475475
              ],
              [
                114.149756,
                -21.755881
              ],
              [
                114.225307,
                -22.517488
              ],
              [
                114.647762,
                -21.82952
              ],
              [
                115.460167,
                -21.495173
              ],
              [
                115.947373,
                -21.068688
              ],
              [
                116.711615,
                -20.701682
              ],
              [
                117.166316,
                -20.623599
              ],
              [
                117.441545,
                -20.746899
              ],
              [
                118.229559,
                -20.374208
              ],
              [
                118.836085,
                -20.263311
              ],
              [
                118.987807,
                -20.044203
              ],
              [
                119.252494,
                -19.952942
              ],
              [
                119.805225,
                -19.976506
              ],
              [
                120.85622,
                -19.683708
              ],
              [
                121.399856,
                -19.239756
              ],
              [
                121.655138,
                -18.705318
              ],
              [
                122.241665,
                -18.197649
              ],
              [
                122.286624,
                -17.798603
              ],
              [
                122.312772,
                -17.254967
              ],
              [
                123.012574,
                -16.4052
              ],
              [
                123.433789,
                -17.268558
              ],
              [
                123.859345,
                -17.069035
              ],
              [
                123.503242,
                -16.596506
              ],
              [
                123.817073,
                -16.111316
              ],
              [
                124.258287,
                -16.327944
              ],
              [
                124.379726,
                -15.56706
              ],
              [
                124.926153,
                -15.0751
              ],
              [
                125.167275,
                -14.680396
              ],
              [
                125.670087,
                -14.51007
              ],
              [
                125.685796,
                -14.230656
              ],
              [
                126.125149,
                -14.347341
              ],
              [
                126.142823,
                -14.095987
              ],
              [
                126.582589,
                -13.952791
              ],
              [
                127.065867,
                -13.817968
              ],
              [
                127.804633,
                -14.276906
              ],
              [
                128.35969,
                -14.86917
              ],
              [
                128.985543,
                -14.875991
              ],
              [
                129.621473,
                -14.969784
              ],
              [
                129.4096,
                -14.42067
              ],
              [
                129.888641,
                -13.618703
              ],
              [
                130.339466,
                -13.357376
              ],
              [
                130.183506,
                -13.10752
              ],
              [
                130.617795,
                -12.536392
              ],
              [
                131.223495,
                -12.183649
              ],
              [
                131.735091,
                -12.302453
              ],
              [
                132.575298,
                -12.114041
              ],
              [
                132.557212,
                -11.603012
              ],
              [
                131.824698,
                -11.273782
              ],
              [
                132.357224,
                -11.128519
              ],
              [
                133.019561,
                -11.376411
              ],
              [
                133.550846,
                -11.786515
              ],
              [
                134.393068,
                -12.042365
              ],
              [
                134.678632,
                -11.941183
              ],
              [
                135.298491,
                -12.248606
              ],
              [
                135.882693,
                -11.962267
              ],
              [
                136.258381,
                -12.049342
              ],
              [
                136.492475,
                -11.857209
              ],
              [
                136.95162,
                -12.351959
              ],
              [
                136.685125,
                -12.887223
              ],
              [
                136.305407,
                -13.29123
              ],
              [
                135.961758,
                -13.324509
              ],
              [
                136.077617,
                -13.724278
              ],
              [
                135.783836,
                -14.223989
              ],
              [
                135.428664,
                -14.715432
              ],
              [
                135.500184,
                -14.997741
              ],
              [
                136.295175,
                -15.550265
              ],
              [
                137.06536,
                -15.870762
              ],
              [
                137.580471,
                -16.215082
              ],
              [
                138.303217,
                -16.807604
              ],
              [
                138.585164,
                -16.806622
              ],
              [
                139.108543,
                -17.062679
              ],
              [
                139.260575,
                -17.371601
              ],
              [
                140.215245,
                -17.710805
              ],
              [
                140.875463,
                -17.369069
              ],
              [
                141.07111,
                -16.832047
              ],
              [
                141.274095,
                -16.38887
              ],
              [
                141.398222,
                -15.840532
              ],
              [
                141.702183,
                -15.044921
              ],
              [
                141.56338,
                -14.561333
              ],
              [
                141.63552,
                -14.270395
              ],
              [
                141.519869,
                -13.698078
              ],
              [
                141.65092,
                -12.944688
              ],
              [
                141.842691,
                -12.741548
              ],
              [
                141.68699,
                -12.407614
              ],
              [
                141.928629,
                -11.877466
              ],
              [
                142.118488,
                -11.328042
              ],
              [
                142.143706,
                -11.042737
              ],
              [
                142.51526,
                -10.668186
              ],
              [
                142.79731,
                -11.157355
              ],
              [
                142.866763,
                -11.784707
              ],
              [
                143.115947,
                -11.90563
              ],
              [
                143.158632,
                -12.325656
              ],
              [
                143.522124,
                -12.834358
              ],
              [
                143.597158,
                -13.400422
              ],
              [
                143.561811,
                -13.763656
              ]
            ]
          ]
        ]
      },
      id: "AUS"
    },
    {
      type: "Feature",
      properties: {
        name: "Austria"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              16.979667,
              48.123497
            ],
            [
              16.903754,
              47.714866
            ],
            [
              16.340584,
              47.712902
            ],
            [
              16.534268,
              47.496171
            ],
            [
              16.202298,
              46.852386
            ],
            [
              16.011664,
              46.683611
            ],
            [
              15.137092,
              46.658703
            ],
            [
              14.632472,
              46.431817
            ],
            [
              13.806475,
              46.509306
            ],
            [
              12.376485,
              46.767559
            ],
            [
              12.153088,
              47.115393
            ],
            [
              11.164828,
              46.941579
            ],
            [
              11.048556,
              46.751359
            ],
            [
              10.442701,
              46.893546
            ],
            [
              9.932448,
              46.920728
            ],
            [
              9.47997,
              47.10281
            ],
            [
              9.632932,
              47.347601
            ],
            [
              9.594226,
              47.525058
            ],
            [
              9.896068,
              47.580197
            ],
            [
              10.402084,
              47.302488
            ],
            [
              10.544504,
              47.566399
            ],
            [
              11.426414,
              47.523766
            ],
            [
              12.141357,
              47.703083
            ],
            [
              12.62076,
              47.672388
            ],
            [
              12.932627,
              47.467646
            ],
            [
              13.025851,
              47.637584
            ],
            [
              12.884103,
              48.289146
            ],
            [
              13.243357,
              48.416115
            ],
            [
              13.595946,
              48.877172
            ],
            [
              14.338898,
              48.555305
            ],
            [
              14.901447,
              48.964402
            ],
            [
              15.253416,
              49.039074
            ],
            [
              16.029647,
              48.733899
            ],
            [
              16.499283,
              48.785808
            ],
            [
              16.960288,
              48.596982
            ],
            [
              16.879983,
              48.470013
            ],
            [
              16.979667,
              48.123497
            ]
          ]
        ]
      },
      id: "AUT"
    },
    {
      type: "Feature",
      properties: {
        name: "Azerbaijan"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                45.001987,
                39.740004
              ],
              [
                45.298145,
                39.471751
              ],
              [
                45.739978,
                39.473999
              ],
              [
                45.735379,
                39.319719
              ],
              [
                46.143623,
                38.741201
              ],
              [
                45.457722,
                38.874139
              ],
              [
                44.952688,
                39.335765
              ],
              [
                44.79399,
                39.713003
              ],
              [
                45.001987,
                39.740004
              ]
            ]
          ],
          [
            [
              [
                47.373315,
                41.219732
              ],
              [
                47.815666,
                41.151416
              ],
              [
                47.987283,
                41.405819
              ],
              [
                48.584353,
                41.80887
              ],
              [
                49.110264,
                41.282287
              ],
              [
                49.618915,
                40.572924
              ],
              [
                50.08483,
                40.526157
              ],
              [
                50.392821,
                40.256561
              ],
              [
                49.569202,
                40.176101
              ],
              [
                49.395259,
                39.399482
              ],
              [
                49.223228,
                39.049219
              ],
              [
                48.856532,
                38.815486
              ],
              [
                48.883249,
                38.320245
              ],
              [
                48.634375,
                38.270378
              ],
              [
                48.010744,
                38.794015
              ],
              [
                48.355529,
                39.288765
              ],
              [
                48.060095,
                39.582235
              ],
              [
                47.685079,
                39.508364
              ],
              [
                46.50572,
                38.770605
              ],
              [
                46.483499,
                39.464155
              ],
              [
                46.034534,
                39.628021
              ],
              [
                45.610012,
                39.899994
              ],
              [
                45.891907,
                40.218476
              ],
              [
                45.359175,
                40.561504
              ],
              [
                45.560351,
                40.81229
              ],
              [
                45.179496,
                40.985354
              ],
              [
                44.97248,
                41.248129
              ],
              [
                45.217426,
                41.411452
              ],
              [
                45.962601,
                41.123873
              ],
              [
                46.501637,
                41.064445
              ],
              [
                46.637908,
                41.181673
              ],
              [
                46.145432,
                41.722802
              ],
              [
                46.404951,
                41.860675
              ],
              [
                46.686071,
                41.827137
              ],
              [
                47.373315,
                41.219732
              ]
            ]
          ]
        ]
      },
      id: "AZE"
    },
    {
      type: "Feature",
      properties: {
        name: "Burundi"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              29.339998,
              -4.499983
            ],
            [
              29.276384,
              -3.293907
            ],
            [
              29.024926,
              -2.839258
            ],
            [
              29.632176,
              -2.917858
            ],
            [
              29.938359,
              -2.348487
            ],
            [
              30.469696,
              -2.413858
            ],
            [
              30.527677,
              -2.807632
            ],
            [
              30.743013,
              -3.034285
            ],
            [
              30.752263,
              -3.35933
            ],
            [
              30.50556,
              -3.568567
            ],
            [
              30.116333,
              -4.090138
            ],
            [
              29.753512,
              -4.452389
            ],
            [
              29.339998,
              -4.499983
            ]
          ]
        ]
      },
      id: "BDI"
    },
    {
      type: "Feature",
      properties: {
        name: "Belgium"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              3.314971,
              51.345781
            ],
            [
              4.047071,
              51.267259
            ],
            [
              4.973991,
              51.475024
            ],
            [
              5.606976,
              51.037298
            ],
            [
              6.156658,
              50.803721
            ],
            [
              6.043073,
              50.128052
            ],
            [
              5.782417,
              50.090328
            ],
            [
              5.674052,
              49.529484
            ],
            [
              4.799222,
              49.985373
            ],
            [
              4.286023,
              49.907497
            ],
            [
              3.588184,
              50.378992
            ],
            [
              3.123252,
              50.780363
            ],
            [
              2.658422,
              50.796848
            ],
            [
              2.513573,
              51.148506
            ],
            [
              3.314971,
              51.345781
            ]
          ]
        ]
      },
      id: "BEL"
    },
    {
      type: "Feature",
      properties: {
        name: "Benin"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              2.691702,
              6.258817
            ],
            [
              1.865241,
              6.142158
            ],
            [
              1.618951,
              6.832038
            ],
            [
              1.664478,
              9.12859
            ],
            [
              1.463043,
              9.334624
            ],
            [
              1.425061,
              9.825395
            ],
            [
              1.077795,
              10.175607
            ],
            [
              0.772336,
              10.470808
            ],
            [
              0.899563,
              10.997339
            ],
            [
              1.24347,
              11.110511
            ],
            [
              1.447178,
              11.547719
            ],
            [
              1.935986,
              11.64115
            ],
            [
              2.154474,
              11.94015
            ],
            [
              2.490164,
              12.233052
            ],
            [
              2.848643,
              12.235636
            ],
            [
              3.61118,
              11.660167
            ],
            [
              3.572216,
              11.327939
            ],
            [
              3.797112,
              10.734746
            ],
            [
              3.60007,
              10.332186
            ],
            [
              3.705438,
              10.06321
            ],
            [
              3.220352,
              9.444153
            ],
            [
              2.912308,
              9.137608
            ],
            [
              2.723793,
              8.506845
            ],
            [
              2.749063,
              7.870734
            ],
            [
              2.691702,
              6.258817
            ]
          ]
        ]
      },
      id: "BEN"
    },
    {
      type: "Feature",
      properties: {
        name: "Burkina Faso"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -2.827496,
              9.642461
            ],
            [
              -3.511899,
              9.900326
            ],
            [
              -3.980449,
              9.862344
            ],
            [
              -4.330247,
              9.610835
            ],
            [
              -4.779884,
              9.821985
            ],
            [
              -4.954653,
              10.152714
            ],
            [
              -5.404342,
              10.370737
            ],
            [
              -5.470565,
              10.95127
            ],
            [
              -5.197843,
              11.375146
            ],
            [
              -5.220942,
              11.713859
            ],
            [
              -4.427166,
              12.542646
            ],
            [
              -4.280405,
              13.228444
            ],
            [
              -4.006391,
              13.472485
            ],
            [
              -3.522803,
              13.337662
            ],
            [
              -3.103707,
              13.541267
            ],
            [
              -2.967694,
              13.79815
            ],
            [
              -2.191825,
              14.246418
            ],
            [
              -2.001035,
              14.559008
            ],
            [
              -1.066363,
              14.973815
            ],
            [
              -0.515854,
              15.116158
            ],
            [
              -0.266257,
              14.924309
            ],
            [
              0.374892,
              14.928908
            ],
            [
              0.295646,
              14.444235
            ],
            [
              0.429928,
              13.988733
            ],
            [
              0.993046,
              13.33575
            ],
            [
              1.024103,
              12.851826
            ],
            [
              2.177108,
              12.625018
            ],
            [
              2.154474,
              11.94015
            ],
            [
              1.935986,
              11.64115
            ],
            [
              1.447178,
              11.547719
            ],
            [
              1.24347,
              11.110511
            ],
            [
              0.899563,
              10.997339
            ],
            [
              0.023803,
              11.018682
            ],
            [
              -0.438702,
              11.098341
            ],
            [
              -0.761576,
              10.93693
            ],
            [
              -1.203358,
              11.009819
            ],
            [
              -2.940409,
              10.96269
            ],
            [
              -2.963896,
              10.395335
            ],
            [
              -2.827496,
              9.642461
            ]
          ]
        ]
      },
      id: "BFA"
    },
    {
      type: "Feature",
      properties: {
        name: "Bangladesh"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              92.672721,
              22.041239
            ],
            [
              92.652257,
              21.324048
            ],
            [
              92.303234,
              21.475485
            ],
            [
              92.368554,
              20.670883
            ],
            [
              92.082886,
              21.192195
            ],
            [
              92.025215,
              21.70157
            ],
            [
              91.834891,
              22.182936
            ],
            [
              91.417087,
              22.765019
            ],
            [
              90.496006,
              22.805017
            ],
            [
              90.586957,
              22.392794
            ],
            [
              90.272971,
              21.836368
            ],
            [
              89.847467,
              22.039146
            ],
            [
              89.70205,
              21.857116
            ],
            [
              89.418863,
              21.966179
            ],
            [
              89.031961,
              22.055708
            ],
            [
              88.876312,
              22.879146
            ],
            [
              88.52977,
              23.631142
            ],
            [
              88.69994,
              24.233715
            ],
            [
              88.084422,
              24.501657
            ],
            [
              88.306373,
              24.866079
            ],
            [
              88.931554,
              25.238692
            ],
            [
              88.209789,
              25.768066
            ],
            [
              88.563049,
              26.446526
            ],
            [
              89.355094,
              26.014407
            ],
            [
              89.832481,
              25.965082
            ],
            [
              89.920693,
              25.26975
            ],
            [
              90.872211,
              25.132601
            ],
            [
              91.799596,
              25.147432
            ],
            [
              92.376202,
              24.976693
            ],
            [
              91.915093,
              24.130414
            ],
            [
              91.46773,
              24.072639
            ],
            [
              91.158963,
              23.503527
            ],
            [
              91.706475,
              22.985264
            ],
            [
              91.869928,
              23.624346
            ],
            [
              92.146035,
              23.627499
            ],
            [
              92.672721,
              22.041239
            ]
          ]
        ]
      },
      id: "BGD"
    },
    {
      type: "Feature",
      properties: {
        name: "Bulgaria"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              22.65715,
              44.234923
            ],
            [
              22.944832,
              43.823785
            ],
            [
              23.332302,
              43.897011
            ],
            [
              24.100679,
              43.741051
            ],
            [
              25.569272,
              43.688445
            ],
            [
              26.065159,
              43.943494
            ],
            [
              27.2424,
              44.175986
            ],
            [
              27.970107,
              43.812468
            ],
            [
              28.558081,
              43.707462
            ],
            [
              28.039095,
              43.293172
            ],
            [
              27.673898,
              42.577892
            ],
            [
              27.99672,
              42.007359
            ],
            [
              27.135739,
              42.141485
            ],
            [
              26.117042,
              41.826905
            ],
            [
              26.106138,
              41.328899
            ],
            [
              25.197201,
              41.234486
            ],
            [
              24.492645,
              41.583896
            ],
            [
              23.692074,
              41.309081
            ],
            [
              22.952377,
              41.337994
            ],
            [
              22.881374,
              41.999297
            ],
            [
              22.380526,
              42.32026
            ],
            [
              22.545012,
              42.461362
            ],
            [
              22.436595,
              42.580321
            ],
            [
              22.604801,
              42.898519
            ],
            [
              22.986019,
              43.211161
            ],
            [
              22.500157,
              43.642814
            ],
            [
              22.410446,
              44.008063
            ],
            [
              22.65715,
              44.234923
            ]
          ]
        ]
      },
      id: "BGR"
    },
    {
      type: "Feature",
      properties: {
        name: "The Bahamas"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                -77.53466,
                23.75975
              ],
              [
                -77.78,
                23.71
              ],
              [
                -78.03405,
                24.28615
              ],
              [
                -78.40848,
                24.57564
              ],
              [
                -78.19087,
                25.2103
              ],
              [
                -77.89,
                25.17
              ],
              [
                -77.54,
                24.34
              ],
              [
                -77.53466,
                23.75975
              ]
            ]
          ],
          [
            [
              [
                -77.82,
                26.58
              ],
              [
                -78.91,
                26.42
              ],
              [
                -78.98,
                26.79
              ],
              [
                -78.51,
                26.87
              ],
              [
                -77.85,
                26.84
              ],
              [
                -77.82,
                26.58
              ]
            ]
          ],
          [
            [
              [
                -77,
                26.59
              ],
              [
                -77.17255,
                25.87918
              ],
              [
                -77.35641,
                26.00735
              ],
              [
                -77.34,
                26.53
              ],
              [
                -77.78802,
                26.92516
              ],
              [
                -77.79,
                27.04
              ],
              [
                -77,
                26.59
              ]
            ]
          ]
        ]
      },
      id: "BHS"
    },
    {
      type: "Feature",
      properties: {
        name: "Bosnia and Herzegovina"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              19.005486,
              44.860234
            ],
            [
              19.36803,
              44.863
            ],
            [
              19.11761,
              44.42307
            ],
            [
              19.59976,
              44.03847
            ],
            [
              19.454,
              43.5681
            ],
            [
              19.21852,
              43.52384
            ],
            [
              19.03165,
              43.43253
            ],
            [
              18.70648,
              43.20011
            ],
            [
              18.56,
              42.65
            ],
            [
              17.674922,
              43.028563
            ],
            [
              17.297373,
              43.446341
            ],
            [
              16.916156,
              43.667722
            ],
            [
              16.456443,
              44.04124
            ],
            [
              16.23966,
              44.351143
            ],
            [
              15.750026,
              44.818712
            ],
            [
              15.959367,
              45.233777
            ],
            [
              16.318157,
              45.004127
            ],
            [
              16.534939,
              45.211608
            ],
            [
              17.002146,
              45.233777
            ],
            [
              17.861783,
              45.06774
            ],
            [
              18.553214,
              45.08159
            ],
            [
              19.005486,
              44.860234
            ]
          ]
        ]
      },
      id: "BIH"
    },
    {
      type: "Feature",
      properties: {
        name: "Belarus"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              23.484128,
              53.912498
            ],
            [
              24.450684,
              53.905702
            ],
            [
              25.536354,
              54.282423
            ],
            [
              25.768433,
              54.846963
            ],
            [
              26.588279,
              55.167176
            ],
            [
              26.494331,
              55.615107
            ],
            [
              27.10246,
              55.783314
            ],
            [
              28.176709,
              56.16913
            ],
            [
              29.229513,
              55.918344
            ],
            [
              29.371572,
              55.670091
            ],
            [
              29.896294,
              55.789463
            ],
            [
              30.873909,
              55.550976
            ],
            [
              30.971836,
              55.081548
            ],
            [
              30.757534,
              54.811771
            ],
            [
              31.384472,
              54.157056
            ],
            [
              31.791424,
              53.974639
            ],
            [
              31.731273,
              53.794029
            ],
            [
              32.405599,
              53.618045
            ],
            [
              32.693643,
              53.351421
            ],
            [
              32.304519,
              53.132726
            ],
            [
              31.497644,
              53.167427
            ],
            [
              31.305201,
              53.073996
            ],
            [
              31.540018,
              52.742052
            ],
            [
              31.785998,
              52.101678
            ],
            [
              30.927549,
              52.042353
            ],
            [
              30.619454,
              51.822806
            ],
            [
              30.555117,
              51.319503
            ],
            [
              30.157364,
              51.416138
            ],
            [
              29.254938,
              51.368234
            ],
            [
              28.992835,
              51.602044
            ],
            [
              28.617613,
              51.427714
            ],
            [
              28.241615,
              51.572227
            ],
            [
              27.454066,
              51.592303
            ],
            [
              26.337959,
              51.832289
            ],
            [
              25.327788,
              51.910656
            ],
            [
              24.553106,
              51.888461
            ],
            [
              24.005078,
              51.617444
            ],
            [
              23.527071,
              51.578454
            ],
            [
              23.508002,
              52.023647
            ],
            [
              23.199494,
              52.486977
            ],
            [
              23.799199,
              52.691099
            ],
            [
              23.804935,
              53.089731
            ],
            [
              23.527536,
              53.470122
            ],
            [
              23.484128,
              53.912498
            ]
          ]
        ]
      },
      id: "BLR"
    },
    {
      type: "Feature",
      properties: {
        name: "Belize"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -89.14308,
              17.808319
            ],
            [
              -89.150909,
              17.955468
            ],
            [
              -89.029857,
              18.001511
            ],
            [
              -88.848344,
              17.883198
            ],
            [
              -88.490123,
              18.486831
            ],
            [
              -88.300031,
              18.499982
            ],
            [
              -88.296336,
              18.353273
            ],
            [
              -88.106813,
              18.348674
            ],
            [
              -88.123479,
              18.076675
            ],
            [
              -88.285355,
              17.644143
            ],
            [
              -88.197867,
              17.489475
            ],
            [
              -88.302641,
              17.131694
            ],
            [
              -88.239518,
              17.036066
            ],
            [
              -88.355428,
              16.530774
            ],
            [
              -88.551825,
              16.265467
            ],
            [
              -88.732434,
              16.233635
            ],
            [
              -88.930613,
              15.887273
            ],
            [
              -89.229122,
              15.886938
            ],
            [
              -89.150806,
              17.015577
            ],
            [
              -89.14308,
              17.808319
            ]
          ]
        ]
      },
      id: "BLZ"
    },
    {
      type: "Feature",
      properties: {
        name: "Bolivia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -62.846468,
              -22.034985
            ],
            [
              -63.986838,
              -21.993644
            ],
            [
              -64.377021,
              -22.798091
            ],
            [
              -64.964892,
              -22.075862
            ],
            [
              -66.273339,
              -21.83231
            ],
            [
              -67.106674,
              -22.735925
            ],
            [
              -67.82818,
              -22.872919
            ],
            [
              -68.219913,
              -21.494347
            ],
            [
              -68.757167,
              -20.372658
            ],
            [
              -68.442225,
              -19.405068
            ],
            [
              -68.966818,
              -18.981683
            ],
            [
              -69.100247,
              -18.260125
            ],
            [
              -69.590424,
              -17.580012
            ],
            [
              -68.959635,
              -16.500698
            ],
            [
              -69.389764,
              -15.660129
            ],
            [
              -69.160347,
              -15.323974
            ],
            [
              -69.339535,
              -14.953195
            ],
            [
              -68.948887,
              -14.453639
            ],
            [
              -68.929224,
              -13.602684
            ],
            [
              -68.88008,
              -12.899729
            ],
            [
              -68.66508,
              -12.5613
            ],
            [
              -69.529678,
              -10.951734
            ],
            [
              -68.786158,
              -11.03638
            ],
            [
              -68.271254,
              -11.014521
            ],
            [
              -68.048192,
              -10.712059
            ],
            [
              -67.173801,
              -10.306812
            ],
            [
              -66.646908,
              -9.931331
            ],
            [
              -65.338435,
              -9.761988
            ],
            [
              -65.444837,
              -10.511451
            ],
            [
              -65.321899,
              -10.895872
            ],
            [
              -65.402281,
              -11.56627
            ],
            [
              -64.316353,
              -12.461978
            ],
            [
              -63.196499,
              -12.627033
            ],
            [
              -62.80306,
              -13.000653
            ],
            [
              -62.127081,
              -13.198781
            ],
            [
              -61.713204,
              -13.489202
            ],
            [
              -61.084121,
              -13.479384
            ],
            [
              -60.503304,
              -13.775955
            ],
            [
              -60.459198,
              -14.354007
            ],
            [
              -60.264326,
              -14.645979
            ],
            [
              -60.251149,
              -15.077219
            ],
            [
              -60.542966,
              -15.09391
            ],
            [
              -60.15839,
              -16.258284
            ],
            [
              -58.24122,
              -16.299573
            ],
            [
              -58.388058,
              -16.877109
            ],
            [
              -58.280804,
              -17.27171
            ],
            [
              -57.734558,
              -17.552468
            ],
            [
              -57.498371,
              -18.174188
            ],
            [
              -57.676009,
              -18.96184
            ],
            [
              -57.949997,
              -19.400004
            ],
            [
              -57.853802,
              -19.969995
            ],
            [
              -58.166392,
              -20.176701
            ],
            [
              -58.183471,
              -19.868399
            ],
            [
              -59.115042,
              -19.356906
            ],
            [
              -60.043565,
              -19.342747
            ],
            [
              -61.786326,
              -19.633737
            ],
            [
              -62.265961,
              -20.513735
            ],
            [
              -62.291179,
              -21.051635
            ],
            [
              -62.685057,
              -22.249029
            ],
            [
              -62.846468,
              -22.034985
            ]
          ]
        ]
      },
      id: "BOL"
    },
    {
      type: "Feature",
      properties: {
        name: "Brazil"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -57.625133,
              -30.216295
            ],
            [
              -56.2909,
              -28.852761
            ],
            [
              -55.162286,
              -27.881915
            ],
            [
              -54.490725,
              -27.474757
            ],
            [
              -53.648735,
              -26.923473
            ],
            [
              -53.628349,
              -26.124865
            ],
            [
              -54.13005,
              -25.547639
            ],
            [
              -54.625291,
              -25.739255
            ],
            [
              -54.428946,
              -25.162185
            ],
            [
              -54.293476,
              -24.5708
            ],
            [
              -54.29296,
              -24.021014
            ],
            [
              -54.652834,
              -23.839578
            ],
            [
              -55.027902,
              -24.001274
            ],
            [
              -55.400747,
              -23.956935
            ],
            [
              -55.517639,
              -23.571998
            ],
            [
              -55.610683,
              -22.655619
            ],
            [
              -55.797958,
              -22.35693
            ],
            [
              -56.473317,
              -22.0863
            ],
            [
              -56.88151,
              -22.282154
            ],
            [
              -57.937156,
              -22.090176
            ],
            [
              -57.870674,
              -20.732688
            ],
            [
              -58.166392,
              -20.176701
            ],
            [
              -57.853802,
              -19.969995
            ],
            [
              -57.949997,
              -19.400004
            ],
            [
              -57.676009,
              -18.96184
            ],
            [
              -57.498371,
              -18.174188
            ],
            [
              -57.734558,
              -17.552468
            ],
            [
              -58.280804,
              -17.27171
            ],
            [
              -58.388058,
              -16.877109
            ],
            [
              -58.24122,
              -16.299573
            ],
            [
              -60.15839,
              -16.258284
            ],
            [
              -60.542966,
              -15.09391
            ],
            [
              -60.251149,
              -15.077219
            ],
            [
              -60.264326,
              -14.645979
            ],
            [
              -60.459198,
              -14.354007
            ],
            [
              -60.503304,
              -13.775955
            ],
            [
              -61.084121,
              -13.479384
            ],
            [
              -61.713204,
              -13.489202
            ],
            [
              -62.127081,
              -13.198781
            ],
            [
              -62.80306,
              -13.000653
            ],
            [
              -63.196499,
              -12.627033
            ],
            [
              -64.316353,
              -12.461978
            ],
            [
              -65.402281,
              -11.56627
            ],
            [
              -65.321899,
              -10.895872
            ],
            [
              -65.444837,
              -10.511451
            ],
            [
              -65.338435,
              -9.761988
            ],
            [
              -66.646908,
              -9.931331
            ],
            [
              -67.173801,
              -10.306812
            ],
            [
              -68.048192,
              -10.712059
            ],
            [
              -68.271254,
              -11.014521
            ],
            [
              -68.786158,
              -11.03638
            ],
            [
              -69.529678,
              -10.951734
            ],
            [
              -70.093752,
              -11.123972
            ],
            [
              -70.548686,
              -11.009147
            ],
            [
              -70.481894,
              -9.490118
            ],
            [
              -71.302412,
              -10.079436
            ],
            [
              -72.184891,
              -10.053598
            ],
            [
              -72.563033,
              -9.520194
            ],
            [
              -73.226713,
              -9.462213
            ],
            [
              -73.015383,
              -9.032833
            ],
            [
              -73.571059,
              -8.424447
            ],
            [
              -73.987235,
              -7.52383
            ],
            [
              -73.723401,
              -7.340999
            ],
            [
              -73.724487,
              -6.918595
            ],
            [
              -73.120027,
              -6.629931
            ],
            [
              -73.219711,
              -6.089189
            ],
            [
              -72.964507,
              -5.741251
            ],
            [
              -72.891928,
              -5.274561
            ],
            [
              -71.748406,
              -4.593983
            ],
            [
              -70.928843,
              -4.401591
            ],
            [
              -70.794769,
              -4.251265
            ],
            [
              -69.893635,
              -4.298187
            ],
            [
              -69.444102,
              -1.556287
            ],
            [
              -69.420486,
              -1.122619
            ],
            [
              -69.577065,
              -0.549992
            ],
            [
              -70.020656,
              -0.185156
            ],
            [
              -70.015566,
              0.541414
            ],
            [
              -69.452396,
              0.706159
            ],
            [
              -69.252434,
              0.602651
            ],
            [
              -69.218638,
              0.985677
            ],
            [
              -69.804597,
              1.089081
            ],
            [
              -69.816973,
              1.714805
            ],
            [
              -67.868565,
              1.692455
            ],
            [
              -67.53781,
              2.037163
            ],
            [
              -67.259998,
              1.719999
            ],
            [
              -67.065048,
              1.130112
            ],
            [
              -66.876326,
              1.253361
            ],
            [
              -66.325765,
              0.724452
            ],
            [
              -65.548267,
              0.789254
            ],
            [
              -65.354713,
              1.095282
            ],
            [
              -64.611012,
              1.328731
            ],
            [
              -64.199306,
              1.492855
            ],
            [
              -64.083085,
              1.916369
            ],
            [
              -63.368788,
              2.2009
            ],
            [
              -63.422867,
              2.411068
            ],
            [
              -64.269999,
              2.497006
            ],
            [
              -64.408828,
              3.126786
            ],
            [
              -64.368494,
              3.79721
            ],
            [
              -64.816064,
              4.056445
            ],
            [
              -64.628659,
              4.148481
            ],
            [
              -63.888343,
              4.02053
            ],
            [
              -63.093198,
              3.770571
            ],
            [
              -62.804533,
              4.006965
            ],
            [
              -62.08543,
              4.162124
            ],
            [
              -60.966893,
              4.536468
            ],
            [
              -60.601179,
              4.918098
            ],
            [
              -60.733574,
              5.200277
            ],
            [
              -60.213683,
              5.244486
            ],
            [
              -59.980959,
              5.014061
            ],
            [
              -60.111002,
              4.574967
            ],
            [
              -59.767406,
              4.423503
            ],
            [
              -59.53804,
              3.958803
            ],
            [
              -59.815413,
              3.606499
            ],
            [
              -59.974525,
              2.755233
            ],
            [
              -59.718546,
              2.24963
            ],
            [
              -59.646044,
              1.786894
            ],
            [
              -59.030862,
              1.317698
            ],
            [
              -58.540013,
              1.268088
            ],
            [
              -58.429477,
              1.463942
            ],
            [
              -58.11345,
              1.507195
            ],
            [
              -57.660971,
              1.682585
            ],
            [
              -57.335823,
              1.948538
            ],
            [
              -56.782704,
              1.863711
            ],
            [
              -56.539386,
              1.899523
            ],
            [
              -55.995698,
              1.817667
            ],
            [
              -55.9056,
              2.021996
            ],
            [
              -56.073342,
              2.220795
            ],
            [
              -55.973322,
              2.510364
            ],
            [
              -55.569755,
              2.421506
            ],
            [
              -55.097587,
              2.523748
            ],
            [
              -54.524754,
              2.311849
            ],
            [
              -54.088063,
              2.105557
            ],
            [
              -53.778521,
              2.376703
            ],
            [
              -53.554839,
              2.334897
            ],
            [
              -53.418465,
              2.053389
            ],
            [
              -52.939657,
              2.124858
            ],
            [
              -52.556425,
              2.504705
            ],
            [
              -52.249338,
              3.241094
            ],
            [
              -51.657797,
              4.156232
            ],
            [
              -51.317146,
              4.203491
            ],
            [
              -51.069771,
              3.650398
            ],
            [
              -50.508875,
              1.901564
            ],
            [
              -49.974076,
              1.736483
            ],
            [
              -49.947101,
              1.04619
            ],
            [
              -50.699251,
              0.222984
            ],
            [
              -50.388211,
              -0.078445
            ],
            [
              -48.620567,
              -0.235489
            ],
            [
              -48.584497,
              -1.237805
            ],
            [
              -47.824956,
              -0.581618
            ],
            [
              -46.566584,
              -0.941028
            ],
            [
              -44.905703,
              -1.55174
            ],
            [
              -44.417619,
              -2.13775
            ],
            [
              -44.581589,
              -2.691308
            ],
            [
              -43.418791,
              -2.38311
            ],
            [
              -41.472657,
              -2.912018
            ],
            [
              -39.978665,
              -2.873054
            ],
            [
              -38.500383,
              -3.700652
            ],
            [
              -37.223252,
              -4.820946
            ],
            [
              -36.452937,
              -5.109404
            ],
            [
              -35.597796,
              -5.149504
            ],
            [
              -35.235389,
              -5.464937
            ],
            [
              -34.89603,
              -6.738193
            ],
            [
              -34.729993,
              -7.343221
            ],
            [
              -35.128212,
              -8.996401
            ],
            [
              -35.636967,
              -9.649282
            ],
            [
              -37.046519,
              -11.040721
            ],
            [
              -37.683612,
              -12.171195
            ],
            [
              -38.423877,
              -13.038119
            ],
            [
              -38.673887,
              -13.057652
            ],
            [
              -38.953276,
              -13.79337
            ],
            [
              -38.882298,
              -15.667054
            ],
            [
              -39.161092,
              -17.208407
            ],
            [
              -39.267339,
              -17.867746
            ],
            [
              -39.583521,
              -18.262296
            ],
            [
              -39.760823,
              -19.599113
            ],
            [
              -40.774741,
              -20.904512
            ],
            [
              -40.944756,
              -21.937317
            ],
            [
              -41.754164,
              -22.370676
            ],
            [
              -41.988284,
              -22.97007
            ],
            [
              -43.074704,
              -22.967693
            ],
            [
              -44.647812,
              -23.351959
            ],
            [
              -45.352136,
              -23.796842
            ],
            [
              -46.472093,
              -24.088969
            ],
            [
              -47.648972,
              -24.885199
            ],
            [
              -48.495458,
              -25.877025
            ],
            [
              -48.641005,
              -26.623698
            ],
            [
              -48.474736,
              -27.175912
            ],
            [
              -48.66152,
              -28.186135
            ],
            [
              -48.888457,
              -28.674115
            ],
            [
              -49.587329,
              -29.224469
            ],
            [
              -50.696874,
              -30.984465
            ],
            [
              -51.576226,
              -31.777698
            ],
            [
              -52.256081,
              -32.24537
            ],
            [
              -52.7121,
              -33.196578
            ],
            [
              -53.373662,
              -33.768378
            ],
            [
              -53.650544,
              -33.202004
            ],
            [
              -53.209589,
              -32.727666
            ],
            [
              -53.787952,
              -32.047243
            ],
            [
              -54.572452,
              -31.494511
            ],
            [
              -55.60151,
              -30.853879
            ],
            [
              -55.973245,
              -30.883076
            ],
            [
              -56.976026,
              -30.109686
            ],
            [
              -57.625133,
              -30.216295
            ]
          ]
        ]
      },
      id: "BRA"
    },
    {
      type: "Feature",
      properties: {
        name: "Brunei"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              114.204017,
              4.525874
            ],
            [
              114.599961,
              4.900011
            ],
            [
              115.45071,
              5.44773
            ],
            [
              115.4057,
              4.955228
            ],
            [
              115.347461,
              4.316636
            ],
            [
              114.869557,
              4.348314
            ],
            [
              114.659596,
              4.007637
            ],
            [
              114.204017,
              4.525874
            ]
          ]
        ]
      },
      id: "BRN"
    },
    {
      type: "Feature",
      properties: {
        name: "Bhutan"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              91.696657,
              27.771742
            ],
            [
              92.103712,
              27.452614
            ],
            [
              92.033484,
              26.83831
            ],
            [
              91.217513,
              26.808648
            ],
            [
              90.373275,
              26.875724
            ],
            [
              89.744528,
              26.719403
            ],
            [
              88.835643,
              27.098966
            ],
            [
              88.814248,
              27.299316
            ],
            [
              89.47581,
              28.042759
            ],
            [
              90.015829,
              28.296439
            ],
            [
              90.730514,
              28.064954
            ],
            [
              91.258854,
              28.040614
            ],
            [
              91.696657,
              27.771742
            ]
          ]
        ]
      },
      id: "BTN"
    },
    {
      type: "Feature",
      properties: {
        name: "Botswana"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              25.649163,
              -18.536026
            ],
            [
              25.850391,
              -18.714413
            ],
            [
              26.164791,
              -19.293086
            ],
            [
              27.296505,
              -20.39152
            ],
            [
              27.724747,
              -20.499059
            ],
            [
              27.727228,
              -20.851802
            ],
            [
              28.02137,
              -21.485975
            ],
            [
              28.794656,
              -21.639454
            ],
            [
              29.432188,
              -22.091313
            ],
            [
              28.017236,
              -22.827754
            ],
            [
              27.11941,
              -23.574323
            ],
            [
              26.786407,
              -24.240691
            ],
            [
              26.485753,
              -24.616327
            ],
            [
              25.941652,
              -24.696373
            ],
            [
              25.765849,
              -25.174845
            ],
            [
              25.664666,
              -25.486816
            ],
            [
              25.025171,
              -25.71967
            ],
            [
              24.211267,
              -25.670216
            ],
            [
              23.73357,
              -25.390129
            ],
            [
              23.312097,
              -25.26869
            ],
            [
              22.824271,
              -25.500459
            ],
            [
              22.579532,
              -25.979448
            ],
            [
              22.105969,
              -26.280256
            ],
            [
              21.605896,
              -26.726534
            ],
            [
              20.889609,
              -26.828543
            ],
            [
              20.66647,
              -26.477453
            ],
            [
              20.758609,
              -25.868136
            ],
            [
              20.165726,
              -24.917962
            ],
            [
              19.895768,
              -24.76779
            ],
            [
              19.895458,
              -21.849157
            ],
            [
              20.881134,
              -21.814327
            ],
            [
              20.910641,
              -18.252219
            ],
            [
              21.65504,
              -18.219146
            ],
            [
              23.196858,
              -17.869038
            ],
            [
              23.579006,
              -18.281261
            ],
            [
              24.217365,
              -17.889347
            ],
            [
              24.520705,
              -17.887125
            ],
            [
              25.084443,
              -17.661816
            ],
            [
              25.264226,
              -17.73654
            ],
            [
              25.649163,
              -18.536026
            ]
          ]
        ]
      },
      id: "BWA"
    },
    {
      type: "Feature",
      properties: {
        name: "Central African Republic"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              15.27946,
              7.421925
            ],
            [
              16.106232,
              7.497088
            ],
            [
              16.290562,
              7.754307
            ],
            [
              16.456185,
              7.734774
            ],
            [
              16.705988,
              7.508328
            ],
            [
              17.96493,
              7.890914
            ],
            [
              18.389555,
              8.281304
            ],
            [
              18.911022,
              8.630895
            ],
            [
              18.81201,
              8.982915
            ],
            [
              19.094008,
              9.074847
            ],
            [
              20.059685,
              9.012706
            ],
            [
              21.000868,
              9.475985
            ],
            [
              21.723822,
              10.567056
            ],
            [
              22.231129,
              10.971889
            ],
            [
              22.864165,
              11.142395
            ],
            [
              22.977544,
              10.714463
            ],
            [
              23.554304,
              10.089255
            ],
            [
              23.55725,
              9.681218
            ],
            [
              23.394779,
              9.265068
            ],
            [
              23.459013,
              8.954286
            ],
            [
              23.805813,
              8.666319
            ],
            [
              24.567369,
              8.229188
            ],
            [
              25.114932,
              7.825104
            ],
            [
              25.124131,
              7.500085
            ],
            [
              25.796648,
              6.979316
            ],
            [
              26.213418,
              6.546603
            ],
            [
              26.465909,
              5.946717
            ],
            [
              27.213409,
              5.550953
            ],
            [
              27.374226,
              5.233944
            ],
            [
              27.044065,
              5.127853
            ],
            [
              26.402761,
              5.150875
            ],
            [
              25.650455,
              5.256088
            ],
            [
              25.278798,
              5.170408
            ],
            [
              25.128833,
              4.927245
            ],
            [
              24.805029,
              4.897247
            ],
            [
              24.410531,
              5.108784
            ],
            [
              23.297214,
              4.609693
            ],
            [
              22.84148,
              4.710126
            ],
            [
              22.704124,
              4.633051
            ],
            [
              22.405124,
              4.02916
            ],
            [
              21.659123,
              4.224342
            ],
            [
              20.927591,
              4.322786
            ],
            [
              20.290679,
              4.691678
            ],
            [
              19.467784,
              5.031528
            ],
            [
              18.932312,
              4.709506
            ],
            [
              18.542982,
              4.201785
            ],
            [
              18.453065,
              3.504386
            ],
            [
              17.8099,
              3.560196
            ],
            [
              17.133042,
              3.728197
            ],
            [
              16.537058,
              3.198255
            ],
            [
              16.012852,
              2.26764
            ],
            [
              15.907381,
              2.557389
            ],
            [
              15.862732,
              3.013537
            ],
            [
              15.405396,
              3.335301
            ],
            [
              15.03622,
              3.851367
            ],
            [
              14.950953,
              4.210389
            ],
            [
              14.478372,
              4.732605
            ],
            [
              14.558936,
              5.030598
            ],
            [
              14.459407,
              5.451761
            ],
            [
              14.53656,
              6.226959
            ],
            [
              14.776545,
              6.408498
            ],
            [
              15.27946,
              7.421925
            ]
          ]
        ]
      },
      id: "CAF"
    },
    {
      type: "Feature",
      properties: {
        name: "Canada"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                -63.6645,
                46.55001
              ],
              [
                -62.9393,
                46.41587
              ],
              [
                -62.01208,
                46.44314
              ],
              [
                -62.50391,
                46.03339
              ],
              [
                -62.87433,
                45.96818
              ],
              [
                -64.1428,
                46.39265
              ],
              [
                -64.39261,
                46.72747
              ],
              [
                -64.01486,
                47.03601
              ],
              [
                -63.6645,
                46.55001
              ]
            ]
          ],
          [
            [
              [
                -61.806305,
                49.10506
              ],
              [
                -62.29318,
                49.08717
              ],
              [
                -63.58926,
                49.40069
              ],
              [
                -64.51912,
                49.87304
              ],
              [
                -64.17322,
                49.95718
              ],
              [
                -62.85829,
                49.70641
              ],
              [
                -61.835585,
                49.28855
              ],
              [
                -61.806305,
                49.10506
              ]
            ]
          ],
          [
            [
              [
                -123.510002,
                48.510011
              ],
              [
                -124.012891,
                48.370846
              ],
              [
                -125.655013,
                48.825005
              ],
              [
                -125.954994,
                49.179996
              ],
              [
                -126.850004,
                49.53
              ],
              [
                -127.029993,
                49.814996
              ],
              [
                -128.059336,
                49.994959
              ],
              [
                -128.444584,
                50.539138
              ],
              [
                -128.358414,
                50.770648
              ],
              [
                -127.308581,
                50.552574
              ],
              [
                -126.695001,
                50.400903
              ],
              [
                -125.755007,
                50.295018
              ],
              [
                -125.415002,
                49.950001
              ],
              [
                -124.920768,
                49.475275
              ],
              [
                -123.922509,
                49.062484
              ],
              [
                -123.510002,
                48.510011
              ]
            ]
          ],
          [
            [
              [
                -56.134036,
                50.68701
              ],
              [
                -56.795882,
                49.812309
              ],
              [
                -56.143105,
                50.150117
              ],
              [
                -55.471492,
                49.935815
              ],
              [
                -55.822401,
                49.587129
              ],
              [
                -54.935143,
                49.313011
              ],
              [
                -54.473775,
                49.556691
              ],
              [
                -53.476549,
                49.249139
              ],
              [
                -53.786014,
                48.516781
              ],
              [
                -53.086134,
                48.687804
              ],
              [
                -52.958648,
                48.157164
              ],
              [
                -52.648099,
                47.535548
              ],
              [
                -53.069158,
                46.655499
              ],
              [
                -53.521456,
                46.618292
              ],
              [
                -54.178936,
                46.807066
              ],
              [
                -53.961869,
                47.625207
              ],
              [
                -54.240482,
                47.752279
              ],
              [
                -55.400773,
                46.884994
              ],
              [
                -55.997481,
                46.91972
              ],
              [
                -55.291219,
                47.389562
              ],
              [
                -56.250799,
                47.632545
              ],
              [
                -57.325229,
                47.572807
              ],
              [
                -59.266015,
                47.603348
              ],
              [
                -59.419494,
                47.899454
              ],
              [
                -58.796586,
                48.251525
              ],
              [
                -59.231625,
                48.523188
              ],
              [
                -58.391805,
                49.125581
              ],
              [
                -57.35869,
                50.718274
              ],
              [
                -56.73865,
                51.287438
              ],
              [
                -55.870977,
                51.632094
              ],
              [
                -55.406974,
                51.588273
              ],
              [
                -55.600218,
                51.317075
              ],
              [
                -56.134036,
                50.68701
              ]
            ]
          ],
          [
            [
              [
                -132.710008,
                54.040009
              ],
              [
                -132.710009,
                54.040009
              ],
              [
                -132.710008,
                54.040009
              ],
              [
                -132.710008,
                54.040009
              ],
              [
                -131.74999,
                54.120004
              ],
              [
                -132.04948,
                52.984621
              ],
              [
                -131.179043,
                52.180433
              ],
              [
                -131.57783,
                52.182371
              ],
              [
                -132.180428,
                52.639707
              ],
              [
                -132.549992,
                53.100015
              ],
              [
                -133.054611,
                53.411469
              ],
              [
                -133.239664,
                53.85108
              ],
              [
                -133.180004,
                54.169975
              ],
              [
                -132.710008,
                54.040009
              ]
            ]
          ],
          [
            [
              [
                -79.26582,
                62.158675
              ],
              [
                -79.65752,
                61.63308
              ],
              [
                -80.09956,
                61.7181
              ],
              [
                -80.36215,
                62.01649
              ],
              [
                -80.315395,
                62.085565
              ],
              [
                -79.92939,
                62.3856
              ],
              [
                -79.52002,
                62.36371
              ],
              [
                -79.26582,
                62.158675
              ]
            ]
          ],
          [
            [
              [
                -81.89825,
                62.7108
              ],
              [
                -83.06857,
                62.15922
              ],
              [
                -83.77462,
                62.18231
              ],
              [
                -83.99367,
                62.4528
              ],
              [
                -83.25048,
                62.91409
              ],
              [
                -81.87699,
                62.90458
              ],
              [
                -81.89825,
                62.7108
              ]
            ]
          ],
          [
            [
              [
                -85.161308,
                65.657285
              ],
              [
                -84.975764,
                65.217518
              ],
              [
                -84.464012,
                65.371772
              ],
              [
                -83.882626,
                65.109618
              ],
              [
                -82.787577,
                64.766693
              ],
              [
                -81.642014,
                64.455136
              ],
              [
                -81.55344,
                63.979609
              ],
              [
                -80.817361,
                64.057486
              ],
              [
                -80.103451,
                63.725981
              ],
              [
                -80.99102,
                63.411246
              ],
              [
                -82.547178,
                63.651722
              ],
              [
                -83.108798,
                64.101876
              ],
              [
                -84.100417,
                63.569712
              ],
              [
                -85.523405,
                63.052379
              ],
              [
                -85.866769,
                63.637253
              ],
              [
                -87.221983,
                63.541238
              ],
              [
                -86.35276,
                64.035833
              ],
              [
                -86.224886,
                64.822917
              ],
              [
                -85.883848,
                65.738778
              ],
              [
                -85.161308,
                65.657285
              ]
            ]
          ],
          [
            [
              [
                -75.86588,
                67.14886
              ],
              [
                -76.98687,
                67.09873
              ],
              [
                -77.2364,
                67.58809
              ],
              [
                -76.81166,
                68.14856
              ],
              [
                -75.89521,
                68.28721
              ],
              [
                -75.1145,
                68.01036
              ],
              [
                -75.10333,
                67.58202
              ],
              [
                -75.21597,
                67.44425
              ],
              [
                -75.86588,
                67.14886
              ]
            ]
          ],
          [
            [
              [
                -95.647681,
                69.10769
              ],
              [
                -96.269521,
                68.75704
              ],
              [
                -97.617401,
                69.06003
              ],
              [
                -98.431801,
                68.9507
              ],
              [
                -99.797401,
                69.40003
              ],
              [
                -98.917401,
                69.71003
              ],
              [
                -98.218261,
                70.14354
              ],
              [
                -97.157401,
                69.86003
              ],
              [
                -96.557401,
                69.68003
              ],
              [
                -96.257401,
                69.49003
              ],
              [
                -95.647681,
                69.10769
              ]
            ]
          ],
          [
            [
              [
                -90.5471,
                69.49766
              ],
              [
                -90.55151,
                68.47499
              ],
              [
                -89.21515,
                69.25873
              ],
              [
                -88.01966,
                68.61508
              ],
              [
                -88.31749,
                67.87338
              ],
              [
                -87.35017,
                67.19872
              ],
              [
                -86.30607,
                67.92146
              ],
              [
                -85.57664,
                68.78456
              ],
              [
                -85.52197,
                69.88211
              ],
              [
                -84.10081,
                69.80539
              ],
              [
                -82.62258,
                69.65826
              ],
              [
                -81.28043,
                69.16202
              ],
              [
                -81.2202,
                68.66567
              ],
              [
                -81.96436,
                68.13253
              ],
              [
                -81.25928,
                67.59716
              ],
              [
                -81.38653,
                67.11078
              ],
              [
                -83.34456,
                66.41154
              ],
              [
                -84.73542,
                66.2573
              ],
              [
                -85.76943,
                66.55833
              ],
              [
                -86.0676,
                66.05625
              ],
              [
                -87.03143,
                65.21297
              ],
              [
                -87.32324,
                64.77563
              ],
              [
                -88.48296,
                64.09897
              ],
              [
                -89.91444,
                64.03273
              ],
              [
                -90.70398,
                63.61017
              ],
              [
                -90.77004,
                62.96021
              ],
              [
                -91.93342,
                62.83508
              ],
              [
                -93.15698,
                62.02469
              ],
              [
                -94.24153,
                60.89865
              ],
              [
                -94.62931,
                60.11021
              ],
              [
                -94.6846,
                58.94882
              ],
              [
                -93.21502,
                58.78212
              ],
              [
                -92.76462,
                57.84571
              ],
              [
                -92.29703,
                57.08709
              ],
              [
                -90.89769,
                57.28468
              ],
              [
                -89.03953,
                56.85172
              ],
              [
                -88.03978,
                56.47162
              ],
              [
                -87.32421,
                55.99914
              ],
              [
                -86.07121,
                55.72383
              ],
              [
                -85.01181,
                55.3026
              ],
              [
                -83.36055,
                55.24489
              ],
              [
                -82.27285,
                55.14832
              ],
              [
                -82.4362,
                54.28227
              ],
              [
                -82.12502,
                53.27703
              ],
              [
                -81.40075,
                52.15788
              ],
              [
                -79.91289,
                51.20842
              ],
              [
                -79.14301,
                51.53393
              ],
              [
                -78.60191,
                52.56208
              ],
              [
                -79.12421,
                54.14145
              ],
              [
                -79.82958,
                54.66772
              ],
              [
                -78.22874,
                55.13645
              ],
              [
                -77.0956,
                55.83741
              ],
              [
                -76.54137,
                56.53423
              ],
              [
                -76.62319,
                57.20263
              ],
              [
                -77.30226,
                58.05209
              ],
              [
                -78.51688,
                58.80458
              ],
              [
                -77.33676,
                59.85261
              ],
              [
                -77.77272,
                60.75788
              ],
              [
                -78.10687,
                62.31964
              ],
              [
                -77.41067,
                62.55053
              ],
              [
                -75.69621,
                62.2784
              ],
              [
                -74.6682,
                62.18111
              ],
              [
                -73.83988,
                62.4438
              ],
              [
                -72.90853,
                62.10507
              ],
              [
                -71.67708,
                61.52535
              ],
              [
                -71.37369,
                61.13717
              ],
              [
                -69.59042,
                61.06141
              ],
              [
                -69.62033,
                60.22125
              ],
              [
                -69.2879,
                58.95736
              ],
              [
                -68.37455,
                58.80106
              ],
              [
                -67.64976,
                58.21206
              ],
              [
                -66.20178,
                58.76731
              ],
              [
                -65.24517,
                59.87071
              ],
              [
                -64.58352,
                60.33558
              ],
              [
                -63.80475,
                59.4426
              ],
              [
                -62.50236,
                58.16708
              ],
              [
                -61.39655,
                56.96745
              ],
              [
                -61.79866,
                56.33945
              ],
              [
                -60.46853,
                55.77548
              ],
              [
                -59.56962,
                55.20407
              ],
              [
                -57.97508,
                54.94549
              ],
              [
                -57.3332,
                54.6265
              ],
              [
                -56.93689,
                53.78032
              ],
              [
                -56.15811,
                53.64749
              ],
              [
                -55.75632,
                53.27036
              ],
              [
                -55.68338,
                52.14664
              ],
              [
                -56.40916,
                51.7707
              ],
              [
                -57.12691,
                51.41972
              ],
              [
                -58.77482,
                51.0643
              ],
              [
                -60.03309,
                50.24277
              ],
              [
                -61.72366,
                50.08046
              ],
              [
                -63.86251,
                50.29099
              ],
              [
                -65.36331,
                50.2982
              ],
              [
                -66.39905,
                50.22897
              ],
              [
                -67.23631,
                49.51156
              ],
              [
                -68.51114,
                49.06836
              ],
              [
                -69.95362,
                47.74488
              ],
              [
                -71.10458,
                46.82171
              ],
              [
                -70.25522,
                46.98606
              ],
              [
                -68.65,
                48.3
              ],
              [
                -66.55243,
                49.1331
              ],
              [
                -65.05626,
                49.23278
              ],
              [
                -64.17099,
                48.74248
              ],
              [
                -65.11545,
                48.07085
              ],
              [
                -64.79854,
                46.99297
              ],
              [
                -64.47219,
                46.23849
              ],
              [
                -63.17329,
                45.73902
              ],
              [
                -61.52072,
                45.88377
              ],
              [
                -60.51815,
                47.00793
              ],
              [
                -60.4486,
                46.28264
              ],
              [
                -59.80287,
                45.9204
              ],
              [
                -61.03988,
                45.26525
              ],
              [
                -63.25471,
                44.67014
              ],
              [
                -64.24656,
                44.26553
              ],
              [
                -65.36406,
                43.54523
              ],
              [
                -66.1234,
                43.61867
              ],
              [
                -66.16173,
                44.46512
              ],
              [
                -64.42549,
                45.29204
              ],
              [
                -66.02605,
                45.25931
              ],
              [
                -67.13741,
                45.13753
              ],
              [
                -67.79134,
                45.70281
              ],
              [
                -67.79046,
                47.06636
              ],
              [
                -68.23444,
                47.35486
              ],
              [
                -68.905,
                47.185
              ],
              [
                -69.237216,
                47.447781
              ],
              [
                -69.99997,
                46.69307
              ],
              [
                -70.305,
                45.915
              ],
              [
                -70.66,
                45.46
              ],
              [
                -71.08482,
                45.30524
              ],
              [
                -71.405,
                45.255
              ],
              [
                -71.50506,
                45.0082
              ],
              [
                -73.34783,
                45.00738
              ],
              [
                -74.867,
                45.00048
              ],
              [
                -75.31821,
                44.81645
              ],
              [
                -76.375,
                44.09631
              ],
              [
                -76.5,
                44.018459
              ],
              [
                -76.820034,
                43.628784
              ],
              [
                -77.737885,
                43.629056
              ],
              [
                -78.72028,
                43.625089
              ],
              [
                -79.171674,
                43.466339
              ],
              [
                -79.01,
                43.27
              ],
              [
                -78.92,
                42.965
              ],
              [
                -78.939362,
                42.863611
              ],
              [
                -80.247448,
                42.3662
              ],
              [
                -81.277747,
                42.209026
              ],
              [
                -82.439278,
                41.675105
              ],
              [
                -82.690089,
                41.675105
              ],
              [
                -83.02981,
                41.832796
              ],
              [
                -83.142,
                41.975681
              ],
              [
                -83.12,
                42.08
              ],
              [
                -82.9,
                42.43
              ],
              [
                -82.43,
                42.98
              ],
              [
                -82.137642,
                43.571088
              ],
              [
                -82.337763,
                44.44
              ],
              [
                -82.550925,
                45.347517
              ],
              [
                -83.592851,
                45.816894
              ],
              [
                -83.469551,
                45.994686
              ],
              [
                -83.616131,
                46.116927
              ],
              [
                -83.890765,
                46.116927
              ],
              [
                -84.091851,
                46.275419
              ],
              [
                -84.14212,
                46.512226
              ],
              [
                -84.3367,
                46.40877
              ],
              [
                -84.6049,
                46.4396
              ],
              [
                -84.543749,
                46.538684
              ],
              [
                -84.779238,
                46.637102
              ],
              [
                -84.87608,
                46.900083
              ],
              [
                -85.652363,
                47.220219
              ],
              [
                -86.461991,
                47.553338
              ],
              [
                -87.439793,
                47.94
              ],
              [
                -88.378114,
                48.302918
              ],
              [
                -89.272917,
                48.019808
              ],
              [
                -89.6,
                48.01
              ],
              [
                -90.83,
                48.27
              ],
              [
                -91.64,
                48.14
              ],
              [
                -92.61,
                48.45
              ],
              [
                -93.63087,
                48.60926
              ],
              [
                -94.32914,
                48.67074
              ],
              [
                -94.64,
                48.84
              ],
              [
                -94.81758,
                49.38905
              ],
              [
                -95.15609,
                49.38425
              ],
              [
                -95.15907,
                49
              ],
              [
                -97.22872,
                49.0007
              ],
              [
                -100.65,
                49
              ],
              [
                -104.04826,
                48.99986
              ],
              [
                -107.05,
                49
              ],
              [
                -110.05,
                49
              ],
              [
                -113,
                49
              ],
              [
                -116.04818,
                49
              ],
              [
                -117.03121,
                49
              ],
              [
                -120,
                49
              ],
              [
                -122.84,
                49
              ],
              [
                -122.97421,
                49.002538
              ],
              [
                -124.91024,
                49.98456
              ],
              [
                -125.62461,
                50.41656
              ],
              [
                -127.43561,
                50.83061
              ],
              [
                -127.99276,
                51.71583
              ],
              [
                -127.85032,
                52.32961
              ],
              [
                -129.12979,
                52.75538
              ],
              [
                -129.30523,
                53.56159
              ],
              [
                -130.51497,
                54.28757
              ],
              [
                -130.53611,
                54.80278
              ],
              [
                -129.98,
                55.285
              ],
              [
                -130.00778,
                55.91583
              ],
              [
                -131.70781,
                56.55212
              ],
              [
                -132.73042,
                57.69289
              ],
              [
                -133.35556,
                58.41028
              ],
              [
                -134.27111,
                58.86111
              ],
              [
                -134.945,
                59.27056
              ],
              [
                -135.47583,
                59.78778
              ],
              [
                -136.47972,
                59.46389
              ],
              [
                -137.4525,
                58.905
              ],
              [
                -138.34089,
                59.56211
              ],
              [
                -139.039,
                60
              ],
              [
                -140.013,
                60.27682
              ],
              [
                -140.99778,
                60.30639
              ],
              [
                -140.9925,
                66.00003
              ],
              [
                -140.986,
                69.712
              ],
              [
                -139.12052,
                69.47102
              ],
              [
                -137.54636,
                68.99002
              ],
              [
                -136.50358,
                68.89804
              ],
              [
                -135.62576,
                69.31512
              ],
              [
                -134.41464,
                69.62743
              ],
              [
                -132.92925,
                69.50534
              ],
              [
                -131.43136,
                69.94451
              ],
              [
                -129.79471,
                70.19369
              ],
              [
                -129.10773,
                69.77927
              ],
              [
                -128.36156,
                70.01286
              ],
              [
                -128.13817,
                70.48384
              ],
              [
                -127.44712,
                70.37721
              ],
              [
                -125.75632,
                69.48058
              ],
              [
                -124.42483,
                70.1584
              ],
              [
                -124.28968,
                69.39969
              ],
              [
                -123.06108,
                69.56372
              ],
              [
                -122.6835,
                69.85553
              ],
              [
                -121.47226,
                69.79778
              ],
              [
                -119.94288,
                69.37786
              ],
              [
                -117.60268,
                69.01128
              ],
              [
                -116.22643,
                68.84151
              ],
              [
                -115.2469,
                68.90591
              ],
              [
                -113.89794,
                68.3989
              ],
              [
                -115.30489,
                67.90261
              ],
              [
                -113.49727,
                67.68815
              ],
              [
                -110.798,
                67.80612
              ],
              [
                -109.94619,
                67.98104
              ],
              [
                -108.8802,
                67.38144
              ],
              [
                -107.79239,
                67.88736
              ],
              [
                -108.81299,
                68.31164
              ],
              [
                -108.16721,
                68.65392
              ],
              [
                -106.95,
                68.7
              ],
              [
                -106.15,
                68.8
              ],
              [
                -105.34282,
                68.56122
              ],
              [
                -104.33791,
                68.018
              ],
              [
                -103.22115,
                68.09775
              ],
              [
                -101.45433,
                67.64689
              ],
              [
                -99.90195,
                67.80566
              ],
              [
                -98.4432,
                67.78165
              ],
              [
                -98.5586,
                68.40394
              ],
              [
                -97.66948,
                68.57864
              ],
              [
                -96.11991,
                68.23939
              ],
              [
                -96.12588,
                67.29338
              ],
              [
                -95.48943,
                68.0907
              ],
              [
                -94.685,
                68.06383
              ],
              [
                -94.23282,
                69.06903
              ],
              [
                -95.30408,
                69.68571
              ],
              [
                -96.47131,
                70.08976
              ],
              [
                -96.39115,
                71.19482
              ],
              [
                -95.2088,
                71.92053
              ],
              [
                -93.88997,
                71.76015
              ],
              [
                -92.87818,
                71.31869
              ],
              [
                -91.51964,
                70.19129
              ],
              [
                -92.40692,
                69.69997
              ],
              [
                -90.5471,
                69.49766
              ]
            ]
          ],
          [
            [
              [
                -114.16717,
                73.12145
              ],
              [
                -114.66634,
                72.65277
              ],
              [
                -112.44102,
                72.9554
              ],
              [
                -111.05039,
                72.4504
              ],
              [
                -109.92035,
                72.96113
              ],
              [
                -109.00654,
                72.63335
              ],
              [
                -108.18835,
                71.65089
              ],
              [
                -107.68599,
                72.06548
              ],
              [
                -108.39639,
                73.08953
              ],
              [
                -107.51645,
                73.23598
              ],
              [
                -106.52259,
                73.07601
              ],
              [
                -105.40246,
                72.67259
              ],
              [
                -104.77484,
                71.6984
              ],
              [
                -104.46476,
                70.99297
              ],
              [
                -102.78537,
                70.49776
              ],
              [
                -100.98078,
                70.02432
              ],
              [
                -101.08929,
                69.58447
              ],
              [
                -102.73116,
                69.50402
              ],
              [
                -102.09329,
                69.11962
              ],
              [
                -102.43024,
                68.75282
              ],
              [
                -104.24,
                68.91
              ],
              [
                -105.96,
                69.18
              ],
              [
                -107.12254,
                69.11922
              ],
              [
                -109,
                68.78
              ],
              [
                -111.534149,
                68.630059
              ],
              [
                -113.3132,
                68.53554
              ],
              [
                -113.85496,
                69.00744
              ],
              [
                -115.22,
                69.28
              ],
              [
                -116.10794,
                69.16821
              ],
              [
                -117.34,
                69.96
              ],
              [
                -116.67473,
                70.06655
              ],
              [
                -115.13112,
                70.2373
              ],
              [
                -113.72141,
                70.19237
              ],
              [
                -112.4161,
                70.36638
              ],
              [
                -114.35,
                70.6
              ],
              [
                -116.48684,
                70.52045
              ],
              [
                -117.9048,
                70.54056
              ],
              [
                -118.43238,
                70.9092
              ],
              [
                -116.11311,
                71.30918
              ],
              [
                -117.65568,
                71.2952
              ],
              [
                -119.40199,
                71.55859
              ],
              [
                -118.56267,
                72.30785
              ],
              [
                -117.86642,
                72.70594
              ],
              [
                -115.18909,
                73.31459
              ],
              [
                -114.16717,
                73.12145
              ]
            ]
          ],
          [
            [
              [
                -104.5,
                73.42
              ],
              [
                -105.38,
                72.76
              ],
              [
                -106.94,
                73.46
              ],
              [
                -106.6,
                73.6
              ],
              [
                -105.26,
                73.64
              ],
              [
                -104.5,
                73.42
              ]
            ]
          ],
          [
            [
              [
                -76.34,
                73.102685
              ],
              [
                -76.251404,
                72.826385
              ],
              [
                -77.314438,
                72.855545
              ],
              [
                -78.39167,
                72.876656
              ],
              [
                -79.486252,
                72.742203
              ],
              [
                -79.775833,
                72.802902
              ],
              [
                -80.876099,
                73.333183
              ],
              [
                -80.833885,
                73.693184
              ],
              [
                -80.353058,
                73.75972
              ],
              [
                -78.064438,
                73.651932
              ],
              [
                -76.34,
                73.102685
              ]
            ]
          ],
          [
            [
              [
                -86.562179,
                73.157447
              ],
              [
                -85.774371,
                72.534126
              ],
              [
                -84.850112,
                73.340278
              ],
              [
                -82.31559,
                73.750951
              ],
              [
                -80.600088,
                72.716544
              ],
              [
                -80.748942,
                72.061907
              ],
              [
                -78.770639,
                72.352173
              ],
              [
                -77.824624,
                72.749617
              ],
              [
                -75.605845,
                72.243678
              ],
              [
                -74.228616,
                71.767144
              ],
              [
                -74.099141,
                71.33084
              ],
              [
                -72.242226,
                71.556925
              ],
              [
                -71.200015,
                70.920013
              ],
              [
                -68.786054,
                70.525024
              ],
              [
                -67.91497,
                70.121948
              ],
              [
                -66.969033,
                69.186087
              ],
              [
                -68.805123,
                68.720198
              ],
              [
                -66.449866,
                68.067163
              ],
              [
                -64.862314,
                67.847539
              ],
              [
                -63.424934,
                66.928473
              ],
              [
                -61.851981,
                66.862121
              ],
              [
                -62.163177,
                66.160251
              ],
              [
                -63.918444,
                64.998669
              ],
              [
                -65.14886,
                65.426033
              ],
              [
                -66.721219,
                66.388041
              ],
              [
                -68.015016,
                66.262726
              ],
              [
                -68.141287,
                65.689789
              ],
              [
                -67.089646,
                65.108455
              ],
              [
                -65.73208,
                64.648406
              ],
              [
                -65.320168,
                64.382737
              ],
              [
                -64.669406,
                63.392927
              ],
              [
                -65.013804,
                62.674185
              ],
              [
                -66.275045,
                62.945099
              ],
              [
                -68.783186,
                63.74567
              ],
              [
                -67.369681,
                62.883966
              ],
              [
                -66.328297,
                62.280075
              ],
              [
                -66.165568,
                61.930897
              ],
              [
                -68.877367,
                62.330149
              ],
              [
                -71.023437,
                62.910708
              ],
              [
                -72.235379,
                63.397836
              ],
              [
                -71.886278,
                63.679989
              ],
              [
                -73.378306,
                64.193963
              ],
              [
                -74.834419,
                64.679076
              ],
              [
                -74.818503,
                64.389093
              ],
              [
                -77.70998,
                64.229542
              ],
              [
                -78.555949,
                64.572906
              ],
              [
                -77.897281,
                65.309192
              ],
              [
                -76.018274,
                65.326969
              ],
              [
                -73.959795,
                65.454765
              ],
              [
                -74.293883,
                65.811771
              ],
              [
                -73.944912,
                66.310578
              ],
              [
                -72.651167,
                67.284576
              ],
              [
                -72.92606,
                67.726926
              ],
              [
                -73.311618,
                68.069437
              ],
              [
                -74.843307,
                68.554627
              ],
              [
                -76.869101,
                68.894736
              ],
              [
                -76.228649,
                69.147769
              ],
              [
                -77.28737,
                69.76954
              ],
              [
                -78.168634,
                69.826488
              ],
              [
                -78.957242,
                70.16688
              ],
              [
                -79.492455,
                69.871808
              ],
              [
                -81.305471,
                69.743185
              ],
              [
                -84.944706,
                69.966634
              ],
              [
                -87.060003,
                70.260001
              ],
              [
                -88.681713,
                70.410741
              ],
              [
                -89.51342,
                70.762038
              ],
              [
                -88.467721,
                71.218186
              ],
              [
                -89.888151,
                71.222552
              ],
              [
                -90.20516,
                72.235074
              ],
              [
                -89.436577,
                73.129464
              ],
              [
                -88.408242,
                73.537889
              ],
              [
                -85.826151,
                73.803816
              ],
              [
                -86.562179,
                73.157447
              ]
            ]
          ],
          [
            [
              [
                -100.35642,
                73.84389
              ],
              [
                -99.16387,
                73.63339
              ],
              [
                -97.38,
                73.76
              ],
              [
                -97.12,
                73.47
              ],
              [
                -98.05359,
                72.99052
              ],
              [
                -96.54,
                72.56
              ],
              [
                -96.72,
                71.66
              ],
              [
                -98.35966,
                71.27285
              ],
              [
                -99.32286,
                71.35639
              ],
              [
                -100.01482,
                71.73827
              ],
              [
                -102.5,
                72.51
              ],
              [
                -102.48,
                72.83
              ],
              [
                -100.43836,
                72.70588
              ],
              [
                -101.54,
                73.36
              ],
              [
                -100.35642,
                73.84389
              ]
            ]
          ],
          [
            [
              [
                -93.196296,
                72.771992
              ],
              [
                -94.269047,
                72.024596
              ],
              [
                -95.409856,
                72.061881
              ],
              [
                -96.033745,
                72.940277
              ],
              [
                -96.018268,
                73.43743
              ],
              [
                -95.495793,
                73.862417
              ],
              [
                -94.503658,
                74.134907
              ],
              [
                -92.420012,
                74.100025
              ],
              [
                -90.509793,
                73.856732
              ],
              [
                -92.003965,
                72.966244
              ],
              [
                -93.196296,
                72.771992
              ]
            ]
          ],
          [
            [
              [
                -120.46,
                71.383602
              ],
              [
                -123.09219,
                70.90164
              ],
              [
                -123.62,
                71.34
              ],
              [
                -125.928949,
                71.868688
              ],
              [
                -125.5,
                72.292261
              ],
              [
                -124.80729,
                73.02256
              ],
              [
                -123.94,
                73.68
              ],
              [
                -124.91775,
                74.29275
              ],
              [
                -121.53788,
                74.44893
              ],
              [
                -120.10978,
                74.24135
              ],
              [
                -117.55564,
                74.18577
              ],
              [
                -116.58442,
                73.89607
              ],
              [
                -115.51081,
                73.47519
              ],
              [
                -116.76794,
                73.22292
              ],
              [
                -119.22,
                72.52
              ],
              [
                -120.46,
                71.82
              ],
              [
                -120.46,
                71.383602
              ]
            ]
          ],
          [
            [
              [
                -93.612756,
                74.979997
              ],
              [
                -94.156909,
                74.592347
              ],
              [
                -95.608681,
                74.666864
              ],
              [
                -96.820932,
                74.927623
              ],
              [
                -96.288587,
                75.377828
              ],
              [
                -94.85082,
                75.647218
              ],
              [
                -93.977747,
                75.29649
              ],
              [
                -93.612756,
                74.979997
              ]
            ]
          ],
          [
            [
              [
                -98.5,
                76.72
              ],
              [
                -97.735585,
                76.25656
              ],
              [
                -97.704415,
                75.74344
              ],
              [
                -98.16,
                75
              ],
              [
                -99.80874,
                74.89744
              ],
              [
                -100.88366,
                75.05736
              ],
              [
                -100.86292,
                75.64075
              ],
              [
                -102.50209,
                75.5638
              ],
              [
                -102.56552,
                76.3366
              ],
              [
                -101.48973,
                76.30537
              ],
              [
                -99.98349,
                76.64634
              ],
              [
                -98.57699,
                76.58859
              ],
              [
                -98.5,
                76.72
              ]
            ]
          ],
          [
            [
              [
                -108.21141,
                76.20168
              ],
              [
                -107.81943,
                75.84552
              ],
              [
                -106.92893,
                76.01282
              ],
              [
                -105.881,
                75.9694
              ],
              [
                -105.70498,
                75.47951
              ],
              [
                -106.31347,
                75.00527
              ],
              [
                -109.7,
                74.85
              ],
              [
                -112.22307,
                74.41696
              ],
              [
                -113.74381,
                74.39427
              ],
              [
                -113.87135,
                74.72029
              ],
              [
                -111.79421,
                75.1625
              ],
              [
                -116.31221,
                75.04343
              ],
              [
                -117.7104,
                75.2222
              ],
              [
                -116.34602,
                76.19903
              ],
              [
                -115.40487,
                76.47887
              ],
              [
                -112.59056,
                76.14134
              ],
              [
                -110.81422,
                75.54919
              ],
              [
                -109.0671,
                75.47321
              ],
              [
                -110.49726,
                76.42982
              ],
              [
                -109.5811,
                76.79417
              ],
              [
                -108.54859,
                76.67832
              ],
              [
                -108.21141,
                76.20168
              ]
            ]
          ],
          [
            [
              [
                -94.684086,
                77.097878
              ],
              [
                -93.573921,
                76.776296
              ],
              [
                -91.605023,
                76.778518
              ],
              [
                -90.741846,
                76.449597
              ],
              [
                -90.969661,
                76.074013
              ],
              [
                -89.822238,
                75.847774
              ],
              [
                -89.187083,
                75.610166
              ],
              [
                -87.838276,
                75.566189
              ],
              [
                -86.379192,
                75.482421
              ],
              [
                -84.789625,
                75.699204
              ],
              [
                -82.753445,
                75.784315
              ],
              [
                -81.128531,
                75.713983
              ],
              [
                -80.057511,
                75.336849
              ],
              [
                -79.833933,
                74.923127
              ],
              [
                -80.457771,
                74.657304
              ],
              [
                -81.948843,
                74.442459
              ],
              [
                -83.228894,
                74.564028
              ],
              [
                -86.097452,
                74.410032
              ],
              [
                -88.15035,
                74.392307
              ],
              [
                -89.764722,
                74.515555
              ],
              [
                -92.422441,
                74.837758
              ],
              [
                -92.768285,
                75.38682
              ],
              [
                -92.889906,
                75.882655
              ],
              [
                -93.893824,
                76.319244
              ],
              [
                -95.962457,
                76.441381
              ],
              [
                -97.121379,
                76.751078
              ],
              [
                -96.745123,
                77.161389
              ],
              [
                -94.684086,
                77.097878
              ]
            ]
          ],
          [
            [
              [
                -116.198587,
                77.645287
              ],
              [
                -116.335813,
                76.876962
              ],
              [
                -117.106051,
                76.530032
              ],
              [
                -118.040412,
                76.481172
              ],
              [
                -119.899318,
                76.053213
              ],
              [
                -121.499995,
                75.900019
              ],
              [
                -122.854924,
                76.116543
              ],
              [
                -122.854925,
                76.116543
              ],
              [
                -121.157535,
                76.864508
              ],
              [
                -119.103939,
                77.51222
              ],
              [
                -117.570131,
                77.498319
              ],
              [
                -116.198587,
                77.645287
              ]
            ]
          ],
          [
            [
              [
                -93.840003,
                77.519997
              ],
              [
                -94.295608,
                77.491343
              ],
              [
                -96.169654,
                77.555111
              ],
              [
                -96.436304,
                77.834629
              ],
              [
                -94.422577,
                77.820005
              ],
              [
                -93.720656,
                77.634331
              ],
              [
                -93.840003,
                77.519997
              ]
            ]
          ],
          [
            [
              [
                -110.186938,
                77.697015
              ],
              [
                -112.051191,
                77.409229
              ],
              [
                -113.534279,
                77.732207
              ],
              [
                -112.724587,
                78.05105
              ],
              [
                -111.264443,
                78.152956
              ],
              [
                -109.854452,
                77.996325
              ],
              [
                -110.186938,
                77.697015
              ]
            ]
          ],
          [
            [
              [
                -109.663146,
                78.601973
              ],
              [
                -110.881314,
                78.40692
              ],
              [
                -112.542091,
                78.407902
              ],
              [
                -112.525891,
                78.550555
              ],
              [
                -111.50001,
                78.849994
              ],
              [
                -110.963661,
                78.804441
              ],
              [
                -109.663146,
                78.601973
              ]
            ]
          ],
          [
            [
              [
                -95.830295,
                78.056941
              ],
              [
                -97.309843,
                77.850597
              ],
              [
                -98.124289,
                78.082857
              ],
              [
                -98.552868,
                78.458105
              ],
              [
                -98.631984,
                78.87193
              ],
              [
                -97.337231,
                78.831984
              ],
              [
                -96.754399,
                78.765813
              ],
              [
                -95.559278,
                78.418315
              ],
              [
                -95.830295,
                78.056941
              ]
            ]
          ],
          [
            [
              [
                -100.060192,
                78.324754
              ],
              [
                -99.670939,
                77.907545
              ],
              [
                -101.30394,
                78.018985
              ],
              [
                -102.949809,
                78.343229
              ],
              [
                -105.176133,
                78.380332
              ],
              [
                -104.210429,
                78.67742
              ],
              [
                -105.41958,
                78.918336
              ],
              [
                -105.492289,
                79.301594
              ],
              [
                -103.529282,
                79.165349
              ],
              [
                -100.825158,
                78.800462
              ],
              [
                -100.060192,
                78.324754
              ]
            ]
          ],
          [
            [
              [
                -87.02,
                79.66
              ],
              [
                -85.81435,
                79.3369
              ],
              [
                -87.18756,
                79.0393
              ],
              [
                -89.03535,
                78.28723
              ],
              [
                -90.80436,
                78.21533
              ],
              [
                -92.87669,
                78.34333
              ],
              [
                -93.95116,
                78.75099
              ],
              [
                -93.93574,
                79.11373
              ],
              [
                -93.14524,
                79.3801
              ],
              [
                -94.974,
                79.37248
              ],
              [
                -96.07614,
                79.70502
              ],
              [
                -96.70972,
                80.15777
              ],
              [
                -96.01644,
                80.60233
              ],
              [
                -95.32345,
                80.90729
              ],
              [
                -94.29843,
                80.97727
              ],
              [
                -94.73542,
                81.20646
              ],
              [
                -92.40984,
                81.25739
              ],
              [
                -91.13289,
                80.72345
              ],
              [
                -89.45,
                80.509322
              ],
              [
                -87.81,
                80.32
              ],
              [
                -87.02,
                79.66
              ]
            ]
          ],
          [
            [
              [
                -68.5,
                83.106322
              ],
              [
                -65.82735,
                83.02801
              ],
              [
                -63.68,
                82.9
              ],
              [
                -61.85,
                82.6286
              ],
              [
                -61.89388,
                82.36165
              ],
              [
                -64.334,
                81.92775
              ],
              [
                -66.75342,
                81.72527
              ],
              [
                -67.65755,
                81.50141
              ],
              [
                -65.48031,
                81.50657
              ],
              [
                -67.84,
                80.9
              ],
              [
                -69.4697,
                80.61683
              ],
              [
                -71.18,
                79.8
              ],
              [
                -73.2428,
                79.63415
              ],
              [
                -73.88,
                79.430162
              ],
              [
                -76.90773,
                79.32309
              ],
              [
                -75.52924,
                79.19766
              ],
              [
                -76.22046,
                79.01907
              ],
              [
                -75.39345,
                78.52581
              ],
              [
                -76.34354,
                78.18296
              ],
              [
                -77.88851,
                77.89991
              ],
              [
                -78.36269,
                77.50859
              ],
              [
                -79.75951,
                77.20968
              ],
              [
                -79.61965,
                76.98336
              ],
              [
                -77.91089,
                77.022045
              ],
              [
                -77.88911,
                76.777955
              ],
              [
                -80.56125,
                76.17812
              ],
              [
                -83.17439,
                76.45403
              ],
              [
                -86.11184,
                76.29901
              ],
              [
                -87.6,
                76.42
              ],
              [
                -89.49068,
                76.47239
              ],
              [
                -89.6161,
                76.95213
              ],
              [
                -87.76739,
                77.17833
              ],
              [
                -88.26,
                77.9
              ],
              [
                -87.65,
                77.970222
              ],
              [
                -84.97634,
                77.53873
              ],
              [
                -86.34,
                78.18
              ],
              [
                -87.96192,
                78.37181
              ],
              [
                -87.15198,
                78.75867
              ],
              [
                -85.37868,
                78.9969
              ],
              [
                -85.09495,
                79.34543
              ],
              [
                -86.50734,
                79.73624
              ],
              [
                -86.93179,
                80.25145
              ],
              [
                -84.19844,
                80.20836
              ],
              [
                -83.408696,
                80.1
              ],
              [
                -81.84823,
                80.46442
              ],
              [
                -84.1,
                80.58
              ],
              [
                -87.59895,
                80.51627
              ],
              [
                -89.36663,
                80.85569
              ],
              [
                -90.2,
                81.26
              ],
              [
                -91.36786,
                81.5531
              ],
              [
                -91.58702,
                81.89429
              ],
              [
                -90.1,
                82.085
              ],
              [
                -88.93227,
                82.11751
              ],
              [
                -86.97024,
                82.27961
              ],
              [
                -85.5,
                82.652273
              ],
              [
                -84.260005,
                82.6
              ],
              [
                -83.18,
                82.32
              ],
              [
                -82.42,
                82.86
              ],
              [
                -81.1,
                83.02
              ],
              [
                -79.30664,
                83.13056
              ],
              [
                -76.25,
                83.172059
              ],
              [
                -75.71878,
                83.06404
              ],
              [
                -72.83153,
                83.23324
              ],
              [
                -70.665765,
                83.169781
              ],
              [
                -68.5,
                83.106322
              ]
            ]
          ]
        ]
      },
      id: "CAN"
    },
    {
      type: "Feature",
      properties: {
        name: "Switzerland"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              9.594226,
              47.525058
            ],
            [
              9.632932,
              47.347601
            ],
            [
              9.47997,
              47.10281
            ],
            [
              9.932448,
              46.920728
            ],
            [
              10.442701,
              46.893546
            ],
            [
              10.363378,
              46.483571
            ],
            [
              9.922837,
              46.314899
            ],
            [
              9.182882,
              46.440215
            ],
            [
              8.966306,
              46.036932
            ],
            [
              8.489952,
              46.005151
            ],
            [
              8.31663,
              46.163642
            ],
            [
              7.755992,
              45.82449
            ],
            [
              7.273851,
              45.776948
            ],
            [
              6.843593,
              45.991147
            ],
            [
              6.5001,
              46.429673
            ],
            [
              6.022609,
              46.27299
            ],
            [
              6.037389,
              46.725779
            ],
            [
              6.768714,
              47.287708
            ],
            [
              6.736571,
              47.541801
            ],
            [
              7.192202,
              47.449766
            ],
            [
              7.466759,
              47.620582
            ],
            [
              8.317301,
              47.61358
            ],
            [
              8.522612,
              47.830828
            ],
            [
              9.594226,
              47.525058
            ]
          ]
        ]
      },
      id: "CHE"
    },
    {
      type: "Feature",
      properties: {
        name: "Chile"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                -68.63401,
                -52.63637
              ],
              [
                -68.63335,
                -54.8695
              ],
              [
                -67.56244,
                -54.87001
              ],
              [
                -66.95992,
                -54.89681
              ],
              [
                -67.29103,
                -55.30124
              ],
              [
                -68.14863,
                -55.61183
              ],
              [
                -68.639991,
                -55.580018
              ],
              [
                -69.2321,
                -55.49906
              ],
              [
                -69.95809,
                -55.19843
              ],
              [
                -71.00568,
                -55.05383
              ],
              [
                -72.2639,
                -54.49514
              ],
              [
                -73.2852,
                -53.95752
              ],
              [
                -74.66253,
                -52.83749
              ],
              [
                -73.8381,
                -53.04743
              ],
              [
                -72.43418,
                -53.7154
              ],
              [
                -71.10773,
                -54.07433
              ],
              [
                -70.59178,
                -53.61583
              ],
              [
                -70.26748,
                -52.93123
              ],
              [
                -69.34565,
                -52.5183
              ],
              [
                -68.63401,
                -52.63637
              ]
            ]
          ],
          [
            [
              [
                -68.219913,
                -21.494347
              ],
              [
                -67.82818,
                -22.872919
              ],
              [
                -67.106674,
                -22.735925
              ],
              [
                -66.985234,
                -22.986349
              ],
              [
                -67.328443,
                -24.025303
              ],
              [
                -68.417653,
                -24.518555
              ],
              [
                -68.386001,
                -26.185016
              ],
              [
                -68.5948,
                -26.506909
              ],
              [
                -68.295542,
                -26.89934
              ],
              [
                -69.001235,
                -27.521214
              ],
              [
                -69.65613,
                -28.459141
              ],
              [
                -70.01355,
                -29.367923
              ],
              [
                -69.919008,
                -30.336339
              ],
              [
                -70.535069,
                -31.36501
              ],
              [
                -70.074399,
                -33.09121
              ],
              [
                -69.814777,
                -33.273886
              ],
              [
                -69.817309,
                -34.193571
              ],
              [
                -70.388049,
                -35.169688
              ],
              [
                -70.364769,
                -36.005089
              ],
              [
                -71.121881,
                -36.658124
              ],
              [
                -71.118625,
                -37.576827
              ],
              [
                -70.814664,
                -38.552995
              ],
              [
                -71.413517,
                -38.916022
              ],
              [
                -71.680761,
                -39.808164
              ],
              [
                -71.915734,
                -40.832339
              ],
              [
                -71.746804,
                -42.051386
              ],
              [
                -72.148898,
                -42.254888
              ],
              [
                -71.915424,
                -43.408565
              ],
              [
                -71.464056,
                -43.787611
              ],
              [
                -71.793623,
                -44.207172
              ],
              [
                -71.329801,
                -44.407522
              ],
              [
                -71.222779,
                -44.784243
              ],
              [
                -71.659316,
                -44.973689
              ],
              [
                -71.552009,
                -45.560733
              ],
              [
                -71.917258,
                -46.884838
              ],
              [
                -72.447355,
                -47.738533
              ],
              [
                -72.331161,
                -48.244238
              ],
              [
                -72.648247,
                -48.878618
              ],
              [
                -73.415436,
                -49.318436
              ],
              [
                -73.328051,
                -50.378785
              ],
              [
                -72.975747,
                -50.74145
              ],
              [
                -72.309974,
                -50.67701
              ],
              [
                -72.329404,
                -51.425956
              ],
              [
                -71.914804,
                -52.009022
              ],
              [
                -69.498362,
                -52.142761
              ],
              [
                -68.571545,
                -52.299444
              ],
              [
                -69.461284,
                -52.291951
              ],
              [
                -69.94278,
                -52.537931
              ],
              [
                -70.845102,
                -52.899201
              ],
              [
                -71.006332,
                -53.833252
              ],
              [
                -71.429795,
                -53.856455
              ],
              [
                -72.557943,
                -53.53141
              ],
              [
                -73.702757,
                -52.835069
              ],
              [
                -73.702757,
                -52.83507
              ],
              [
                -74.946763,
                -52.262754
              ],
              [
                -75.260026,
                -51.629355
              ],
              [
                -74.976632,
                -51.043396
              ],
              [
                -75.479754,
                -50.378372
              ],
              [
                -75.608015,
                -48.673773
              ],
              [
                -75.18277,
                -47.711919
              ],
              [
                -74.126581,
                -46.939253
              ],
              [
                -75.644395,
                -46.647643
              ],
              [
                -74.692154,
                -45.763976
              ],
              [
                -74.351709,
                -44.103044
              ],
              [
                -73.240356,
                -44.454961
              ],
              [
                -72.717804,
                -42.383356
              ],
              [
                -73.3889,
                -42.117532
              ],
              [
                -73.701336,
                -43.365776
              ],
              [
                -74.331943,
                -43.224958
              ],
              [
                -74.017957,
                -41.794813
              ],
              [
                -73.677099,
                -39.942213
              ],
              [
                -73.217593,
                -39.258689
              ],
              [
                -73.505559,
                -38.282883
              ],
              [
                -73.588061,
                -37.156285
              ],
              [
                -73.166717,
                -37.12378
              ],
              [
                -72.553137,
                -35.50884
              ],
              [
                -71.861732,
                -33.909093
              ],
              [
                -71.43845,
                -32.418899
              ],
              [
                -71.668721,
                -30.920645
              ],
              [
                -71.370083,
                -30.095682
              ],
              [
                -71.489894,
                -28.861442
              ],
              [
                -70.905124,
                -27.64038
              ],
              [
                -70.724954,
                -25.705924
              ],
              [
                -70.403966,
                -23.628997
              ],
              [
                -70.091246,
                -21.393319
              ],
              [
                -70.16442,
                -19.756468
              ],
              [
                -70.372572,
                -18.347975
              ],
              [
                -69.858444,
                -18.092694
              ],
              [
                -69.590424,
                -17.580012
              ],
              [
                -69.100247,
                -18.260125
              ],
              [
                -68.966818,
                -18.981683
              ],
              [
                -68.442225,
                -19.405068
              ],
              [
                -68.757167,
                -20.372658
              ],
              [
                -68.219913,
                -21.494347
              ]
            ]
          ]
        ]
      },
      id: "CHL"
    },
    {
      type: "Feature",
      properties: {
        name: "China"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                110.339188,
                18.678395
              ],
              [
                109.47521,
                18.197701
              ],
              [
                108.655208,
                18.507682
              ],
              [
                108.626217,
                19.367888
              ],
              [
                109.119056,
                19.821039
              ],
              [
                110.211599,
                20.101254
              ],
              [
                110.786551,
                20.077534
              ],
              [
                111.010051,
                19.69593
              ],
              [
                110.570647,
                19.255879
              ],
              [
                110.339188,
                18.678395
              ]
            ]
          ],
          [
            [
              [
                127.657407,
                49.76027
              ],
              [
                129.397818,
                49.4406
              ],
              [
                130.582293,
                48.729687
              ],
              [
                130.987282,
                47.790132
              ],
              [
                132.506672,
                47.78897
              ],
              [
                133.373596,
                48.183442
              ],
              [
                135.026311,
                48.47823
              ],
              [
                134.500814,
                47.57844
              ],
              [
                134.112362,
                47.212467
              ],
              [
                133.769644,
                46.116927
              ],
              [
                133.097127,
                45.144066
              ],
              [
                131.883454,
                45.321162
              ],
              [
                131.025212,
                44.967953
              ],
              [
                131.288555,
                44.11152
              ],
              [
                131.144688,
                42.92999
              ],
              [
                130.633866,
                42.903015
              ],
              [
                130.640016,
                42.395009
              ],
              [
                129.994267,
                42.985387
              ],
              [
                129.596669,
                42.424982
              ],
              [
                128.052215,
                41.994285
              ],
              [
                128.208433,
                41.466772
              ],
              [
                127.343783,
                41.503152
              ],
              [
                126.869083,
                41.816569
              ],
              [
                126.182045,
                41.107336
              ],
              [
                125.079942,
                40.569824
              ],
              [
                124.265625,
                39.928493
              ],
              [
                122.86757,
                39.637788
              ],
              [
                122.131388,
                39.170452
              ],
              [
                121.054554,
                38.897471
              ],
              [
                121.585995,
                39.360854
              ],
              [
                121.376757,
                39.750261
              ],
              [
                122.168595,
                40.422443
              ],
              [
                121.640359,
                40.94639
              ],
              [
                120.768629,
                40.593388
              ],
              [
                119.639602,
                39.898056
              ],
              [
                119.023464,
                39.252333
              ],
              [
                118.042749,
                39.204274
              ],
              [
                117.532702,
                38.737636
              ],
              [
                118.059699,
                38.061476
              ],
              [
                118.87815,
                37.897325
              ],
              [
                118.911636,
                37.448464
              ],
              [
                119.702802,
                37.156389
              ],
              [
                120.823457,
                37.870428
              ],
              [
                121.711259,
                37.481123
              ],
              [
                122.357937,
                37.454484
              ],
              [
                122.519995,
                36.930614
              ],
              [
                121.104164,
                36.651329
              ],
              [
                120.637009,
                36.11144
              ],
              [
                119.664562,
                35.609791
              ],
              [
                119.151208,
                34.909859
              ],
              [
                120.227525,
                34.360332
              ],
              [
                120.620369,
                33.376723
              ],
              [
                121.229014,
                32.460319
              ],
              [
                121.908146,
                31.692174
              ],
              [
                121.891919,
                30.949352
              ],
              [
                121.264257,
                30.676267
              ],
              [
                121.503519,
                30.142915
              ],
              [
                122.092114,
                29.83252
              ],
              [
                121.938428,
                29.018022
              ],
              [
                121.684439,
                28.225513
              ],
              [
                121.125661,
                28.135673
              ],
              [
                120.395473,
                27.053207
              ],
              [
                119.585497,
                25.740781
              ],
              [
                118.656871,
                24.547391
              ],
              [
                117.281606,
                23.624501
              ],
              [
                115.890735,
                22.782873
              ],
              [
                114.763827,
                22.668074
              ],
              [
                114.152547,
                22.22376
              ],
              [
                113.80678,
                22.54834
              ],
              [
                113.241078,
                22.051367
              ],
              [
                111.843592,
                21.550494
              ],
              [
                110.785466,
                21.397144
              ],
              [
                110.444039,
                20.341033
              ],
              [
                109.889861,
                20.282457
              ],
              [
                109.627655,
                21.008227
              ],
              [
                109.864488,
                21.395051
              ],
              [
                108.522813,
                21.715212
              ],
              [
                108.05018,
                21.55238
              ],
              [
                107.04342,
                21.811899
              ],
              [
                106.567273,
                22.218205
              ],
              [
                106.725403,
                22.794268
              ],
              [
                105.811247,
                22.976892
              ],
              [
                105.329209,
                23.352063
              ],
              [
                104.476858,
                22.81915
              ],
              [
                103.504515,
                22.703757
              ],
              [
                102.706992,
                22.708795
              ],
              [
                102.170436,
                22.464753
              ],
              [
                101.652018,
                22.318199
              ],
              [
                101.80312,
                21.174367
              ],
              [
                101.270026,
                21.201652
              ],
              [
                101.180005,
                21.436573
              ],
              [
                101.150033,
                21.849984
              ],
              [
                100.416538,
                21.558839
              ],
              [
                99.983489,
                21.742937
              ],
              [
                99.240899,
                22.118314
              ],
              [
                99.531992,
                22.949039
              ],
              [
                98.898749,
                23.142722
              ],
              [
                98.660262,
                24.063286
              ],
              [
                97.60472,
                23.897405
              ],
              [
                97.724609,
                25.083637
              ],
              [
                98.671838,
                25.918703
              ],
              [
                98.712094,
                26.743536
              ],
              [
                98.68269,
                27.508812
              ],
              [
                98.246231,
                27.747221
              ],
              [
                97.911988,
                28.335945
              ],
              [
                97.327114,
                28.261583
              ],
              [
                96.248833,
                28.411031
              ],
              [
                96.586591,
                28.83098
              ],
              [
                96.117679,
                29.452802
              ],
              [
                95.404802,
                29.031717
              ],
              [
                94.56599,
                29.277438
              ],
              [
                93.413348,
                28.640629
              ],
              [
                92.503119,
                27.896876
              ],
              [
                91.696657,
                27.771742
              ],
              [
                91.258854,
                28.040614
              ],
              [
                90.730514,
                28.064954
              ],
              [
                90.015829,
                28.296439
              ],
              [
                89.47581,
                28.042759
              ],
              [
                88.814248,
                27.299316
              ],
              [
                88.730326,
                28.086865
              ],
              [
                88.120441,
                27.876542
              ],
              [
                86.954517,
                27.974262
              ],
              [
                85.82332,
                28.203576
              ],
              [
                85.011638,
                28.642774
              ],
              [
                84.23458,
                28.839894
              ],
              [
                83.898993,
                29.320226
              ],
              [
                83.337115,
                29.463732
              ],
              [
                82.327513,
                30.115268
              ],
              [
                81.525804,
                30.422717
              ],
              [
                81.111256,
                30.183481
              ],
              [
                79.721367,
                30.882715
              ],
              [
                78.738894,
                31.515906
              ],
              [
                78.458446,
                32.618164
              ],
              [
                79.176129,
                32.48378
              ],
              [
                79.208892,
                32.994395
              ],
              [
                78.811086,
                33.506198
              ],
              [
                78.912269,
                34.321936
              ],
              [
                77.837451,
                35.49401
              ],
              [
                76.192848,
                35.898403
              ],
              [
                75.896897,
                36.666806
              ],
              [
                75.158028,
                37.133031
              ],
              [
                74.980002,
                37.41999
              ],
              [
                74.829986,
                37.990007
              ],
              [
                74.864816,
                38.378846
              ],
              [
                74.257514,
                38.606507
              ],
              [
                73.928852,
                38.505815
              ],
              [
                73.675379,
                39.431237
              ],
              [
                73.960013,
                39.660008
              ],
              [
                73.822244,
                39.893973
              ],
              [
                74.776862,
                40.366425
              ],
              [
                75.467828,
                40.562072
              ],
              [
                76.526368,
                40.427946
              ],
              [
                76.904484,
                41.066486
              ],
              [
                78.187197,
                41.185316
              ],
              [
                78.543661,
                41.582243
              ],
              [
                80.11943,
                42.123941
              ],
              [
                80.25999,
                42.349999
              ],
              [
                80.18015,
                42.920068
              ],
              [
                80.866206,
                43.180362
              ],
              [
                79.966106,
                44.917517
              ],
              [
                81.947071,
                45.317027
              ],
              [
                82.458926,
                45.53965
              ],
              [
                83.180484,
                47.330031
              ],
              [
                85.16429,
                47.000956
              ],
              [
                85.720484,
                47.452969
              ],
              [
                85.768233,
                48.455751
              ],
              [
                86.598776,
                48.549182
              ],
              [
                87.35997,
                49.214981
              ],
              [
                87.751264,
                49.297198
              ],
              [
                88.013832,
                48.599463
              ],
              [
                88.854298,
                48.069082
              ],
              [
                90.280826,
                47.693549
              ],
              [
                90.970809,
                46.888146
              ],
              [
                90.585768,
                45.719716
              ],
              [
                90.94554,
                45.286073
              ],
              [
                92.133891,
                45.115076
              ],
              [
                93.480734,
                44.975472
              ],
              [
                94.688929,
                44.352332
              ],
              [
                95.306875,
                44.241331
              ],
              [
                95.762455,
                43.319449
              ],
              [
                96.349396,
                42.725635
              ],
              [
                97.451757,
                42.74889
              ],
              [
                99.515817,
                42.524691
              ],
              [
                100.845866,
                42.663804
              ],
              [
                101.83304,
                42.514873
              ],
              [
                103.312278,
                41.907468
              ],
              [
                104.522282,
                41.908347
              ],
              [
                104.964994,
                41.59741
              ],
              [
                106.129316,
                42.134328
              ],
              [
                107.744773,
                42.481516
              ],
              [
                109.243596,
                42.519446
              ],
              [
                110.412103,
                42.871234
              ],
              [
                111.129682,
                43.406834
              ],
              [
                111.829588,
                43.743118
              ],
              [
                111.667737,
                44.073176
              ],
              [
                111.348377,
                44.457442
              ],
              [
                111.873306,
                45.102079
              ],
              [
                112.436062,
                45.011646
              ],
              [
                113.463907,
                44.808893
              ],
              [
                114.460332,
                45.339817
              ],
              [
                115.985096,
                45.727235
              ],
              [
                116.717868,
                46.388202
              ],
              [
                117.421701,
                46.672733
              ],
              [
                118.874326,
                46.805412
              ],
              [
                119.66327,
                46.69268
              ],
              [
                119.772824,
                47.048059
              ],
              [
                118.866574,
                47.74706
              ],
              [
                118.064143,
                48.06673
              ],
              [
                117.295507,
                47.697709
              ],
              [
                116.308953,
                47.85341
              ],
              [
                115.742837,
                47.726545
              ],
              [
                115.485282,
                48.135383
              ],
              [
                116.191802,
                49.134598
              ],
              [
                116.678801,
                49.888531
              ],
              [
                117.879244,
                49.510983
              ],
              [
                119.288461,
                50.142883
              ],
              [
                119.279366,
                50.582908
              ],
              [
                120.18205,
                51.643566
              ],
              [
                120.738191,
                51.964115
              ],
              [
                120.725789,
                52.516226
              ],
              [
                120.177089,
                52.753886
              ],
              [
                121.003085,
                53.251401
              ],
              [
                122.245748,
                53.431726
              ],
              [
                123.571507,
                53.458804
              ],
              [
                125.068211,
                53.161045
              ],
              [
                125.946349,
                52.792799
              ],
              [
                126.564399,
                51.784255
              ],
              [
                126.939157,
                51.353894
              ],
              [
                127.287456,
                50.739797
              ],
              [
                127.657407,
                49.76027
              ]
            ]
          ]
        ]
      },
      id: "CHN"
    },
    {
      type: "Feature",
      properties: {
        name: "Ivory Coast"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -2.856125,
              4.994476
            ],
            [
              -3.311084,
              4.984296
            ],
            [
              -4.00882,
              5.179813
            ],
            [
              -4.649917,
              5.168264
            ],
            [
              -5.834496,
              4.993701
            ],
            [
              -6.528769,
              4.705088
            ],
            [
              -7.518941,
              4.338288
            ],
            [
              -7.712159,
              4.364566
            ],
            [
              -7.635368,
              5.188159
            ],
            [
              -7.539715,
              5.313345
            ],
            [
              -7.570153,
              5.707352
            ],
            [
              -7.993693,
              6.12619
            ],
            [
              -8.311348,
              6.193033
            ],
            [
              -8.60288,
              6.467564
            ],
            [
              -8.385452,
              6.911801
            ],
            [
              -8.485446,
              7.395208
            ],
            [
              -8.439298,
              7.686043
            ],
            [
              -8.280703,
              7.68718
            ],
            [
              -8.221792,
              8.123329
            ],
            [
              -8.299049,
              8.316444
            ],
            [
              -8.203499,
              8.455453
            ],
            [
              -7.8321,
              8.575704
            ],
            [
              -8.079114,
              9.376224
            ],
            [
              -8.309616,
              9.789532
            ],
            [
              -8.229337,
              10.12902
            ],
            [
              -8.029944,
              10.206535
            ],
            [
              -7.89959,
              10.297382
            ],
            [
              -7.622759,
              10.147236
            ],
            [
              -6.850507,
              10.138994
            ],
            [
              -6.666461,
              10.430811
            ],
            [
              -6.493965,
              10.411303
            ],
            [
              -6.205223,
              10.524061
            ],
            [
              -6.050452,
              10.096361
            ],
            [
              -5.816926,
              10.222555
            ],
            [
              -5.404342,
              10.370737
            ],
            [
              -4.954653,
              10.152714
            ],
            [
              -4.779884,
              9.821985
            ],
            [
              -4.330247,
              9.610835
            ],
            [
              -3.980449,
              9.862344
            ],
            [
              -3.511899,
              9.900326
            ],
            [
              -2.827496,
              9.642461
            ],
            [
              -2.56219,
              8.219628
            ],
            [
              -2.983585,
              7.379705
            ],
            [
              -3.24437,
              6.250472
            ],
            [
              -2.810701,
              5.389051
            ],
            [
              -2.856125,
              4.994476
            ]
          ]
        ]
      },
      id: "CIV"
    },
    {
      type: "Feature",
      properties: {
        name: "Cameroon"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              13.075822,
              2.267097
            ],
            [
              12.951334,
              2.321616
            ],
            [
              12.35938,
              2.192812
            ],
            [
              11.751665,
              2.326758
            ],
            [
              11.276449,
              2.261051
            ],
            [
              9.649158,
              2.283866
            ],
            [
              9.795196,
              3.073404
            ],
            [
              9.404367,
              3.734527
            ],
            [
              8.948116,
              3.904129
            ],
            [
              8.744924,
              4.352215
            ],
            [
              8.488816,
              4.495617
            ],
            [
              8.500288,
              4.771983
            ],
            [
              8.757533,
              5.479666
            ],
            [
              9.233163,
              6.444491
            ],
            [
              9.522706,
              6.453482
            ],
            [
              10.118277,
              7.03877
            ],
            [
              10.497375,
              7.055358
            ],
            [
              11.058788,
              6.644427
            ],
            [
              11.745774,
              6.981383
            ],
            [
              11.839309,
              7.397042
            ],
            [
              12.063946,
              7.799808
            ],
            [
              12.218872,
              8.305824
            ],
            [
              12.753672,
              8.717763
            ],
            [
              12.955468,
              9.417772
            ],
            [
              13.1676,
              9.640626
            ],
            [
              13.308676,
              10.160362
            ],
            [
              13.57295,
              10.798566
            ],
            [
              14.415379,
              11.572369
            ],
            [
              14.468192,
              11.904752
            ],
            [
              14.577178,
              12.085361
            ],
            [
              14.181336,
              12.483657
            ],
            [
              14.213531,
              12.802035
            ],
            [
              14.495787,
              12.859396
            ],
            [
              14.893386,
              12.219048
            ],
            [
              14.960152,
              11.555574
            ],
            [
              14.923565,
              10.891325
            ],
            [
              15.467873,
              9.982337
            ],
            [
              14.909354,
              9.992129
            ],
            [
              14.627201,
              9.920919
            ],
            [
              14.171466,
              10.021378
            ],
            [
              13.954218,
              9.549495
            ],
            [
              14.544467,
              8.965861
            ],
            [
              14.979996,
              8.796104
            ],
            [
              15.120866,
              8.38215
            ],
            [
              15.436092,
              7.692812
            ],
            [
              15.27946,
              7.421925
            ],
            [
              14.776545,
              6.408498
            ],
            [
              14.53656,
              6.226959
            ],
            [
              14.459407,
              5.451761
            ],
            [
              14.558936,
              5.030598
            ],
            [
              14.478372,
              4.732605
            ],
            [
              14.950953,
              4.210389
            ],
            [
              15.03622,
              3.851367
            ],
            [
              15.405396,
              3.335301
            ],
            [
              15.862732,
              3.013537
            ],
            [
              15.907381,
              2.557389
            ],
            [
              16.012852,
              2.26764
            ],
            [
              15.940919,
              1.727673
            ],
            [
              15.146342,
              1.964015
            ],
            [
              14.337813,
              2.227875
            ],
            [
              13.075822,
              2.267097
            ]
          ]
        ]
      },
      id: "CMR"
    },
    {
      type: "Feature",
      properties: {
        name: "Democratic Republic of the Congo"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              30.83386,
              3.509166
            ],
            [
              30.773347,
              2.339883
            ],
            [
              31.174149,
              2.204465
            ],
            [
              30.85267,
              1.849396
            ],
            [
              30.468508,
              1.583805
            ],
            [
              30.086154,
              1.062313
            ],
            [
              29.875779,
              0.59738
            ],
            [
              29.819503,
              -0.20531
            ],
            [
              29.587838,
              -0.587406
            ],
            [
              29.579466,
              -1.341313
            ],
            [
              29.291887,
              -1.620056
            ],
            [
              29.254835,
              -2.21511
            ],
            [
              29.117479,
              -2.292211
            ],
            [
              29.024926,
              -2.839258
            ],
            [
              29.276384,
              -3.293907
            ],
            [
              29.339998,
              -4.499983
            ],
            [
              29.519987,
              -5.419979
            ],
            [
              29.419993,
              -5.939999
            ],
            [
              29.620032,
              -6.520015
            ],
            [
              30.199997,
              -7.079981
            ],
            [
              30.740015,
              -8.340007
            ],
            [
              30.346086,
              -8.238257
            ],
            [
              29.002912,
              -8.407032
            ],
            [
              28.734867,
              -8.526559
            ],
            [
              28.449871,
              -9.164918
            ],
            [
              28.673682,
              -9.605925
            ],
            [
              28.49607,
              -10.789884
            ],
            [
              28.372253,
              -11.793647
            ],
            [
              28.642417,
              -11.971569
            ],
            [
              29.341548,
              -12.360744
            ],
            [
              29.616001,
              -12.178895
            ],
            [
              29.699614,
              -13.257227
            ],
            [
              28.934286,
              -13.248958
            ],
            [
              28.523562,
              -12.698604
            ],
            [
              28.155109,
              -12.272481
            ],
            [
              27.388799,
              -12.132747
            ],
            [
              27.16442,
              -11.608748
            ],
            [
              26.553088,
              -11.92444
            ],
            [
              25.75231,
              -11.784965
            ],
            [
              25.418118,
              -11.330936
            ],
            [
              24.78317,
              -11.238694
            ],
            [
              24.314516,
              -11.262826
            ],
            [
              24.257155,
              -10.951993
            ],
            [
              23.912215,
              -10.926826
            ],
            [
              23.456791,
              -10.867863
            ],
            [
              22.837345,
              -11.017622
            ],
            [
              22.402798,
              -10.993075
            ],
            [
              22.155268,
              -11.084801
            ],
            [
              22.208753,
              -9.894796
            ],
            [
              21.875182,
              -9.523708
            ],
            [
              21.801801,
              -8.908707
            ],
            [
              21.949131,
              -8.305901
            ],
            [
              21.746456,
              -7.920085
            ],
            [
              21.728111,
              -7.290872
            ],
            [
              20.514748,
              -7.299606
            ],
            [
              20.601823,
              -6.939318
            ],
            [
              20.091622,
              -6.94309
            ],
            [
              20.037723,
              -7.116361
            ],
            [
              19.417502,
              -7.155429
            ],
            [
              19.166613,
              -7.738184
            ],
            [
              19.016752,
              -7.988246
            ],
            [
              18.464176,
              -7.847014
            ],
            [
              18.134222,
              -7.987678
            ],
            [
              17.47297,
              -8.068551
            ],
            [
              17.089996,
              -7.545689
            ],
            [
              16.860191,
              -7.222298
            ],
            [
              16.57318,
              -6.622645
            ],
            [
              16.326528,
              -5.87747
            ],
            [
              13.375597,
              -5.864241
            ],
            [
              13.024869,
              -5.984389
            ],
            [
              12.735171,
              -5.965682
            ],
            [
              12.322432,
              -6.100092
            ],
            [
              12.182337,
              -5.789931
            ],
            [
              12.436688,
              -5.684304
            ],
            [
              12.468004,
              -5.248362
            ],
            [
              12.631612,
              -4.991271
            ],
            [
              12.995517,
              -4.781103
            ],
            [
              13.25824,
              -4.882957
            ],
            [
              13.600235,
              -4.500138
            ],
            [
              14.144956,
              -4.510009
            ],
            [
              14.209035,
              -4.793092
            ],
            [
              14.582604,
              -4.970239
            ],
            [
              15.170992,
              -4.343507
            ],
            [
              15.75354,
              -3.855165
            ],
            [
              16.00629,
              -3.535133
            ],
            [
              15.972803,
              -2.712392
            ],
            [
              16.407092,
              -1.740927
            ],
            [
              16.865307,
              -1.225816
            ],
            [
              17.523716,
              -0.74383
            ],
            [
              17.638645,
              -0.424832
            ],
            [
              17.663553,
              -0.058084
            ],
            [
              17.82654,
              0.288923
            ],
            [
              17.774192,
              0.855659
            ],
            [
              17.898835,
              1.741832
            ],
            [
              18.094276,
              2.365722
            ],
            [
              18.393792,
              2.900443
            ],
            [
              18.453065,
              3.504386
            ],
            [
              18.542982,
              4.201785
            ],
            [
              18.932312,
              4.709506
            ],
            [
              19.467784,
              5.031528
            ],
            [
              20.290679,
              4.691678
            ],
            [
              20.927591,
              4.322786
            ],
            [
              21.659123,
              4.224342
            ],
            [
              22.405124,
              4.02916
            ],
            [
              22.704124,
              4.633051
            ],
            [
              22.84148,
              4.710126
            ],
            [
              23.297214,
              4.609693
            ],
            [
              24.410531,
              5.108784
            ],
            [
              24.805029,
              4.897247
            ],
            [
              25.128833,
              4.927245
            ],
            [
              25.278798,
              5.170408
            ],
            [
              25.650455,
              5.256088
            ],
            [
              26.402761,
              5.150875
            ],
            [
              27.044065,
              5.127853
            ],
            [
              27.374226,
              5.233944
            ],
            [
              27.979977,
              4.408413
            ],
            [
              28.428994,
              4.287155
            ],
            [
              28.696678,
              4.455077
            ],
            [
              29.159078,
              4.389267
            ],
            [
              29.715995,
              4.600805
            ],
            [
              29.9535,
              4.173699
            ],
            [
              30.83386,
              3.509166
            ]
          ]
        ]
      },
      id: "COD"
    },
    {
      type: "Feature",
      properties: {
        name: "Republic of the Congo"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              12.995517,
              -4.781103
            ],
            [
              12.62076,
              -4.438023
            ],
            [
              12.318608,
              -4.60623
            ],
            [
              11.914963,
              -5.037987
            ],
            [
              11.093773,
              -3.978827
            ],
            [
              11.855122,
              -3.426871
            ],
            [
              11.478039,
              -2.765619
            ],
            [
              11.820964,
              -2.514161
            ],
            [
              12.495703,
              -2.391688
            ],
            [
              12.575284,
              -1.948511
            ],
            [
              13.109619,
              -2.42874
            ],
            [
              13.992407,
              -2.470805
            ],
            [
              14.29921,
              -1.998276
            ],
            [
              14.425456,
              -1.333407
            ],
            [
              14.316418,
              -0.552627
            ],
            [
              13.843321,
              0.038758
            ],
            [
              14.276266,
              1.19693
            ],
            [
              14.026669,
              1.395677
            ],
            [
              13.282631,
              1.314184
            ],
            [
              13.003114,
              1.830896
            ],
            [
              13.075822,
              2.267097
            ],
            [
              14.337813,
              2.227875
            ],
            [
              15.146342,
              1.964015
            ],
            [
              15.940919,
              1.727673
            ],
            [
              16.012852,
              2.26764
            ],
            [
              16.537058,
              3.198255
            ],
            [
              17.133042,
              3.728197
            ],
            [
              17.8099,
              3.560196
            ],
            [
              18.453065,
              3.504386
            ],
            [
              18.393792,
              2.900443
            ],
            [
              18.094276,
              2.365722
            ],
            [
              17.898835,
              1.741832
            ],
            [
              17.774192,
              0.855659
            ],
            [
              17.82654,
              0.288923
            ],
            [
              17.663553,
              -0.058084
            ],
            [
              17.638645,
              -0.424832
            ],
            [
              17.523716,
              -0.74383
            ],
            [
              16.865307,
              -1.225816
            ],
            [
              16.407092,
              -1.740927
            ],
            [
              15.972803,
              -2.712392
            ],
            [
              16.00629,
              -3.535133
            ],
            [
              15.75354,
              -3.855165
            ],
            [
              15.170992,
              -4.343507
            ],
            [
              14.582604,
              -4.970239
            ],
            [
              14.209035,
              -4.793092
            ],
            [
              14.144956,
              -4.510009
            ],
            [
              13.600235,
              -4.500138
            ],
            [
              13.25824,
              -4.882957
            ],
            [
              12.995517,
              -4.781103
            ]
          ]
        ]
      },
      id: "COG"
    },
    {
      type: "Feature",
      properties: {
        name: "Colombia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -75.373223,
              -0.152032
            ],
            [
              -75.801466,
              0.084801
            ],
            [
              -76.292314,
              0.416047
            ],
            [
              -76.57638,
              0.256936
            ],
            [
              -77.424984,
              0.395687
            ],
            [
              -77.668613,
              0.825893
            ],
            [
              -77.855061,
              0.809925
            ],
            [
              -78.855259,
              1.380924
            ],
            [
              -78.990935,
              1.69137
            ],
            [
              -78.617831,
              1.766404
            ],
            [
              -78.662118,
              2.267355
            ],
            [
              -78.42761,
              2.629556
            ],
            [
              -77.931543,
              2.696606
            ],
            [
              -77.510431,
              3.325017
            ],
            [
              -77.12769,
              3.849636
            ],
            [
              -77.496272,
              4.087606
            ],
            [
              -77.307601,
              4.667984
            ],
            [
              -77.533221,
              5.582812
            ],
            [
              -77.318815,
              5.845354
            ],
            [
              -77.476661,
              6.691116
            ],
            [
              -77.881571,
              7.223771
            ],
            [
              -77.753414,
              7.70984
            ],
            [
              -77.431108,
              7.638061
            ],
            [
              -77.242566,
              7.935278
            ],
            [
              -77.474723,
              8.524286
            ],
            [
              -77.353361,
              8.670505
            ],
            [
              -76.836674,
              8.638749
            ],
            [
              -76.086384,
              9.336821
            ],
            [
              -75.6746,
              9.443248
            ],
            [
              -75.664704,
              9.774003
            ],
            [
              -75.480426,
              10.61899
            ],
            [
              -74.906895,
              11.083045
            ],
            [
              -74.276753,
              11.102036
            ],
            [
              -74.197223,
              11.310473
            ],
            [
              -73.414764,
              11.227015
            ],
            [
              -72.627835,
              11.731972
            ],
            [
              -72.238195,
              11.95555
            ],
            [
              -71.75409,
              12.437303
            ],
            [
              -71.399822,
              12.376041
            ],
            [
              -71.137461,
              12.112982
            ],
            [
              -71.331584,
              11.776284
            ],
            [
              -71.973922,
              11.608672
            ],
            [
              -72.227575,
              11.108702
            ],
            [
              -72.614658,
              10.821975
            ],
            [
              -72.905286,
              10.450344
            ],
            [
              -73.027604,
              9.73677
            ],
            [
              -73.304952,
              9.152
            ],
            [
              -72.78873,
              9.085027
            ],
            [
              -72.660495,
              8.625288
            ],
            [
              -72.439862,
              8.405275
            ],
            [
              -72.360901,
              8.002638
            ],
            [
              -72.479679,
              7.632506
            ],
            [
              -72.444487,
              7.423785
            ],
            [
              -72.198352,
              7.340431
            ],
            [
              -71.960176,
              6.991615
            ],
            [
              -70.674234,
              7.087785
            ],
            [
              -70.093313,
              6.960376
            ],
            [
              -69.38948,
              6.099861
            ],
            [
              -68.985319,
              6.206805
            ],
            [
              -68.265052,
              6.153268
            ],
            [
              -67.695087,
              6.267318
            ],
            [
              -67.34144,
              6.095468
            ],
            [
              -67.521532,
              5.55687
            ],
            [
              -67.744697,
              5.221129
            ],
            [
              -67.823012,
              4.503937
            ],
            [
              -67.621836,
              3.839482
            ],
            [
              -67.337564,
              3.542342
            ],
            [
              -67.303173,
              3.318454
            ],
            [
              -67.809938,
              2.820655
            ],
            [
              -67.447092,
              2.600281
            ],
            [
              -67.181294,
              2.250638
            ],
            [
              -66.876326,
              1.253361
            ],
            [
              -67.065048,
              1.130112
            ],
            [
              -67.259998,
              1.719999
            ],
            [
              -67.53781,
              2.037163
            ],
            [
              -67.868565,
              1.692455
            ],
            [
              -69.816973,
              1.714805
            ],
            [
              -69.804597,
              1.089081
            ],
            [
              -69.218638,
              0.985677
            ],
            [
              -69.252434,
              0.602651
            ],
            [
              -69.452396,
              0.706159
            ],
            [
              -70.015566,
              0.541414
            ],
            [
              -70.020656,
              -0.185156
            ],
            [
              -69.577065,
              -0.549992
            ],
            [
              -69.420486,
              -1.122619
            ],
            [
              -69.444102,
              -1.556287
            ],
            [
              -69.893635,
              -4.298187
            ],
            [
              -70.394044,
              -3.766591
            ],
            [
              -70.692682,
              -3.742872
            ],
            [
              -70.047709,
              -2.725156
            ],
            [
              -70.813476,
              -2.256865
            ],
            [
              -71.413646,
              -2.342802
            ],
            [
              -71.774761,
              -2.16979
            ],
            [
              -72.325787,
              -2.434218
            ],
            [
              -73.070392,
              -2.308954
            ],
            [
              -73.659504,
              -1.260491
            ],
            [
              -74.122395,
              -1.002833
            ],
            [
              -74.441601,
              -0.53082
            ],
            [
              -75.106625,
              -0.057205
            ],
            [
              -75.373223,
              -0.152032
            ]
          ]
        ]
      },
      id: "COL"
    },
    {
      type: "Feature",
      properties: {
        name: "Costa Rica"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -82.965783,
              8.225028
            ],
            [
              -83.508437,
              8.446927
            ],
            [
              -83.711474,
              8.656836
            ],
            [
              -83.596313,
              8.830443
            ],
            [
              -83.632642,
              9.051386
            ],
            [
              -83.909886,
              9.290803
            ],
            [
              -84.303402,
              9.487354
            ],
            [
              -84.647644,
              9.615537
            ],
            [
              -84.713351,
              9.908052
            ],
            [
              -84.97566,
              10.086723
            ],
            [
              -84.911375,
              9.795992
            ],
            [
              -85.110923,
              9.55704
            ],
            [
              -85.339488,
              9.834542
            ],
            [
              -85.660787,
              9.933347
            ],
            [
              -85.797445,
              10.134886
            ],
            [
              -85.791709,
              10.439337
            ],
            [
              -85.659314,
              10.754331
            ],
            [
              -85.941725,
              10.895278
            ],
            [
              -85.71254,
              11.088445
            ],
            [
              -85.561852,
              11.217119
            ],
            [
              -84.903003,
              10.952303
            ],
            [
              -84.673069,
              11.082657
            ],
            [
              -84.355931,
              10.999226
            ],
            [
              -84.190179,
              10.79345
            ],
            [
              -83.895054,
              10.726839
            ],
            [
              -83.655612,
              10.938764
            ],
            [
              -83.40232,
              10.395438
            ],
            [
              -83.015677,
              9.992982
            ],
            [
              -82.546196,
              9.566135
            ],
            [
              -82.932891,
              9.476812
            ],
            [
              -82.927155,
              9.07433
            ],
            [
              -82.719183,
              8.925709
            ],
            [
              -82.868657,
              8.807266
            ],
            [
              -82.829771,
              8.626295
            ],
            [
              -82.913176,
              8.423517
            ],
            [
              -82.965783,
              8.225028
            ]
          ]
        ]
      },
      id: "CRI"
    },
    {
      type: "Feature",
      properties: {
        name: "Cuba"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -82.268151,
              23.188611
            ],
            [
              -81.404457,
              23.117271
            ],
            [
              -80.618769,
              23.10598
            ],
            [
              -79.679524,
              22.765303
            ],
            [
              -79.281486,
              22.399202
            ],
            [
              -78.347434,
              22.512166
            ],
            [
              -77.993296,
              22.277194
            ],
            [
              -77.146422,
              21.657851
            ],
            [
              -76.523825,
              21.20682
            ],
            [
              -76.19462,
              21.220565
            ],
            [
              -75.598222,
              21.016624
            ],
            [
              -75.67106,
              20.735091
            ],
            [
              -74.933896,
              20.693905
            ],
            [
              -74.178025,
              20.284628
            ],
            [
              -74.296648,
              20.050379
            ],
            [
              -74.961595,
              19.923435
            ],
            [
              -75.63468,
              19.873774
            ],
            [
              -76.323656,
              19.952891
            ],
            [
              -77.755481,
              19.855481
            ],
            [
              -77.085108,
              20.413354
            ],
            [
              -77.492655,
              20.673105
            ],
            [
              -78.137292,
              20.739949
            ],
            [
              -78.482827,
              21.028613
            ],
            [
              -78.719867,
              21.598114
            ],
            [
              -79.285,
              21.559175
            ],
            [
              -80.217475,
              21.827324
            ],
            [
              -80.517535,
              22.037079
            ],
            [
              -81.820943,
              22.192057
            ],
            [
              -82.169992,
              22.387109
            ],
            [
              -81.795002,
              22.636965
            ],
            [
              -82.775898,
              22.68815
            ],
            [
              -83.494459,
              22.168518
            ],
            [
              -83.9088,
              22.154565
            ],
            [
              -84.052151,
              21.910575
            ],
            [
              -84.54703,
              21.801228
            ],
            [
              -84.974911,
              21.896028
            ],
            [
              -84.447062,
              22.20495
            ],
            [
              -84.230357,
              22.565755
            ],
            [
              -83.77824,
              22.788118
            ],
            [
              -83.267548,
              22.983042
            ],
            [
              -82.510436,
              23.078747
            ],
            [
              -82.268151,
              23.188611
            ]
          ]
        ]
      },
      id: "CUB"
    },
    {
      type: "Feature",
      properties: {
        name: "Northern Cyprus"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              32.73178,
              35.140026
            ],
            [
              32.802474,
              35.145504
            ],
            [
              32.946961,
              35.386703
            ],
            [
              33.667227,
              35.373216
            ],
            [
              34.576474,
              35.671596
            ],
            [
              33.900804,
              35.245756
            ],
            [
              33.973617,
              35.058506
            ],
            [
              33.86644,
              35.093595
            ],
            [
              33.675392,
              35.017863
            ],
            [
              33.525685,
              35.038688
            ],
            [
              33.475817,
              35.000345
            ],
            [
              33.455922,
              35.101424
            ],
            [
              33.383833,
              35.162712
            ],
            [
              33.190977,
              35.173125
            ],
            [
              32.919572,
              35.087833
            ],
            [
              32.73178,
              35.140026
            ]
          ]
        ]
      },
      id: "-99"
    },
    {
      type: "Feature",
      properties: {
        name: "Cyprus"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              33.973617,
              35.058506
            ],
            [
              34.004881,
              34.978098
            ],
            [
              32.979827,
              34.571869
            ],
            [
              32.490296,
              34.701655
            ],
            [
              32.256667,
              35.103232
            ],
            [
              32.73178,
              35.140026
            ],
            [
              32.919572,
              35.087833
            ],
            [
              33.190977,
              35.173125
            ],
            [
              33.383833,
              35.162712
            ],
            [
              33.455922,
              35.101424
            ],
            [
              33.475817,
              35.000345
            ],
            [
              33.525685,
              35.038688
            ],
            [
              33.675392,
              35.017863
            ],
            [
              33.86644,
              35.093595
            ],
            [
              33.973617,
              35.058506
            ]
          ]
        ]
      },
      id: "CYP"
    },
    {
      type: "Feature",
      properties: {
        name: "Czech Republic"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              16.960288,
              48.596982
            ],
            [
              16.499283,
              48.785808
            ],
            [
              16.029647,
              48.733899
            ],
            [
              15.253416,
              49.039074
            ],
            [
              14.901447,
              48.964402
            ],
            [
              14.338898,
              48.555305
            ],
            [
              13.595946,
              48.877172
            ],
            [
              13.031329,
              49.307068
            ],
            [
              12.521024,
              49.547415
            ],
            [
              12.415191,
              49.969121
            ],
            [
              12.240111,
              50.266338
            ],
            [
              12.966837,
              50.484076
            ],
            [
              13.338132,
              50.733234
            ],
            [
              14.056228,
              50.926918
            ],
            [
              14.307013,
              51.117268
            ],
            [
              14.570718,
              51.002339
            ],
            [
              15.016996,
              51.106674
            ],
            [
              15.490972,
              50.78473
            ],
            [
              16.238627,
              50.697733
            ],
            [
              16.176253,
              50.422607
            ],
            [
              16.719476,
              50.215747
            ],
            [
              16.868769,
              50.473974
            ],
            [
              17.554567,
              50.362146
            ],
            [
              17.649445,
              50.049038
            ],
            [
              18.392914,
              49.988629
            ],
            [
              18.853144,
              49.49623
            ],
            [
              18.554971,
              49.495015
            ],
            [
              18.399994,
              49.315001
            ],
            [
              18.170498,
              49.271515
            ],
            [
              18.104973,
              49.043983
            ],
            [
              17.913512,
              48.996493
            ],
            [
              17.886485,
              48.903475
            ],
            [
              17.545007,
              48.800019
            ],
            [
              17.101985,
              48.816969
            ],
            [
              16.960288,
              48.596982
            ]
          ]
        ]
      },
      id: "CZE"
    },
    {
      type: "Feature",
      properties: {
        name: "Germany"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              9.921906,
              54.983104
            ],
            [
              9.93958,
              54.596642
            ],
            [
              10.950112,
              54.363607
            ],
            [
              10.939467,
              54.008693
            ],
            [
              11.956252,
              54.196486
            ],
            [
              12.51844,
              54.470371
            ],
            [
              13.647467,
              54.075511
            ],
            [
              14.119686,
              53.757029
            ],
            [
              14.353315,
              53.248171
            ],
            [
              14.074521,
              52.981263
            ],
            [
              14.4376,
              52.62485
            ],
            [
              14.685026,
              52.089947
            ],
            [
              14.607098,
              51.745188
            ],
            [
              15.016996,
              51.106674
            ],
            [
              14.570718,
              51.002339
            ],
            [
              14.307013,
              51.117268
            ],
            [
              14.056228,
              50.926918
            ],
            [
              13.338132,
              50.733234
            ],
            [
              12.966837,
              50.484076
            ],
            [
              12.240111,
              50.266338
            ],
            [
              12.415191,
              49.969121
            ],
            [
              12.521024,
              49.547415
            ],
            [
              13.031329,
              49.307068
            ],
            [
              13.595946,
              48.877172
            ],
            [
              13.243357,
              48.416115
            ],
            [
              12.884103,
              48.289146
            ],
            [
              13.025851,
              47.637584
            ],
            [
              12.932627,
              47.467646
            ],
            [
              12.62076,
              47.672388
            ],
            [
              12.141357,
              47.703083
            ],
            [
              11.426414,
              47.523766
            ],
            [
              10.544504,
              47.566399
            ],
            [
              10.402084,
              47.302488
            ],
            [
              9.896068,
              47.580197
            ],
            [
              9.594226,
              47.525058
            ],
            [
              8.522612,
              47.830828
            ],
            [
              8.317301,
              47.61358
            ],
            [
              7.466759,
              47.620582
            ],
            [
              7.593676,
              48.333019
            ],
            [
              8.099279,
              49.017784
            ],
            [
              6.65823,
              49.201958
            ],
            [
              6.18632,
              49.463803
            ],
            [
              6.242751,
              49.902226
            ],
            [
              6.043073,
              50.128052
            ],
            [
              6.156658,
              50.803721
            ],
            [
              5.988658,
              51.851616
            ],
            [
              6.589397,
              51.852029
            ],
            [
              6.84287,
              52.22844
            ],
            [
              7.092053,
              53.144043
            ],
            [
              6.90514,
              53.482162
            ],
            [
              7.100425,
              53.693932
            ],
            [
              7.936239,
              53.748296
            ],
            [
              8.121706,
              53.527792
            ],
            [
              8.800734,
              54.020786
            ],
            [
              8.572118,
              54.395646
            ],
            [
              8.526229,
              54.962744
            ],
            [
              9.282049,
              54.830865
            ],
            [
              9.921906,
              54.983104
            ]
          ]
        ]
      },
      id: "DEU"
    },
    {
      type: "Feature",
      properties: {
        name: "Djibouti"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              43.081226,
              12.699639
            ],
            [
              43.317852,
              12.390148
            ],
            [
              43.286381,
              11.974928
            ],
            [
              42.715874,
              11.735641
            ],
            [
              43.145305,
              11.46204
            ],
            [
              42.776852,
              10.926879
            ],
            [
              42.55493,
              11.10511
            ],
            [
              42.31414,
              11.0342
            ],
            [
              41.75557,
              11.05091
            ],
            [
              41.73959,
              11.35511
            ],
            [
              41.66176,
              11.6312
            ],
            [
              42,
              12.1
            ],
            [
              42.35156,
              12.54223
            ],
            [
              42.779642,
              12.455416
            ],
            [
              43.081226,
              12.699639
            ]
          ]
        ]
      },
      id: "DJI"
    },
    {
      type: "Feature",
      properties: {
        name: "Denmark"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                12.690006,
                55.609991
              ],
              [
                12.089991,
                54.800015
              ],
              [
                11.043543,
                55.364864
              ],
              [
                10.903914,
                55.779955
              ],
              [
                12.370904,
                56.111407
              ],
              [
                12.690006,
                55.609991
              ]
            ]
          ],
          [
            [
              [
                10.912182,
                56.458621
              ],
              [
                10.667804,
                56.081383
              ],
              [
                10.369993,
                56.190007
              ],
              [
                9.649985,
                55.469999
              ],
              [
                9.921906,
                54.983104
              ],
              [
                9.282049,
                54.830865
              ],
              [
                8.526229,
                54.962744
              ],
              [
                8.120311,
                55.517723
              ],
              [
                8.089977,
                56.540012
              ],
              [
                8.256582,
                56.809969
              ],
              [
                8.543438,
                57.110003
              ],
              [
                9.424469,
                57.172066
              ],
              [
                9.775559,
                57.447941
              ],
              [
                10.580006,
                57.730017
              ],
              [
                10.546106,
                57.215733
              ],
              [
                10.25,
                56.890016
              ],
              [
                10.369993,
                56.609982
              ],
              [
                10.912182,
                56.458621
              ]
            ]
          ]
        ]
      },
      id: "DNK"
    },
    {
      type: "Feature",
      properties: {
        name: "Dominican Republic"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -71.712361,
              19.714456
            ],
            [
              -71.587304,
              19.884911
            ],
            [
              -70.806706,
              19.880286
            ],
            [
              -70.214365,
              19.622885
            ],
            [
              -69.950815,
              19.648
            ],
            [
              -69.76925,
              19.293267
            ],
            [
              -69.222126,
              19.313214
            ],
            [
              -69.254346,
              19.015196
            ],
            [
              -68.809412,
              18.979074
            ],
            [
              -68.317943,
              18.612198
            ],
            [
              -68.689316,
              18.205142
            ],
            [
              -69.164946,
              18.422648
            ],
            [
              -69.623988,
              18.380713
            ],
            [
              -69.952934,
              18.428307
            ],
            [
              -70.133233,
              18.245915
            ],
            [
              -70.517137,
              18.184291
            ],
            [
              -70.669298,
              18.426886
            ],
            [
              -70.99995,
              18.283329
            ],
            [
              -71.40021,
              17.598564
            ],
            [
              -71.657662,
              17.757573
            ],
            [
              -71.708305,
              18.044997
            ],
            [
              -71.687738,
              18.31666
            ],
            [
              -71.945112,
              18.6169
            ],
            [
              -71.701303,
              18.785417
            ],
            [
              -71.624873,
              19.169838
            ],
            [
              -71.712361,
              19.714456
            ]
          ]
        ]
      },
      id: "DOM"
    },
    {
      type: "Feature",
      properties: {
        name: "Algeria"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              11.999506,
              23.471668
            ],
            [
              8.572893,
              21.565661
            ],
            [
              5.677566,
              19.601207
            ],
            [
              4.267419,
              19.155265
            ],
            [
              3.158133,
              19.057364
            ],
            [
              3.146661,
              19.693579
            ],
            [
              2.683588,
              19.85623
            ],
            [
              2.060991,
              20.142233
            ],
            [
              1.823228,
              20.610809
            ],
            [
              -1.550055,
              22.792666
            ],
            [
              -4.923337,
              24.974574
            ],
            [
              -8.6844,
              27.395744
            ],
            [
              -8.665124,
              27.589479
            ],
            [
              -8.66559,
              27.656426
            ],
            [
              -8.674116,
              28.841289
            ],
            [
              -7.059228,
              29.579228
            ],
            [
              -6.060632,
              29.7317
            ],
            [
              -5.242129,
              30.000443
            ],
            [
              -4.859646,
              30.501188
            ],
            [
              -3.690441,
              30.896952
            ],
            [
              -3.647498,
              31.637294
            ],
            [
              -3.06898,
              31.724498
            ],
            [
              -2.616605,
              32.094346
            ],
            [
              -1.307899,
              32.262889
            ],
            [
              -1.124551,
              32.651522
            ],
            [
              -1.388049,
              32.864015
            ],
            [
              -1.733455,
              33.919713
            ],
            [
              -1.792986,
              34.527919
            ],
            [
              -2.169914,
              35.168396
            ],
            [
              -1.208603,
              35.714849
            ],
            [
              -0.127454,
              35.888662
            ],
            [
              0.503877,
              36.301273
            ],
            [
              1.466919,
              36.605647
            ],
            [
              3.161699,
              36.783905
            ],
            [
              4.815758,
              36.865037
            ],
            [
              5.32012,
              36.716519
            ],
            [
              6.26182,
              37.110655
            ],
            [
              7.330385,
              37.118381
            ],
            [
              7.737078,
              36.885708
            ],
            [
              8.420964,
              36.946427
            ],
            [
              8.217824,
              36.433177
            ],
            [
              8.376368,
              35.479876
            ],
            [
              8.140981,
              34.655146
            ],
            [
              7.524482,
              34.097376
            ],
            [
              7.612642,
              33.344115
            ],
            [
              8.430473,
              32.748337
            ],
            [
              8.439103,
              32.506285
            ],
            [
              9.055603,
              32.102692
            ],
            [
              9.48214,
              30.307556
            ],
            [
              9.805634,
              29.424638
            ],
            [
              9.859998,
              28.95999
            ],
            [
              9.683885,
              28.144174
            ],
            [
              9.756128,
              27.688259
            ],
            [
              9.629056,
              27.140953
            ],
            [
              9.716286,
              26.512206
            ],
            [
              9.319411,
              26.094325
            ],
            [
              9.910693,
              25.365455
            ],
            [
              9.948261,
              24.936954
            ],
            [
              10.303847,
              24.379313
            ],
            [
              10.771364,
              24.562532
            ],
            [
              11.560669,
              24.097909
            ],
            [
              11.999506,
              23.471668
            ]
          ]
        ]
      },
      id: "DZA"
    },
    {
      type: "Feature",
      properties: {
        name: "Ecuador"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -80.302561,
              -3.404856
            ],
            [
              -79.770293,
              -2.657512
            ],
            [
              -79.986559,
              -2.220794
            ],
            [
              -80.368784,
              -2.685159
            ],
            [
              -80.967765,
              -2.246943
            ],
            [
              -80.764806,
              -1.965048
            ],
            [
              -80.933659,
              -1.057455
            ],
            [
              -80.58337,
              -0.906663
            ],
            [
              -80.399325,
              -0.283703
            ],
            [
              -80.020898,
              0.36034
            ],
            [
              -80.09061,
              0.768429
            ],
            [
              -79.542762,
              0.982938
            ],
            [
              -78.855259,
              1.380924
            ],
            [
              -77.855061,
              0.809925
            ],
            [
              -77.668613,
              0.825893
            ],
            [
              -77.424984,
              0.395687
            ],
            [
              -76.57638,
              0.256936
            ],
            [
              -76.292314,
              0.416047
            ],
            [
              -75.801466,
              0.084801
            ],
            [
              -75.373223,
              -0.152032
            ],
            [
              -75.233723,
              -0.911417
            ],
            [
              -75.544996,
              -1.56161
            ],
            [
              -76.635394,
              -2.608678
            ],
            [
              -77.837905,
              -3.003021
            ],
            [
              -78.450684,
              -3.873097
            ],
            [
              -78.639897,
              -4.547784
            ],
            [
              -79.205289,
              -4.959129
            ],
            [
              -79.624979,
              -4.454198
            ],
            [
              -80.028908,
              -4.346091
            ],
            [
              -80.442242,
              -4.425724
            ],
            [
              -80.469295,
              -4.059287
            ],
            [
              -80.184015,
              -3.821162
            ],
            [
              -80.302561,
              -3.404856
            ]
          ]
        ]
      },
      id: "ECU"
    },
    {
      type: "Feature",
      properties: {
        name: "Egypt"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              34.9226,
              29.50133
            ],
            [
              34.64174,
              29.09942
            ],
            [
              34.42655,
              28.34399
            ],
            [
              34.15451,
              27.8233
            ],
            [
              33.92136,
              27.6487
            ],
            [
              33.58811,
              27.97136
            ],
            [
              33.13676,
              28.41765
            ],
            [
              32.42323,
              29.85108
            ],
            [
              32.32046,
              29.76043
            ],
            [
              32.73482,
              28.70523
            ],
            [
              33.34876,
              27.69989
            ],
            [
              34.10455,
              26.14227
            ],
            [
              34.47387,
              25.59856
            ],
            [
              34.79507,
              25.03375
            ],
            [
              35.69241,
              23.92671
            ],
            [
              35.49372,
              23.75237
            ],
            [
              35.52598,
              23.10244
            ],
            [
              36.69069,
              22.20485
            ],
            [
              36.86623,
              22
            ],
            [
              32.9,
              22
            ],
            [
              29.02,
              22
            ],
            [
              25,
              22
            ],
            [
              25,
              25.6825
            ],
            [
              25,
              29.238655
            ],
            [
              24.70007,
              30.04419
            ],
            [
              24.95762,
              30.6616
            ],
            [
              24.80287,
              31.08929
            ],
            [
              25.16482,
              31.56915
            ],
            [
              26.49533,
              31.58568
            ],
            [
              27.45762,
              31.32126
            ],
            [
              28.45048,
              31.02577
            ],
            [
              28.91353,
              30.87005
            ],
            [
              29.68342,
              31.18686
            ],
            [
              30.09503,
              31.4734
            ],
            [
              30.97693,
              31.55586
            ],
            [
              31.68796,
              31.4296
            ],
            [
              31.96041,
              30.9336
            ],
            [
              32.19247,
              31.26034
            ],
            [
              32.99392,
              31.02407
            ],
            [
              33.7734,
              30.96746
            ],
            [
              34.26544,
              31.21936
            ],
            [
              34.9226,
              29.50133
            ]
          ]
        ]
      },
      id: "EGY"
    },
    {
      type: "Feature",
      properties: {
        name: "Eritrea"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              42.35156,
              12.54223
            ],
            [
              42.00975,
              12.86582
            ],
            [
              41.59856,
              13.45209
            ],
            [
              41.155194,
              13.77332
            ],
            [
              40.8966,
              14.11864
            ],
            [
              40.026219,
              14.519579
            ],
            [
              39.34061,
              14.53155
            ],
            [
              39.0994,
              14.74064
            ],
            [
              38.51295,
              14.50547
            ],
            [
              37.90607,
              14.95943
            ],
            [
              37.59377,
              14.2131
            ],
            [
              36.42951,
              14.42211
            ],
            [
              36.323189,
              14.822481
            ],
            [
              36.75386,
              16.291874
            ],
            [
              36.85253,
              16.95655
            ],
            [
              37.16747,
              17.26314
            ],
            [
              37.904,
              17.42754
            ],
            [
              38.41009,
              17.998307
            ],
            [
              38.990623,
              16.840626
            ],
            [
              39.26611,
              15.922723
            ],
            [
              39.814294,
              15.435647
            ],
            [
              41.179275,
              14.49108
            ],
            [
              41.734952,
              13.921037
            ],
            [
              42.276831,
              13.343992
            ],
            [
              42.589576,
              13.000421
            ],
            [
              43.081226,
              12.699639
            ],
            [
              42.779642,
              12.455416
            ],
            [
              42.35156,
              12.54223
            ]
          ]
        ]
      },
      id: "ERI"
    },
    {
      type: "Feature",
      properties: {
        name: "Spain"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -9.034818,
              41.880571
            ],
            [
              -8.984433,
              42.592775
            ],
            [
              -9.392884,
              43.026625
            ],
            [
              -7.97819,
              43.748338
            ],
            [
              -6.754492,
              43.567909
            ],
            [
              -5.411886,
              43.57424
            ],
            [
              -4.347843,
              43.403449
            ],
            [
              -3.517532,
              43.455901
            ],
            [
              -1.901351,
              43.422802
            ],
            [
              -1.502771,
              43.034014
            ],
            [
              0.338047,
              42.579546
            ],
            [
              0.701591,
              42.795734
            ],
            [
              1.826793,
              42.343385
            ],
            [
              2.985999,
              42.473015
            ],
            [
              3.039484,
              41.89212
            ],
            [
              2.091842,
              41.226089
            ],
            [
              0.810525,
              41.014732
            ],
            [
              0.721331,
              40.678318
            ],
            [
              0.106692,
              40.123934
            ],
            [
              -0.278711,
              39.309978
            ],
            [
              0.111291,
              38.738514
            ],
            [
              -0.467124,
              38.292366
            ],
            [
              -0.683389,
              37.642354
            ],
            [
              -1.438382,
              37.443064
            ],
            [
              -2.146453,
              36.674144
            ],
            [
              -3.415781,
              36.6589
            ],
            [
              -4.368901,
              36.677839
            ],
            [
              -4.995219,
              36.324708
            ],
            [
              -5.37716,
              35.94685
            ],
            [
              -5.866432,
              36.029817
            ],
            [
              -6.236694,
              36.367677
            ],
            [
              -6.520191,
              36.942913
            ],
            [
              -7.453726,
              37.097788
            ],
            [
              -7.537105,
              37.428904
            ],
            [
              -7.166508,
              37.803894
            ],
            [
              -7.029281,
              38.075764
            ],
            [
              -7.374092,
              38.373059
            ],
            [
              -7.098037,
              39.030073
            ],
            [
              -7.498632,
              39.629571
            ],
            [
              -7.066592,
              39.711892
            ],
            [
              -7.026413,
              40.184524
            ],
            [
              -6.86402,
              40.330872
            ],
            [
              -6.851127,
              41.111083
            ],
            [
              -6.389088,
              41.381815
            ],
            [
              -6.668606,
              41.883387
            ],
            [
              -7.251309,
              41.918346
            ],
            [
              -7.422513,
              41.792075
            ],
            [
              -8.013175,
              41.790886
            ],
            [
              -8.263857,
              42.280469
            ],
            [
              -8.671946,
              42.134689
            ],
            [
              -9.034818,
              41.880571
            ]
          ]
        ]
      },
      id: "ESP"
    },
    {
      type: "Feature",
      properties: {
        name: "Estonia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              24.312863,
              57.793424
            ],
            [
              24.428928,
              58.383413
            ],
            [
              24.061198,
              58.257375
            ],
            [
              23.42656,
              58.612753
            ],
            [
              23.339795,
              59.18724
            ],
            [
              24.604214,
              59.465854
            ],
            [
              25.864189,
              59.61109
            ],
            [
              26.949136,
              59.445803
            ],
            [
              27.981114,
              59.475388
            ],
            [
              28.131699,
              59.300825
            ],
            [
              27.420166,
              58.724581
            ],
            [
              27.716686,
              57.791899
            ],
            [
              27.288185,
              57.474528
            ],
            [
              26.463532,
              57.476389
            ],
            [
              25.60281,
              57.847529
            ],
            [
              25.164594,
              57.970157
            ],
            [
              24.312863,
              57.793424
            ]
          ]
        ]
      },
      id: "EST"
    },
    {
      type: "Feature",
      properties: {
        name: "Ethiopia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              37.90607,
              14.95943
            ],
            [
              38.51295,
              14.50547
            ],
            [
              39.0994,
              14.74064
            ],
            [
              39.34061,
              14.53155
            ],
            [
              40.02625,
              14.51959
            ],
            [
              40.8966,
              14.11864
            ],
            [
              41.1552,
              13.77333
            ],
            [
              41.59856,
              13.45209
            ],
            [
              42.00975,
              12.86582
            ],
            [
              42.35156,
              12.54223
            ],
            [
              42,
              12.1
            ],
            [
              41.66176,
              11.6312
            ],
            [
              41.73959,
              11.35511
            ],
            [
              41.75557,
              11.05091
            ],
            [
              42.31414,
              11.0342
            ],
            [
              42.55493,
              11.10511
            ],
            [
              42.776852,
              10.926879
            ],
            [
              42.55876,
              10.57258
            ],
            [
              42.92812,
              10.02194
            ],
            [
              43.29699,
              9.54048
            ],
            [
              43.67875,
              9.18358
            ],
            [
              46.94834,
              7.99688
            ],
            [
              47.78942,
              8.003
            ],
            [
              44.9636,
              5.00162
            ],
            [
              43.66087,
              4.95755
            ],
            [
              42.76967,
              4.25259
            ],
            [
              42.12861,
              4.23413
            ],
            [
              41.855083,
              3.918912
            ],
            [
              41.1718,
              3.91909
            ],
            [
              40.76848,
              4.25702
            ],
            [
              39.85494,
              3.83879
            ],
            [
              39.559384,
              3.42206
            ],
            [
              38.89251,
              3.50074
            ],
            [
              38.67114,
              3.61607
            ],
            [
              38.43697,
              3.58851
            ],
            [
              38.120915,
              3.598605
            ],
            [
              36.855093,
              4.447864
            ],
            [
              36.159079,
              4.447864
            ],
            [
              35.817448,
              4.776966
            ],
            [
              35.817448,
              5.338232
            ],
            [
              35.298007,
              5.506
            ],
            [
              34.70702,
              6.59422
            ],
            [
              34.25032,
              6.82607
            ],
            [
              34.0751,
              7.22595
            ],
            [
              33.56829,
              7.71334
            ],
            [
              32.95418,
              7.78497
            ],
            [
              33.2948,
              8.35458
            ],
            [
              33.8255,
              8.37916
            ],
            [
              33.97498,
              8.68456
            ],
            [
              33.96162,
              9.58358
            ],
            [
              34.25745,
              10.63009
            ],
            [
              34.73115,
              10.91017
            ],
            [
              34.83163,
              11.31896
            ],
            [
              35.26049,
              12.08286
            ],
            [
              35.86363,
              12.57828
            ],
            [
              36.27022,
              13.56333
            ],
            [
              36.42951,
              14.42211
            ],
            [
              37.59377,
              14.2131
            ],
            [
              37.90607,
              14.95943
            ]
          ]
        ]
      },
      id: "ETH"
    },
    {
      type: "Feature",
      properties: {
        name: "Finland"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              28.59193,
              69.064777
            ],
            [
              28.445944,
              68.364613
            ],
            [
              29.977426,
              67.698297
            ],
            [
              29.054589,
              66.944286
            ],
            [
              30.21765,
              65.80598
            ],
            [
              29.54443,
              64.948672
            ],
            [
              30.444685,
              64.204453
            ],
            [
              30.035872,
              63.552814
            ],
            [
              31.516092,
              62.867687
            ],
            [
              31.139991,
              62.357693
            ],
            [
              30.211107,
              61.780028
            ],
            [
              28.069998,
              60.503517
            ],
            [
              26.255173,
              60.423961
            ],
            [
              24.496624,
              60.057316
            ],
            [
              22.869695,
              59.846373
            ],
            [
              22.290764,
              60.391921
            ],
            [
              21.322244,
              60.72017
            ],
            [
              21.544866,
              61.705329
            ],
            [
              21.059211,
              62.607393
            ],
            [
              21.536029,
              63.189735
            ],
            [
              22.442744,
              63.81781
            ],
            [
              24.730512,
              64.902344
            ],
            [
              25.398068,
              65.111427
            ],
            [
              25.294043,
              65.534346
            ],
            [
              23.903379,
              66.006927
            ],
            [
              23.56588,
              66.396051
            ],
            [
              23.539473,
              67.936009
            ],
            [
              21.978535,
              68.616846
            ],
            [
              20.645593,
              69.106247
            ],
            [
              21.244936,
              69.370443
            ],
            [
              22.356238,
              68.841741
            ],
            [
              23.66205,
              68.891247
            ],
            [
              24.735679,
              68.649557
            ],
            [
              25.689213,
              69.092114
            ],
            [
              26.179622,
              69.825299
            ],
            [
              27.732292,
              70.164193
            ],
            [
              29.015573,
              69.766491
            ],
            [
              28.59193,
              69.064777
            ]
          ]
        ]
      },
      id: "FIN"
    },
    {
      type: "Feature",
      properties: {
        name: "Fiji"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                178.3736,
                -17.33992
              ],
              [
                178.71806,
                -17.62846
              ],
              [
                178.55271,
                -18.15059
              ],
              [
                177.93266,
                -18.28799
              ],
              [
                177.38146,
                -18.16432
              ],
              [
                177.28504,
                -17.72465
              ],
              [
                177.67087,
                -17.38114
              ],
              [
                178.12557,
                -17.50481
              ],
              [
                178.3736,
                -17.33992
              ]
            ]
          ],
          [
            [
              [
                179.364143,
                -16.801354
              ],
              [
                178.725059,
                -17.012042
              ],
              [
                178.596839,
                -16.63915
              ],
              [
                179.096609,
                -16.433984
              ],
              [
                179.413509,
                -16.379054
              ],
              [
                180,
                -16.067133
              ],
              [
                180,
                -16.555217
              ],
              [
                179.364143,
                -16.801354
              ]
            ]
          ],
          [
            [
              [
                -179.917369,
                -16.501783
              ],
              [
                -180,
                -16.555217
              ],
              [
                -180,
                -16.067133
              ],
              [
                -179.79332,
                -16.020882
              ],
              [
                -179.917369,
                -16.501783
              ]
            ]
          ]
        ]
      },
      id: "FJI"
    },
    {
      type: "Feature",
      properties: {
        name: "Falkland Islands"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -61.2,
              -51.85
            ],
            [
              -60,
              -51.25
            ],
            [
              -59.15,
              -51.5
            ],
            [
              -58.55,
              -51.1
            ],
            [
              -57.75,
              -51.55
            ],
            [
              -58.05,
              -51.9
            ],
            [
              -59.4,
              -52.2
            ],
            [
              -59.85,
              -51.85
            ],
            [
              -60.7,
              -52.3
            ],
            [
              -61.2,
              -51.85
            ]
          ]
        ]
      },
      id: "FLK"
    },
    {
      type: "Feature",
      properties: {
        name: "France"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                -52.556425,
                2.504705
              ],
              [
                -52.939657,
                2.124858
              ],
              [
                -53.418465,
                2.053389
              ],
              [
                -53.554839,
                2.334897
              ],
              [
                -53.778521,
                2.376703
              ],
              [
                -54.088063,
                2.105557
              ],
              [
                -54.524754,
                2.311849
              ],
              [
                -54.27123,
                2.738748
              ],
              [
                -54.184284,
                3.194172
              ],
              [
                -54.011504,
                3.62257
              ],
              [
                -54.399542,
                4.212611
              ],
              [
                -54.478633,
                4.896756
              ],
              [
                -53.958045,
                5.756548
              ],
              [
                -53.618453,
                5.646529
              ],
              [
                -52.882141,
                5.409851
              ],
              [
                -51.823343,
                4.565768
              ],
              [
                -51.657797,
                4.156232
              ],
              [
                -52.249338,
                3.241094
              ],
              [
                -52.556425,
                2.504705
              ]
            ]
          ],
          [
            [
              [
                9.560016,
                42.152492
              ],
              [
                9.229752,
                41.380007
              ],
              [
                8.775723,
                41.583612
              ],
              [
                8.544213,
                42.256517
              ],
              [
                8.746009,
                42.628122
              ],
              [
                9.390001,
                43.009985
              ],
              [
                9.560016,
                42.152492
              ]
            ]
          ],
          [
            [
              [
                3.588184,
                50.378992
              ],
              [
                4.286023,
                49.907497
              ],
              [
                4.799222,
                49.985373
              ],
              [
                5.674052,
                49.529484
              ],
              [
                5.897759,
                49.442667
              ],
              [
                6.18632,
                49.463803
              ],
              [
                6.65823,
                49.201958
              ],
              [
                8.099279,
                49.017784
              ],
              [
                7.593676,
                48.333019
              ],
              [
                7.466759,
                47.620582
              ],
              [
                7.192202,
                47.449766
              ],
              [
                6.736571,
                47.541801
              ],
              [
                6.768714,
                47.287708
              ],
              [
                6.037389,
                46.725779
              ],
              [
                6.022609,
                46.27299
              ],
              [
                6.5001,
                46.429673
              ],
              [
                6.843593,
                45.991147
              ],
              [
                6.802355,
                45.70858
              ],
              [
                7.096652,
                45.333099
              ],
              [
                6.749955,
                45.028518
              ],
              [
                7.007562,
                44.254767
              ],
              [
                7.549596,
                44.127901
              ],
              [
                7.435185,
                43.693845
              ],
              [
                6.529245,
                43.128892
              ],
              [
                4.556963,
                43.399651
              ],
              [
                3.100411,
                43.075201
              ],
              [
                2.985999,
                42.473015
              ],
              [
                1.826793,
                42.343385
              ],
              [
                0.701591,
                42.795734
              ],
              [
                0.338047,
                42.579546
              ],
              [
                -1.502771,
                43.034014
              ],
              [
                -1.901351,
                43.422802
              ],
              [
                -1.384225,
                44.02261
              ],
              [
                -1.193798,
                46.014918
              ],
              [
                -2.225724,
                47.064363
              ],
              [
                -2.963276,
                47.570327
              ],
              [
                -4.491555,
                47.954954
              ],
              [
                -4.59235,
                48.68416
              ],
              [
                -3.295814,
                48.901692
              ],
              [
                -1.616511,
                48.644421
              ],
              [
                -1.933494,
                49.776342
              ],
              [
                -0.989469,
                49.347376
              ],
              [
                1.338761,
                50.127173
              ],
              [
                1.639001,
                50.946606
              ],
              [
                2.513573,
                51.148506
              ],
              [
                2.658422,
                50.796848
              ],
              [
                3.123252,
                50.780363
              ],
              [
                3.588184,
                50.378992
              ]
            ]
          ]
        ]
      },
      id: "FRA"
    },
    {
      type: "Feature",
      properties: {
        name: "Gabon"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              11.093773,
              -3.978827
            ],
            [
              10.066135,
              -2.969483
            ],
            [
              9.405245,
              -2.144313
            ],
            [
              8.797996,
              -1.111301
            ],
            [
              8.830087,
              -0.779074
            ],
            [
              9.04842,
              -0.459351
            ],
            [
              9.291351,
              0.268666
            ],
            [
              9.492889,
              1.01012
            ],
            [
              9.830284,
              1.067894
            ],
            [
              11.285079,
              1.057662
            ],
            [
              11.276449,
              2.261051
            ],
            [
              11.751665,
              2.326758
            ],
            [
              12.35938,
              2.192812
            ],
            [
              12.951334,
              2.321616
            ],
            [
              13.075822,
              2.267097
            ],
            [
              13.003114,
              1.830896
            ],
            [
              13.282631,
              1.314184
            ],
            [
              14.026669,
              1.395677
            ],
            [
              14.276266,
              1.19693
            ],
            [
              13.843321,
              0.038758
            ],
            [
              14.316418,
              -0.552627
            ],
            [
              14.425456,
              -1.333407
            ],
            [
              14.29921,
              -1.998276
            ],
            [
              13.992407,
              -2.470805
            ],
            [
              13.109619,
              -2.42874
            ],
            [
              12.575284,
              -1.948511
            ],
            [
              12.495703,
              -2.391688
            ],
            [
              11.820964,
              -2.514161
            ],
            [
              11.478039,
              -2.765619
            ],
            [
              11.855122,
              -3.426871
            ],
            [
              11.093773,
              -3.978827
            ]
          ]
        ]
      },
      id: "GAB"
    },
    {
      type: "Feature",
      properties: {
        name: "UK"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                -5.661949,
                54.554603
              ],
              [
                -6.197885,
                53.867565
              ],
              [
                -6.95373,
                54.073702
              ],
              [
                -7.572168,
                54.059956
              ],
              [
                -7.366031,
                54.595841
              ],
              [
                -7.572168,
                55.131622
              ],
              [
                -6.733847,
                55.17286
              ],
              [
                -5.661949,
                54.554603
              ]
            ]
          ],
          [
            [
              [
                -3.005005,
                58.635
              ],
              [
                -4.073828,
                57.553025
              ],
              [
                -3.055002,
                57.690019
              ],
              [
                -1.959281,
                57.6848
              ],
              [
                -2.219988,
                56.870017
              ],
              [
                -3.119003,
                55.973793
              ],
              [
                -2.085009,
                55.909998
              ],
              [
                -2.005676,
                55.804903
              ],
              [
                -1.114991,
                54.624986
              ],
              [
                -0.430485,
                54.464376
              ],
              [
                0.184981,
                53.325014
              ],
              [
                0.469977,
                52.929999
              ],
              [
                1.681531,
                52.73952
              ],
              [
                1.559988,
                52.099998
              ],
              [
                1.050562,
                51.806761
              ],
              [
                1.449865,
                51.289428
              ],
              [
                0.550334,
                50.765739
              ],
              [
                -0.787517,
                50.774989
              ],
              [
                -2.489998,
                50.500019
              ],
              [
                -2.956274,
                50.69688
              ],
              [
                -3.617448,
                50.228356
              ],
              [
                -4.542508,
                50.341837
              ],
              [
                -5.245023,
                49.96
              ],
              [
                -5.776567,
                50.159678
              ],
              [
                -4.30999,
                51.210001
              ],
              [
                -3.414851,
                51.426009
              ],
              [
                -3.422719,
                51.426848
              ],
              [
                -4.984367,
                51.593466
              ],
              [
                -5.267296,
                51.9914
              ],
              [
                -4.222347,
                52.301356
              ],
              [
                -4.770013,
                52.840005
              ],
              [
                -4.579999,
                53.495004
              ],
              [
                -3.093831,
                53.404547
              ],
              [
                -3.09208,
                53.404441
              ],
              [
                -2.945009,
                53.985
              ],
              [
                -3.614701,
                54.600937
              ],
              [
                -3.630005,
                54.615013
              ],
              [
                -4.844169,
                54.790971
              ],
              [
                -5.082527,
                55.061601
              ],
              [
                -4.719112,
                55.508473
              ],
              [
                -5.047981,
                55.783986
              ],
              [
                -5.586398,
                55.311146
              ],
              [
                -5.644999,
                56.275015
              ],
              [
                -6.149981,
                56.78501
              ],
              [
                -5.786825,
                57.818848
              ],
              [
                -5.009999,
                58.630013
              ],
              [
                -4.211495,
                58.550845
              ],
              [
                -3.005005,
                58.635
              ]
            ]
          ]
        ]
      },
      id: "GBR"
    },
    {
      type: "Feature",
      properties: {
        name: "Georgia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              41.554084,
              41.535656
            ],
            [
              41.703171,
              41.962943
            ],
            [
              41.45347,
              42.645123
            ],
            [
              40.875469,
              43.013628
            ],
            [
              40.321394,
              43.128634
            ],
            [
              39.955009,
              43.434998
            ],
            [
              40.076965,
              43.553104
            ],
            [
              40.922185,
              43.382159
            ],
            [
              42.394395,
              43.220308
            ],
            [
              43.756017,
              42.740828
            ],
            [
              43.9312,
              42.554974
            ],
            [
              44.537623,
              42.711993
            ],
            [
              45.470279,
              42.502781
            ],
            [
              45.77641,
              42.092444
            ],
            [
              46.404951,
              41.860675
            ],
            [
              46.145432,
              41.722802
            ],
            [
              46.637908,
              41.181673
            ],
            [
              46.501637,
              41.064445
            ],
            [
              45.962601,
              41.123873
            ],
            [
              45.217426,
              41.411452
            ],
            [
              44.97248,
              41.248129
            ],
            [
              43.582746,
              41.092143
            ],
            [
              42.619549,
              41.583173
            ],
            [
              41.554084,
              41.535656
            ]
          ]
        ]
      },
      id: "GEO"
    },
    {
      type: "Feature",
      properties: {
        name: "Ghana"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              1.060122,
              5.928837
            ],
            [
              -0.507638,
              5.343473
            ],
            [
              -1.063625,
              5.000548
            ],
            [
              -1.964707,
              4.710462
            ],
            [
              -2.856125,
              4.994476
            ],
            [
              -2.810701,
              5.389051
            ],
            [
              -3.24437,
              6.250472
            ],
            [
              -2.983585,
              7.379705
            ],
            [
              -2.56219,
              8.219628
            ],
            [
              -2.827496,
              9.642461
            ],
            [
              -2.963896,
              10.395335
            ],
            [
              -2.940409,
              10.96269
            ],
            [
              -1.203358,
              11.009819
            ],
            [
              -0.761576,
              10.93693
            ],
            [
              -0.438702,
              11.098341
            ],
            [
              0.023803,
              11.018682
            ],
            [
              -0.049785,
              10.706918
            ],
            [
              0.36758,
              10.191213
            ],
            [
              0.365901,
              9.465004
            ],
            [
              0.461192,
              8.677223
            ],
            [
              0.712029,
              8.312465
            ],
            [
              0.490957,
              7.411744
            ],
            [
              0.570384,
              6.914359
            ],
            [
              0.836931,
              6.279979
            ],
            [
              1.060122,
              5.928837
            ]
          ]
        ]
      },
      id: "GHA"
    },
    {
      type: "Feature",
      properties: {
        name: "Guinea"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -8.439298,
              7.686043
            ],
            [
              -8.722124,
              7.711674
            ],
            [
              -8.926065,
              7.309037
            ],
            [
              -9.208786,
              7.313921
            ],
            [
              -9.403348,
              7.526905
            ],
            [
              -9.33728,
              7.928534
            ],
            [
              -9.755342,
              8.541055
            ],
            [
              -10.016567,
              8.428504
            ],
            [
              -10.230094,
              8.406206
            ],
            [
              -10.505477,
              8.348896
            ],
            [
              -10.494315,
              8.715541
            ],
            [
              -10.65477,
              8.977178
            ],
            [
              -10.622395,
              9.26791
            ],
            [
              -10.839152,
              9.688246
            ],
            [
              -11.117481,
              10.045873
            ],
            [
              -11.917277,
              10.046984
            ],
            [
              -12.150338,
              9.858572
            ],
            [
              -12.425929,
              9.835834
            ],
            [
              -12.596719,
              9.620188
            ],
            [
              -12.711958,
              9.342712
            ],
            [
              -13.24655,
              8.903049
            ],
            [
              -13.685154,
              9.494744
            ],
            [
              -14.074045,
              9.886167
            ],
            [
              -14.330076,
              10.01572
            ],
            [
              -14.579699,
              10.214467
            ],
            [
              -14.693232,
              10.656301
            ],
            [
              -14.839554,
              10.876572
            ],
            [
              -15.130311,
              11.040412
            ],
            [
              -14.685687,
              11.527824
            ],
            [
              -14.382192,
              11.509272
            ],
            [
              -14.121406,
              11.677117
            ],
            [
              -13.9008,
              11.678719
            ],
            [
              -13.743161,
              11.811269
            ],
            [
              -13.828272,
              12.142644
            ],
            [
              -13.718744,
              12.247186
            ],
            [
              -13.700476,
              12.586183
            ],
            [
              -13.217818,
              12.575874
            ],
            [
              -12.499051,
              12.33209
            ],
            [
              -12.278599,
              12.35444
            ],
            [
              -12.203565,
              12.465648
            ],
            [
              -11.658301,
              12.386583
            ],
            [
              -11.513943,
              12.442988
            ],
            [
              -11.456169,
              12.076834
            ],
            [
              -11.297574,
              12.077971
            ],
            [
              -11.036556,
              12.211245
            ],
            [
              -10.87083,
              12.177887
            ],
            [
              -10.593224,
              11.923975
            ],
            [
              -10.165214,
              11.844084
            ],
            [
              -9.890993,
              12.060479
            ],
            [
              -9.567912,
              12.194243
            ],
            [
              -9.327616,
              12.334286
            ],
            [
              -9.127474,
              12.30806
            ],
            [
              -8.905265,
              12.088358
            ],
            [
              -8.786099,
              11.812561
            ],
            [
              -8.376305,
              11.393646
            ],
            [
              -8.581305,
              11.136246
            ],
            [
              -8.620321,
              10.810891
            ],
            [
              -8.407311,
              10.909257
            ],
            [
              -8.282357,
              10.792597
            ],
            [
              -8.335377,
              10.494812
            ],
            [
              -8.029944,
              10.206535
            ],
            [
              -8.229337,
              10.12902
            ],
            [
              -8.309616,
              9.789532
            ],
            [
              -8.079114,
              9.376224
            ],
            [
              -7.8321,
              8.575704
            ],
            [
              -8.203499,
              8.455453
            ],
            [
              -8.299049,
              8.316444
            ],
            [
              -8.221792,
              8.123329
            ],
            [
              -8.280703,
              7.68718
            ],
            [
              -8.439298,
              7.686043
            ]
          ]
        ]
      },
      id: "GIN"
    },
    {
      type: "Feature",
      properties: {
        name: "Gambia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -16.841525,
              13.151394
            ],
            [
              -16.713729,
              13.594959
            ],
            [
              -15.624596,
              13.623587
            ],
            [
              -15.39877,
              13.860369
            ],
            [
              -15.081735,
              13.876492
            ],
            [
              -14.687031,
              13.630357
            ],
            [
              -14.376714,
              13.62568
            ],
            [
              -14.046992,
              13.794068
            ],
            [
              -13.844963,
              13.505042
            ],
            [
              -14.277702,
              13.280585
            ],
            [
              -14.712197,
              13.298207
            ],
            [
              -15.141163,
              13.509512
            ],
            [
              -15.511813,
              13.27857
            ],
            [
              -15.691001,
              13.270353
            ],
            [
              -15.931296,
              13.130284
            ],
            [
              -16.841525,
              13.151394
            ]
          ]
        ]
      },
      id: "GMB"
    },
    {
      type: "Feature",
      properties: {
        name: "Guinea Bissau"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -15.130311,
              11.040412
            ],
            [
              -15.66418,
              11.458474
            ],
            [
              -16.085214,
              11.524594
            ],
            [
              -16.314787,
              11.806515
            ],
            [
              -16.308947,
              11.958702
            ],
            [
              -16.613838,
              12.170911
            ],
            [
              -16.677452,
              12.384852
            ],
            [
              -16.147717,
              12.547762
            ],
            [
              -15.816574,
              12.515567
            ],
            [
              -15.548477,
              12.62817
            ],
            [
              -13.700476,
              12.586183
            ],
            [
              -13.718744,
              12.247186
            ],
            [
              -13.828272,
              12.142644
            ],
            [
              -13.743161,
              11.811269
            ],
            [
              -13.9008,
              11.678719
            ],
            [
              -14.121406,
              11.677117
            ],
            [
              -14.382192,
              11.509272
            ],
            [
              -14.685687,
              11.527824
            ],
            [
              -15.130311,
              11.040412
            ]
          ]
        ]
      },
      id: "GNB"
    },
    {
      type: "Feature",
      properties: {
        name: "Equatorial Guinea"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              9.492889,
              1.01012
            ],
            [
              9.305613,
              1.160911
            ],
            [
              9.649158,
              2.283866
            ],
            [
              11.276449,
              2.261051
            ],
            [
              11.285079,
              1.057662
            ],
            [
              9.830284,
              1.067894
            ],
            [
              9.492889,
              1.01012
            ]
          ]
        ]
      },
      id: "GNQ"
    },
    {
      type: "Feature",
      properties: {
        name: "Greece"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                23.69998,
                35.705004
              ],
              [
                24.246665,
                35.368022
              ],
              [
                25.025015,
                35.424996
              ],
              [
                25.769208,
                35.354018
              ],
              [
                25.745023,
                35.179998
              ],
              [
                26.290003,
                35.29999
              ],
              [
                26.164998,
                35.004995
              ],
              [
                24.724982,
                34.919988
              ],
              [
                24.735007,
                35.084991
              ],
              [
                23.514978,
                35.279992
              ],
              [
                23.69998,
                35.705004
              ]
            ]
          ],
          [
            [
              [
                26.604196,
                41.562115
              ],
              [
                26.294602,
                40.936261
              ],
              [
                26.056942,
                40.824123
              ],
              [
                25.447677,
                40.852545
              ],
              [
                24.925848,
                40.947062
              ],
              [
                23.714811,
                40.687129
              ],
              [
                24.407999,
                40.124993
              ],
              [
                23.899968,
                39.962006
              ],
              [
                23.342999,
                39.960998
              ],
              [
                22.813988,
                40.476005
              ],
              [
                22.626299,
                40.256561
              ],
              [
                22.849748,
                39.659311
              ],
              [
                23.350027,
                39.190011
              ],
              [
                22.973099,
                38.970903
              ],
              [
                23.530016,
                38.510001
              ],
              [
                24.025025,
                38.219993
              ],
              [
                24.040011,
                37.655015
              ],
              [
                23.115003,
                37.920011
              ],
              [
                23.409972,
                37.409991
              ],
              [
                22.774972,
                37.30501
              ],
              [
                23.154225,
                36.422506
              ],
              [
                22.490028,
                36.41
              ],
              [
                21.670026,
                36.844986
              ],
              [
                21.295011,
                37.644989
              ],
              [
                21.120034,
                38.310323
              ],
              [
                20.730032,
                38.769985
              ],
              [
                20.217712,
                39.340235
              ],
              [
                20.150016,
                39.624998
              ],
              [
                20.615,
                40.110007
              ],
              [
                20.674997,
                40.435
              ],
              [
                20.99999,
                40.580004
              ],
              [
                21.02004,
                40.842727
              ],
              [
                21.674161,
                40.931275
              ],
              [
                22.055378,
                41.149866
              ],
              [
                22.597308,
                41.130487
              ],
              [
                22.76177,
                41.3048
              ],
              [
                22.952377,
                41.337994
              ],
              [
                23.692074,
                41.309081
              ],
              [
                24.492645,
                41.583896
              ],
              [
                25.197201,
                41.234486
              ],
              [
                26.106138,
                41.328899
              ],
              [
                26.117042,
                41.826905
              ],
              [
                26.604196,
                41.562115
              ]
            ]
          ]
        ]
      },
      id: "GRC"
    },
    {
      type: "Feature",
      properties: {
        name: "Greenland"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -46.76379,
              82.62796
            ],
            [
              -43.40644,
              83.22516
            ],
            [
              -39.89753,
              83.18018
            ],
            [
              -38.62214,
              83.54905
            ],
            [
              -35.08787,
              83.64513
            ],
            [
              -27.10046,
              83.51966
            ],
            [
              -20.84539,
              82.72669
            ],
            [
              -22.69182,
              82.34165
            ],
            [
              -26.51753,
              82.29765
            ],
            [
              -31.9,
              82.2
            ],
            [
              -31.39646,
              82.02154
            ],
            [
              -27.85666,
              82.13178
            ],
            [
              -24.84448,
              81.78697
            ],
            [
              -22.90328,
              82.09317
            ],
            [
              -22.07175,
              81.73449
            ],
            [
              -23.16961,
              81.15271
            ],
            [
              -20.62363,
              81.52462
            ],
            [
              -15.76818,
              81.91245
            ],
            [
              -12.77018,
              81.71885
            ],
            [
              -12.20855,
              81.29154
            ],
            [
              -16.28533,
              80.58004
            ],
            [
              -16.85,
              80.35
            ],
            [
              -20.04624,
              80.17708
            ],
            [
              -17.73035,
              80.12912
            ],
            [
              -18.9,
              79.4
            ],
            [
              -19.70499,
              78.75128
            ],
            [
              -19.67353,
              77.63859
            ],
            [
              -18.47285,
              76.98565
            ],
            [
              -20.03503,
              76.94434
            ],
            [
              -21.67944,
              76.62795
            ],
            [
              -19.83407,
              76.09808
            ],
            [
              -19.59896,
              75.24838
            ],
            [
              -20.66818,
              75.15585
            ],
            [
              -19.37281,
              74.29561
            ],
            [
              -21.59422,
              74.22382
            ],
            [
              -20.43454,
              73.81713
            ],
            [
              -20.76234,
              73.46436
            ],
            [
              -22.17221,
              73.30955
            ],
            [
              -23.56593,
              73.30663
            ],
            [
              -22.31311,
              72.62928
            ],
            [
              -22.29954,
              72.18409
            ],
            [
              -24.27834,
              72.59788
            ],
            [
              -24.79296,
              72.3302
            ],
            [
              -23.44296,
              72.08016
            ],
            [
              -22.13281,
              71.46898
            ],
            [
              -21.75356,
              70.66369
            ],
            [
              -23.53603,
              70.471
            ],
            [
              -24.30702,
              70.85649
            ],
            [
              -25.54341,
              71.43094
            ],
            [
              -25.20135,
              70.75226
            ],
            [
              -26.36276,
              70.22646
            ],
            [
              -23.72742,
              70.18401
            ],
            [
              -22.34902,
              70.12946
            ],
            [
              -25.02927,
              69.2588
            ],
            [
              -27.74737,
              68.47046
            ],
            [
              -30.67371,
              68.12503
            ],
            [
              -31.77665,
              68.12078
            ],
            [
              -32.81105,
              67.73547
            ],
            [
              -34.20196,
              66.67974
            ],
            [
              -36.35284,
              65.9789
            ],
            [
              -37.04378,
              65.93768
            ],
            [
              -38.37505,
              65.69213
            ],
            [
              -39.81222,
              65.45848
            ],
            [
              -40.66899,
              64.83997
            ],
            [
              -40.68281,
              64.13902
            ],
            [
              -41.1887,
              63.48246
            ],
            [
              -42.81938,
              62.68233
            ],
            [
              -42.41666,
              61.90093
            ],
            [
              -42.86619,
              61.07404
            ],
            [
              -43.3784,
              60.09772
            ],
            [
              -44.7875,
              60.03676
            ],
            [
              -46.26364,
              60.85328
            ],
            [
              -48.26294,
              60.85843
            ],
            [
              -49.23308,
              61.40681
            ],
            [
              -49.90039,
              62.38336
            ],
            [
              -51.63325,
              63.62691
            ],
            [
              -52.14014,
              64.27842
            ],
            [
              -52.27659,
              65.1767
            ],
            [
              -53.66166,
              66.09957
            ],
            [
              -53.30161,
              66.8365
            ],
            [
              -53.96911,
              67.18899
            ],
            [
              -52.9804,
              68.35759
            ],
            [
              -51.47536,
              68.72958
            ],
            [
              -51.08041,
              69.14781
            ],
            [
              -50.87122,
              69.9291
            ],
            [
              -52.013585,
              69.574925
            ],
            [
              -52.55792,
              69.42616
            ],
            [
              -53.45629,
              69.283625
            ],
            [
              -54.68336,
              69.61003
            ],
            [
              -54.75001,
              70.28932
            ],
            [
              -54.35884,
              70.821315
            ],
            [
              -53.431315,
              70.835755
            ],
            [
              -51.39014,
              70.56978
            ],
            [
              -53.10937,
              71.20485
            ],
            [
              -54.00422,
              71.54719
            ],
            [
              -55,
              71.406537
            ],
            [
              -55.83468,
              71.65444
            ],
            [
              -54.71819,
              72.58625
            ],
            [
              -55.32634,
              72.95861
            ],
            [
              -56.12003,
              73.64977
            ],
            [
              -57.32363,
              74.71026
            ],
            [
              -58.59679,
              75.09861
            ],
            [
              -58.58516,
              75.51727
            ],
            [
              -61.26861,
              76.10238
            ],
            [
              -63.39165,
              76.1752
            ],
            [
              -66.06427,
              76.13486
            ],
            [
              -68.50438,
              76.06141
            ],
            [
              -69.66485,
              76.37975
            ],
            [
              -71.40257,
              77.00857
            ],
            [
              -68.77671,
              77.32312
            ],
            [
              -66.76397,
              77.37595
            ],
            [
              -71.04293,
              77.63595
            ],
            [
              -73.297,
              78.04419
            ],
            [
              -73.15938,
              78.43271
            ],
            [
              -69.37345,
              78.91388
            ],
            [
              -65.7107,
              79.39436
            ],
            [
              -65.3239,
              79.75814
            ],
            [
              -68.02298,
              80.11721
            ],
            [
              -67.15129,
              80.51582
            ],
            [
              -63.68925,
              81.21396
            ],
            [
              -62.23444,
              81.3211
            ],
            [
              -62.65116,
              81.77042
            ],
            [
              -60.28249,
              82.03363
            ],
            [
              -57.20744,
              82.19074
            ],
            [
              -54.13442,
              82.19962
            ],
            [
              -53.04328,
              81.88833
            ],
            [
              -50.39061,
              82.43883
            ],
            [
              -48.00386,
              82.06481
            ],
            [
              -46.59984,
              81.985945
            ],
            [
              -44.523,
              81.6607
            ],
            [
              -46.9007,
              82.19979
            ],
            [
              -46.76379,
              82.62796
            ]
          ]
        ]
      },
      id: "GRL"
    },
    {
      type: "Feature",
      properties: {
        name: "Guatemala"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -90.095555,
              13.735338
            ],
            [
              -90.608624,
              13.909771
            ],
            [
              -91.23241,
              13.927832
            ],
            [
              -91.689747,
              14.126218
            ],
            [
              -92.22775,
              14.538829
            ],
            [
              -92.20323,
              14.830103
            ],
            [
              -92.087216,
              15.064585
            ],
            [
              -92.229249,
              15.251447
            ],
            [
              -91.74796,
              16.066565
            ],
            [
              -90.464473,
              16.069562
            ],
            [
              -90.438867,
              16.41011
            ],
            [
              -90.600847,
              16.470778
            ],
            [
              -90.711822,
              16.687483
            ],
            [
              -91.08167,
              16.918477
            ],
            [
              -91.453921,
              17.252177
            ],
            [
              -91.002269,
              17.254658
            ],
            [
              -91.00152,
              17.817595
            ],
            [
              -90.067934,
              17.819326
            ],
            [
              -89.14308,
              17.808319
            ],
            [
              -89.150806,
              17.015577
            ],
            [
              -89.229122,
              15.886938
            ],
            [
              -88.930613,
              15.887273
            ],
            [
              -88.604586,
              15.70638
            ],
            [
              -88.518364,
              15.855389
            ],
            [
              -88.225023,
              15.727722
            ],
            [
              -88.68068,
              15.346247
            ],
            [
              -89.154811,
              15.066419
            ],
            [
              -89.22522,
              14.874286
            ],
            [
              -89.145535,
              14.678019
            ],
            [
              -89.353326,
              14.424133
            ],
            [
              -89.587343,
              14.362586
            ],
            [
              -89.534219,
              14.244816
            ],
            [
              -89.721934,
              14.134228
            ],
            [
              -90.064678,
              13.88197
            ],
            [
              -90.095555,
              13.735338
            ]
          ]
        ]
      },
      id: "GTM"
    },
    {
      type: "Feature",
      properties: {
        name: "Guyana"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -59.758285,
              8.367035
            ],
            [
              -59.101684,
              7.999202
            ],
            [
              -58.482962,
              7.347691
            ],
            [
              -58.454876,
              6.832787
            ],
            [
              -58.078103,
              6.809094
            ],
            [
              -57.542219,
              6.321268
            ],
            [
              -57.147436,
              5.97315
            ],
            [
              -57.307246,
              5.073567
            ],
            [
              -57.914289,
              4.812626
            ],
            [
              -57.86021,
              4.576801
            ],
            [
              -58.044694,
              4.060864
            ],
            [
              -57.601569,
              3.334655
            ],
            [
              -57.281433,
              3.333492
            ],
            [
              -57.150098,
              2.768927
            ],
            [
              -56.539386,
              1.899523
            ],
            [
              -56.782704,
              1.863711
            ],
            [
              -57.335823,
              1.948538
            ],
            [
              -57.660971,
              1.682585
            ],
            [
              -58.11345,
              1.507195
            ],
            [
              -58.429477,
              1.463942
            ],
            [
              -58.540013,
              1.268088
            ],
            [
              -59.030862,
              1.317698
            ],
            [
              -59.646044,
              1.786894
            ],
            [
              -59.718546,
              2.24963
            ],
            [
              -59.974525,
              2.755233
            ],
            [
              -59.815413,
              3.606499
            ],
            [
              -59.53804,
              3.958803
            ],
            [
              -59.767406,
              4.423503
            ],
            [
              -60.111002,
              4.574967
            ],
            [
              -59.980959,
              5.014061
            ],
            [
              -60.213683,
              5.244486
            ],
            [
              -60.733574,
              5.200277
            ],
            [
              -61.410303,
              5.959068
            ],
            [
              -61.139415,
              6.234297
            ],
            [
              -61.159336,
              6.696077
            ],
            [
              -60.543999,
              6.856584
            ],
            [
              -60.295668,
              7.043911
            ],
            [
              -60.637973,
              7.415
            ],
            [
              -60.550588,
              7.779603
            ],
            [
              -59.758285,
              8.367035
            ]
          ]
        ]
      },
      id: "GUY"
    },
    {
      type: "Feature",
      properties: {
        name: "Honduras"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -87.316654,
              12.984686
            ],
            [
              -87.489409,
              13.297535
            ],
            [
              -87.793111,
              13.38448
            ],
            [
              -87.723503,
              13.78505
            ],
            [
              -87.859515,
              13.893312
            ],
            [
              -88.065343,
              13.964626
            ],
            [
              -88.503998,
              13.845486
            ],
            [
              -88.541231,
              13.980155
            ],
            [
              -88.843073,
              14.140507
            ],
            [
              -89.058512,
              14.340029
            ],
            [
              -89.353326,
              14.424133
            ],
            [
              -89.145535,
              14.678019
            ],
            [
              -89.22522,
              14.874286
            ],
            [
              -89.154811,
              15.066419
            ],
            [
              -88.68068,
              15.346247
            ],
            [
              -88.225023,
              15.727722
            ],
            [
              -88.121153,
              15.688655
            ],
            [
              -87.901813,
              15.864458
            ],
            [
              -87.61568,
              15.878799
            ],
            [
              -87.522921,
              15.797279
            ],
            [
              -87.367762,
              15.84694
            ],
            [
              -86.903191,
              15.756713
            ],
            [
              -86.440946,
              15.782835
            ],
            [
              -86.119234,
              15.893449
            ],
            [
              -86.001954,
              16.005406
            ],
            [
              -85.683317,
              15.953652
            ],
            [
              -85.444004,
              15.885749
            ],
            [
              -85.182444,
              15.909158
            ],
            [
              -84.983722,
              15.995923
            ],
            [
              -84.52698,
              15.857224
            ],
            [
              -84.368256,
              15.835158
            ],
            [
              -84.063055,
              15.648244
            ],
            [
              -83.773977,
              15.424072
            ],
            [
              -83.410381,
              15.270903
            ],
            [
              -83.147219,
              14.995829
            ],
            [
              -83.489989,
              15.016267
            ],
            [
              -83.628585,
              14.880074
            ],
            [
              -83.975721,
              14.749436
            ],
            [
              -84.228342,
              14.748764
            ],
            [
              -84.449336,
              14.621614
            ],
            [
              -84.649582,
              14.666805
            ],
            [
              -84.820037,
              14.819587
            ],
            [
              -84.924501,
              14.790493
            ],
            [
              -85.052787,
              14.551541
            ],
            [
              -85.148751,
              14.560197
            ],
            [
              -85.165365,
              14.35437
            ],
            [
              -85.514413,
              14.079012
            ],
            [
              -85.698665,
              13.960078
            ],
            [
              -85.801295,
              13.836055
            ],
            [
              -86.096264,
              14.038187
            ],
            [
              -86.312142,
              13.771356
            ],
            [
              -86.520708,
              13.778487
            ],
            [
              -86.755087,
              13.754845
            ],
            [
              -86.733822,
              13.263093
            ],
            [
              -86.880557,
              13.254204
            ],
            [
              -87.005769,
              13.025794
            ],
            [
              -87.316654,
              12.984686
            ]
          ]
        ]
      },
      id: "HND"
    },
    {
      type: "Feature",
      properties: {
        name: "Croatia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              18.829838,
              45.908878
            ],
            [
              19.072769,
              45.521511
            ],
            [
              19.390476,
              45.236516
            ],
            [
              19.005486,
              44.860234
            ],
            [
              18.553214,
              45.08159
            ],
            [
              17.861783,
              45.06774
            ],
            [
              17.002146,
              45.233777
            ],
            [
              16.534939,
              45.211608
            ],
            [
              16.318157,
              45.004127
            ],
            [
              15.959367,
              45.233777
            ],
            [
              15.750026,
              44.818712
            ],
            [
              16.23966,
              44.351143
            ],
            [
              16.456443,
              44.04124
            ],
            [
              16.916156,
              43.667722
            ],
            [
              17.297373,
              43.446341
            ],
            [
              17.674922,
              43.028563
            ],
            [
              18.56,
              42.65
            ],
            [
              18.450016,
              42.479991
            ],
            [
              17.50997,
              42.849995
            ],
            [
              16.930006,
              43.209998
            ],
            [
              16.015385,
              43.507215
            ],
            [
              15.174454,
              44.243191
            ],
            [
              15.37625,
              44.317915
            ],
            [
              14.920309,
              44.738484
            ],
            [
              14.901602,
              45.07606
            ],
            [
              14.258748,
              45.233777
            ],
            [
              13.952255,
              44.802124
            ],
            [
              13.656976,
              45.136935
            ],
            [
              13.679403,
              45.484149
            ],
            [
              13.71506,
              45.500324
            ],
            [
              14.411968,
              45.466166
            ],
            [
              14.595109,
              45.634941
            ],
            [
              14.935244,
              45.471695
            ],
            [
              15.327675,
              45.452316
            ],
            [
              15.323954,
              45.731783
            ],
            [
              15.67153,
              45.834154
            ],
            [
              15.768733,
              46.238108
            ],
            [
              16.564808,
              46.503751
            ],
            [
              16.882515,
              46.380632
            ],
            [
              17.630066,
              45.951769
            ],
            [
              18.456062,
              45.759481
            ],
            [
              18.829838,
              45.908878
            ]
          ]
        ]
      },
      id: "HRV"
    },
    {
      type: "Feature",
      properties: {
        name: "Haiti"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -73.189791,
              19.915684
            ],
            [
              -72.579673,
              19.871501
            ],
            [
              -71.712361,
              19.714456
            ],
            [
              -71.624873,
              19.169838
            ],
            [
              -71.701303,
              18.785417
            ],
            [
              -71.945112,
              18.6169
            ],
            [
              -71.687738,
              18.31666
            ],
            [
              -71.708305,
              18.044997
            ],
            [
              -72.372476,
              18.214961
            ],
            [
              -72.844411,
              18.145611
            ],
            [
              -73.454555,
              18.217906
            ],
            [
              -73.922433,
              18.030993
            ],
            [
              -74.458034,
              18.34255
            ],
            [
              -74.369925,
              18.664908
            ],
            [
              -73.449542,
              18.526053
            ],
            [
              -72.694937,
              18.445799
            ],
            [
              -72.334882,
              18.668422
            ],
            [
              -72.79165,
              19.101625
            ],
            [
              -72.784105,
              19.483591
            ],
            [
              -73.415022,
              19.639551
            ],
            [
              -73.189791,
              19.915684
            ]
          ]
        ]
      },
      id: "HTI"
    },
    {
      type: "Feature",
      properties: {
        name: "Hungary"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              16.202298,
              46.852386
            ],
            [
              16.534268,
              47.496171
            ],
            [
              16.340584,
              47.712902
            ],
            [
              16.903754,
              47.714866
            ],
            [
              16.979667,
              48.123497
            ],
            [
              17.488473,
              47.867466
            ],
            [
              17.857133,
              47.758429
            ],
            [
              18.696513,
              47.880954
            ],
            [
              18.777025,
              48.081768
            ],
            [
              19.174365,
              48.111379
            ],
            [
              19.661364,
              48.266615
            ],
            [
              19.769471,
              48.202691
            ],
            [
              20.239054,
              48.327567
            ],
            [
              20.473562,
              48.56285
            ],
            [
              20.801294,
              48.623854
            ],
            [
              21.872236,
              48.319971
            ],
            [
              22.085608,
              48.422264
            ],
            [
              22.64082,
              48.15024
            ],
            [
              22.710531,
              47.882194
            ],
            [
              22.099768,
              47.672439
            ],
            [
              21.626515,
              46.994238
            ],
            [
              21.021952,
              46.316088
            ],
            [
              20.220192,
              46.127469
            ],
            [
              19.596045,
              46.17173
            ],
            [
              18.829838,
              45.908878
            ],
            [
              18.456062,
              45.759481
            ],
            [
              17.630066,
              45.951769
            ],
            [
              16.882515,
              46.380632
            ],
            [
              16.564808,
              46.503751
            ],
            [
              16.370505,
              46.841327
            ],
            [
              16.202298,
              46.852386
            ]
          ]
        ]
      },
      id: "HUN"
    },
    {
      type: "Feature",
      properties: {
        name: "Indonesia"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                120.715609,
                -10.239581
              ],
              [
                120.295014,
                -10.25865
              ],
              [
                118.967808,
                -9.557969
              ],
              [
                119.90031,
                -9.36134
              ],
              [
                120.425756,
                -9.665921
              ],
              [
                120.775502,
                -9.969675
              ],
              [
                120.715609,
                -10.239581
              ]
            ]
          ],
          [
            [
              [
                124.43595,
                -10.140001
              ],
              [
                123.579982,
                -10.359987
              ],
              [
                123.459989,
                -10.239995
              ],
              [
                123.550009,
                -9.900016
              ],
              [
                123.980009,
                -9.290027
              ],
              [
                124.968682,
                -8.89279
              ],
              [
                125.07002,
                -9.089987
              ],
              [
                125.08852,
                -9.393173
              ],
              [
                124.43595,
                -10.140001
              ]
            ]
          ],
          [
            [
              [
                117.900018,
                -8.095681
              ],
              [
                118.260616,
                -8.362383
              ],
              [
                118.87846,
                -8.280683
              ],
              [
                119.126507,
                -8.705825
              ],
              [
                117.970402,
                -8.906639
              ],
              [
                117.277731,
                -9.040895
              ],
              [
                116.740141,
                -9.032937
              ],
              [
                117.083737,
                -8.457158
              ],
              [
                117.632024,
                -8.449303
              ],
              [
                117.900018,
                -8.095681
              ]
            ]
          ],
          [
            [
              [
                122.903537,
                -8.094234
              ],
              [
                122.756983,
                -8.649808
              ],
              [
                121.254491,
                -8.933666
              ],
              [
                119.924391,
                -8.810418
              ],
              [
                119.920929,
                -8.444859
              ],
              [
                120.715092,
                -8.236965
              ],
              [
                121.341669,
                -8.53674
              ],
              [
                122.007365,
                -8.46062
              ],
              [
                122.903537,
                -8.094234
              ]
            ]
          ],
          [
            [
              [
                108.623479,
                -6.777674
              ],
              [
                110.539227,
                -6.877358
              ],
              [
                110.759576,
                -6.465186
              ],
              [
                112.614811,
                -6.946036
              ],
              [
                112.978768,
                -7.594213
              ],
              [
                114.478935,
                -7.776528
              ],
              [
                115.705527,
                -8.370807
              ],
              [
                114.564511,
                -8.751817
              ],
              [
                113.464734,
                -8.348947
              ],
              [
                112.559672,
                -8.376181
              ],
              [
                111.522061,
                -8.302129
              ],
              [
                110.58615,
                -8.122605
              ],
              [
                109.427667,
                -7.740664
              ],
              [
                108.693655,
                -7.6416
              ],
              [
                108.277763,
                -7.766657
              ],
              [
                106.454102,
                -7.3549
              ],
              [
                106.280624,
                -6.9249
              ],
              [
                105.365486,
                -6.851416
              ],
              [
                106.051646,
                -5.895919
              ],
              [
                107.265009,
                -5.954985
              ],
              [
                108.072091,
                -6.345762
              ],
              [
                108.486846,
                -6.421985
              ],
              [
                108.623479,
                -6.777674
              ]
            ]
          ],
          [
            [
              [
                134.724624,
                -6.214401
              ],
              [
                134.210134,
                -6.895238
              ],
              [
                134.112776,
                -6.142467
              ],
              [
                134.290336,
                -5.783058
              ],
              [
                134.499625,
                -5.445042
              ],
              [
                134.727002,
                -5.737582
              ],
              [
                134.724624,
                -6.214401
              ]
            ]
          ],
          [
            [
              [
                127.249215,
                -3.459065
              ],
              [
                126.874923,
                -3.790983
              ],
              [
                126.183802,
                -3.607376
              ],
              [
                125.989034,
                -3.177273
              ],
              [
                127.000651,
                -3.129318
              ],
              [
                127.249215,
                -3.459065
              ]
            ]
          ],
          [
            [
              [
                130.471344,
                -3.093764
              ],
              [
                130.834836,
                -3.858472
              ],
              [
                129.990547,
                -3.446301
              ],
              [
                129.155249,
                -3.362637
              ],
              [
                128.590684,
                -3.428679
              ],
              [
                127.898891,
                -3.393436
              ],
              [
                128.135879,
                -2.84365
              ],
              [
                129.370998,
                -2.802154
              ],
              [
                130.471344,
                -3.093764
              ]
            ]
          ],
          [
            [
              [
                134.143368,
                -1.151867
              ],
              [
                134.422627,
                -2.769185
              ],
              [
                135.457603,
                -3.367753
              ],
              [
                136.293314,
                -2.307042
              ],
              [
                137.440738,
                -1.703513
              ],
              [
                138.329727,
                -1.702686
              ],
              [
                139.184921,
                -2.051296
              ],
              [
                139.926684,
                -2.409052
              ],
              [
                141.00021,
                -2.600151
              ],
              [
                141.017057,
                -5.859022
              ],
              [
                141.033852,
                -9.117893
              ],
              [
                140.143415,
                -8.297168
              ],
              [
                139.127767,
                -8.096043
              ],
              [
                138.881477,
                -8.380935
              ],
              [
                137.614474,
                -8.411683
              ],
              [
                138.039099,
                -7.597882
              ],
              [
                138.668621,
                -7.320225
              ],
              [
                138.407914,
                -6.232849
              ],
              [
                137.92784,
                -5.393366
              ],
              [
                135.98925,
                -4.546544
              ],
              [
                135.164598,
                -4.462931
              ],
              [
                133.66288,
                -3.538853
              ],
              [
                133.367705,
                -4.024819
              ],
              [
                132.983956,
                -4.112979
              ],
              [
                132.756941,
                -3.746283
              ],
              [
                132.753789,
                -3.311787
              ],
              [
                131.989804,
                -2.820551
              ],
              [
                133.066845,
                -2.460418
              ],
              [
                133.780031,
                -2.479848
              ],
              [
                133.696212,
                -2.214542
              ],
              [
                132.232373,
                -2.212526
              ],
              [
                131.836222,
                -1.617162
              ],
              [
                130.94284,
                -1.432522
              ],
              [
                130.519558,
                -0.93772
              ],
              [
                131.867538,
                -0.695461
              ],
              [
                132.380116,
                -0.369538
              ],
              [
                133.985548,
                -0.78021
              ],
              [
                134.143368,
                -1.151867
              ]
            ]
          ],
          [
            [
              [
                125.240501,
                1.419836
              ],
              [
                124.437035,
                0.427881
              ],
              [
                123.685505,
                0.235593
              ],
              [
                122.723083,
                0.431137
              ],
              [
                121.056725,
                0.381217
              ],
              [
                120.183083,
                0.237247
              ],
              [
                120.04087,
                -0.519658
              ],
              [
                120.935905,
                -1.408906
              ],
              [
                121.475821,
                -0.955962
              ],
              [
                123.340565,
                -0.615673
              ],
              [
                123.258399,
                -1.076213
              ],
              [
                122.822715,
                -0.930951
              ],
              [
                122.38853,
                -1.516858
              ],
              [
                121.508274,
                -1.904483
              ],
              [
                122.454572,
                -3.186058
              ],
              [
                122.271896,
                -3.5295
              ],
              [
                123.170963,
                -4.683693
              ],
              [
                123.162333,
                -5.340604
              ],
              [
                122.628515,
                -5.634591
              ],
              [
                122.236394,
                -5.282933
              ],
              [
                122.719569,
                -4.464172
              ],
              [
                121.738234,
                -4.851331
              ],
              [
                121.489463,
                -4.574553
              ],
              [
                121.619171,
                -4.188478
              ],
              [
                120.898182,
                -3.602105
              ],
              [
                120.972389,
                -2.627643
              ],
              [
                120.305453,
                -2.931604
              ],
              [
                120.390047,
                -4.097579
              ],
              [
                120.430717,
                -5.528241
              ],
              [
                119.796543,
                -5.6734
              ],
              [
                119.366906,
                -5.379878
              ],
              [
                119.653606,
                -4.459417
              ],
              [
                119.498835,
                -3.494412
              ],
              [
                119.078344,
                -3.487022
              ],
              [
                118.767769,
                -2.801999
              ],
              [
                119.180974,
                -2.147104
              ],
              [
                119.323394,
                -1.353147
              ],
              [
                119.825999,
                0.154254
              ],
              [
                120.035702,
                0.566477
              ],
              [
                120.885779,
                1.309223
              ],
              [
                121.666817,
                1.013944
              ],
              [
                122.927567,
                0.875192
              ],
              [
                124.077522,
                0.917102
              ],
              [
                125.065989,
                1.643259
              ],
              [
                125.240501,
                1.419836
              ]
            ]
          ],
          [
            [
              [
                128.688249,
                1.132386
              ],
              [
                128.635952,
                0.258486
              ],
              [
                128.12017,
                0.356413
              ],
              [
                127.968034,
                -0.252077
              ],
              [
                128.379999,
                -0.780004
              ],
              [
                128.100016,
                -0.899996
              ],
              [
                127.696475,
                -0.266598
              ],
              [
                127.39949,
                1.011722
              ],
              [
                127.600512,
                1.810691
              ],
              [
                127.932378,
                2.174596
              ],
              [
                128.004156,
                1.628531
              ],
              [
                128.594559,
                1.540811
              ],
              [
                128.688249,
                1.132386
              ]
            ]
          ],
          [
            [
              [
                117.875627,
                1.827641
              ],
              [
                118.996747,
                0.902219
              ],
              [
                117.811858,
                0.784242
              ],
              [
                117.478339,
                0.102475
              ],
              [
                117.521644,
                -0.803723
              ],
              [
                116.560048,
                -1.487661
              ],
              [
                116.533797,
                -2.483517
              ],
              [
                116.148084,
                -4.012726
              ],
              [
                116.000858,
                -3.657037
              ],
              [
                114.864803,
                -4.106984
              ],
              [
                114.468652,
                -3.495704
              ],
              [
                113.755672,
                -3.43917
              ],
              [
                113.256994,
                -3.118776
              ],
              [
                112.068126,
                -3.478392
              ],
              [
                111.703291,
                -2.994442
              ],
              [
                111.04824,
                -3.049426
              ],
              [
                110.223846,
                -2.934032
              ],
              [
                110.070936,
                -1.592874
              ],
              [
                109.571948,
                -1.314907
              ],
              [
                109.091874,
                -0.459507
              ],
              [
                108.952658,
                0.415375
              ],
              [
                109.069136,
                1.341934
              ],
              [
                109.66326,
                2.006467
              ],
              [
                109.830227,
                1.338136
              ],
              [
                110.514061,
                0.773131
              ],
              [
                111.159138,
                0.976478
              ],
              [
                111.797548,
                0.904441
              ],
              [
                112.380252,
                1.410121
              ],
              [
                112.859809,
                1.49779
              ],
              [
                113.80585,
                1.217549
              ],
              [
                114.621355,
                1.430688
              ],
              [
                115.134037,
                2.821482
              ],
              [
                115.519078,
                3.169238
              ],
              [
                115.865517,
                4.306559
              ],
              [
                117.015214,
                4.306094
              ],
              [
                117.882035,
                4.137551
              ],
              [
                117.313232,
                3.234428
              ],
              [
                118.04833,
                2.28769
              ],
              [
                117.875627,
                1.827641
              ]
            ]
          ],
          [
            [
              [
                105.817655,
                -5.852356
              ],
              [
                104.710384,
                -5.873285
              ],
              [
                103.868213,
                -5.037315
              ],
              [
                102.584261,
                -4.220259
              ],
              [
                102.156173,
                -3.614146
              ],
              [
                101.399113,
                -2.799777
              ],
              [
                100.902503,
                -2.050262
              ],
              [
                100.141981,
                -0.650348
              ],
              [
                99.26374,
                0.183142
              ],
              [
                98.970011,
                1.042882
              ],
              [
                98.601351,
                1.823507
              ],
              [
                97.699598,
                2.453184
              ],
              [
                97.176942,
                3.308791
              ],
              [
                96.424017,
                3.86886
              ],
              [
                95.380876,
                4.970782
              ],
              [
                95.293026,
                5.479821
              ],
              [
                95.936863,
                5.439513
              ],
              [
                97.484882,
                5.246321
              ],
              [
                98.369169,
                4.26837
              ],
              [
                99.142559,
                3.59035
              ],
              [
                99.693998,
                3.174329
              ],
              [
                100.641434,
                2.099381
              ],
              [
                101.658012,
                2.083697
              ],
              [
                102.498271,
                1.3987
              ],
              [
                103.07684,
                0.561361
              ],
              [
                103.838396,
                0.104542
              ],
              [
                103.437645,
                -0.711946
              ],
              [
                104.010789,
                -1.059212
              ],
              [
                104.369991,
                -1.084843
              ],
              [
                104.53949,
                -1.782372
              ],
              [
                104.887893,
                -2.340425
              ],
              [
                105.622111,
                -2.428844
              ],
              [
                106.108593,
                -3.061777
              ],
              [
                105.857446,
                -4.305525
              ],
              [
                105.817655,
                -5.852356
              ]
            ]
          ]
        ]
      },
      id: "IDN"
    },
    {
      type: "Feature",
      properties: {
        name: "India"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              77.837451,
              35.49401
            ],
            [
              78.912269,
              34.321936
            ],
            [
              78.811086,
              33.506198
            ],
            [
              79.208892,
              32.994395
            ],
            [
              79.176129,
              32.48378
            ],
            [
              78.458446,
              32.618164
            ],
            [
              78.738894,
              31.515906
            ],
            [
              79.721367,
              30.882715
            ],
            [
              81.111256,
              30.183481
            ],
            [
              80.476721,
              29.729865
            ],
            [
              80.088425,
              28.79447
            ],
            [
              81.057203,
              28.416095
            ],
            [
              81.999987,
              27.925479
            ],
            [
              83.304249,
              27.364506
            ],
            [
              84.675018,
              27.234901
            ],
            [
              85.251779,
              26.726198
            ],
            [
              86.024393,
              26.630985
            ],
            [
              87.227472,
              26.397898
            ],
            [
              88.060238,
              26.414615
            ],
            [
              88.174804,
              26.810405
            ],
            [
              88.043133,
              27.445819
            ],
            [
              88.120441,
              27.876542
            ],
            [
              88.730326,
              28.086865
            ],
            [
              88.814248,
              27.299316
            ],
            [
              88.835643,
              27.098966
            ],
            [
              89.744528,
              26.719403
            ],
            [
              90.373275,
              26.875724
            ],
            [
              91.217513,
              26.808648
            ],
            [
              92.033484,
              26.83831
            ],
            [
              92.103712,
              27.452614
            ],
            [
              91.696657,
              27.771742
            ],
            [
              92.503119,
              27.896876
            ],
            [
              93.413348,
              28.640629
            ],
            [
              94.56599,
              29.277438
            ],
            [
              95.404802,
              29.031717
            ],
            [
              96.117679,
              29.452802
            ],
            [
              96.586591,
              28.83098
            ],
            [
              96.248833,
              28.411031
            ],
            [
              97.327114,
              28.261583
            ],
            [
              97.402561,
              27.882536
            ],
            [
              97.051989,
              27.699059
            ],
            [
              97.133999,
              27.083774
            ],
            [
              96.419366,
              27.264589
            ],
            [
              95.124768,
              26.573572
            ],
            [
              95.155153,
              26.001307
            ],
            [
              94.603249,
              25.162495
            ],
            [
              94.552658,
              24.675238
            ],
            [
              94.106742,
              23.850741
            ],
            [
              93.325188,
              24.078556
            ],
            [
              93.286327,
              23.043658
            ],
            [
              93.060294,
              22.703111
            ],
            [
              93.166128,
              22.27846
            ],
            [
              92.672721,
              22.041239
            ],
            [
              92.146035,
              23.627499
            ],
            [
              91.869928,
              23.624346
            ],
            [
              91.706475,
              22.985264
            ],
            [
              91.158963,
              23.503527
            ],
            [
              91.46773,
              24.072639
            ],
            [
              91.915093,
              24.130414
            ],
            [
              92.376202,
              24.976693
            ],
            [
              91.799596,
              25.147432
            ],
            [
              90.872211,
              25.132601
            ],
            [
              89.920693,
              25.26975
            ],
            [
              89.832481,
              25.965082
            ],
            [
              89.355094,
              26.014407
            ],
            [
              88.563049,
              26.446526
            ],
            [
              88.209789,
              25.768066
            ],
            [
              88.931554,
              25.238692
            ],
            [
              88.306373,
              24.866079
            ],
            [
              88.084422,
              24.501657
            ],
            [
              88.69994,
              24.233715
            ],
            [
              88.52977,
              23.631142
            ],
            [
              88.876312,
              22.879146
            ],
            [
              89.031961,
              22.055708
            ],
            [
              88.888766,
              21.690588
            ],
            [
              88.208497,
              21.703172
            ],
            [
              86.975704,
              21.495562
            ],
            [
              87.033169,
              20.743308
            ],
            [
              86.499351,
              20.151638
            ],
            [
              85.060266,
              19.478579
            ],
            [
              83.941006,
              18.30201
            ],
            [
              83.189217,
              17.671221
            ],
            [
              82.192792,
              17.016636
            ],
            [
              82.191242,
              16.556664
            ],
            [
              81.692719,
              16.310219
            ],
            [
              80.791999,
              15.951972
            ],
            [
              80.324896,
              15.899185
            ],
            [
              80.025069,
              15.136415
            ],
            [
              80.233274,
              13.835771
            ],
            [
              80.286294,
              13.006261
            ],
            [
              79.862547,
              12.056215
            ],
            [
              79.857999,
              10.357275
            ],
            [
              79.340512,
              10.308854
            ],
            [
              78.885345,
              9.546136
            ],
            [
              79.18972,
              9.216544
            ],
            [
              78.277941,
              8.933047
            ],
            [
              77.941165,
              8.252959
            ],
            [
              77.539898,
              7.965535
            ],
            [
              76.592979,
              8.899276
            ],
            [
              76.130061,
              10.29963
            ],
            [
              75.746467,
              11.308251
            ],
            [
              75.396101,
              11.781245
            ],
            [
              74.864816,
              12.741936
            ],
            [
              74.616717,
              13.992583
            ],
            [
              74.443859,
              14.617222
            ],
            [
              73.534199,
              15.990652
            ],
            [
              73.119909,
              17.92857
            ],
            [
              72.820909,
              19.208234
            ],
            [
              72.824475,
              20.419503
            ],
            [
              72.630533,
              21.356009
            ],
            [
              71.175273,
              20.757441
            ],
            [
              70.470459,
              20.877331
            ],
            [
              69.16413,
              22.089298
            ],
            [
              69.644928,
              22.450775
            ],
            [
              69.349597,
              22.84318
            ],
            [
              68.176645,
              23.691965
            ],
            [
              68.842599,
              24.359134
            ],
            [
              71.04324,
              24.356524
            ],
            [
              70.844699,
              25.215102
            ],
            [
              70.282873,
              25.722229
            ],
            [
              70.168927,
              26.491872
            ],
            [
              69.514393,
              26.940966
            ],
            [
              70.616496,
              27.989196
            ],
            [
              71.777666,
              27.91318
            ],
            [
              72.823752,
              28.961592
            ],
            [
              73.450638,
              29.976413
            ],
            [
              74.42138,
              30.979815
            ],
            [
              74.405929,
              31.692639
            ],
            [
              75.258642,
              32.271105
            ],
            [
              74.451559,
              32.7649
            ],
            [
              74.104294,
              33.441473
            ],
            [
              73.749948,
              34.317699
            ],
            [
              74.240203,
              34.748887
            ],
            [
              75.757061,
              34.504923
            ],
            [
              76.871722,
              34.653544
            ],
            [
              77.837451,
              35.49401
            ]
          ]
        ]
      },
      id: "IND"
    },
    {
      type: "Feature",
      properties: {
        name: "Ireland"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -6.197885,
              53.867565
            ],
            [
              -6.032985,
              53.153164
            ],
            [
              -6.788857,
              52.260118
            ],
            [
              -8.561617,
              51.669301
            ],
            [
              -9.977086,
              51.820455
            ],
            [
              -9.166283,
              52.864629
            ],
            [
              -9.688525,
              53.881363
            ],
            [
              -8.327987,
              54.664519
            ],
            [
              -7.572168,
              55.131622
            ],
            [
              -7.366031,
              54.595841
            ],
            [
              -7.572168,
              54.059956
            ],
            [
              -6.95373,
              54.073702
            ],
            [
              -6.197885,
              53.867565
            ]
          ]
        ]
      },
      id: "IRL"
    },
    {
      type: "Feature",
      properties: {
        name: "Iran"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              53.921598,
              37.198918
            ],
            [
              54.800304,
              37.392421
            ],
            [
              55.511578,
              37.964117
            ],
            [
              56.180375,
              37.935127
            ],
            [
              56.619366,
              38.121394
            ],
            [
              57.330434,
              38.029229
            ],
            [
              58.436154,
              37.522309
            ],
            [
              59.234762,
              37.412988
            ],
            [
              60.377638,
              36.527383
            ],
            [
              61.123071,
              36.491597
            ],
            [
              61.210817,
              35.650072
            ],
            [
              60.803193,
              34.404102
            ],
            [
              60.52843,
              33.676446
            ],
            [
              60.9637,
              33.528832
            ],
            [
              60.536078,
              32.981269
            ],
            [
              60.863655,
              32.18292
            ],
            [
              60.941945,
              31.548075
            ],
            [
              61.699314,
              31.379506
            ],
            [
              61.781222,
              30.73585
            ],
            [
              60.874248,
              29.829239
            ],
            [
              61.369309,
              29.303276
            ],
            [
              61.771868,
              28.699334
            ],
            [
              62.72783,
              28.259645
            ],
            [
              62.755426,
              27.378923
            ],
            [
              63.233898,
              27.217047
            ],
            [
              63.316632,
              26.756532
            ],
            [
              61.874187,
              26.239975
            ],
            [
              61.497363,
              25.078237
            ],
            [
              59.616134,
              25.380157
            ],
            [
              58.525761,
              25.609962
            ],
            [
              57.397251,
              25.739902
            ],
            [
              56.970766,
              26.966106
            ],
            [
              56.492139,
              27.143305
            ],
            [
              55.72371,
              26.964633
            ],
            [
              54.71509,
              26.480658
            ],
            [
              53.493097,
              26.812369
            ],
            [
              52.483598,
              27.580849
            ],
            [
              51.520763,
              27.86569
            ],
            [
              50.852948,
              28.814521
            ],
            [
              50.115009,
              30.147773
            ],
            [
              49.57685,
              29.985715
            ],
            [
              48.941333,
              30.31709
            ],
            [
              48.567971,
              29.926778
            ],
            [
              48.014568,
              30.452457
            ],
            [
              48.004698,
              30.985137
            ],
            [
              47.685286,
              30.984853
            ],
            [
              47.849204,
              31.709176
            ],
            [
              47.334661,
              32.469155
            ],
            [
              46.109362,
              33.017287
            ],
            [
              45.416691,
              33.967798
            ],
            [
              45.64846,
              34.748138
            ],
            [
              46.151788,
              35.093259
            ],
            [
              46.07634,
              35.677383
            ],
            [
              45.420618,
              35.977546
            ],
            [
              44.77267,
              37.17045
            ],
            [
              44.225756,
              37.971584
            ],
            [
              44.421403,
              38.281281
            ],
            [
              44.109225,
              39.428136
            ],
            [
              44.79399,
              39.713003
            ],
            [
              44.952688,
              39.335765
            ],
            [
              45.457722,
              38.874139
            ],
            [
              46.143623,
              38.741201
            ],
            [
              46.50572,
              38.770605
            ],
            [
              47.685079,
              39.508364
            ],
            [
              48.060095,
              39.582235
            ],
            [
              48.355529,
              39.288765
            ],
            [
              48.010744,
              38.794015
            ],
            [
              48.634375,
              38.270378
            ],
            [
              48.883249,
              38.320245
            ],
            [
              49.199612,
              37.582874
            ],
            [
              50.147771,
              37.374567
            ],
            [
              50.842354,
              36.872814
            ],
            [
              52.264025,
              36.700422
            ],
            [
              53.82579,
              36.965031
            ],
            [
              53.921598,
              37.198918
            ]
          ]
        ]
      },
      id: "IRN"
    },
    {
      type: "Feature",
      properties: {
        name: "Iraq"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              45.420618,
              35.977546
            ],
            [
              46.07634,
              35.677383
            ],
            [
              46.151788,
              35.093259
            ],
            [
              45.64846,
              34.748138
            ],
            [
              45.416691,
              33.967798
            ],
            [
              46.109362,
              33.017287
            ],
            [
              47.334661,
              32.469155
            ],
            [
              47.849204,
              31.709176
            ],
            [
              47.685286,
              30.984853
            ],
            [
              48.004698,
              30.985137
            ],
            [
              48.014568,
              30.452457
            ],
            [
              48.567971,
              29.926778
            ],
            [
              47.974519,
              29.975819
            ],
            [
              47.302622,
              30.05907
            ],
            [
              46.568713,
              29.099025
            ],
            [
              44.709499,
              29.178891
            ],
            [
              41.889981,
              31.190009
            ],
            [
              40.399994,
              31.889992
            ],
            [
              39.195468,
              32.161009
            ],
            [
              38.792341,
              33.378686
            ],
            [
              41.006159,
              34.419372
            ],
            [
              41.383965,
              35.628317
            ],
            [
              41.289707,
              36.358815
            ],
            [
              41.837064,
              36.605854
            ],
            [
              42.349591,
              37.229873
            ],
            [
              42.779126,
              37.385264
            ],
            [
              43.942259,
              37.256228
            ],
            [
              44.293452,
              37.001514
            ],
            [
              44.772699,
              37.170445
            ],
            [
              45.420618,
              35.977546
            ]
          ]
        ]
      },
      id: "IRQ"
    },
    {
      type: "Feature",
      properties: {
        name: "Iceland"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -14.508695,
              66.455892
            ],
            [
              -14.739637,
              65.808748
            ],
            [
              -13.609732,
              65.126671
            ],
            [
              -14.909834,
              64.364082
            ],
            [
              -17.794438,
              63.678749
            ],
            [
              -18.656246,
              63.496383
            ],
            [
              -19.972755,
              63.643635
            ],
            [
              -22.762972,
              63.960179
            ],
            [
              -21.778484,
              64.402116
            ],
            [
              -23.955044,
              64.89113
            ],
            [
              -22.184403,
              65.084968
            ],
            [
              -22.227423,
              65.378594
            ],
            [
              -24.326184,
              65.611189
            ],
            [
              -23.650515,
              66.262519
            ],
            [
              -22.134922,
              66.410469
            ],
            [
              -20.576284,
              65.732112
            ],
            [
              -19.056842,
              66.276601
            ],
            [
              -17.798624,
              65.993853
            ],
            [
              -16.167819,
              66.526792
            ],
            [
              -14.508695,
              66.455892
            ]
          ]
        ]
      },
      id: "ISL"
    },
    {
      type: "Feature",
      properties: {
        name: "Israel"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              35.719918,
              32.709192
            ],
            [
              35.545665,
              32.393992
            ],
            [
              35.18393,
              32.532511
            ],
            [
              34.974641,
              31.866582
            ],
            [
              35.225892,
              31.754341
            ],
            [
              34.970507,
              31.616778
            ],
            [
              34.927408,
              31.353435
            ],
            [
              35.397561,
              31.489086
            ],
            [
              35.420918,
              31.100066
            ],
            [
              34.922603,
              29.501326
            ],
            [
              34.265433,
              31.219361
            ],
            [
              34.556372,
              31.548824
            ],
            [
              34.488107,
              31.605539
            ],
            [
              34.752587,
              32.072926
            ],
            [
              34.955417,
              32.827376
            ],
            [
              35.098457,
              33.080539
            ],
            [
              35.126053,
              33.0909
            ],
            [
              35.460709,
              33.08904
            ],
            [
              35.552797,
              33.264275
            ],
            [
              35.821101,
              33.277426
            ],
            [
              35.836397,
              32.868123
            ],
            [
              35.700798,
              32.716014
            ],
            [
              35.719918,
              32.709192
            ]
          ]
        ]
      },
      id: "ISR"
    },
    {
      type: "Feature",
      properties: {
        name: "Italy"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                15.520376,
                38.231155
              ],
              [
                15.160243,
                37.444046
              ],
              [
                15.309898,
                37.134219
              ],
              [
                15.099988,
                36.619987
              ],
              [
                14.335229,
                36.996631
              ],
              [
                13.826733,
                37.104531
              ],
              [
                12.431004,
                37.61295
              ],
              [
                12.570944,
                38.126381
              ],
              [
                13.741156,
                38.034966
              ],
              [
                14.761249,
                38.143874
              ],
              [
                15.520376,
                38.231155
              ]
            ]
          ],
          [
            [
              [
                9.210012,
                41.209991
              ],
              [
                9.809975,
                40.500009
              ],
              [
                9.669519,
                39.177376
              ],
              [
                9.214818,
                39.240473
              ],
              [
                8.806936,
                38.906618
              ],
              [
                8.428302,
                39.171847
              ],
              [
                8.388253,
                40.378311
              ],
              [
                8.159998,
                40.950007
              ],
              [
                8.709991,
                40.899984
              ],
              [
                9.210012,
                41.209991
              ]
            ]
          ],
          [
            [
              [
                12.376485,
                46.767559
              ],
              [
                13.806475,
                46.509306
              ],
              [
                13.69811,
                46.016778
              ],
              [
                13.93763,
                45.591016
              ],
              [
                13.141606,
                45.736692
              ],
              [
                12.328581,
                45.381778
              ],
              [
                12.383875,
                44.885374
              ],
              [
                12.261453,
                44.600482
              ],
              [
                12.589237,
                44.091366
              ],
              [
                13.526906,
                43.587727
              ],
              [
                14.029821,
                42.761008
              ],
              [
                15.14257,
                41.95514
              ],
              [
                15.926191,
                41.961315
              ],
              [
                16.169897,
                41.740295
              ],
              [
                15.889346,
                41.541082
              ],
              [
                16.785002,
                41.179606
              ],
              [
                17.519169,
                40.877143
              ],
              [
                18.376687,
                40.355625
              ],
              [
                18.480247,
                40.168866
              ],
              [
                18.293385,
                39.810774
              ],
              [
                17.73838,
                40.277671
              ],
              [
                16.869596,
                40.442235
              ],
              [
                16.448743,
                39.795401
              ],
              [
                17.17149,
                39.4247
              ],
              [
                17.052841,
                38.902871
              ],
              [
                16.635088,
                38.843572
              ],
              [
                16.100961,
                37.985899
              ],
              [
                15.684087,
                37.908849
              ],
              [
                15.687963,
                38.214593
              ],
              [
                15.891981,
                38.750942
              ],
              [
                16.109332,
                38.964547
              ],
              [
                15.718814,
                39.544072
              ],
              [
                15.413613,
                40.048357
              ],
              [
                14.998496,
                40.172949
              ],
              [
                14.703268,
                40.60455
              ],
              [
                14.060672,
                40.786348
              ],
              [
                13.627985,
                41.188287
              ],
              [
                12.888082,
                41.25309
              ],
              [
                12.106683,
                41.704535
              ],
              [
                11.191906,
                42.355425
              ],
              [
                10.511948,
                42.931463
              ],
              [
                10.200029,
                43.920007
              ],
              [
                9.702488,
                44.036279
              ],
              [
                8.888946,
                44.366336
              ],
              [
                8.428561,
                44.231228
              ],
              [
                7.850767,
                43.767148
              ],
              [
                7.435185,
                43.693845
              ],
              [
                7.549596,
                44.127901
              ],
              [
                7.007562,
                44.254767
              ],
              [
                6.749955,
                45.028518
              ],
              [
                7.096652,
                45.333099
              ],
              [
                6.802355,
                45.70858
              ],
              [
                6.843593,
                45.991147
              ],
              [
                7.273851,
                45.776948
              ],
              [
                7.755992,
                45.82449
              ],
              [
                8.31663,
                46.163642
              ],
              [
                8.489952,
                46.005151
              ],
              [
                8.966306,
                46.036932
              ],
              [
                9.182882,
                46.440215
              ],
              [
                9.922837,
                46.314899
              ],
              [
                10.363378,
                46.483571
              ],
              [
                10.442701,
                46.893546
              ],
              [
                11.048556,
                46.751359
              ],
              [
                11.164828,
                46.941579
              ],
              [
                12.153088,
                47.115393
              ],
              [
                12.376485,
                46.767559
              ]
            ]
          ]
        ]
      },
      id: "ITA"
    },
    {
      type: "Feature",
      properties: {
        name: "Jamaica"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -77.569601,
              18.490525
            ],
            [
              -76.896619,
              18.400867
            ],
            [
              -76.365359,
              18.160701
            ],
            [
              -76.199659,
              17.886867
            ],
            [
              -76.902561,
              17.868238
            ],
            [
              -77.206341,
              17.701116
            ],
            [
              -77.766023,
              17.861597
            ],
            [
              -78.337719,
              18.225968
            ],
            [
              -78.217727,
              18.454533
            ],
            [
              -77.797365,
              18.524218
            ],
            [
              -77.569601,
              18.490525
            ]
          ]
        ]
      },
      id: "JAM"
    },
    {
      type: "Feature",
      properties: {
        name: "Jordan"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              35.545665,
              32.393992
            ],
            [
              35.719918,
              32.709192
            ],
            [
              36.834062,
              32.312938
            ],
            [
              38.792341,
              33.378686
            ],
            [
              39.195468,
              32.161009
            ],
            [
              39.004886,
              32.010217
            ],
            [
              37.002166,
              31.508413
            ],
            [
              37.998849,
              30.5085
            ],
            [
              37.66812,
              30.338665
            ],
            [
              37.503582,
              30.003776
            ],
            [
              36.740528,
              29.865283
            ],
            [
              36.501214,
              29.505254
            ],
            [
              36.068941,
              29.197495
            ],
            [
              34.956037,
              29.356555
            ],
            [
              34.922603,
              29.501326
            ],
            [
              35.420918,
              31.100066
            ],
            [
              35.397561,
              31.489086
            ],
            [
              35.545252,
              31.782505
            ],
            [
              35.545665,
              32.393992
            ]
          ]
        ]
      },
      id: "JOR"
    },
    {
      type: "Feature",
      properties: {
        name: "Japan"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                134.638428,
                34.149234
              ],
              [
                134.766379,
                33.806335
              ],
              [
                134.203416,
                33.201178
              ],
              [
                133.79295,
                33.521985
              ],
              [
                133.280268,
                33.28957
              ],
              [
                133.014858,
                32.704567
              ],
              [
                132.363115,
                32.989382
              ],
              [
                132.371176,
                33.463642
              ],
              [
                132.924373,
                34.060299
              ],
              [
                133.492968,
                33.944621
              ],
              [
                133.904106,
                34.364931
              ],
              [
                134.638428,
                34.149234
              ]
            ]
          ],
          [
            [
              [
                140.976388,
                37.142074
              ],
              [
                140.59977,
                36.343983
              ],
              [
                140.774074,
                35.842877
              ],
              [
                140.253279,
                35.138114
              ],
              [
                138.975528,
                34.6676
              ],
              [
                137.217599,
                34.606286
              ],
              [
                135.792983,
                33.464805
              ],
              [
                135.120983,
                33.849071
              ],
              [
                135.079435,
                34.596545
              ],
              [
                133.340316,
                34.375938
              ],
              [
                132.156771,
                33.904933
              ],
              [
                130.986145,
                33.885761
              ],
              [
                132.000036,
                33.149992
              ],
              [
                131.33279,
                31.450355
              ],
              [
                130.686318,
                31.029579
              ],
              [
                130.20242,
                31.418238
              ],
              [
                130.447676,
                32.319475
              ],
              [
                129.814692,
                32.61031
              ],
              [
                129.408463,
                33.296056
              ],
              [
                130.353935,
                33.604151
              ],
              [
                130.878451,
                34.232743
              ],
              [
                131.884229,
                34.749714
              ],
              [
                132.617673,
                35.433393
              ],
              [
                134.608301,
                35.731618
              ],
              [
                135.677538,
                35.527134
              ],
              [
                136.723831,
                37.304984
              ],
              [
                137.390612,
                36.827391
              ],
              [
                138.857602,
                37.827485
              ],
              [
                139.426405,
                38.215962
              ],
              [
                140.05479,
                39.438807
              ],
              [
                139.883379,
                40.563312
              ],
              [
                140.305783,
                41.195005
              ],
              [
                141.368973,
                41.37856
              ],
              [
                141.914263,
                39.991616
              ],
              [
                141.884601,
                39.180865
              ],
              [
                140.959489,
                38.174001
              ],
              [
                140.976388,
                37.142074
              ]
            ]
          ],
          [
            [
              [
                143.910162,
                44.1741
              ],
              [
                144.613427,
                43.960883
              ],
              [
                145.320825,
                44.384733
              ],
              [
                145.543137,
                43.262088
              ],
              [
                144.059662,
                42.988358
              ],
              [
                143.18385,
                41.995215
              ],
              [
                141.611491,
                42.678791
              ],
              [
                141.067286,
                41.584594
              ],
              [
                139.955106,
                41.569556
              ],
              [
                139.817544,
                42.563759
              ],
              [
                140.312087,
                43.333273
              ],
              [
                141.380549,
                43.388825
              ],
              [
                141.671952,
                44.772125
              ],
              [
                141.967645,
                45.551483
              ],
              [
                143.14287,
                44.510358
              ],
              [
                143.910162,
                44.1741
              ]
            ]
          ]
        ]
      },
      id: "JPN"
    },
    {
      type: "Feature",
      properties: {
        name: "Kazakhstan"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              70.962315,
              42.266154
            ],
            [
              70.388965,
              42.081308
            ],
            [
              69.070027,
              41.384244
            ],
            [
              68.632483,
              40.668681
            ],
            [
              68.259896,
              40.662325
            ],
            [
              67.985856,
              41.135991
            ],
            [
              66.714047,
              41.168444
            ],
            [
              66.510649,
              41.987644
            ],
            [
              66.023392,
              41.994646
            ],
            [
              66.098012,
              42.99766
            ],
            [
              64.900824,
              43.728081
            ],
            [
              63.185787,
              43.650075
            ],
            [
              62.0133,
              43.504477
            ],
            [
              61.05832,
              44.405817
            ],
            [
              60.239972,
              44.784037
            ],
            [
              58.689989,
              45.500014
            ],
            [
              58.503127,
              45.586804
            ],
            [
              55.928917,
              44.995858
            ],
            [
              55.968191,
              41.308642
            ],
            [
              55.455251,
              41.259859
            ],
            [
              54.755345,
              42.043971
            ],
            [
              54.079418,
              42.324109
            ],
            [
              52.944293,
              42.116034
            ],
            [
              52.50246,
              41.783316
            ],
            [
              52.446339,
              42.027151
            ],
            [
              52.692112,
              42.443895
            ],
            [
              52.501426,
              42.792298
            ],
            [
              51.342427,
              43.132975
            ],
            [
              50.891292,
              44.031034
            ],
            [
              50.339129,
              44.284016
            ],
            [
              50.305643,
              44.609836
            ],
            [
              51.278503,
              44.514854
            ],
            [
              51.316899,
              45.245998
            ],
            [
              52.16739,
              45.408391
            ],
            [
              53.040876,
              45.259047
            ],
            [
              53.220866,
              46.234646
            ],
            [
              53.042737,
              46.853006
            ],
            [
              52.042023,
              46.804637
            ],
            [
              51.191945,
              47.048705
            ],
            [
              50.034083,
              46.60899
            ],
            [
              49.10116,
              46.39933
            ],
            [
              48.593241,
              46.561034
            ],
            [
              48.694734,
              47.075628
            ],
            [
              48.057253,
              47.743753
            ],
            [
              47.315231,
              47.715847
            ],
            [
              46.466446,
              48.394152
            ],
            [
              47.043672,
              49.152039
            ],
            [
              46.751596,
              49.356006
            ],
            [
              47.54948,
              50.454698
            ],
            [
              48.577841,
              49.87476
            ],
            [
              48.702382,
              50.605128
            ],
            [
              50.766648,
              51.692762
            ],
            [
              52.328724,
              51.718652
            ],
            [
              54.532878,
              51.02624
            ],
            [
              55.716941,
              50.621717
            ],
            [
              56.777961,
              51.043551
            ],
            [
              58.363291,
              51.063653
            ],
            [
              59.642282,
              50.545442
            ],
            [
              59.932807,
              50.842194
            ],
            [
              61.337424,
              50.79907
            ],
            [
              61.588003,
              51.272659
            ],
            [
              59.967534,
              51.96042
            ],
            [
              60.927269,
              52.447548
            ],
            [
              60.739993,
              52.719986
            ],
            [
              61.699986,
              52.979996
            ],
            [
              60.978066,
              53.664993
            ],
            [
              61.436591,
              54.006265
            ],
            [
              65.178534,
              54.354228
            ],
            [
              65.666876,
              54.601267
            ],
            [
              68.1691,
              54.970392
            ],
            [
              69.068167,
              55.38525
            ],
            [
              70.865267,
              55.169734
            ],
            [
              71.180131,
              54.133285
            ],
            [
              72.22415,
              54.376655
            ],
            [
              73.508516,
              54.035617
            ],
            [
              73.425679,
              53.48981
            ],
            [
              74.384845,
              53.546861
            ],
            [
              76.8911,
              54.490524
            ],
            [
              76.525179,
              54.177003
            ],
            [
              77.800916,
              53.404415
            ],
            [
              80.03556,
              50.864751
            ],
            [
              80.568447,
              51.388336
            ],
            [
              81.945986,
              50.812196
            ],
            [
              83.383004,
              51.069183
            ],
            [
              83.935115,
              50.889246
            ],
            [
              84.416377,
              50.3114
            ],
            [
              85.11556,
              50.117303
            ],
            [
              85.54127,
              49.692859
            ],
            [
              86.829357,
              49.826675
            ],
            [
              87.35997,
              49.214981
            ],
            [
              86.598776,
              48.549182
            ],
            [
              85.768233,
              48.455751
            ],
            [
              85.720484,
              47.452969
            ],
            [
              85.16429,
              47.000956
            ],
            [
              83.180484,
              47.330031
            ],
            [
              82.458926,
              45.53965
            ],
            [
              81.947071,
              45.317027
            ],
            [
              79.966106,
              44.917517
            ],
            [
              80.866206,
              43.180362
            ],
            [
              80.18015,
              42.920068
            ],
            [
              80.25999,
              42.349999
            ],
            [
              79.643645,
              42.496683
            ],
            [
              79.142177,
              42.856092
            ],
            [
              77.658392,
              42.960686
            ],
            [
              76.000354,
              42.988022
            ],
            [
              75.636965,
              42.8779
            ],
            [
              74.212866,
              43.298339
            ],
            [
              73.645304,
              43.091272
            ],
            [
              73.489758,
              42.500894
            ],
            [
              71.844638,
              42.845395
            ],
            [
              71.186281,
              42.704293
            ],
            [
              70.962315,
              42.266154
            ]
          ]
        ]
      },
      id: "KAZ"
    },
    {
      type: "Feature",
      properties: {
        name: "Kenya"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              40.993,
              -0.85829
            ],
            [
              41.58513,
              -1.68325
            ],
            [
              40.88477,
              -2.08255
            ],
            [
              40.63785,
              -2.49979
            ],
            [
              40.26304,
              -2.57309
            ],
            [
              40.12119,
              -3.27768
            ],
            [
              39.80006,
              -3.68116
            ],
            [
              39.60489,
              -4.34653
            ],
            [
              39.20222,
              -4.67677
            ],
            [
              37.7669,
              -3.67712
            ],
            [
              37.69869,
              -3.09699
            ],
            [
              34.07262,
              -1.05982
            ],
            [
              33.903711,
              -0.95
            ],
            [
              33.893569,
              0.109814
            ],
            [
              34.18,
              0.515
            ],
            [
              34.6721,
              1.17694
            ],
            [
              35.03599,
              1.90584
            ],
            [
              34.59607,
              3.05374
            ],
            [
              34.47913,
              3.5556
            ],
            [
              34.005,
              4.249885
            ],
            [
              34.620196,
              4.847123
            ],
            [
              35.298007,
              5.506
            ],
            [
              35.817448,
              5.338232
            ],
            [
              35.817448,
              4.776966
            ],
            [
              36.159079,
              4.447864
            ],
            [
              36.855093,
              4.447864
            ],
            [
              38.120915,
              3.598605
            ],
            [
              38.43697,
              3.58851
            ],
            [
              38.67114,
              3.61607
            ],
            [
              38.89251,
              3.50074
            ],
            [
              39.559384,
              3.42206
            ],
            [
              39.85494,
              3.83879
            ],
            [
              40.76848,
              4.25702
            ],
            [
              41.1718,
              3.91909
            ],
            [
              41.855083,
              3.918912
            ],
            [
              40.98105,
              2.78452
            ],
            [
              40.993,
              -0.85829
            ]
          ]
        ]
      },
      id: "KEN"
    },
    {
      type: "Feature",
      properties: {
        name: "Kyrgyzstan"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              70.962315,
              42.266154
            ],
            [
              71.186281,
              42.704293
            ],
            [
              71.844638,
              42.845395
            ],
            [
              73.489758,
              42.500894
            ],
            [
              73.645304,
              43.091272
            ],
            [
              74.212866,
              43.298339
            ],
            [
              75.636965,
              42.8779
            ],
            [
              76.000354,
              42.988022
            ],
            [
              77.658392,
              42.960686
            ],
            [
              79.142177,
              42.856092
            ],
            [
              79.643645,
              42.496683
            ],
            [
              80.25999,
              42.349999
            ],
            [
              80.11943,
              42.123941
            ],
            [
              78.543661,
              41.582243
            ],
            [
              78.187197,
              41.185316
            ],
            [
              76.904484,
              41.066486
            ],
            [
              76.526368,
              40.427946
            ],
            [
              75.467828,
              40.562072
            ],
            [
              74.776862,
              40.366425
            ],
            [
              73.822244,
              39.893973
            ],
            [
              73.960013,
              39.660008
            ],
            [
              73.675379,
              39.431237
            ],
            [
              71.784694,
              39.279463
            ],
            [
              70.549162,
              39.604198
            ],
            [
              69.464887,
              39.526683
            ],
            [
              69.55961,
              40.103211
            ],
            [
              70.648019,
              39.935754
            ],
            [
              71.014198,
              40.244366
            ],
            [
              71.774875,
              40.145844
            ],
            [
              73.055417,
              40.866033
            ],
            [
              71.870115,
              41.3929
            ],
            [
              71.157859,
              41.143587
            ],
            [
              70.420022,
              41.519998
            ],
            [
              71.259248,
              42.167711
            ],
            [
              70.962315,
              42.266154
            ]
          ]
        ]
      },
      id: "KGZ"
    },
    {
      type: "Feature",
      properties: {
        name: "Cambodia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              103.49728,
              10.632555
            ],
            [
              103.09069,
              11.153661
            ],
            [
              102.584932,
              12.186595
            ],
            [
              102.348099,
              13.394247
            ],
            [
              102.988422,
              14.225721
            ],
            [
              104.281418,
              14.416743
            ],
            [
              105.218777,
              14.273212
            ],
            [
              106.043946,
              13.881091
            ],
            [
              106.496373,
              14.570584
            ],
            [
              107.382727,
              14.202441
            ],
            [
              107.614548,
              13.535531
            ],
            [
              107.491403,
              12.337206
            ],
            [
              105.810524,
              11.567615
            ],
            [
              106.24967,
              10.961812
            ],
            [
              105.199915,
              10.88931
            ],
            [
              104.334335,
              10.486544
            ],
            [
              103.49728,
              10.632555
            ]
          ]
        ]
      },
      id: "KHM"
    },
    {
      type: "Feature",
      properties: {
        name: "Kosovo"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              20.76216,
              42.05186
            ],
            [
              20.71731,
              41.84711
            ],
            [
              20.59023,
              41.85541
            ],
            [
              20.52295,
              42.21787
            ],
            [
              20.28374,
              42.32025
            ],
            [
              20.0707,
              42.58863
            ],
            [
              20.25758,
              42.81275
            ],
            [
              20.49679,
              42.88469
            ],
            [
              20.63508,
              43.21671
            ],
            [
              20.81448,
              43.27205
            ],
            [
              20.95651,
              43.13094
            ],
            [
              21.143395,
              43.068685
            ],
            [
              21.27421,
              42.90959
            ],
            [
              21.43866,
              42.86255
            ],
            [
              21.63302,
              42.67717
            ],
            [
              21.77505,
              42.6827
            ],
            [
              21.66292,
              42.43922
            ],
            [
              21.54332,
              42.32025
            ],
            [
              21.576636,
              42.245224
            ],
            [
              21.3527,
              42.2068
            ],
            [
              20.76216,
              42.05186
            ]
          ]
        ]
      },
      id: "OSA"
    },
    {
      type: "Feature",
      properties: {
        name: "Kuwait"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              47.974519,
              29.975819
            ],
            [
              48.183189,
              29.534477
            ],
            [
              48.093943,
              29.306299
            ],
            [
              48.416094,
              28.552004
            ],
            [
              47.708851,
              28.526063
            ],
            [
              47.459822,
              29.002519
            ],
            [
              46.568713,
              29.099025
            ],
            [
              47.302622,
              30.05907
            ],
            [
              47.974519,
              29.975819
            ]
          ]
        ]
      },
      id: "KWT"
    },
    {
      type: "Feature",
      properties: {
        name: "Laos"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              105.218777,
              14.273212
            ],
            [
              105.544338,
              14.723934
            ],
            [
              105.589039,
              15.570316
            ],
            [
              104.779321,
              16.441865
            ],
            [
              104.716947,
              17.428859
            ],
            [
              103.956477,
              18.240954
            ],
            [
              103.200192,
              18.309632
            ],
            [
              102.998706,
              17.961695
            ],
            [
              102.413005,
              17.932782
            ],
            [
              102.113592,
              18.109102
            ],
            [
              101.059548,
              17.512497
            ],
            [
              101.035931,
              18.408928
            ],
            [
              101.282015,
              19.462585
            ],
            [
              100.606294,
              19.508344
            ],
            [
              100.548881,
              20.109238
            ],
            [
              100.115988,
              20.41785
            ],
            [
              100.329101,
              20.786122
            ],
            [
              101.180005,
              21.436573
            ],
            [
              101.270026,
              21.201652
            ],
            [
              101.80312,
              21.174367
            ],
            [
              101.652018,
              22.318199
            ],
            [
              102.170436,
              22.464753
            ],
            [
              102.754896,
              21.675137
            ],
            [
              103.203861,
              20.766562
            ],
            [
              104.435,
              20.758733
            ],
            [
              104.822574,
              19.886642
            ],
            [
              104.183388,
              19.624668
            ],
            [
              103.896532,
              19.265181
            ],
            [
              105.094598,
              18.666975
            ],
            [
              105.925762,
              17.485315
            ],
            [
              106.556008,
              16.604284
            ],
            [
              107.312706,
              15.908538
            ],
            [
              107.564525,
              15.202173
            ],
            [
              107.382727,
              14.202441
            ],
            [
              106.496373,
              14.570584
            ],
            [
              106.043946,
              13.881091
            ],
            [
              105.218777,
              14.273212
            ]
          ]
        ]
      },
      id: "LAO"
    },
    {
      type: "Feature",
      properties: {
        name: "Lebanon"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              35.821101,
              33.277426
            ],
            [
              35.552797,
              33.264275
            ],
            [
              35.460709,
              33.08904
            ],
            [
              35.126053,
              33.0909
            ],
            [
              35.482207,
              33.90545
            ],
            [
              35.979592,
              34.610058
            ],
            [
              35.998403,
              34.644914
            ],
            [
              36.448194,
              34.593935
            ],
            [
              36.61175,
              34.201789
            ],
            [
              36.06646,
              33.824912
            ],
            [
              35.821101,
              33.277426
            ]
          ]
        ]
      },
      id: "LBN"
    },
    {
      type: "Feature",
      properties: {
        name: "Liberia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -7.712159,
              4.364566
            ],
            [
              -7.974107,
              4.355755
            ],
            [
              -9.004794,
              4.832419
            ],
            [
              -9.91342,
              5.593561
            ],
            [
              -10.765384,
              6.140711
            ],
            [
              -11.438779,
              6.785917
            ],
            [
              -11.199802,
              7.105846
            ],
            [
              -11.146704,
              7.396706
            ],
            [
              -10.695595,
              7.939464
            ],
            [
              -10.230094,
              8.406206
            ],
            [
              -10.016567,
              8.428504
            ],
            [
              -9.755342,
              8.541055
            ],
            [
              -9.33728,
              7.928534
            ],
            [
              -9.403348,
              7.526905
            ],
            [
              -9.208786,
              7.313921
            ],
            [
              -8.926065,
              7.309037
            ],
            [
              -8.722124,
              7.711674
            ],
            [
              -8.439298,
              7.686043
            ],
            [
              -8.485446,
              7.395208
            ],
            [
              -8.385452,
              6.911801
            ],
            [
              -8.60288,
              6.467564
            ],
            [
              -8.311348,
              6.193033
            ],
            [
              -7.993693,
              6.12619
            ],
            [
              -7.570153,
              5.707352
            ],
            [
              -7.539715,
              5.313345
            ],
            [
              -7.635368,
              5.188159
            ],
            [
              -7.712159,
              4.364566
            ]
          ]
        ]
      },
      id: "LBR"
    },
    {
      type: "Feature",
      properties: {
        name: "Libya"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              14.8513,
              22.86295
            ],
            [
              14.143871,
              22.491289
            ],
            [
              13.581425,
              23.040506
            ],
            [
              11.999506,
              23.471668
            ],
            [
              11.560669,
              24.097909
            ],
            [
              10.771364,
              24.562532
            ],
            [
              10.303847,
              24.379313
            ],
            [
              9.948261,
              24.936954
            ],
            [
              9.910693,
              25.365455
            ],
            [
              9.319411,
              26.094325
            ],
            [
              9.716286,
              26.512206
            ],
            [
              9.629056,
              27.140953
            ],
            [
              9.756128,
              27.688259
            ],
            [
              9.683885,
              28.144174
            ],
            [
              9.859998,
              28.95999
            ],
            [
              9.805634,
              29.424638
            ],
            [
              9.48214,
              30.307556
            ],
            [
              9.970017,
              30.539325
            ],
            [
              10.056575,
              30.961831
            ],
            [
              9.950225,
              31.37607
            ],
            [
              10.636901,
              31.761421
            ],
            [
              10.94479,
              32.081815
            ],
            [
              11.432253,
              32.368903
            ],
            [
              11.488787,
              33.136996
            ],
            [
              12.66331,
              32.79278
            ],
            [
              13.08326,
              32.87882
            ],
            [
              13.91868,
              32.71196
            ],
            [
              15.24563,
              32.26508
            ],
            [
              15.71394,
              31.37626
            ],
            [
              16.61162,
              31.18218
            ],
            [
              18.02109,
              30.76357
            ],
            [
              19.08641,
              30.26639
            ],
            [
              19.57404,
              30.52582
            ],
            [
              20.05335,
              30.98576
            ],
            [
              19.82033,
              31.75179
            ],
            [
              20.13397,
              32.2382
            ],
            [
              20.85452,
              32.7068
            ],
            [
              21.54298,
              32.8432
            ],
            [
              22.89576,
              32.63858
            ],
            [
              23.2368,
              32.19149
            ],
            [
              23.60913,
              32.18726
            ],
            [
              23.9275,
              32.01667
            ],
            [
              24.92114,
              31.89936
            ],
            [
              25.16482,
              31.56915
            ],
            [
              24.80287,
              31.08929
            ],
            [
              24.95762,
              30.6616
            ],
            [
              24.70007,
              30.04419
            ],
            [
              25,
              29.238655
            ],
            [
              25,
              25.6825
            ],
            [
              25,
              22
            ],
            [
              25,
              20.00304
            ],
            [
              23.85,
              20
            ],
            [
              23.83766,
              19.58047
            ],
            [
              19.84926,
              21.49509
            ],
            [
              15.86085,
              23.40972
            ],
            [
              14.8513,
              22.86295
            ]
          ]
        ]
      },
      id: "LBY"
    },
    {
      type: "Feature",
      properties: {
        name: "Sri Lanka"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              81.787959,
              7.523055
            ],
            [
              81.637322,
              6.481775
            ],
            [
              81.21802,
              6.197141
            ],
            [
              80.348357,
              5.96837
            ],
            [
              79.872469,
              6.763463
            ],
            [
              79.695167,
              8.200843
            ],
            [
              80.147801,
              9.824078
            ],
            [
              80.838818,
              9.268427
            ],
            [
              81.304319,
              8.564206
            ],
            [
              81.787959,
              7.523055
            ]
          ]
        ]
      },
      id: "LKA"
    },
    {
      type: "Feature",
      properties: {
        name: "Lesotho"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              28.978263,
              -28.955597
            ],
            [
              29.325166,
              -29.257387
            ],
            [
              29.018415,
              -29.743766
            ],
            [
              28.8484,
              -30.070051
            ],
            [
              28.291069,
              -30.226217
            ],
            [
              28.107205,
              -30.545732
            ],
            [
              27.749397,
              -30.645106
            ],
            [
              26.999262,
              -29.875954
            ],
            [
              27.532511,
              -29.242711
            ],
            [
              28.074338,
              -28.851469
            ],
            [
              28.5417,
              -28.647502
            ],
            [
              28.978263,
              -28.955597
            ]
          ]
        ]
      },
      id: "LSO"
    },
    {
      type: "Feature",
      properties: {
        name: "Lithuania"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              22.731099,
              54.327537
            ],
            [
              22.651052,
              54.582741
            ],
            [
              22.757764,
              54.856574
            ],
            [
              22.315724,
              55.015299
            ],
            [
              21.268449,
              55.190482
            ],
            [
              21.0558,
              56.031076
            ],
            [
              22.201157,
              56.337802
            ],
            [
              23.878264,
              56.273671
            ],
            [
              24.860684,
              56.372528
            ],
            [
              25.000934,
              56.164531
            ],
            [
              25.533047,
              56.100297
            ],
            [
              26.494331,
              55.615107
            ],
            [
              26.588279,
              55.167176
            ],
            [
              25.768433,
              54.846963
            ],
            [
              25.536354,
              54.282423
            ],
            [
              24.450684,
              53.905702
            ],
            [
              23.484128,
              53.912498
            ],
            [
              23.243987,
              54.220567
            ],
            [
              22.731099,
              54.327537
            ]
          ]
        ]
      },
      id: "LTU"
    },
    {
      type: "Feature",
      properties: {
        name: "Luxembourg"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              6.043073,
              50.128052
            ],
            [
              6.242751,
              49.902226
            ],
            [
              6.18632,
              49.463803
            ],
            [
              5.897759,
              49.442667
            ],
            [
              5.674052,
              49.529484
            ],
            [
              5.782417,
              50.090328
            ],
            [
              6.043073,
              50.128052
            ]
          ]
        ]
      },
      id: "LUX"
    },
    {
      type: "Feature",
      properties: {
        name: "Latvia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              21.0558,
              56.031076
            ],
            [
              21.090424,
              56.783873
            ],
            [
              21.581866,
              57.411871
            ],
            [
              22.524341,
              57.753374
            ],
            [
              23.318453,
              57.006236
            ],
            [
              24.12073,
              57.025693
            ],
            [
              24.312863,
              57.793424
            ],
            [
              25.164594,
              57.970157
            ],
            [
              25.60281,
              57.847529
            ],
            [
              26.463532,
              57.476389
            ],
            [
              27.288185,
              57.474528
            ],
            [
              27.770016,
              57.244258
            ],
            [
              27.855282,
              56.759326
            ],
            [
              28.176709,
              56.16913
            ],
            [
              27.10246,
              55.783314
            ],
            [
              26.494331,
              55.615107
            ],
            [
              25.533047,
              56.100297
            ],
            [
              25.000934,
              56.164531
            ],
            [
              24.860684,
              56.372528
            ],
            [
              23.878264,
              56.273671
            ],
            [
              22.201157,
              56.337802
            ],
            [
              21.0558,
              56.031076
            ]
          ]
        ]
      },
      id: "LVA"
    },
    {
      type: "Feature",
      properties: {
        name: "Morocco"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -5.193863,
              35.755182
            ],
            [
              -4.591006,
              35.330712
            ],
            [
              -3.640057,
              35.399855
            ],
            [
              -2.604306,
              35.179093
            ],
            [
              -2.169914,
              35.168396
            ],
            [
              -1.792986,
              34.527919
            ],
            [
              -1.733455,
              33.919713
            ],
            [
              -1.388049,
              32.864015
            ],
            [
              -1.124551,
              32.651522
            ],
            [
              -1.307899,
              32.262889
            ],
            [
              -2.616605,
              32.094346
            ],
            [
              -3.06898,
              31.724498
            ],
            [
              -3.647498,
              31.637294
            ],
            [
              -3.690441,
              30.896952
            ],
            [
              -4.859646,
              30.501188
            ],
            [
              -5.242129,
              30.000443
            ],
            [
              -6.060632,
              29.7317
            ],
            [
              -7.059228,
              29.579228
            ],
            [
              -8.674116,
              28.841289
            ],
            [
              -8.66559,
              27.656426
            ],
            [
              -8.817809,
              27.656426
            ],
            [
              -8.817828,
              27.656426
            ],
            [
              -8.794884,
              27.120696
            ],
            [
              -9.413037,
              27.088476
            ],
            [
              -9.735343,
              26.860945
            ],
            [
              -10.189424,
              26.860945
            ],
            [
              -10.551263,
              26.990808
            ],
            [
              -11.392555,
              26.883424
            ],
            [
              -11.71822,
              26.104092
            ],
            [
              -12.030759,
              26.030866
            ],
            [
              -12.500963,
              24.770116
            ],
            [
              -13.89111,
              23.691009
            ],
            [
              -14.221168,
              22.310163
            ],
            [
              -14.630833,
              21.86094
            ],
            [
              -14.750955,
              21.5006
            ],
            [
              -17.002962,
              21.420734
            ],
            [
              -17.020428,
              21.42231
            ],
            [
              -16.973248,
              21.885745
            ],
            [
              -16.589137,
              22.158234
            ],
            [
              -16.261922,
              22.67934
            ],
            [
              -16.326414,
              23.017768
            ],
            [
              -15.982611,
              23.723358
            ],
            [
              -15.426004,
              24.359134
            ],
            [
              -15.089332,
              24.520261
            ],
            [
              -14.824645,
              25.103533
            ],
            [
              -14.800926,
              25.636265
            ],
            [
              -14.43994,
              26.254418
            ],
            [
              -13.773805,
              26.618892
            ],
            [
              -13.139942,
              27.640148
            ],
            [
              -13.121613,
              27.654148
            ],
            [
              -12.618837,
              28.038186
            ],
            [
              -11.688919,
              28.148644
            ],
            [
              -10.900957,
              28.832142
            ],
            [
              -10.399592,
              29.098586
            ],
            [
              -9.564811,
              29.933574
            ],
            [
              -9.814718,
              31.177736
            ],
            [
              -9.434793,
              32.038096
            ],
            [
              -9.300693,
              32.564679
            ],
            [
              -8.657476,
              33.240245
            ],
            [
              -7.654178,
              33.697065
            ],
            [
              -6.912544,
              34.110476
            ],
            [
              -6.244342,
              35.145865
            ],
            [
              -5.929994,
              35.759988
            ],
            [
              -5.193863,
              35.755182
            ]
          ]
        ]
      },
      id: "MAR"
    },
    {
      type: "Feature",
      properties: {
        name: "Moldova"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              26.619337,
              48.220726
            ],
            [
              26.857824,
              48.368211
            ],
            [
              27.522537,
              48.467119
            ],
            [
              28.259547,
              48.155562
            ],
            [
              28.670891,
              48.118149
            ],
            [
              29.122698,
              47.849095
            ],
            [
              29.050868,
              47.510227
            ],
            [
              29.415135,
              47.346645
            ],
            [
              29.559674,
              46.928583
            ],
            [
              29.908852,
              46.674361
            ],
            [
              29.83821,
              46.525326
            ],
            [
              30.024659,
              46.423937
            ],
            [
              29.759972,
              46.349988
            ],
            [
              29.170654,
              46.379262
            ],
            [
              29.072107,
              46.517678
            ],
            [
              28.862972,
              46.437889
            ],
            [
              28.933717,
              46.25883
            ],
            [
              28.659987,
              45.939987
            ],
            [
              28.485269,
              45.596907
            ],
            [
              28.233554,
              45.488283
            ],
            [
              28.054443,
              45.944586
            ],
            [
              28.160018,
              46.371563
            ],
            [
              28.12803,
              46.810476
            ],
            [
              27.551166,
              47.405117
            ],
            [
              27.233873,
              47.826771
            ],
            [
              26.924176,
              48.123264
            ],
            [
              26.619337,
              48.220726
            ]
          ]
        ]
      },
      id: "MDA"
    },
    {
      type: "Feature",
      properties: {
        name: "Madagascar"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              49.543519,
              -12.469833
            ],
            [
              49.808981,
              -12.895285
            ],
            [
              50.056511,
              -13.555761
            ],
            [
              50.217431,
              -14.758789
            ],
            [
              50.476537,
              -15.226512
            ],
            [
              50.377111,
              -15.706069
            ],
            [
              50.200275,
              -16.000263
            ],
            [
              49.860606,
              -15.414253
            ],
            [
              49.672607,
              -15.710204
            ],
            [
              49.863344,
              -16.451037
            ],
            [
              49.774564,
              -16.875042
            ],
            [
              49.498612,
              -17.106036
            ],
            [
              49.435619,
              -17.953064
            ],
            [
              49.041792,
              -19.118781
            ],
            [
              48.548541,
              -20.496888
            ],
            [
              47.930749,
              -22.391501
            ],
            [
              47.547723,
              -23.781959
            ],
            [
              47.095761,
              -24.94163
            ],
            [
              46.282478,
              -25.178463
            ],
            [
              45.409508,
              -25.601434
            ],
            [
              44.833574,
              -25.346101
            ],
            [
              44.03972,
              -24.988345
            ],
            [
              43.763768,
              -24.460677
            ],
            [
              43.697778,
              -23.574116
            ],
            [
              43.345654,
              -22.776904
            ],
            [
              43.254187,
              -22.057413
            ],
            [
              43.433298,
              -21.336475
            ],
            [
              43.893683,
              -21.163307
            ],
            [
              43.89637,
              -20.830459
            ],
            [
              44.374325,
              -20.072366
            ],
            [
              44.464397,
              -19.435454
            ],
            [
              44.232422,
              -18.961995
            ],
            [
              44.042976,
              -18.331387
            ],
            [
              43.963084,
              -17.409945
            ],
            [
              44.312469,
              -16.850496
            ],
            [
              44.446517,
              -16.216219
            ],
            [
              44.944937,
              -16.179374
            ],
            [
              45.502732,
              -15.974373
            ],
            [
              45.872994,
              -15.793454
            ],
            [
              46.312243,
              -15.780018
            ],
            [
              46.882183,
              -15.210182
            ],
            [
              47.70513,
              -14.594303
            ],
            [
              48.005215,
              -14.091233
            ],
            [
              47.869047,
              -13.663869
            ],
            [
              48.293828,
              -13.784068
            ],
            [
              48.84506,
              -13.089175
            ],
            [
              48.863509,
              -12.487868
            ],
            [
              49.194651,
              -12.040557
            ],
            [
              49.543519,
              -12.469833
            ]
          ]
        ]
      },
      id: "MDG"
    },
    {
      type: "Feature",
      properties: {
        name: "Mexico"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -97.140008,
              25.869997
            ],
            [
              -97.528072,
              24.992144
            ],
            [
              -97.702946,
              24.272343
            ],
            [
              -97.776042,
              22.93258
            ],
            [
              -97.872367,
              22.444212
            ],
            [
              -97.699044,
              21.898689
            ],
            [
              -97.38896,
              21.411019
            ],
            [
              -97.189333,
              20.635433
            ],
            [
              -96.525576,
              19.890931
            ],
            [
              -96.292127,
              19.320371
            ],
            [
              -95.900885,
              18.828024
            ],
            [
              -94.839063,
              18.562717
            ],
            [
              -94.42573,
              18.144371
            ],
            [
              -93.548651,
              18.423837
            ],
            [
              -92.786114,
              18.524839
            ],
            [
              -92.037348,
              18.704569
            ],
            [
              -91.407903,
              18.876083
            ],
            [
              -90.77187,
              19.28412
            ],
            [
              -90.53359,
              19.867418
            ],
            [
              -90.451476,
              20.707522
            ],
            [
              -90.278618,
              20.999855
            ],
            [
              -89.601321,
              21.261726
            ],
            [
              -88.543866,
              21.493675
            ],
            [
              -87.658417,
              21.458846
            ],
            [
              -87.05189,
              21.543543
            ],
            [
              -86.811982,
              21.331515
            ],
            [
              -86.845908,
              20.849865
            ],
            [
              -87.383291,
              20.255405
            ],
            [
              -87.621054,
              19.646553
            ],
            [
              -87.43675,
              19.472403
            ],
            [
              -87.58656,
              19.04013
            ],
            [
              -87.837191,
              18.259816
            ],
            [
              -88.090664,
              18.516648
            ],
            [
              -88.300031,
              18.499982
            ],
            [
              -88.490123,
              18.486831
            ],
            [
              -88.848344,
              17.883198
            ],
            [
              -89.029857,
              18.001511
            ],
            [
              -89.150909,
              17.955468
            ],
            [
              -89.14308,
              17.808319
            ],
            [
              -90.067934,
              17.819326
            ],
            [
              -91.00152,
              17.817595
            ],
            [
              -91.002269,
              17.254658
            ],
            [
              -91.453921,
              17.252177
            ],
            [
              -91.08167,
              16.918477
            ],
            [
              -90.711822,
              16.687483
            ],
            [
              -90.600847,
              16.470778
            ],
            [
              -90.438867,
              16.41011
            ],
            [
              -90.464473,
              16.069562
            ],
            [
              -91.74796,
              16.066565
            ],
            [
              -92.229249,
              15.251447
            ],
            [
              -92.087216,
              15.064585
            ],
            [
              -92.20323,
              14.830103
            ],
            [
              -92.22775,
              14.538829
            ],
            [
              -93.359464,
              15.61543
            ],
            [
              -93.875169,
              15.940164
            ],
            [
              -94.691656,
              16.200975
            ],
            [
              -95.250227,
              16.128318
            ],
            [
              -96.053382,
              15.752088
            ],
            [
              -96.557434,
              15.653515
            ],
            [
              -97.263592,
              15.917065
            ],
            [
              -98.01303,
              16.107312
            ],
            [
              -98.947676,
              16.566043
            ],
            [
              -99.697397,
              16.706164
            ],
            [
              -100.829499,
              17.171071
            ],
            [
              -101.666089,
              17.649026
            ],
            [
              -101.918528,
              17.91609
            ],
            [
              -102.478132,
              17.975751
            ],
            [
              -103.50099,
              18.292295
            ],
            [
              -103.917527,
              18.748572
            ],
            [
              -104.99201,
              19.316134
            ],
            [
              -105.493038,
              19.946767
            ],
            [
              -105.731396,
              20.434102
            ],
            [
              -105.397773,
              20.531719
            ],
            [
              -105.500661,
              20.816895
            ],
            [
              -105.270752,
              21.076285
            ],
            [
              -105.265817,
              21.422104
            ],
            [
              -105.603161,
              21.871146
            ],
            [
              -105.693414,
              22.26908
            ],
            [
              -106.028716,
              22.773752
            ],
            [
              -106.90998,
              23.767774
            ],
            [
              -107.915449,
              24.548915
            ],
            [
              -108.401905,
              25.172314
            ],
            [
              -109.260199,
              25.580609
            ],
            [
              -109.444089,
              25.824884
            ],
            [
              -109.291644,
              26.442934
            ],
            [
              -109.801458,
              26.676176
            ],
            [
              -110.391732,
              27.162115
            ],
            [
              -110.641019,
              27.859876
            ],
            [
              -111.178919,
              27.941241
            ],
            [
              -111.759607,
              28.467953
            ],
            [
              -112.228235,
              28.954409
            ],
            [
              -112.271824,
              29.266844
            ],
            [
              -112.809594,
              30.021114
            ],
            [
              -113.163811,
              30.786881
            ],
            [
              -113.148669,
              31.170966
            ],
            [
              -113.871881,
              31.567608
            ],
            [
              -114.205737,
              31.524045
            ],
            [
              -114.776451,
              31.799532
            ],
            [
              -114.9367,
              31.393485
            ],
            [
              -114.771232,
              30.913617
            ],
            [
              -114.673899,
              30.162681
            ],
            [
              -114.330974,
              29.750432
            ],
            [
              -113.588875,
              29.061611
            ],
            [
              -113.424053,
              28.826174
            ],
            [
              -113.271969,
              28.754783
            ],
            [
              -113.140039,
              28.411289
            ],
            [
              -112.962298,
              28.42519
            ],
            [
              -112.761587,
              27.780217
            ],
            [
              -112.457911,
              27.525814
            ],
            [
              -112.244952,
              27.171727
            ],
            [
              -111.616489,
              26.662817
            ],
            [
              -111.284675,
              25.73259
            ],
            [
              -110.987819,
              25.294606
            ],
            [
              -110.710007,
              24.826004
            ],
            [
              -110.655049,
              24.298595
            ],
            [
              -110.172856,
              24.265548
            ],
            [
              -109.771847,
              23.811183
            ],
            [
              -109.409104,
              23.364672
            ],
            [
              -109.433392,
              23.185588
            ],
            [
              -109.854219,
              22.818272
            ],
            [
              -110.031392,
              22.823078
            ],
            [
              -110.295071,
              23.430973
            ],
            [
              -110.949501,
              24.000964
            ],
            [
              -111.670568,
              24.484423
            ],
            [
              -112.182036,
              24.738413
            ],
            [
              -112.148989,
              25.470125
            ],
            [
              -112.300711,
              26.012004
            ],
            [
              -112.777297,
              26.32196
            ],
            [
              -113.464671,
              26.768186
            ],
            [
              -113.59673,
              26.63946
            ],
            [
              -113.848937,
              26.900064
            ],
            [
              -114.465747,
              27.14209
            ],
            [
              -115.055142,
              27.722727
            ],
            [
              -114.982253,
              27.7982
            ],
            [
              -114.570366,
              27.741485
            ],
            [
              -114.199329,
              28.115003
            ],
            [
              -114.162018,
              28.566112
            ],
            [
              -114.931842,
              29.279479
            ],
            [
              -115.518654,
              29.556362
            ],
            [
              -115.887365,
              30.180794
            ],
            [
              -116.25835,
              30.836464
            ],
            [
              -116.721526,
              31.635744
            ],
            [
              -117.12776,
              32.53534
            ],
            [
              -115.99135,
              32.61239
            ],
            [
              -114.72139,
              32.72083
            ],
            [
              -114.815,
              32.52528
            ],
            [
              -113.30498,
              32.03914
            ],
            [
              -111.02361,
              31.33472
            ],
            [
              -109.035,
              31.34194
            ],
            [
              -108.24194,
              31.34222
            ],
            [
              -108.24,
              31.754854
            ],
            [
              -106.50759,
              31.75452
            ],
            [
              -106.1429,
              31.39995
            ],
            [
              -105.63159,
              31.08383
            ],
            [
              -105.03737,
              30.64402
            ],
            [
              -104.70575,
              30.12173
            ],
            [
              -104.45697,
              29.57196
            ],
            [
              -103.94,
              29.27
            ],
            [
              -103.11,
              28.97
            ],
            [
              -102.48,
              29.76
            ],
            [
              -101.6624,
              29.7793
            ],
            [
              -100.9576,
              29.38071
            ],
            [
              -100.45584,
              28.69612
            ],
            [
              -100.11,
              28.11
            ],
            [
              -99.52,
              27.54
            ],
            [
              -99.3,
              26.84
            ],
            [
              -99.02,
              26.37
            ],
            [
              -98.24,
              26.06
            ],
            [
              -97.53,
              25.84
            ],
            [
              -97.140008,
              25.869997
            ]
          ]
        ]
      },
      id: "MEX"
    },
    {
      type: "Feature",
      properties: {
        name: "Macedonia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              20.59023,
              41.85541
            ],
            [
              20.71731,
              41.84711
            ],
            [
              20.76216,
              42.05186
            ],
            [
              21.3527,
              42.2068
            ],
            [
              21.576636,
              42.245224
            ],
            [
              21.91708,
              42.30364
            ],
            [
              22.380526,
              42.32026
            ],
            [
              22.881374,
              41.999297
            ],
            [
              22.952377,
              41.337994
            ],
            [
              22.76177,
              41.3048
            ],
            [
              22.597308,
              41.130487
            ],
            [
              22.055378,
              41.149866
            ],
            [
              21.674161,
              40.931275
            ],
            [
              21.02004,
              40.842727
            ],
            [
              20.60518,
              41.08622
            ],
            [
              20.46315,
              41.51509
            ],
            [
              20.59023,
              41.85541
            ]
          ]
        ]
      },
      id: "MKD"
    },
    {
      type: "Feature",
      properties: {
        name: "Mali"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -12.17075,
              14.616834
            ],
            [
              -11.834208,
              14.799097
            ],
            [
              -11.666078,
              15.388208
            ],
            [
              -11.349095,
              15.411256
            ],
            [
              -10.650791,
              15.132746
            ],
            [
              -10.086846,
              15.330486
            ],
            [
              -9.700255,
              15.264107
            ],
            [
              -9.550238,
              15.486497
            ],
            [
              -5.537744,
              15.50169
            ],
            [
              -5.315277,
              16.201854
            ],
            [
              -5.488523,
              16.325102
            ],
            [
              -5.971129,
              20.640833
            ],
            [
              -6.453787,
              24.956591
            ],
            [
              -4.923337,
              24.974574
            ],
            [
              -1.550055,
              22.792666
            ],
            [
              1.823228,
              20.610809
            ],
            [
              2.060991,
              20.142233
            ],
            [
              2.683588,
              19.85623
            ],
            [
              3.146661,
              19.693579
            ],
            [
              3.158133,
              19.057364
            ],
            [
              4.267419,
              19.155265
            ],
            [
              4.27021,
              16.852227
            ],
            [
              3.723422,
              16.184284
            ],
            [
              3.638259,
              15.56812
            ],
            [
              2.749993,
              15.409525
            ],
            [
              1.385528,
              15.323561
            ],
            [
              1.015783,
              14.968182
            ],
            [
              0.374892,
              14.928908
            ],
            [
              -0.266257,
              14.924309
            ],
            [
              -0.515854,
              15.116158
            ],
            [
              -1.066363,
              14.973815
            ],
            [
              -2.001035,
              14.559008
            ],
            [
              -2.191825,
              14.246418
            ],
            [
              -2.967694,
              13.79815
            ],
            [
              -3.103707,
              13.541267
            ],
            [
              -3.522803,
              13.337662
            ],
            [
              -4.006391,
              13.472485
            ],
            [
              -4.280405,
              13.228444
            ],
            [
              -4.427166,
              12.542646
            ],
            [
              -5.220942,
              11.713859
            ],
            [
              -5.197843,
              11.375146
            ],
            [
              -5.470565,
              10.95127
            ],
            [
              -5.404342,
              10.370737
            ],
            [
              -5.816926,
              10.222555
            ],
            [
              -6.050452,
              10.096361
            ],
            [
              -6.205223,
              10.524061
            ],
            [
              -6.493965,
              10.411303
            ],
            [
              -6.666461,
              10.430811
            ],
            [
              -6.850507,
              10.138994
            ],
            [
              -7.622759,
              10.147236
            ],
            [
              -7.89959,
              10.297382
            ],
            [
              -8.029944,
              10.206535
            ],
            [
              -8.335377,
              10.494812
            ],
            [
              -8.282357,
              10.792597
            ],
            [
              -8.407311,
              10.909257
            ],
            [
              -8.620321,
              10.810891
            ],
            [
              -8.581305,
              11.136246
            ],
            [
              -8.376305,
              11.393646
            ],
            [
              -8.786099,
              11.812561
            ],
            [
              -8.905265,
              12.088358
            ],
            [
              -9.127474,
              12.30806
            ],
            [
              -9.327616,
              12.334286
            ],
            [
              -9.567912,
              12.194243
            ],
            [
              -9.890993,
              12.060479
            ],
            [
              -10.165214,
              11.844084
            ],
            [
              -10.593224,
              11.923975
            ],
            [
              -10.87083,
              12.177887
            ],
            [
              -11.036556,
              12.211245
            ],
            [
              -11.297574,
              12.077971
            ],
            [
              -11.456169,
              12.076834
            ],
            [
              -11.513943,
              12.442988
            ],
            [
              -11.467899,
              12.754519
            ],
            [
              -11.553398,
              13.141214
            ],
            [
              -11.927716,
              13.422075
            ],
            [
              -12.124887,
              13.994727
            ],
            [
              -12.17075,
              14.616834
            ]
          ]
        ]
      },
      id: "MLI"
    },
    {
      type: "Feature",
      properties: {
        name: "Myanmar"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              99.543309,
              20.186598
            ],
            [
              98.959676,
              19.752981
            ],
            [
              98.253724,
              19.708203
            ],
            [
              97.797783,
              18.62708
            ],
            [
              97.375896,
              18.445438
            ],
            [
              97.859123,
              17.567946
            ],
            [
              98.493761,
              16.837836
            ],
            [
              98.903348,
              16.177824
            ],
            [
              98.537376,
              15.308497
            ],
            [
              98.192074,
              15.123703
            ],
            [
              98.430819,
              14.622028
            ],
            [
              99.097755,
              13.827503
            ],
            [
              99.212012,
              13.269294
            ],
            [
              99.196354,
              12.804748
            ],
            [
              99.587286,
              11.892763
            ],
            [
              99.038121,
              10.960546
            ],
            [
              98.553551,
              9.93296
            ],
            [
              98.457174,
              10.675266
            ],
            [
              98.764546,
              11.441292
            ],
            [
              98.428339,
              12.032987
            ],
            [
              98.509574,
              13.122378
            ],
            [
              98.103604,
              13.64046
            ],
            [
              97.777732,
              14.837286
            ],
            [
              97.597072,
              16.100568
            ],
            [
              97.16454,
              16.928734
            ],
            [
              96.505769,
              16.427241
            ],
            [
              95.369352,
              15.71439
            ],
            [
              94.808405,
              15.803454
            ],
            [
              94.188804,
              16.037936
            ],
            [
              94.533486,
              17.27724
            ],
            [
              94.324817,
              18.213514
            ],
            [
              93.540988,
              19.366493
            ],
            [
              93.663255,
              19.726962
            ],
            [
              93.078278,
              19.855145
            ],
            [
              92.368554,
              20.670883
            ],
            [
              92.303234,
              21.475485
            ],
            [
              92.652257,
              21.324048
            ],
            [
              92.672721,
              22.041239
            ],
            [
              93.166128,
              22.27846
            ],
            [
              93.060294,
              22.703111
            ],
            [
              93.286327,
              23.043658
            ],
            [
              93.325188,
              24.078556
            ],
            [
              94.106742,
              23.850741
            ],
            [
              94.552658,
              24.675238
            ],
            [
              94.603249,
              25.162495
            ],
            [
              95.155153,
              26.001307
            ],
            [
              95.124768,
              26.573572
            ],
            [
              96.419366,
              27.264589
            ],
            [
              97.133999,
              27.083774
            ],
            [
              97.051989,
              27.699059
            ],
            [
              97.402561,
              27.882536
            ],
            [
              97.327114,
              28.261583
            ],
            [
              97.911988,
              28.335945
            ],
            [
              98.246231,
              27.747221
            ],
            [
              98.68269,
              27.508812
            ],
            [
              98.712094,
              26.743536
            ],
            [
              98.671838,
              25.918703
            ],
            [
              97.724609,
              25.083637
            ],
            [
              97.60472,
              23.897405
            ],
            [
              98.660262,
              24.063286
            ],
            [
              98.898749,
              23.142722
            ],
            [
              99.531992,
              22.949039
            ],
            [
              99.240899,
              22.118314
            ],
            [
              99.983489,
              21.742937
            ],
            [
              100.416538,
              21.558839
            ],
            [
              101.150033,
              21.849984
            ],
            [
              101.180005,
              21.436573
            ],
            [
              100.329101,
              20.786122
            ],
            [
              100.115988,
              20.41785
            ],
            [
              99.543309,
              20.186598
            ]
          ]
        ]
      },
      id: "MMR"
    },
    {
      type: "Feature",
      properties: {
        name: "Montenegro"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              19.801613,
              42.500093
            ],
            [
              19.738051,
              42.688247
            ],
            [
              19.30449,
              42.19574
            ],
            [
              19.37177,
              41.87755
            ],
            [
              19.16246,
              41.95502
            ],
            [
              18.88214,
              42.28151
            ],
            [
              18.45,
              42.48
            ],
            [
              18.56,
              42.65
            ],
            [
              18.70648,
              43.20011
            ],
            [
              19.03165,
              43.43253
            ],
            [
              19.21852,
              43.52384
            ],
            [
              19.48389,
              43.35229
            ],
            [
              19.63,
              43.21378
            ],
            [
              19.95857,
              43.10604
            ],
            [
              20.3398,
              42.89852
            ],
            [
              20.25758,
              42.81275
            ],
            [
              20.0707,
              42.58863
            ],
            [
              19.801613,
              42.500093
            ]
          ]
        ]
      },
      id: "MNE"
    },
    {
      type: "Feature",
      properties: {
        name: "Mongolia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              87.751264,
              49.297198
            ],
            [
              88.805567,
              49.470521
            ],
            [
              90.713667,
              50.331812
            ],
            [
              92.234712,
              50.802171
            ],
            [
              93.104219,
              50.49529
            ],
            [
              94.147566,
              50.480537
            ],
            [
              94.815949,
              50.013433
            ],
            [
              95.814028,
              49.977467
            ],
            [
              97.259728,
              49.726061
            ],
            [
              98.231762,
              50.422401
            ],
            [
              97.82574,
              51.010995
            ],
            [
              98.861491,
              52.047366
            ],
            [
              99.981732,
              51.634006
            ],
            [
              100.88948,
              51.516856
            ],
            [
              102.065223,
              51.259921
            ],
            [
              102.255909,
              50.510561
            ],
            [
              103.676545,
              50.089966
            ],
            [
              104.621552,
              50.275329
            ],
            [
              105.886591,
              50.406019
            ],
            [
              106.888804,
              50.274296
            ],
            [
              107.868176,
              49.793705
            ],
            [
              108.475167,
              49.282548
            ],
            [
              109.402449,
              49.292961
            ],
            [
              110.662011,
              49.130128
            ],
            [
              111.581231,
              49.377968
            ],
            [
              112.89774,
              49.543565
            ],
            [
              114.362456,
              50.248303
            ],
            [
              114.96211,
              50.140247
            ],
            [
              115.485695,
              49.805177
            ],
            [
              116.678801,
              49.888531
            ],
            [
              116.191802,
              49.134598
            ],
            [
              115.485282,
              48.135383
            ],
            [
              115.742837,
              47.726545
            ],
            [
              116.308953,
              47.85341
            ],
            [
              117.295507,
              47.697709
            ],
            [
              118.064143,
              48.06673
            ],
            [
              118.866574,
              47.74706
            ],
            [
              119.772824,
              47.048059
            ],
            [
              119.66327,
              46.69268
            ],
            [
              118.874326,
              46.805412
            ],
            [
              117.421701,
              46.672733
            ],
            [
              116.717868,
              46.388202
            ],
            [
              115.985096,
              45.727235
            ],
            [
              114.460332,
              45.339817
            ],
            [
              113.463907,
              44.808893
            ],
            [
              112.436062,
              45.011646
            ],
            [
              111.873306,
              45.102079
            ],
            [
              111.348377,
              44.457442
            ],
            [
              111.667737,
              44.073176
            ],
            [
              111.829588,
              43.743118
            ],
            [
              111.129682,
              43.406834
            ],
            [
              110.412103,
              42.871234
            ],
            [
              109.243596,
              42.519446
            ],
            [
              107.744773,
              42.481516
            ],
            [
              106.129316,
              42.134328
            ],
            [
              104.964994,
              41.59741
            ],
            [
              104.522282,
              41.908347
            ],
            [
              103.312278,
              41.907468
            ],
            [
              101.83304,
              42.514873
            ],
            [
              100.845866,
              42.663804
            ],
            [
              99.515817,
              42.524691
            ],
            [
              97.451757,
              42.74889
            ],
            [
              96.349396,
              42.725635
            ],
            [
              95.762455,
              43.319449
            ],
            [
              95.306875,
              44.241331
            ],
            [
              94.688929,
              44.352332
            ],
            [
              93.480734,
              44.975472
            ],
            [
              92.133891,
              45.115076
            ],
            [
              90.94554,
              45.286073
            ],
            [
              90.585768,
              45.719716
            ],
            [
              90.970809,
              46.888146
            ],
            [
              90.280826,
              47.693549
            ],
            [
              88.854298,
              48.069082
            ],
            [
              88.013832,
              48.599463
            ],
            [
              87.751264,
              49.297198
            ]
          ]
        ]
      },
      id: "MNG"
    },
    {
      type: "Feature",
      properties: {
        name: "Mozambique"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              34.559989,
              -11.52002
            ],
            [
              35.312398,
              -11.439146
            ],
            [
              36.514082,
              -11.720938
            ],
            [
              36.775151,
              -11.594537
            ],
            [
              37.471284,
              -11.568751
            ],
            [
              37.827645,
              -11.268769
            ],
            [
              38.427557,
              -11.285202
            ],
            [
              39.52103,
              -10.896854
            ],
            [
              40.316589,
              -10.317096
            ],
            [
              40.478387,
              -10.765441
            ],
            [
              40.437253,
              -11.761711
            ],
            [
              40.560811,
              -12.639177
            ],
            [
              40.59962,
              -14.201975
            ],
            [
              40.775475,
              -14.691764
            ],
            [
              40.477251,
              -15.406294
            ],
            [
              40.089264,
              -16.100774
            ],
            [
              39.452559,
              -16.720891
            ],
            [
              38.538351,
              -17.101023
            ],
            [
              37.411133,
              -17.586368
            ],
            [
              36.281279,
              -18.659688
            ],
            [
              35.896497,
              -18.84226
            ],
            [
              35.1984,
              -19.552811
            ],
            [
              34.786383,
              -19.784012
            ],
            [
              34.701893,
              -20.497043
            ],
            [
              35.176127,
              -21.254361
            ],
            [
              35.373428,
              -21.840837
            ],
            [
              35.385848,
              -22.14
            ],
            [
              35.562546,
              -22.09
            ],
            [
              35.533935,
              -23.070788
            ],
            [
              35.371774,
              -23.535359
            ],
            [
              35.60747,
              -23.706563
            ],
            [
              35.458746,
              -24.12261
            ],
            [
              35.040735,
              -24.478351
            ],
            [
              34.215824,
              -24.816314
            ],
            [
              33.01321,
              -25.357573
            ],
            [
              32.574632,
              -25.727318
            ],
            [
              32.660363,
              -26.148584
            ],
            [
              32.915955,
              -26.215867
            ],
            [
              32.83012,
              -26.742192
            ],
            [
              32.071665,
              -26.73382
            ],
            [
              31.985779,
              -26.29178
            ],
            [
              31.837778,
              -25.843332
            ],
            [
              31.752408,
              -25.484284
            ],
            [
              31.930589,
              -24.369417
            ],
            [
              31.670398,
              -23.658969
            ],
            [
              31.191409,
              -22.25151
            ],
            [
              32.244988,
              -21.116489
            ],
            [
              32.508693,
              -20.395292
            ],
            [
              32.659743,
              -20.30429
            ],
            [
              32.772708,
              -19.715592
            ],
            [
              32.611994,
              -19.419383
            ],
            [
              32.654886,
              -18.67209
            ],
            [
              32.849861,
              -17.979057
            ],
            [
              32.847639,
              -16.713398
            ],
            [
              32.328239,
              -16.392074
            ],
            [
              31.852041,
              -16.319417
            ],
            [
              31.636498,
              -16.07199
            ],
            [
              31.173064,
              -15.860944
            ],
            [
              30.338955,
              -15.880839
            ],
            [
              30.274256,
              -15.507787
            ],
            [
              30.179481,
              -14.796099
            ],
            [
              33.214025,
              -13.97186
            ],
            [
              33.7897,
              -14.451831
            ],
            [
              34.064825,
              -14.35995
            ],
            [
              34.459633,
              -14.61301
            ],
            [
              34.517666,
              -15.013709
            ],
            [
              34.307291,
              -15.478641
            ],
            [
              34.381292,
              -16.18356
            ],
            [
              35.03381,
              -16.8013
            ],
            [
              35.339063,
              -16.10744
            ],
            [
              35.771905,
              -15.896859
            ],
            [
              35.686845,
              -14.611046
            ],
            [
              35.267956,
              -13.887834
            ],
            [
              34.907151,
              -13.565425
            ],
            [
              34.559989,
              -13.579998
            ],
            [
              34.280006,
              -12.280025
            ],
            [
              34.559989,
              -11.52002
            ]
          ]
        ]
      },
      id: "MOZ"
    },
    {
      type: "Feature",
      properties: {
        name: "Mauritania"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -12.17075,
              14.616834
            ],
            [
              -12.830658,
              15.303692
            ],
            [
              -13.435738,
              16.039383
            ],
            [
              -14.099521,
              16.304302
            ],
            [
              -14.577348,
              16.598264
            ],
            [
              -15.135737,
              16.587282
            ],
            [
              -15.623666,
              16.369337
            ],
            [
              -16.12069,
              16.455663
            ],
            [
              -16.463098,
              16.135036
            ],
            [
              -16.549708,
              16.673892
            ],
            [
              -16.270552,
              17.166963
            ],
            [
              -16.146347,
              18.108482
            ],
            [
              -16.256883,
              19.096716
            ],
            [
              -16.377651,
              19.593817
            ],
            [
              -16.277838,
              20.092521
            ],
            [
              -16.536324,
              20.567866
            ],
            [
              -17.063423,
              20.999752
            ],
            [
              -16.845194,
              21.333323
            ],
            [
              -12.929102,
              21.327071
            ],
            [
              -13.118754,
              22.77122
            ],
            [
              -12.874222,
              23.284832
            ],
            [
              -11.937224,
              23.374594
            ],
            [
              -11.969419,
              25.933353
            ],
            [
              -8.687294,
              25.881056
            ],
            [
              -8.6844,
              27.395744
            ],
            [
              -4.923337,
              24.974574
            ],
            [
              -6.453787,
              24.956591
            ],
            [
              -5.971129,
              20.640833
            ],
            [
              -5.488523,
              16.325102
            ],
            [
              -5.315277,
              16.201854
            ],
            [
              -5.537744,
              15.50169
            ],
            [
              -9.550238,
              15.486497
            ],
            [
              -9.700255,
              15.264107
            ],
            [
              -10.086846,
              15.330486
            ],
            [
              -10.650791,
              15.132746
            ],
            [
              -11.349095,
              15.411256
            ],
            [
              -11.666078,
              15.388208
            ],
            [
              -11.834208,
              14.799097
            ],
            [
              -12.17075,
              14.616834
            ]
          ]
        ]
      },
      id: "MRT"
    },
    {
      type: "Feature",
      properties: {
        name: "Malawi"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              34.559989,
              -11.52002
            ],
            [
              34.280006,
              -12.280025
            ],
            [
              34.559989,
              -13.579998
            ],
            [
              34.907151,
              -13.565425
            ],
            [
              35.267956,
              -13.887834
            ],
            [
              35.686845,
              -14.611046
            ],
            [
              35.771905,
              -15.896859
            ],
            [
              35.339063,
              -16.10744
            ],
            [
              35.03381,
              -16.8013
            ],
            [
              34.381292,
              -16.18356
            ],
            [
              34.307291,
              -15.478641
            ],
            [
              34.517666,
              -15.013709
            ],
            [
              34.459633,
              -14.61301
            ],
            [
              34.064825,
              -14.35995
            ],
            [
              33.7897,
              -14.451831
            ],
            [
              33.214025,
              -13.97186
            ],
            [
              32.688165,
              -13.712858
            ],
            [
              32.991764,
              -12.783871
            ],
            [
              33.306422,
              -12.435778
            ],
            [
              33.114289,
              -11.607198
            ],
            [
              33.31531,
              -10.79655
            ],
            [
              33.485688,
              -10.525559
            ],
            [
              33.231388,
              -9.676722
            ],
            [
              32.759375,
              -9.230599
            ],
            [
              33.739729,
              -9.417151
            ],
            [
              33.940838,
              -9.693674
            ],
            [
              34.280006,
              -10.16
            ],
            [
              34.559989,
              -11.52002
            ]
          ]
        ]
      },
      id: "MWI"
    },
    {
      type: "Feature",
      properties: {
        name: "Malaysia"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                101.075516,
                6.204867
              ],
              [
                101.154219,
                5.691384
              ],
              [
                101.814282,
                5.810808
              ],
              [
                102.141187,
                6.221636
              ],
              [
                102.371147,
                6.128205
              ],
              [
                102.961705,
                5.524495
              ],
              [
                103.381215,
                4.855001
              ],
              [
                103.438575,
                4.181606
              ],
              [
                103.332122,
                3.726698
              ],
              [
                103.429429,
                3.382869
              ],
              [
                103.502448,
                2.791019
              ],
              [
                103.854674,
                2.515454
              ],
              [
                104.247932,
                1.631141
              ],
              [
                104.228811,
                1.293048
              ],
              [
                103.519707,
                1.226334
              ],
              [
                102.573615,
                1.967115
              ],
              [
                101.390638,
                2.760814
              ],
              [
                101.27354,
                3.270292
              ],
              [
                100.695435,
                3.93914
              ],
              [
                100.557408,
                4.76728
              ],
              [
                100.196706,
                5.312493
              ],
              [
                100.30626,
                6.040562
              ],
              [
                100.085757,
                6.464489
              ],
              [
                100.259596,
                6.642825
              ],
              [
                101.075516,
                6.204867
              ]
            ]
          ],
          [
            [
              [
                118.618321,
                4.478202
              ],
              [
                117.882035,
                4.137551
              ],
              [
                117.015214,
                4.306094
              ],
              [
                115.865517,
                4.306559
              ],
              [
                115.519078,
                3.169238
              ],
              [
                115.134037,
                2.821482
              ],
              [
                114.621355,
                1.430688
              ],
              [
                113.80585,
                1.217549
              ],
              [
                112.859809,
                1.49779
              ],
              [
                112.380252,
                1.410121
              ],
              [
                111.797548,
                0.904441
              ],
              [
                111.159138,
                0.976478
              ],
              [
                110.514061,
                0.773131
              ],
              [
                109.830227,
                1.338136
              ],
              [
                109.66326,
                2.006467
              ],
              [
                110.396135,
                1.663775
              ],
              [
                111.168853,
                1.850637
              ],
              [
                111.370081,
                2.697303
              ],
              [
                111.796928,
                2.885897
              ],
              [
                112.995615,
                3.102395
              ],
              [
                113.712935,
                3.893509
              ],
              [
                114.204017,
                4.525874
              ],
              [
                114.659596,
                4.007637
              ],
              [
                114.869557,
                4.348314
              ],
              [
                115.347461,
                4.316636
              ],
              [
                115.4057,
                4.955228
              ],
              [
                115.45071,
                5.44773
              ],
              [
                116.220741,
                6.143191
              ],
              [
                116.725103,
                6.924771
              ],
              [
                117.129626,
                6.928053
              ],
              [
                117.643393,
                6.422166
              ],
              [
                117.689075,
                5.98749
              ],
              [
                118.347691,
                5.708696
              ],
              [
                119.181904,
                5.407836
              ],
              [
                119.110694,
                5.016128
              ],
              [
                118.439727,
                4.966519
              ],
              [
                118.618321,
                4.478202
              ]
            ]
          ]
        ]
      },
      id: "MYS"
    },
    {
      type: "Feature",
      properties: {
        name: "Namibia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              16.344977,
              -28.576705
            ],
            [
              15.601818,
              -27.821247
            ],
            [
              15.210472,
              -27.090956
            ],
            [
              14.989711,
              -26.117372
            ],
            [
              14.743214,
              -25.39292
            ],
            [
              14.408144,
              -23.853014
            ],
            [
              14.385717,
              -22.656653
            ],
            [
              14.257714,
              -22.111208
            ],
            [
              13.868642,
              -21.699037
            ],
            [
              13.352498,
              -20.872834
            ],
            [
              12.826845,
              -19.673166
            ],
            [
              12.608564,
              -19.045349
            ],
            [
              11.794919,
              -18.069129
            ],
            [
              11.734199,
              -17.301889
            ],
            [
              12.215461,
              -17.111668
            ],
            [
              12.814081,
              -16.941343
            ],
            [
              13.462362,
              -16.971212
            ],
            [
              14.058501,
              -17.423381
            ],
            [
              14.209707,
              -17.353101
            ],
            [
              18.263309,
              -17.309951
            ],
            [
              18.956187,
              -17.789095
            ],
            [
              21.377176,
              -17.930636
            ],
            [
              23.215048,
              -17.523116
            ],
            [
              24.033862,
              -17.295843
            ],
            [
              24.682349,
              -17.353411
            ],
            [
              25.07695,
              -17.578823
            ],
            [
              25.084443,
              -17.661816
            ],
            [
              24.520705,
              -17.887125
            ],
            [
              24.217365,
              -17.889347
            ],
            [
              23.579006,
              -18.281261
            ],
            [
              23.196858,
              -17.869038
            ],
            [
              21.65504,
              -18.219146
            ],
            [
              20.910641,
              -18.252219
            ],
            [
              20.881134,
              -21.814327
            ],
            [
              19.895458,
              -21.849157
            ],
            [
              19.895768,
              -24.76779
            ],
            [
              19.894734,
              -28.461105
            ],
            [
              19.002127,
              -28.972443
            ],
            [
              18.464899,
              -29.045462
            ],
            [
              17.836152,
              -28.856378
            ],
            [
              17.387497,
              -28.783514
            ],
            [
              17.218929,
              -28.355943
            ],
            [
              16.824017,
              -28.082162
            ],
            [
              16.344977,
              -28.576705
            ]
          ]
        ]
      },
      id: "NAM"
    },
    {
      type: "Feature",
      properties: {
        name: "New Caledonia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              165.77999,
              -21.080005
            ],
            [
              166.599991,
              -21.700019
            ],
            [
              167.120011,
              -22.159991
            ],
            [
              166.740035,
              -22.399976
            ],
            [
              166.189732,
              -22.129708
            ],
            [
              165.474375,
              -21.679607
            ],
            [
              164.829815,
              -21.14982
            ],
            [
              164.167995,
              -20.444747
            ],
            [
              164.029606,
              -20.105646
            ],
            [
              164.459967,
              -20.120012
            ],
            [
              165.020036,
              -20.459991
            ],
            [
              165.460009,
              -20.800022
            ],
            [
              165.77999,
              -21.080005
            ]
          ]
        ]
      },
      id: "NCL"
    },
    {
      type: "Feature",
      properties: {
        name: "Niger"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              2.154474,
              11.94015
            ],
            [
              2.177108,
              12.625018
            ],
            [
              1.024103,
              12.851826
            ],
            [
              0.993046,
              13.33575
            ],
            [
              0.429928,
              13.988733
            ],
            [
              0.295646,
              14.444235
            ],
            [
              0.374892,
              14.928908
            ],
            [
              1.015783,
              14.968182
            ],
            [
              1.385528,
              15.323561
            ],
            [
              2.749993,
              15.409525
            ],
            [
              3.638259,
              15.56812
            ],
            [
              3.723422,
              16.184284
            ],
            [
              4.27021,
              16.852227
            ],
            [
              4.267419,
              19.155265
            ],
            [
              5.677566,
              19.601207
            ],
            [
              8.572893,
              21.565661
            ],
            [
              11.999506,
              23.471668
            ],
            [
              13.581425,
              23.040506
            ],
            [
              14.143871,
              22.491289
            ],
            [
              14.8513,
              22.86295
            ],
            [
              15.096888,
              21.308519
            ],
            [
              15.471077,
              21.048457
            ],
            [
              15.487148,
              20.730415
            ],
            [
              15.903247,
              20.387619
            ],
            [
              15.685741,
              19.95718
            ],
            [
              15.300441,
              17.92795
            ],
            [
              15.247731,
              16.627306
            ],
            [
              13.972202,
              15.684366
            ],
            [
              13.540394,
              14.367134
            ],
            [
              13.956699,
              13.996691
            ],
            [
              13.954477,
              13.353449
            ],
            [
              14.595781,
              13.330427
            ],
            [
              14.495787,
              12.859396
            ],
            [
              14.213531,
              12.802035
            ],
            [
              14.181336,
              12.483657
            ],
            [
              13.995353,
              12.461565
            ],
            [
              13.318702,
              13.556356
            ],
            [
              13.083987,
              13.596147
            ],
            [
              12.302071,
              13.037189
            ],
            [
              11.527803,
              13.32898
            ],
            [
              10.989593,
              13.387323
            ],
            [
              10.701032,
              13.246918
            ],
            [
              10.114814,
              13.277252
            ],
            [
              9.524928,
              12.851102
            ],
            [
              9.014933,
              12.826659
            ],
            [
              7.804671,
              13.343527
            ],
            [
              7.330747,
              13.098038
            ],
            [
              6.820442,
              13.115091
            ],
            [
              6.445426,
              13.492768
            ],
            [
              5.443058,
              13.865924
            ],
            [
              4.368344,
              13.747482
            ],
            [
              4.107946,
              13.531216
            ],
            [
              3.967283,
              12.956109
            ],
            [
              3.680634,
              12.552903
            ],
            [
              3.61118,
              11.660167
            ],
            [
              2.848643,
              12.235636
            ],
            [
              2.490164,
              12.233052
            ],
            [
              2.154474,
              11.94015
            ]
          ]
        ]
      },
      id: "NER"
    },
    {
      type: "Feature",
      properties: {
        name: "Nigeria"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              8.500288,
              4.771983
            ],
            [
              7.462108,
              4.412108
            ],
            [
              7.082596,
              4.464689
            ],
            [
              6.698072,
              4.240594
            ],
            [
              5.898173,
              4.262453
            ],
            [
              5.362805,
              4.887971
            ],
            [
              5.033574,
              5.611802
            ],
            [
              4.325607,
              6.270651
            ],
            [
              3.57418,
              6.2583
            ],
            [
              2.691702,
              6.258817
            ],
            [
              2.749063,
              7.870734
            ],
            [
              2.723793,
              8.506845
            ],
            [
              2.912308,
              9.137608
            ],
            [
              3.220352,
              9.444153
            ],
            [
              3.705438,
              10.06321
            ],
            [
              3.60007,
              10.332186
            ],
            [
              3.797112,
              10.734746
            ],
            [
              3.572216,
              11.327939
            ],
            [
              3.61118,
              11.660167
            ],
            [
              3.680634,
              12.552903
            ],
            [
              3.967283,
              12.956109
            ],
            [
              4.107946,
              13.531216
            ],
            [
              4.368344,
              13.747482
            ],
            [
              5.443058,
              13.865924
            ],
            [
              6.445426,
              13.492768
            ],
            [
              6.820442,
              13.115091
            ],
            [
              7.330747,
              13.098038
            ],
            [
              7.804671,
              13.343527
            ],
            [
              9.014933,
              12.826659
            ],
            [
              9.524928,
              12.851102
            ],
            [
              10.114814,
              13.277252
            ],
            [
              10.701032,
              13.246918
            ],
            [
              10.989593,
              13.387323
            ],
            [
              11.527803,
              13.32898
            ],
            [
              12.302071,
              13.037189
            ],
            [
              13.083987,
              13.596147
            ],
            [
              13.318702,
              13.556356
            ],
            [
              13.995353,
              12.461565
            ],
            [
              14.181336,
              12.483657
            ],
            [
              14.577178,
              12.085361
            ],
            [
              14.468192,
              11.904752
            ],
            [
              14.415379,
              11.572369
            ],
            [
              13.57295,
              10.798566
            ],
            [
              13.308676,
              10.160362
            ],
            [
              13.1676,
              9.640626
            ],
            [
              12.955468,
              9.417772
            ],
            [
              12.753672,
              8.717763
            ],
            [
              12.218872,
              8.305824
            ],
            [
              12.063946,
              7.799808
            ],
            [
              11.839309,
              7.397042
            ],
            [
              11.745774,
              6.981383
            ],
            [
              11.058788,
              6.644427
            ],
            [
              10.497375,
              7.055358
            ],
            [
              10.118277,
              7.03877
            ],
            [
              9.522706,
              6.453482
            ],
            [
              9.233163,
              6.444491
            ],
            [
              8.757533,
              5.479666
            ],
            [
              8.500288,
              4.771983
            ]
          ]
        ]
      },
      id: "NGA"
    },
    {
      type: "Feature",
      properties: {
        name: "Nicaragua"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -85.71254,
              11.088445
            ],
            [
              -86.058488,
              11.403439
            ],
            [
              -86.52585,
              11.806877
            ],
            [
              -86.745992,
              12.143962
            ],
            [
              -87.167516,
              12.458258
            ],
            [
              -87.668493,
              12.90991
            ],
            [
              -87.557467,
              13.064552
            ],
            [
              -87.392386,
              12.914018
            ],
            [
              -87.316654,
              12.984686
            ],
            [
              -87.005769,
              13.025794
            ],
            [
              -86.880557,
              13.254204
            ],
            [
              -86.733822,
              13.263093
            ],
            [
              -86.755087,
              13.754845
            ],
            [
              -86.520708,
              13.778487
            ],
            [
              -86.312142,
              13.771356
            ],
            [
              -86.096264,
              14.038187
            ],
            [
              -85.801295,
              13.836055
            ],
            [
              -85.698665,
              13.960078
            ],
            [
              -85.514413,
              14.079012
            ],
            [
              -85.165365,
              14.35437
            ],
            [
              -85.148751,
              14.560197
            ],
            [
              -85.052787,
              14.551541
            ],
            [
              -84.924501,
              14.790493
            ],
            [
              -84.820037,
              14.819587
            ],
            [
              -84.649582,
              14.666805
            ],
            [
              -84.449336,
              14.621614
            ],
            [
              -84.228342,
              14.748764
            ],
            [
              -83.975721,
              14.749436
            ],
            [
              -83.628585,
              14.880074
            ],
            [
              -83.489989,
              15.016267
            ],
            [
              -83.147219,
              14.995829
            ],
            [
              -83.233234,
              14.899866
            ],
            [
              -83.284162,
              14.676624
            ],
            [
              -83.182126,
              14.310703
            ],
            [
              -83.4125,
              13.970078
            ],
            [
              -83.519832,
              13.567699
            ],
            [
              -83.552207,
              13.127054
            ],
            [
              -83.498515,
              12.869292
            ],
            [
              -83.473323,
              12.419087
            ],
            [
              -83.626104,
              12.32085
            ],
            [
              -83.719613,
              11.893124
            ],
            [
              -83.650858,
              11.629032
            ],
            [
              -83.85547,
              11.373311
            ],
            [
              -83.808936,
              11.103044
            ],
            [
              -83.655612,
              10.938764
            ],
            [
              -83.895054,
              10.726839
            ],
            [
              -84.190179,
              10.79345
            ],
            [
              -84.355931,
              10.999226
            ],
            [
              -84.673069,
              11.082657
            ],
            [
              -84.903003,
              10.952303
            ],
            [
              -85.561852,
              11.217119
            ],
            [
              -85.71254,
              11.088445
            ]
          ]
        ]
      },
      id: "NIC"
    },
    {
      type: "Feature",
      properties: {
        name: "Netherlands"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              6.074183,
              53.510403
            ],
            [
              6.90514,
              53.482162
            ],
            [
              7.092053,
              53.144043
            ],
            [
              6.84287,
              52.22844
            ],
            [
              6.589397,
              51.852029
            ],
            [
              5.988658,
              51.851616
            ],
            [
              6.156658,
              50.803721
            ],
            [
              5.606976,
              51.037298
            ],
            [
              4.973991,
              51.475024
            ],
            [
              4.047071,
              51.267259
            ],
            [
              3.314971,
              51.345755
            ],
            [
              3.830289,
              51.620545
            ],
            [
              4.705997,
              53.091798
            ],
            [
              6.074183,
              53.510403
            ]
          ]
        ]
      },
      id: "NLD"
    },
    {
      type: "Feature",
      properties: {
        name: "Norway"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                28.165547,
                71.185474
              ],
              [
                31.293418,
                70.453788
              ],
              [
                30.005435,
                70.186259
              ],
              [
                31.101079,
                69.55808
              ],
              [
                29.399581,
                69.156916
              ],
              [
                28.59193,
                69.064777
              ],
              [
                29.015573,
                69.766491
              ],
              [
                27.732292,
                70.164193
              ],
              [
                26.179622,
                69.825299
              ],
              [
                25.689213,
                69.092114
              ],
              [
                24.735679,
                68.649557
              ],
              [
                23.66205,
                68.891247
              ],
              [
                22.356238,
                68.841741
              ],
              [
                21.244936,
                69.370443
              ],
              [
                20.645593,
                69.106247
              ],
              [
                20.025269,
                69.065139
              ],
              [
                19.87856,
                68.407194
              ],
              [
                17.993868,
                68.567391
              ],
              [
                17.729182,
                68.010552
              ],
              [
                16.768879,
                68.013937
              ],
              [
                16.108712,
                67.302456
              ],
              [
                15.108411,
                66.193867
              ],
              [
                13.55569,
                64.787028
              ],
              [
                13.919905,
                64.445421
              ],
              [
                13.571916,
                64.049114
              ],
              [
                12.579935,
                64.066219
              ],
              [
                11.930569,
                63.128318
              ],
              [
                11.992064,
                61.800362
              ],
              [
                12.631147,
                61.293572
              ],
              [
                12.300366,
                60.117933
              ],
              [
                11.468272,
                59.432393
              ],
              [
                11.027369,
                58.856149
              ],
              [
                10.356557,
                59.469807
              ],
              [
                8.382,
                58.313288
              ],
              [
                7.048748,
                58.078884
              ],
              [
                5.665835,
                58.588155
              ],
              [
                5.308234,
                59.663232
              ],
              [
                4.992078,
                61.970998
              ],
              [
                5.9129,
                62.614473
              ],
              [
                8.553411,
                63.454008
              ],
              [
                10.527709,
                64.486038
              ],
              [
                12.358347,
                65.879726
              ],
              [
                14.761146,
                67.810642
              ],
              [
                16.435927,
                68.563205
              ],
              [
                19.184028,
                69.817444
              ],
              [
                21.378416,
                70.255169
              ],
              [
                23.023742,
                70.202072
              ],
              [
                24.546543,
                71.030497
              ],
              [
                26.37005,
                70.986262
              ],
              [
                28.165547,
                71.185474
              ]
            ]
          ],
          [
            [
              [
                24.72412,
                77.85385
              ],
              [
                22.49032,
                77.44493
              ],
              [
                20.72601,
                77.67704
              ],
              [
                21.41611,
                77.93504
              ],
              [
                20.8119,
                78.25463
              ],
              [
                22.88426,
                78.45494
              ],
              [
                23.28134,
                78.07954
              ],
              [
                24.72412,
                77.85385
              ]
            ]
          ],
          [
            [
              [
                18.25183,
                79.70175
              ],
              [
                21.54383,
                78.95611
              ],
              [
                19.02737,
                78.5626
              ],
              [
                18.47172,
                77.82669
              ],
              [
                17.59441,
                77.63796
              ],
              [
                17.1182,
                76.80941
              ],
              [
                15.91315,
                76.77045
              ],
              [
                13.76259,
                77.38035
              ],
              [
                14.66956,
                77.73565
              ],
              [
                13.1706,
                78.02493
              ],
              [
                11.22231,
                78.8693
              ],
              [
                10.44453,
                79.65239
              ],
              [
                13.17077,
                80.01046
              ],
              [
                13.71852,
                79.66039
              ],
              [
                15.14282,
                79.67431
              ],
              [
                15.52255,
                80.01608
              ],
              [
                16.99085,
                80.05086
              ],
              [
                18.25183,
                79.70175
              ]
            ]
          ],
          [
            [
              [
                25.447625,
                80.40734
              ],
              [
                27.407506,
                80.056406
              ],
              [
                25.924651,
                79.517834
              ],
              [
                23.024466,
                79.400012
              ],
              [
                20.075188,
                79.566823
              ],
              [
                19.897266,
                79.842362
              ],
              [
                18.462264,
                79.85988
              ],
              [
                17.368015,
                80.318896
              ],
              [
                20.455992,
                80.598156
              ],
              [
                21.907945,
                80.357679
              ],
              [
                22.919253,
                80.657144
              ],
              [
                25.447625,
                80.40734
              ]
            ]
          ]
        ]
      },
      id: "NOR"
    },
    {
      type: "Feature",
      properties: {
        name: "Nepal"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              88.120441,
              27.876542
            ],
            [
              88.043133,
              27.445819
            ],
            [
              88.174804,
              26.810405
            ],
            [
              88.060238,
              26.414615
            ],
            [
              87.227472,
              26.397898
            ],
            [
              86.024393,
              26.630985
            ],
            [
              85.251779,
              26.726198
            ],
            [
              84.675018,
              27.234901
            ],
            [
              83.304249,
              27.364506
            ],
            [
              81.999987,
              27.925479
            ],
            [
              81.057203,
              28.416095
            ],
            [
              80.088425,
              28.79447
            ],
            [
              80.476721,
              29.729865
            ],
            [
              81.111256,
              30.183481
            ],
            [
              81.525804,
              30.422717
            ],
            [
              82.327513,
              30.115268
            ],
            [
              83.337115,
              29.463732
            ],
            [
              83.898993,
              29.320226
            ],
            [
              84.23458,
              28.839894
            ],
            [
              85.011638,
              28.642774
            ],
            [
              85.82332,
              28.203576
            ],
            [
              86.954517,
              27.974262
            ],
            [
              88.120441,
              27.876542
            ]
          ]
        ]
      },
      id: "NPL"
    },
    {
      type: "Feature",
      properties: {
        name: "New Zealand"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                173.020375,
                -40.919052
              ],
              [
                173.247234,
                -41.331999
              ],
              [
                173.958405,
                -40.926701
              ],
              [
                174.247587,
                -41.349155
              ],
              [
                174.248517,
                -41.770008
              ],
              [
                173.876447,
                -42.233184
              ],
              [
                173.22274,
                -42.970038
              ],
              [
                172.711246,
                -43.372288
              ],
              [
                173.080113,
                -43.853344
              ],
              [
                172.308584,
                -43.865694
              ],
              [
                171.452925,
                -44.242519
              ],
              [
                171.185138,
                -44.897104
              ],
              [
                170.616697,
                -45.908929
              ],
              [
                169.831422,
                -46.355775
              ],
              [
                169.332331,
                -46.641235
              ],
              [
                168.411354,
                -46.619945
              ],
              [
                167.763745,
                -46.290197
              ],
              [
                166.676886,
                -46.219917
              ],
              [
                166.509144,
                -45.852705
              ],
              [
                167.046424,
                -45.110941
              ],
              [
                168.303763,
                -44.123973
              ],
              [
                168.949409,
                -43.935819
              ],
              [
                169.667815,
                -43.555326
              ],
              [
                170.52492,
                -43.031688
              ],
              [
                171.12509,
                -42.512754
              ],
              [
                171.569714,
                -41.767424
              ],
              [
                171.948709,
                -41.514417
              ],
              [
                172.097227,
                -40.956104
              ],
              [
                172.79858,
                -40.493962
              ],
              [
                173.020375,
                -40.919052
              ]
            ]
          ],
          [
            [
              [
                174.612009,
                -36.156397
              ],
              [
                175.336616,
                -37.209098
              ],
              [
                175.357596,
                -36.526194
              ],
              [
                175.808887,
                -36.798942
              ],
              [
                175.95849,
                -37.555382
              ],
              [
                176.763195,
                -37.881253
              ],
              [
                177.438813,
                -37.961248
              ],
              [
                178.010354,
                -37.579825
              ],
              [
                178.517094,
                -37.695373
              ],
              [
                178.274731,
                -38.582813
              ],
              [
                177.97046,
                -39.166343
              ],
              [
                177.206993,
                -39.145776
              ],
              [
                176.939981,
                -39.449736
              ],
              [
                177.032946,
                -39.879943
              ],
              [
                176.885824,
                -40.065978
              ],
              [
                176.508017,
                -40.604808
              ],
              [
                176.01244,
                -41.289624
              ],
              [
                175.239567,
                -41.688308
              ],
              [
                175.067898,
                -41.425895
              ],
              [
                174.650973,
                -41.281821
              ],
              [
                175.22763,
                -40.459236
              ],
              [
                174.900157,
                -39.908933
              ],
              [
                173.824047,
                -39.508854
              ],
              [
                173.852262,
                -39.146602
              ],
              [
                174.574802,
                -38.797683
              ],
              [
                174.743474,
                -38.027808
              ],
              [
                174.697017,
                -37.381129
              ],
              [
                174.292028,
                -36.711092
              ],
              [
                174.319004,
                -36.534824
              ],
              [
                173.840997,
                -36.121981
              ],
              [
                173.054171,
                -35.237125
              ],
              [
                172.636005,
                -34.529107
              ],
              [
                173.007042,
                -34.450662
              ],
              [
                173.551298,
                -35.006183
              ],
              [
                174.32939,
                -35.265496
              ],
              [
                174.612009,
                -36.156397
              ]
            ]
          ]
        ]
      },
      id: "NZL"
    },
    {
      type: "Feature",
      properties: {
        name: "Oman"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                58.861141,
                21.114035
              ],
              [
                58.487986,
                20.428986
              ],
              [
                58.034318,
                20.481437
              ],
              [
                57.826373,
                20.243002
              ],
              [
                57.665762,
                19.736005
              ],
              [
                57.7887,
                19.06757
              ],
              [
                57.694391,
                18.94471
              ],
              [
                57.234264,
                18.947991
              ],
              [
                56.609651,
                18.574267
              ],
              [
                56.512189,
                18.087113
              ],
              [
                56.283521,
                17.876067
              ],
              [
                55.661492,
                17.884128
              ],
              [
                55.269939,
                17.632309
              ],
              [
                55.2749,
                17.228354
              ],
              [
                54.791002,
                16.950697
              ],
              [
                54.239253,
                17.044981
              ],
              [
                53.570508,
                16.707663
              ],
              [
                53.108573,
                16.651051
              ],
              [
                52.782184,
                17.349742
              ],
              [
                52.00001,
                19.000003
              ],
              [
                54.999982,
                19.999994
              ],
              [
                55.666659,
                22.000001
              ],
              [
                55.208341,
                22.70833
              ],
              [
                55.234489,
                23.110993
              ],
              [
                55.525841,
                23.524869
              ],
              [
                55.528632,
                23.933604
              ],
              [
                55.981214,
                24.130543
              ],
              [
                55.804119,
                24.269604
              ],
              [
                55.886233,
                24.920831
              ],
              [
                56.396847,
                24.924732
              ],
              [
                56.84514,
                24.241673
              ],
              [
                57.403453,
                23.878594
              ],
              [
                58.136948,
                23.747931
              ],
              [
                58.729211,
                23.565668
              ],
              [
                59.180502,
                22.992395
              ],
              [
                59.450098,
                22.660271
              ],
              [
                59.80806,
                22.533612
              ],
              [
                59.806148,
                22.310525
              ],
              [
                59.442191,
                21.714541
              ],
              [
                59.282408,
                21.433886
              ],
              [
                58.861141,
                21.114035
              ]
            ]
          ],
          [
            [
              [
                56.391421,
                25.895991
              ],
              [
                56.261042,
                25.714606
              ],
              [
                56.070821,
                26.055464
              ],
              [
                56.362017,
                26.395934
              ],
              [
                56.485679,
                26.309118
              ],
              [
                56.391421,
                25.895991
              ]
            ]
          ]
        ]
      },
      id: "OMN"
    },
    {
      type: "Feature",
      properties: {
        name: "Pakistan"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              75.158028,
              37.133031
            ],
            [
              75.896897,
              36.666806
            ],
            [
              76.192848,
              35.898403
            ],
            [
              77.837451,
              35.49401
            ],
            [
              76.871722,
              34.653544
            ],
            [
              75.757061,
              34.504923
            ],
            [
              74.240203,
              34.748887
            ],
            [
              73.749948,
              34.317699
            ],
            [
              74.104294,
              33.441473
            ],
            [
              74.451559,
              32.7649
            ],
            [
              75.258642,
              32.271105
            ],
            [
              74.405929,
              31.692639
            ],
            [
              74.42138,
              30.979815
            ],
            [
              73.450638,
              29.976413
            ],
            [
              72.823752,
              28.961592
            ],
            [
              71.777666,
              27.91318
            ],
            [
              70.616496,
              27.989196
            ],
            [
              69.514393,
              26.940966
            ],
            [
              70.168927,
              26.491872
            ],
            [
              70.282873,
              25.722229
            ],
            [
              70.844699,
              25.215102
            ],
            [
              71.04324,
              24.356524
            ],
            [
              68.842599,
              24.359134
            ],
            [
              68.176645,
              23.691965
            ],
            [
              67.443667,
              23.944844
            ],
            [
              67.145442,
              24.663611
            ],
            [
              66.372828,
              25.425141
            ],
            [
              64.530408,
              25.237039
            ],
            [
              62.905701,
              25.218409
            ],
            [
              61.497363,
              25.078237
            ],
            [
              61.874187,
              26.239975
            ],
            [
              63.316632,
              26.756532
            ],
            [
              63.233898,
              27.217047
            ],
            [
              62.755426,
              27.378923
            ],
            [
              62.72783,
              28.259645
            ],
            [
              61.771868,
              28.699334
            ],
            [
              61.369309,
              29.303276
            ],
            [
              60.874248,
              29.829239
            ],
            [
              62.549857,
              29.318572
            ],
            [
              63.550261,
              29.468331
            ],
            [
              64.148002,
              29.340819
            ],
            [
              64.350419,
              29.560031
            ],
            [
              65.046862,
              29.472181
            ],
            [
              66.346473,
              29.887943
            ],
            [
              66.381458,
              30.738899
            ],
            [
              66.938891,
              31.304911
            ],
            [
              67.683394,
              31.303154
            ],
            [
              67.792689,
              31.58293
            ],
            [
              68.556932,
              31.71331
            ],
            [
              68.926677,
              31.620189
            ],
            [
              69.317764,
              31.901412
            ],
            [
              69.262522,
              32.501944
            ],
            [
              69.687147,
              33.105499
            ],
            [
              70.323594,
              33.358533
            ],
            [
              69.930543,
              34.02012
            ],
            [
              70.881803,
              33.988856
            ],
            [
              71.156773,
              34.348911
            ],
            [
              71.115019,
              34.733126
            ],
            [
              71.613076,
              35.153203
            ],
            [
              71.498768,
              35.650563
            ],
            [
              71.262348,
              36.074388
            ],
            [
              71.846292,
              36.509942
            ],
            [
              72.920025,
              36.720007
            ],
            [
              74.067552,
              36.836176
            ],
            [
              74.575893,
              37.020841
            ],
            [
              75.158028,
              37.133031
            ]
          ]
        ]
      },
      id: "PAK"
    },
    {
      type: "Feature",
      properties: {
        name: "Panama"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -77.881571,
              7.223771
            ],
            [
              -78.214936,
              7.512255
            ],
            [
              -78.429161,
              8.052041
            ],
            [
              -78.182096,
              8.319182
            ],
            [
              -78.435465,
              8.387705
            ],
            [
              -78.622121,
              8.718124
            ],
            [
              -79.120307,
              8.996092
            ],
            [
              -79.557877,
              8.932375
            ],
            [
              -79.760578,
              8.584515
            ],
            [
              -80.164481,
              8.333316
            ],
            [
              -80.382659,
              8.298409
            ],
            [
              -80.480689,
              8.090308
            ],
            [
              -80.00369,
              7.547524
            ],
            [
              -80.276671,
              7.419754
            ],
            [
              -80.421158,
              7.271572
            ],
            [
              -80.886401,
              7.220541
            ],
            [
              -81.059543,
              7.817921
            ],
            [
              -81.189716,
              7.647906
            ],
            [
              -81.519515,
              7.70661
            ],
            [
              -81.721311,
              8.108963
            ],
            [
              -82.131441,
              8.175393
            ],
            [
              -82.390934,
              8.292362
            ],
            [
              -82.820081,
              8.290864
            ],
            [
              -82.850958,
              8.073823
            ],
            [
              -82.965783,
              8.225028
            ],
            [
              -82.913176,
              8.423517
            ],
            [
              -82.829771,
              8.626295
            ],
            [
              -82.868657,
              8.807266
            ],
            [
              -82.719183,
              8.925709
            ],
            [
              -82.927155,
              9.07433
            ],
            [
              -82.932891,
              9.476812
            ],
            [
              -82.546196,
              9.566135
            ],
            [
              -82.187123,
              9.207449
            ],
            [
              -82.207586,
              8.995575
            ],
            [
              -81.808567,
              8.950617
            ],
            [
              -81.714154,
              9.031955
            ],
            [
              -81.439287,
              8.786234
            ],
            [
              -80.947302,
              8.858504
            ],
            [
              -80.521901,
              9.111072
            ],
            [
              -79.9146,
              9.312765
            ],
            [
              -79.573303,
              9.61161
            ],
            [
              -79.021192,
              9.552931
            ],
            [
              -79.05845,
              9.454565
            ],
            [
              -78.500888,
              9.420459
            ],
            [
              -78.055928,
              9.24773
            ],
            [
              -77.729514,
              8.946844
            ],
            [
              -77.353361,
              8.670505
            ],
            [
              -77.474723,
              8.524286
            ],
            [
              -77.242566,
              7.935278
            ],
            [
              -77.431108,
              7.638061
            ],
            [
              -77.753414,
              7.70984
            ],
            [
              -77.881571,
              7.223771
            ]
          ]
        ]
      },
      id: "PAN"
    },
    {
      type: "Feature",
      properties: {
        name: "Peru"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -69.590424,
              -17.580012
            ],
            [
              -69.858444,
              -18.092694
            ],
            [
              -70.372572,
              -18.347975
            ],
            [
              -71.37525,
              -17.773799
            ],
            [
              -71.462041,
              -17.363488
            ],
            [
              -73.44453,
              -16.359363
            ],
            [
              -75.237883,
              -15.265683
            ],
            [
              -76.009205,
              -14.649286
            ],
            [
              -76.423469,
              -13.823187
            ],
            [
              -76.259242,
              -13.535039
            ],
            [
              -77.106192,
              -12.222716
            ],
            [
              -78.092153,
              -10.377712
            ],
            [
              -79.036953,
              -8.386568
            ],
            [
              -79.44592,
              -7.930833
            ],
            [
              -79.760578,
              -7.194341
            ],
            [
              -80.537482,
              -6.541668
            ],
            [
              -81.249996,
              -6.136834
            ],
            [
              -80.926347,
              -5.690557
            ],
            [
              -81.410943,
              -4.736765
            ],
            [
              -81.09967,
              -4.036394
            ],
            [
              -80.302561,
              -3.404856
            ],
            [
              -80.184015,
              -3.821162
            ],
            [
              -80.469295,
              -4.059287
            ],
            [
              -80.442242,
              -4.425724
            ],
            [
              -80.028908,
              -4.346091
            ],
            [
              -79.624979,
              -4.454198
            ],
            [
              -79.205289,
              -4.959129
            ],
            [
              -78.639897,
              -4.547784
            ],
            [
              -78.450684,
              -3.873097
            ],
            [
              -77.837905,
              -3.003021
            ],
            [
              -76.635394,
              -2.608678
            ],
            [
              -75.544996,
              -1.56161
            ],
            [
              -75.233723,
              -0.911417
            ],
            [
              -75.373223,
              -0.152032
            ],
            [
              -75.106625,
              -0.057205
            ],
            [
              -74.441601,
              -0.53082
            ],
            [
              -74.122395,
              -1.002833
            ],
            [
              -73.659504,
              -1.260491
            ],
            [
              -73.070392,
              -2.308954
            ],
            [
              -72.325787,
              -2.434218
            ],
            [
              -71.774761,
              -2.16979
            ],
            [
              -71.413646,
              -2.342802
            ],
            [
              -70.813476,
              -2.256865
            ],
            [
              -70.047709,
              -2.725156
            ],
            [
              -70.692682,
              -3.742872
            ],
            [
              -70.394044,
              -3.766591
            ],
            [
              -69.893635,
              -4.298187
            ],
            [
              -70.794769,
              -4.251265
            ],
            [
              -70.928843,
              -4.401591
            ],
            [
              -71.748406,
              -4.593983
            ],
            [
              -72.891928,
              -5.274561
            ],
            [
              -72.964507,
              -5.741251
            ],
            [
              -73.219711,
              -6.089189
            ],
            [
              -73.120027,
              -6.629931
            ],
            [
              -73.724487,
              -6.918595
            ],
            [
              -73.723401,
              -7.340999
            ],
            [
              -73.987235,
              -7.52383
            ],
            [
              -73.571059,
              -8.424447
            ],
            [
              -73.015383,
              -9.032833
            ],
            [
              -73.226713,
              -9.462213
            ],
            [
              -72.563033,
              -9.520194
            ],
            [
              -72.184891,
              -10.053598
            ],
            [
              -71.302412,
              -10.079436
            ],
            [
              -70.481894,
              -9.490118
            ],
            [
              -70.548686,
              -11.009147
            ],
            [
              -70.093752,
              -11.123972
            ],
            [
              -69.529678,
              -10.951734
            ],
            [
              -68.66508,
              -12.5613
            ],
            [
              -68.88008,
              -12.899729
            ],
            [
              -68.929224,
              -13.602684
            ],
            [
              -68.948887,
              -14.453639
            ],
            [
              -69.339535,
              -14.953195
            ],
            [
              -69.160347,
              -15.323974
            ],
            [
              -69.389764,
              -15.660129
            ],
            [
              -68.959635,
              -16.500698
            ],
            [
              -69.590424,
              -17.580012
            ]
          ]
        ]
      },
      id: "PER"
    },
    {
      type: "Feature",
      properties: {
        name: "Philippines"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                126.376814,
                8.414706
              ],
              [
                126.478513,
                7.750354
              ],
              [
                126.537424,
                7.189381
              ],
              [
                126.196773,
                6.274294
              ],
              [
                125.831421,
                7.293715
              ],
              [
                125.363852,
                6.786485
              ],
              [
                125.683161,
                6.049657
              ],
              [
                125.396512,
                5.581003
              ],
              [
                124.219788,
                6.161355
              ],
              [
                123.93872,
                6.885136
              ],
              [
                124.243662,
                7.36061
              ],
              [
                123.610212,
                7.833527
              ],
              [
                123.296071,
                7.418876
              ],
              [
                122.825506,
                7.457375
              ],
              [
                122.085499,
                6.899424
              ],
              [
                121.919928,
                7.192119
              ],
              [
                122.312359,
                8.034962
              ],
              [
                122.942398,
                8.316237
              ],
              [
                123.487688,
                8.69301
              ],
              [
                123.841154,
                8.240324
              ],
              [
                124.60147,
                8.514158
              ],
              [
                124.764612,
                8.960409
              ],
              [
                125.471391,
                8.986997
              ],
              [
                125.412118,
                9.760335
              ],
              [
                126.222714,
                9.286074
              ],
              [
                126.306637,
                8.782487
              ],
              [
                126.376814,
                8.414706
              ]
            ]
          ],
          [
            [
              [
                123.982438,
                10.278779
              ],
              [
                123.623183,
                9.950091
              ],
              [
                123.309921,
                9.318269
              ],
              [
                122.995883,
                9.022189
              ],
              [
                122.380055,
                9.713361
              ],
              [
                122.586089,
                9.981045
              ],
              [
                122.837081,
                10.261157
              ],
              [
                122.947411,
                10.881868
              ],
              [
                123.49885,
                10.940624
              ],
              [
                123.337774,
                10.267384
              ],
              [
                124.077936,
                11.232726
              ],
              [
                123.982438,
                10.278779
              ]
            ]
          ],
          [
            [
              [
                118.504581,
                9.316383
              ],
              [
                117.174275,
                8.3675
              ],
              [
                117.664477,
                9.066889
              ],
              [
                118.386914,
                9.6845
              ],
              [
                118.987342,
                10.376292
              ],
              [
                119.511496,
                11.369668
              ],
              [
                119.689677,
                10.554291
              ],
              [
                119.029458,
                10.003653
              ],
              [
                118.504581,
                9.316383
              ]
            ]
          ],
          [
            [
              [
                121.883548,
                11.891755
              ],
              [
                122.483821,
                11.582187
              ],
              [
                123.120217,
                11.58366
              ],
              [
                123.100838,
                11.165934
              ],
              [
                122.637714,
                10.741308
              ],
              [
                122.00261,
                10.441017
              ],
              [
                121.967367,
                10.905691
              ],
              [
                122.03837,
                11.415841
              ],
              [
                121.883548,
                11.891755
              ]
            ]
          ],
          [
            [
              [
                125.502552,
                12.162695
              ],
              [
                125.783465,
                11.046122
              ],
              [
                125.011884,
                11.311455
              ],
              [
                125.032761,
                10.975816
              ],
              [
                125.277449,
                10.358722
              ],
              [
                124.801819,
                10.134679
              ],
              [
                124.760168,
                10.837995
              ],
              [
                124.459101,
                10.88993
              ],
              [
                124.302522,
                11.495371
              ],
              [
                124.891013,
                11.415583
              ],
              [
                124.87799,
                11.79419
              ],
              [
                124.266762,
                12.557761
              ],
              [
                125.227116,
                12.535721
              ],
              [
                125.502552,
                12.162695
              ]
            ]
          ],
          [
            [
              [
                121.527394,
                13.06959
              ],
              [
                121.26219,
                12.20556
              ],
              [
                120.833896,
                12.704496
              ],
              [
                120.323436,
                13.466413
              ],
              [
                121.180128,
                13.429697
              ],
              [
                121.527394,
                13.06959
              ]
            ]
          ],
          [
            [
              [
                121.321308,
                18.504065
              ],
              [
                121.937601,
                18.218552
              ],
              [
                122.246006,
                18.47895
              ],
              [
                122.336957,
                18.224883
              ],
              [
                122.174279,
                17.810283
              ],
              [
                122.515654,
                17.093505
              ],
              [
                122.252311,
                16.262444
              ],
              [
                121.662786,
                15.931018
              ],
              [
                121.50507,
                15.124814
              ],
              [
                121.728829,
                14.328376
              ],
              [
                122.258925,
                14.218202
              ],
              [
                122.701276,
                14.336541
              ],
              [
                123.950295,
                13.782131
              ],
              [
                123.855107,
                13.237771
              ],
              [
                124.181289,
                12.997527
              ],
              [
                124.077419,
                12.536677
              ],
              [
                123.298035,
                13.027526
              ],
              [
                122.928652,
                13.55292
              ],
              [
                122.671355,
                13.185836
              ],
              [
                122.03465,
                13.784482
              ],
              [
                121.126385,
                13.636687
              ],
              [
                120.628637,
                13.857656
              ],
              [
                120.679384,
                14.271016
              ],
              [
                120.991819,
                14.525393
              ],
              [
                120.693336,
                14.756671
              ],
              [
                120.564145,
                14.396279
              ],
              [
                120.070429,
                14.970869
              ],
              [
                119.920929,
                15.406347
              ],
              [
                119.883773,
                16.363704
              ],
              [
                120.286488,
                16.034629
              ],
              [
                120.390047,
                17.599081
              ],
              [
                120.715867,
                18.505227
              ],
              [
                121.321308,
                18.504065
              ]
            ]
          ]
        ]
      },
      id: "PHL"
    },
    {
      type: "Feature",
      properties: {
        name: "Papua New Guinea"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                155.880026,
                -6.819997
              ],
              [
                155.599991,
                -6.919991
              ],
              [
                155.166994,
                -6.535931
              ],
              [
                154.729192,
                -5.900828
              ],
              [
                154.514114,
                -5.139118
              ],
              [
                154.652504,
                -5.042431
              ],
              [
                154.759991,
                -5.339984
              ],
              [
                155.062918,
                -5.566792
              ],
              [
                155.547746,
                -6.200655
              ],
              [
                156.019965,
                -6.540014
              ],
              [
                155.880026,
                -6.819997
              ]
            ]
          ],
          [
            [
              [
                151.982796,
                -5.478063
              ],
              [
                151.459107,
                -5.56028
              ],
              [
                151.30139,
                -5.840728
              ],
              [
                150.754447,
                -6.083763
              ],
              [
                150.241197,
                -6.317754
              ],
              [
                149.709963,
                -6.316513
              ],
              [
                148.890065,
                -6.02604
              ],
              [
                148.318937,
                -5.747142
              ],
              [
                148.401826,
                -5.437756
              ],
              [
                149.298412,
                -5.583742
              ],
              [
                149.845562,
                -5.505503
              ],
              [
                149.99625,
                -5.026101
              ],
              [
                150.139756,
                -5.001348
              ],
              [
                150.236908,
                -5.53222
              ],
              [
                150.807467,
                -5.455842
              ],
              [
                151.089672,
                -5.113693
              ],
              [
                151.647881,
                -4.757074
              ],
              [
                151.537862,
                -4.167807
              ],
              [
                152.136792,
                -4.14879
              ],
              [
                152.338743,
                -4.312966
              ],
              [
                152.318693,
                -4.867661
              ],
              [
                151.982796,
                -5.478063
              ]
            ]
          ],
          [
            [
              [
                147.191874,
                -7.388024
              ],
              [
                148.084636,
                -8.044108
              ],
              [
                148.734105,
                -9.104664
              ],
              [
                149.306835,
                -9.071436
              ],
              [
                149.266631,
                -9.514406
              ],
              [
                150.038728,
                -9.684318
              ],
              [
                149.738798,
                -9.872937
              ],
              [
                150.801628,
                -10.293687
              ],
              [
                150.690575,
                -10.582713
              ],
              [
                150.028393,
                -10.652476
              ],
              [
                149.78231,
                -10.393267
              ],
              [
                148.923138,
                -10.280923
              ],
              [
                147.913018,
                -10.130441
              ],
              [
                147.135443,
                -9.492444
              ],
              [
                146.567881,
                -8.942555
              ],
              [
                146.048481,
                -8.067414
              ],
              [
                144.744168,
                -7.630128
              ],
              [
                143.897088,
                -7.91533
              ],
              [
                143.286376,
                -8.245491
              ],
              [
                143.413913,
                -8.983069
              ],
              [
                142.628431,
                -9.326821
              ],
              [
                142.068259,
                -9.159596
              ],
              [
                141.033852,
                -9.117893
              ],
              [
                141.017057,
                -5.859022
              ],
              [
                141.00021,
                -2.600151
              ],
              [
                142.735247,
                -3.289153
              ],
              [
                144.583971,
                -3.861418
              ],
              [
                145.27318,
                -4.373738
              ],
              [
                145.829786,
                -4.876498
              ],
              [
                145.981922,
                -5.465609
              ],
              [
                147.648073,
                -6.083659
              ],
              [
                147.891108,
                -6.614015
              ],
              [
                146.970905,
                -6.721657
              ],
              [
                147.191874,
                -7.388024
              ]
            ]
          ],
          [
            [
              [
                153.140038,
                -4.499983
              ],
              [
                152.827292,
                -4.766427
              ],
              [
                152.638673,
                -4.176127
              ],
              [
                152.406026,
                -3.789743
              ],
              [
                151.953237,
                -3.462062
              ],
              [
                151.384279,
                -3.035422
              ],
              [
                150.66205,
                -2.741486
              ],
              [
                150.939965,
                -2.500002
              ],
              [
                151.479984,
                -2.779985
              ],
              [
                151.820015,
                -2.999972
              ],
              [
                152.239989,
                -3.240009
              ],
              [
                152.640017,
                -3.659983
              ],
              [
                153.019994,
                -3.980015
              ],
              [
                153.140038,
                -4.499983
              ]
            ]
          ]
        ]
      },
      id: "PNG"
    },
    {
      type: "Feature",
      properties: {
        name: "Poland"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              15.016996,
              51.106674
            ],
            [
              14.607098,
              51.745188
            ],
            [
              14.685026,
              52.089947
            ],
            [
              14.4376,
              52.62485
            ],
            [
              14.074521,
              52.981263
            ],
            [
              14.353315,
              53.248171
            ],
            [
              14.119686,
              53.757029
            ],
            [
              14.8029,
              54.050706
            ],
            [
              16.363477,
              54.513159
            ],
            [
              17.622832,
              54.851536
            ],
            [
              18.620859,
              54.682606
            ],
            [
              18.696255,
              54.438719
            ],
            [
              19.66064,
              54.426084
            ],
            [
              20.892245,
              54.312525
            ],
            [
              22.731099,
              54.327537
            ],
            [
              23.243987,
              54.220567
            ],
            [
              23.484128,
              53.912498
            ],
            [
              23.527536,
              53.470122
            ],
            [
              23.804935,
              53.089731
            ],
            [
              23.799199,
              52.691099
            ],
            [
              23.199494,
              52.486977
            ],
            [
              23.508002,
              52.023647
            ],
            [
              23.527071,
              51.578454
            ],
            [
              24.029986,
              50.705407
            ],
            [
              23.922757,
              50.424881
            ],
            [
              23.426508,
              50.308506
            ],
            [
              22.51845,
              49.476774
            ],
            [
              22.776419,
              49.027395
            ],
            [
              22.558138,
              49.085738
            ],
            [
              21.607808,
              49.470107
            ],
            [
              20.887955,
              49.328772
            ],
            [
              20.415839,
              49.431453
            ],
            [
              19.825023,
              49.217125
            ],
            [
              19.320713,
              49.571574
            ],
            [
              18.909575,
              49.435846
            ],
            [
              18.853144,
              49.49623
            ],
            [
              18.392914,
              49.988629
            ],
            [
              17.649445,
              50.049038
            ],
            [
              17.554567,
              50.362146
            ],
            [
              16.868769,
              50.473974
            ],
            [
              16.719476,
              50.215747
            ],
            [
              16.176253,
              50.422607
            ],
            [
              16.238627,
              50.697733
            ],
            [
              15.490972,
              50.78473
            ],
            [
              15.016996,
              51.106674
            ]
          ]
        ]
      },
      id: "POL"
    },
    {
      type: "Feature",
      properties: {
        name: "Puerto Rico"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -66.282434,
              18.514762
            ],
            [
              -65.771303,
              18.426679
            ],
            [
              -65.591004,
              18.228035
            ],
            [
              -65.847164,
              17.975906
            ],
            [
              -66.599934,
              17.981823
            ],
            [
              -67.184162,
              17.946553
            ],
            [
              -67.242428,
              18.37446
            ],
            [
              -67.100679,
              18.520601
            ],
            [
              -66.282434,
              18.514762
            ]
          ]
        ]
      },
      id: "PRI"
    },
    {
      type: "Feature",
      properties: {
        name: "Portugal"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -9.034818,
              41.880571
            ],
            [
              -8.671946,
              42.134689
            ],
            [
              -8.263857,
              42.280469
            ],
            [
              -8.013175,
              41.790886
            ],
            [
              -7.422513,
              41.792075
            ],
            [
              -7.251309,
              41.918346
            ],
            [
              -6.668606,
              41.883387
            ],
            [
              -6.389088,
              41.381815
            ],
            [
              -6.851127,
              41.111083
            ],
            [
              -6.86402,
              40.330872
            ],
            [
              -7.026413,
              40.184524
            ],
            [
              -7.066592,
              39.711892
            ],
            [
              -7.498632,
              39.629571
            ],
            [
              -7.098037,
              39.030073
            ],
            [
              -7.374092,
              38.373059
            ],
            [
              -7.029281,
              38.075764
            ],
            [
              -7.166508,
              37.803894
            ],
            [
              -7.537105,
              37.428904
            ],
            [
              -7.453726,
              37.097788
            ],
            [
              -7.855613,
              36.838269
            ],
            [
              -8.382816,
              36.97888
            ],
            [
              -8.898857,
              36.868809
            ],
            [
              -8.746101,
              37.651346
            ],
            [
              -8.839998,
              38.266243
            ],
            [
              -9.287464,
              38.358486
            ],
            [
              -9.526571,
              38.737429
            ],
            [
              -9.446989,
              39.392066
            ],
            [
              -9.048305,
              39.755093
            ],
            [
              -8.977353,
              40.159306
            ],
            [
              -8.768684,
              40.760639
            ],
            [
              -8.790853,
              41.184334
            ],
            [
              -8.990789,
              41.543459
            ],
            [
              -9.034818,
              41.880571
            ]
          ]
        ]
      },
      id: "PRT"
    },
    {
      type: "Feature",
      properties: {
        name: "Paraguay"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -62.685057,
              -22.249029
            ],
            [
              -62.291179,
              -21.051635
            ],
            [
              -62.265961,
              -20.513735
            ],
            [
              -61.786326,
              -19.633737
            ],
            [
              -60.043565,
              -19.342747
            ],
            [
              -59.115042,
              -19.356906
            ],
            [
              -58.183471,
              -19.868399
            ],
            [
              -58.166392,
              -20.176701
            ],
            [
              -57.870674,
              -20.732688
            ],
            [
              -57.937156,
              -22.090176
            ],
            [
              -56.88151,
              -22.282154
            ],
            [
              -56.473317,
              -22.0863
            ],
            [
              -55.797958,
              -22.35693
            ],
            [
              -55.610683,
              -22.655619
            ],
            [
              -55.517639,
              -23.571998
            ],
            [
              -55.400747,
              -23.956935
            ],
            [
              -55.027902,
              -24.001274
            ],
            [
              -54.652834,
              -23.839578
            ],
            [
              -54.29296,
              -24.021014
            ],
            [
              -54.293476,
              -24.5708
            ],
            [
              -54.428946,
              -25.162185
            ],
            [
              -54.625291,
              -25.739255
            ],
            [
              -54.788795,
              -26.621786
            ],
            [
              -55.695846,
              -27.387837
            ],
            [
              -56.486702,
              -27.548499
            ],
            [
              -57.60976,
              -27.395899
            ],
            [
              -58.618174,
              -27.123719
            ],
            [
              -57.63366,
              -25.603657
            ],
            [
              -57.777217,
              -25.16234
            ],
            [
              -58.807128,
              -24.771459
            ],
            [
              -60.028966,
              -24.032796
            ],
            [
              -60.846565,
              -23.880713
            ],
            [
              -62.685057,
              -22.249029
            ]
          ]
        ]
      },
      id: "PRY"
    },
    {
      type: "Feature",
      properties: {
        name: "Qatar"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              50.810108,
              24.754743
            ],
            [
              50.743911,
              25.482424
            ],
            [
              51.013352,
              26.006992
            ],
            [
              51.286462,
              26.114582
            ],
            [
              51.589079,
              25.801113
            ],
            [
              51.6067,
              25.21567
            ],
            [
              51.389608,
              24.627386
            ],
            [
              51.112415,
              24.556331
            ],
            [
              50.810108,
              24.754743
            ]
          ]
        ]
      },
      id: "QAT"
    },
    {
      type: "Feature",
      properties: {
        name: "Romania"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              22.710531,
              47.882194
            ],
            [
              23.142236,
              48.096341
            ],
            [
              23.760958,
              47.985598
            ],
            [
              24.402056,
              47.981878
            ],
            [
              24.866317,
              47.737526
            ],
            [
              25.207743,
              47.891056
            ],
            [
              25.945941,
              47.987149
            ],
            [
              26.19745,
              48.220881
            ],
            [
              26.619337,
              48.220726
            ],
            [
              26.924176,
              48.123264
            ],
            [
              27.233873,
              47.826771
            ],
            [
              27.551166,
              47.405117
            ],
            [
              28.12803,
              46.810476
            ],
            [
              28.160018,
              46.371563
            ],
            [
              28.054443,
              45.944586
            ],
            [
              28.233554,
              45.488283
            ],
            [
              28.679779,
              45.304031
            ],
            [
              29.149725,
              45.464925
            ],
            [
              29.603289,
              45.293308
            ],
            [
              29.626543,
              45.035391
            ],
            [
              29.141612,
              44.82021
            ],
            [
              28.837858,
              44.913874
            ],
            [
              28.558081,
              43.707462
            ],
            [
              27.970107,
              43.812468
            ],
            [
              27.2424,
              44.175986
            ],
            [
              26.065159,
              43.943494
            ],
            [
              25.569272,
              43.688445
            ],
            [
              24.100679,
              43.741051
            ],
            [
              23.332302,
              43.897011
            ],
            [
              22.944832,
              43.823785
            ],
            [
              22.65715,
              44.234923
            ],
            [
              22.474008,
              44.409228
            ],
            [
              22.705726,
              44.578003
            ],
            [
              22.459022,
              44.702517
            ],
            [
              22.145088,
              44.478422
            ],
            [
              21.562023,
              44.768947
            ],
            [
              21.483526,
              45.18117
            ],
            [
              20.874313,
              45.416375
            ],
            [
              20.762175,
              45.734573
            ],
            [
              20.220192,
              46.127469
            ],
            [
              21.021952,
              46.316088
            ],
            [
              21.626515,
              46.994238
            ],
            [
              22.099768,
              47.672439
            ],
            [
              22.710531,
              47.882194
            ]
          ]
        ]
      },
      id: "ROU"
    },
    {
      type: "Feature",
      properties: {
        name: "Russia"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                143.648007,
                50.7476
              ],
              [
                144.654148,
                48.976391
              ],
              [
                143.173928,
                49.306551
              ],
              [
                142.558668,
                47.861575
              ],
              [
                143.533492,
                46.836728
              ],
              [
                143.505277,
                46.137908
              ],
              [
                142.747701,
                46.740765
              ],
              [
                142.09203,
                45.966755
              ],
              [
                141.906925,
                46.805929
              ],
              [
                142.018443,
                47.780133
              ],
              [
                141.904445,
                48.859189
              ],
              [
                142.1358,
                49.615163
              ],
              [
                142.179983,
                50.952342
              ],
              [
                141.594076,
                51.935435
              ],
              [
                141.682546,
                53.301966
              ],
              [
                142.606934,
                53.762145
              ],
              [
                142.209749,
                54.225476
              ],
              [
                142.654786,
                54.365881
              ],
              [
                142.914616,
                53.704578
              ],
              [
                143.260848,
                52.74076
              ],
              [
                143.235268,
                51.75666
              ],
              [
                143.648007,
                50.7476
              ]
            ]
          ],
          [
            [
              [
                22.731099,
                54.327537
              ],
              [
                20.892245,
                54.312525
              ],
              [
                19.66064,
                54.426084
              ],
              [
                19.888481,
                54.86616
              ],
              [
                21.268449,
                55.190482
              ],
              [
                22.315724,
                55.015299
              ],
              [
                22.757764,
                54.856574
              ],
              [
                22.651052,
                54.582741
              ],
              [
                22.731099,
                54.327537
              ]
            ]
          ],
          [
            [
              [
                -175.01425,
                66.58435
              ],
              [
                -174.33983,
                66.33556
              ],
              [
                -174.57182,
                67.06219
              ],
              [
                -171.85731,
                66.91308
              ],
              [
                -169.89958,
                65.97724
              ],
              [
                -170.89107,
                65.54139
              ],
              [
                -172.53025,
                65.43791
              ],
              [
                -172.555,
                64.46079
              ],
              [
                -172.95533,
                64.25269
              ],
              [
                -173.89184,
                64.2826
              ],
              [
                -174.65392,
                64.63125
              ],
              [
                -175.98353,
                64.92288
              ],
              [
                -176.20716,
                65.35667
              ],
              [
                -177.22266,
                65.52024
              ],
              [
                -178.35993,
                65.39052
              ],
              [
                -178.90332,
                65.74044
              ],
              [
                -178.68611,
                66.11211
              ],
              [
                -179.88377,
                65.87456
              ],
              [
                -179.43268,
                65.40411
              ],
              [
                -180,
                64.979709
              ],
              [
                -180,
                68.963636
              ],
              [
                -177.55,
                68.2
              ],
              [
                -174.92825,
                67.20589
              ],
              [
                -175.01425,
                66.58435
              ]
            ]
          ],
          [
            [
              [
                180,
                70.832199
              ],
              [
                178.903425,
                70.78114
              ],
              [
                178.7253,
                71.0988
              ],
              [
                180,
                71.515714
              ],
              [
                180,
                70.832199
              ]
            ]
          ],
          [
            [
              [
                -178.69378,
                70.89302
              ],
              [
                -180,
                70.832199
              ],
              [
                -180,
                71.515714
              ],
              [
                -179.871875,
                71.55762
              ],
              [
                -179.02433,
                71.55553
              ],
              [
                -177.577945,
                71.26948
              ],
              [
                -177.663575,
                71.13277
              ],
              [
                -178.69378,
                70.89302
              ]
            ]
          ],
          [
            [
              [
                143.60385,
                73.21244
              ],
              [
                142.08763,
                73.20544
              ],
              [
                140.038155,
                73.31692
              ],
              [
                139.86312,
                73.36983
              ],
              [
                140.81171,
                73.76506
              ],
              [
                142.06207,
                73.85758
              ],
              [
                143.48283,
                73.47525
              ],
              [
                143.60385,
                73.21244
              ]
            ]
          ],
          [
            [
              [
                150.73167,
                75.08406
              ],
              [
                149.575925,
                74.68892
              ],
              [
                147.977465,
                74.778355
              ],
              [
                146.11919,
                75.17298
              ],
              [
                146.358485,
                75.49682
              ],
              [
                148.22223,
                75.345845
              ],
              [
                150.73167,
                75.08406
              ]
            ]
          ],
          [
            [
              [
                145.086285,
                75.562625
              ],
              [
                144.3,
                74.82
              ],
              [
                140.61381,
                74.84768
              ],
              [
                138.95544,
                74.61148
              ],
              [
                136.97439,
                75.26167
              ],
              [
                137.51176,
                75.94917
              ],
              [
                138.831075,
                76.13676
              ],
              [
                141.471615,
                76.09289
              ],
              [
                145.086285,
                75.562625
              ]
            ]
          ],
          [
            [
              [
                57.535693,
                70.720464
              ],
              [
                56.944979,
                70.632743
              ],
              [
                53.677375,
                70.762658
              ],
              [
                53.412017,
                71.206662
              ],
              [
                51.601895,
                71.474759
              ],
              [
                51.455754,
                72.014881
              ],
              [
                52.478275,
                72.229442
              ],
              [
                52.444169,
                72.774731
              ],
              [
                54.427614,
                73.627548
              ],
              [
                53.50829,
                73.749814
              ],
              [
                55.902459,
                74.627486
              ],
              [
                55.631933,
                75.081412
              ],
              [
                57.868644,
                75.60939
              ],
              [
                61.170044,
                76.251883
              ],
              [
                64.498368,
                76.439055
              ],
              [
                66.210977,
                76.809782
              ],
              [
                68.15706,
                76.939697
              ],
              [
                68.852211,
                76.544811
              ],
              [
                68.180573,
                76.233642
              ],
              [
                64.637326,
                75.737755
              ],
              [
                61.583508,
                75.260885
              ],
              [
                58.477082,
                74.309056
              ],
              [
                56.986786,
                73.333044
              ],
              [
                55.419336,
                72.371268
              ],
              [
                55.622838,
                71.540595
              ],
              [
                57.535693,
                70.720464
              ]
            ]
          ],
          [
            [
              [
                106.97013,
                76.97419
              ],
              [
                107.24,
                76.48
              ],
              [
                108.1538,
                76.72335
              ],
              [
                111.07726,
                76.71
              ],
              [
                113.33151,
                76.22224
              ],
              [
                114.13417,
                75.84764
              ],
              [
                113.88539,
                75.32779
              ],
              [
                112.77918,
                75.03186
              ],
              [
                110.15125,
                74.47673
              ],
              [
                109.4,
                74.18
              ],
              [
                110.64,
                74.04
              ],
              [
                112.11919,
                73.78774
              ],
              [
                113.01954,
                73.97693
              ],
              [
                113.52958,
                73.33505
              ],
              [
                113.96881,
                73.59488
              ],
              [
                115.56782,
                73.75285
              ],
              [
                118.77633,
                73.58772
              ],
              [
                119.02,
                73.12
              ],
              [
                123.20066,
                72.97122
              ],
              [
                123.25777,
                73.73503
              ],
              [
                125.38,
                73.56
              ],
              [
                126.97644,
                73.56549
              ],
              [
                128.59126,
                73.03871
              ],
              [
                129.05157,
                72.39872
              ],
              [
                128.46,
                71.98
              ],
              [
                129.71599,
                71.19304
              ],
              [
                131.28858,
                70.78699
              ],
              [
                132.2535,
                71.8363
              ],
              [
                133.85766,
                71.38642
              ],
              [
                135.56193,
                71.65525
              ],
              [
                137.49755,
                71.34763
              ],
              [
                138.23409,
                71.62803
              ],
              [
                139.86983,
                71.48783
              ],
              [
                139.14791,
                72.41619
              ],
              [
                140.46817,
                72.84941
              ],
              [
                149.5,
                72.2
              ],
              [
                150.35118,
                71.60643
              ],
              [
                152.9689,
                70.84222
              ],
              [
                157.00688,
                71.03141
              ],
              [
                158.99779,
                70.86672
              ],
              [
                159.83031,
                70.45324
              ],
              [
                159.70866,
                69.72198
              ],
              [
                160.94053,
                69.43728
              ],
              [
                162.27907,
                69.64204
              ],
              [
                164.05248,
                69.66823
              ],
              [
                165.94037,
                69.47199
              ],
              [
                167.83567,
                69.58269
              ],
              [
                169.57763,
                68.6938
              ],
              [
                170.81688,
                69.01363
              ],
              [
                170.0082,
                69.65276
              ],
              [
                170.45345,
                70.09703
              ],
              [
                173.64391,
                69.81743
              ],
              [
                175.72403,
                69.87725
              ],
              [
                178.6,
                69.4
              ],
              [
                180,
                68.963636
              ],
              [
                180,
                64.979709
              ],
              [
                179.99281,
                64.97433
              ],
              [
                178.7072,
                64.53493
              ],
              [
                177.41128,
                64.60821
              ],
              [
                178.313,
                64.07593
              ],
              [
                178.90825,
                63.25197
              ],
              [
                179.37034,
                62.98262
              ],
              [
                179.48636,
                62.56894
              ],
              [
                179.22825,
                62.3041
              ],
              [
                177.3643,
                62.5219
              ],
              [
                174.56929,
                61.76915
              ],
              [
                173.68013,
                61.65261
              ],
              [
                172.15,
                60.95
              ],
              [
                170.6985,
                60.33618
              ],
              [
                170.33085,
                59.88177
              ],
              [
                168.90046,
                60.57355
              ],
              [
                166.29498,
                59.78855
              ],
              [
                165.84,
                60.16
              ],
              [
                164.87674,
                59.7316
              ],
              [
                163.53929,
                59.86871
              ],
              [
                163.21711,
                59.21101
              ],
              [
                162.01733,
                58.24328
              ],
              [
                162.05297,
                57.83912
              ],
              [
                163.19191,
                57.61503
              ],
              [
                163.05794,
                56.15924
              ],
              [
                162.12958,
                56.12219
              ],
              [
                161.70146,
                55.28568
              ],
              [
                162.11749,
                54.85514
              ],
              [
                160.36877,
                54.34433
              ],
              [
                160.02173,
                53.20257
              ],
              [
                158.53094,
                52.95868
              ],
              [
                158.23118,
                51.94269
              ],
              [
                156.78979,
                51.01105
              ],
              [
                156.42,
                51.7
              ],
              [
                155.99182,
                53.15895
              ],
              [
                155.43366,
                55.38103
              ],
              [
                155.91442,
                56.76792
              ],
              [
                156.75815,
                57.3647
              ],
              [
                156.81035,
                57.83204
              ],
              [
                158.36433,
                58.05575
              ],
              [
                160.15064,
                59.31477
              ],
              [
                161.87204,
                60.343
              ],
              [
                163.66969,
                61.1409
              ],
              [
                164.47355,
                62.55061
              ],
              [
                163.25842,
                62.46627
              ],
              [
                162.65791,
                61.6425
              ],
              [
                160.12148,
                60.54423
              ],
              [
                159.30232,
                61.77396
              ],
              [
                156.72068,
                61.43442
              ],
              [
                154.21806,
                59.75818
              ],
              [
                155.04375,
                59.14495
              ],
              [
                152.81185,
                58.88385
              ],
              [
                151.26573,
                58.78089
              ],
              [
                151.33815,
                59.50396
              ],
              [
                149.78371,
                59.65573
              ],
              [
                148.54481,
                59.16448
              ],
              [
                145.48722,
                59.33637
              ],
              [
                142.19782,
                59.03998
              ],
              [
                138.95848,
                57.08805
              ],
              [
                135.12619,
                54.72959
              ],
              [
                136.70171,
                54.60355
              ],
              [
                137.19342,
                53.97732
              ],
              [
                138.1647,
                53.75501
              ],
              [
                138.80463,
                54.25455
              ],
              [
                139.90151,
                54.18968
              ],
              [
                141.34531,
                53.08957
              ],
              [
                141.37923,
                52.23877
              ],
              [
                140.59742,
                51.23967
              ],
              [
                140.51308,
                50.04553
              ],
              [
                140.06193,
                48.44671
              ],
              [
                138.55472,
                46.99965
              ],
              [
                138.21971,
                46.30795
              ],
              [
                136.86232,
                45.1435
              ],
              [
                135.51535,
                43.989
              ],
              [
                134.86939,
                43.39821
              ],
              [
                133.53687,
                42.81147
              ],
              [
                132.90627,
                42.79849
              ],
              [
                132.27807,
                43.28456
              ],
              [
                130.93587,
                42.55274
              ],
              [
                130.78,
                42.22
              ],
              [
                130.64,
                42.395
              ],
              [
                130.633866,
                42.903015
              ],
              [
                131.144688,
                42.92999
              ],
              [
                131.288555,
                44.11152
              ],
              [
                131.02519,
                44.96796
              ],
              [
                131.883454,
                45.321162
              ],
              [
                133.09712,
                45.14409
              ],
              [
                133.769644,
                46.116927
              ],
              [
                134.11235,
                47.21248
              ],
              [
                134.50081,
                47.57845
              ],
              [
                135.026311,
                48.47823
              ],
              [
                133.373596,
                48.183442
              ],
              [
                132.50669,
                47.78896
              ],
              [
                130.98726,
                47.79013
              ],
              [
                130.582293,
                48.729687
              ],
              [
                129.397818,
                49.4406
              ],
              [
                127.6574,
                49.76027
              ],
              [
                127.287456,
                50.739797
              ],
              [
                126.939157,
                51.353894
              ],
              [
                126.564399,
                51.784255
              ],
              [
                125.946349,
                52.792799
              ],
              [
                125.068211,
                53.161045
              ],
              [
                123.57147,
                53.4588
              ],
              [
                122.245748,
                53.431726
              ],
              [
                121.003085,
                53.251401
              ],
              [
                120.177089,
                52.753886
              ],
              [
                120.725789,
                52.516226
              ],
              [
                120.7382,
                51.96411
              ],
              [
                120.18208,
                51.64355
              ],
              [
                119.27939,
                50.58292
              ],
              [
                119.288461,
                50.142883
              ],
              [
                117.879244,
                49.510983
              ],
              [
                116.678801,
                49.888531
              ],
              [
                115.485695,
                49.805177
              ],
              [
                114.96211,
                50.140247
              ],
              [
                114.362456,
                50.248303
              ],
              [
                112.89774,
                49.543565
              ],
              [
                111.581231,
                49.377968
              ],
              [
                110.662011,
                49.130128
              ],
              [
                109.402449,
                49.292961
              ],
              [
                108.475167,
                49.282548
              ],
              [
                107.868176,
                49.793705
              ],
              [
                106.888804,
                50.274296
              ],
              [
                105.886591,
                50.406019
              ],
              [
                104.62158,
                50.27532
              ],
              [
                103.676545,
                50.089966
              ],
              [
                102.25589,
                50.51056
              ],
              [
                102.06521,
                51.25991
              ],
              [
                100.88948,
                51.516856
              ],
              [
                99.981732,
                51.634006
              ],
              [
                98.861491,
                52.047366
              ],
              [
                97.82574,
                51.010995
              ],
              [
                98.231762,
                50.422401
              ],
              [
                97.25976,
                49.72605
              ],
              [
                95.81402,
                49.97746
              ],
              [
                94.815949,
                50.013433
              ],
              [
                94.147566,
                50.480537
              ],
              [
                93.10421,
                50.49529
              ],
              [
                92.234712,
                50.802171
              ],
              [
                90.713667,
                50.331812
              ],
              [
                88.805567,
                49.470521
              ],
              [
                87.751264,
                49.297198
              ],
              [
                87.35997,
                49.214981
              ],
              [
                86.829357,
                49.826675
              ],
              [
                85.54127,
                49.692859
              ],
              [
                85.11556,
                50.117303
              ],
              [
                84.416377,
                50.3114
              ],
              [
                83.935115,
                50.889246
              ],
              [
                83.383004,
                51.069183
              ],
              [
                81.945986,
                50.812196
              ],
              [
                80.568447,
                51.388336
              ],
              [
                80.03556,
                50.864751
              ],
              [
                77.800916,
                53.404415
              ],
              [
                76.525179,
                54.177003
              ],
              [
                76.8911,
                54.490524
              ],
              [
                74.38482,
                53.54685
              ],
              [
                73.425679,
                53.48981
              ],
              [
                73.508516,
                54.035617
              ],
              [
                72.22415,
                54.376655
              ],
              [
                71.180131,
                54.133285
              ],
              [
                70.865267,
                55.169734
              ],
              [
                69.068167,
                55.38525
              ],
              [
                68.1691,
                54.970392
              ],
              [
                65.66687,
                54.60125
              ],
              [
                65.178534,
                54.354228
              ],
              [
                61.4366,
                54.00625
              ],
              [
                60.978066,
                53.664993
              ],
              [
                61.699986,
                52.979996
              ],
              [
                60.739993,
                52.719986
              ],
              [
                60.927269,
                52.447548
              ],
              [
                59.967534,
                51.96042
              ],
              [
                61.588003,
                51.272659
              ],
              [
                61.337424,
                50.79907
              ],
              [
                59.932807,
                50.842194
              ],
              [
                59.642282,
                50.545442
              ],
              [
                58.36332,
                51.06364
              ],
              [
                56.77798,
                51.04355
              ],
              [
                55.71694,
                50.62171
              ],
              [
                54.532878,
                51.02624
              ],
              [
                52.328724,
                51.718652
              ],
              [
                50.766648,
                51.692762
              ],
              [
                48.702382,
                50.605128
              ],
              [
                48.577841,
                49.87476
              ],
              [
                47.54948,
                50.454698
              ],
              [
                46.751596,
                49.356006
              ],
              [
                47.043672,
                49.152039
              ],
              [
                46.466446,
                48.394152
              ],
              [
                47.31524,
                47.71585
              ],
              [
                48.05725,
                47.74377
              ],
              [
                48.694734,
                47.075628
              ],
              [
                48.59325,
                46.56104
              ],
              [
                49.10116,
                46.39933
              ],
              [
                48.64541,
                45.80629
              ],
              [
                47.67591,
                45.64149
              ],
              [
                46.68201,
                44.6092
              ],
              [
                47.59094,
                43.66016
              ],
              [
                47.49252,
                42.98658
              ],
              [
                48.58437,
                41.80888
              ],
              [
                47.987283,
                41.405819
              ],
              [
                47.815666,
                41.151416
              ],
              [
                47.373315,
                41.219732
              ],
              [
                46.686071,
                41.827137
              ],
              [
                46.404951,
                41.860675
              ],
              [
                45.7764,
                42.09244
              ],
              [
                45.470279,
                42.502781
              ],
              [
                44.537623,
                42.711993
              ],
              [
                43.93121,
                42.55496
              ],
              [
                43.75599,
                42.74083
              ],
              [
                42.3944,
                43.2203
              ],
              [
                40.92219,
                43.38215
              ],
              [
                40.076965,
                43.553104
              ],
              [
                39.955009,
                43.434998
              ],
              [
                38.68,
                44.28
              ],
              [
                37.53912,
                44.65721
              ],
              [
                36.67546,
                45.24469
              ],
              [
                37.40317,
                45.40451
              ],
              [
                38.23295,
                46.24087
              ],
              [
                37.67372,
                46.63657
              ],
              [
                39.14767,
                47.04475
              ],
              [
                39.1212,
                47.26336
              ],
              [
                38.223538,
                47.10219
              ],
              [
                38.255112,
                47.5464
              ],
              [
                38.77057,
                47.82562
              ],
              [
                39.738278,
                47.898937
              ],
              [
                39.89562,
                48.23241
              ],
              [
                39.67465,
                48.78382
              ],
              [
                40.080789,
                49.30743
              ],
              [
                40.06904,
                49.60105
              ],
              [
                38.594988,
                49.926462
              ],
              [
                38.010631,
                49.915662
              ],
              [
                37.39346,
                50.383953
              ],
              [
                36.626168,
                50.225591
              ],
              [
                35.356116,
                50.577197
              ],
              [
                35.37791,
                50.77394
              ],
              [
                35.022183,
                51.207572
              ],
              [
                34.224816,
                51.255993
              ],
              [
                34.141978,
                51.566413
              ],
              [
                34.391731,
                51.768882
              ],
              [
                33.7527,
                52.335075
              ],
              [
                32.715761,
                52.238465
              ],
              [
                32.412058,
                52.288695
              ],
              [
                32.15944,
                52.06125
              ],
              [
                31.78597,
                52.10168
              ],
              [
                31.540018,
                52.742052
              ],
              [
                31.305201,
                53.073996
              ],
              [
                31.49764,
                53.16743
              ],
              [
                32.304519,
                53.132726
              ],
              [
                32.693643,
                53.351421
              ],
              [
                32.405599,
                53.618045
              ],
              [
                31.731273,
                53.794029
              ],
              [
                31.791424,
                53.974639
              ],
              [
                31.384472,
                54.157056
              ],
              [
                30.757534,
                54.811771
              ],
              [
                30.971836,
                55.081548
              ],
              [
                30.873909,
                55.550976
              ],
              [
                29.896294,
                55.789463
              ],
              [
                29.371572,
                55.670091
              ],
              [
                29.229513,
                55.918344
              ],
              [
                28.176709,
                56.16913
              ],
              [
                27.855282,
                56.759326
              ],
              [
                27.770016,
                57.244258
              ],
              [
                27.288185,
                57.474528
              ],
              [
                27.716686,
                57.791899
              ],
              [
                27.42015,
                58.72457
              ],
              [
                28.131699,
                59.300825
              ],
              [
                27.98112,
                59.47537
              ],
              [
                29.1177,
                60.02805
              ],
              [
                28.07,
                60.50352
              ],
              [
                30.211107,
                61.780028
              ],
              [
                31.139991,
                62.357693
              ],
              [
                31.516092,
                62.867687
              ],
              [
                30.035872,
                63.552814
              ],
              [
                30.444685,
                64.204453
              ],
              [
                29.54443,
                64.948672
              ],
              [
                30.21765,
                65.80598
              ],
              [
                29.054589,
                66.944286
              ],
              [
                29.977426,
                67.698297
              ],
              [
                28.445944,
                68.364613
              ],
              [
                28.59193,
                69.064777
              ],
              [
                29.39955,
                69.15692
              ],
              [
                31.10108,
                69.55811
              ],
              [
                32.13272,
                69.90595
              ],
              [
                33.77547,
                69.30142
              ],
              [
                36.51396,
                69.06342
              ],
              [
                40.29234,
                67.9324
              ],
              [
                41.05987,
                67.45713
              ],
              [
                41.12595,
                66.79158
              ],
              [
                40.01583,
                66.26618
              ],
              [
                38.38295,
                65.99953
              ],
              [
                33.91871,
                66.75961
              ],
              [
                33.18444,
                66.63253
              ],
              [
                34.81477,
                65.90015
              ],
              [
                34.878574,
                65.436213
              ],
              [
                34.94391,
                64.41437
              ],
              [
                36.23129,
                64.10945
              ],
              [
                37.01273,
                63.84983
              ],
              [
                37.14197,
                64.33471
              ],
              [
                36.539579,
                64.76446
              ],
              [
                37.17604,
                65.14322
              ],
              [
                39.59345,
                64.52079
              ],
              [
                40.4356,
                64.76446
              ],
              [
                39.7626,
                65.49682
              ],
              [
                42.09309,
                66.47623
              ],
              [
                43.01604,
                66.41858
              ],
              [
                43.94975,
                66.06908
              ],
              [
                44.53226,
                66.75634
              ],
              [
                43.69839,
                67.35245
              ],
              [
                44.18795,
                67.95051
              ],
              [
                43.45282,
                68.57079
              ],
              [
                46.25,
                68.25
              ],
              [
                46.82134,
                67.68997
              ],
              [
                45.55517,
                67.56652
              ],
              [
                45.56202,
                67.01005
              ],
              [
                46.34915,
                66.66767
              ],
              [
                47.89416,
                66.88455
              ],
              [
                48.13876,
                67.52238
              ],
              [
                50.22766,
                67.99867
              ],
              [
                53.71743,
                68.85738
              ],
              [
                54.47171,
                68.80815
              ],
              [
                53.48582,
                68.20131
              ],
              [
                54.72628,
                68.09702
              ],
              [
                55.44268,
                68.43866
              ],
              [
                57.31702,
                68.46628
              ],
              [
                58.802,
                68.88082
              ],
              [
                59.94142,
                68.27844
              ],
              [
                61.07784,
                68.94069
              ],
              [
                60.03,
                69.52
              ],
              [
                60.55,
                69.85
              ],
              [
                63.504,
                69.54739
              ],
              [
                64.888115,
                69.234835
              ],
              [
                68.51216,
                68.09233
              ],
              [
                69.18068,
                68.61563
              ],
              [
                68.16444,
                69.14436
              ],
              [
                68.13522,
                69.35649
              ],
              [
                66.93008,
                69.45461
              ],
              [
                67.25976,
                69.92873
              ],
              [
                66.72492,
                70.70889
              ],
              [
                66.69466,
                71.02897
              ],
              [
                68.54006,
                71.9345
              ],
              [
                69.19636,
                72.84336
              ],
              [
                69.94,
                73.04
              ],
              [
                72.58754,
                72.77629
              ],
              [
                72.79603,
                72.22006
              ],
              [
                71.84811,
                71.40898
              ],
              [
                72.47011,
                71.09019
              ],
              [
                72.79188,
                70.39114
              ],
              [
                72.5647,
                69.02085
              ],
              [
                73.66787,
                68.4079
              ],
              [
                73.2387,
                67.7404
              ],
              [
                71.28,
                66.32
              ],
              [
                72.42301,
                66.17267
              ],
              [
                72.82077,
                66.53267
              ],
              [
                73.92099,
                66.78946
              ],
              [
                74.18651,
                67.28429
              ],
              [
                75.052,
                67.76047
              ],
              [
                74.46926,
                68.32899
              ],
              [
                74.93584,
                68.98918
              ],
              [
                73.84236,
                69.07146
              ],
              [
                73.60187,
                69.62763
              ],
              [
                74.3998,
                70.63175
              ],
              [
                73.1011,
                71.44717
              ],
              [
                74.89082,
                72.12119
              ],
              [
                74.65926,
                72.83227
              ],
              [
                75.15801,
                72.85497
              ],
              [
                75.68351,
                72.30056
              ],
              [
                75.28898,
                71.33556
              ],
              [
                76.35911,
                71.15287
              ],
              [
                75.90313,
                71.87401
              ],
              [
                77.57665,
                72.26717
              ],
              [
                79.65202,
                72.32011
              ],
              [
                81.5,
                71.75
              ],
              [
                80.61071,
                72.58285
              ],
              [
                80.51109,
                73.6482
              ],
              [
                82.25,
                73.85
              ],
              [
                84.65526,
                73.80591
              ],
              [
                86.8223,
                73.93688
              ],
              [
                86.00956,
                74.45967
              ],
              [
                87.16682,
                75.11643
              ],
              [
                88.31571,
                75.14393
              ],
              [
                90.26,
                75.64
              ],
              [
                92.90058,
                75.77333
              ],
              [
                93.23421,
                76.0472
              ],
              [
                95.86,
                76.14
              ],
              [
                96.67821,
                75.91548
              ],
              [
                98.92254,
                76.44689
              ],
              [
                100.75967,
                76.43028
              ],
              [
                101.03532,
                76.86189
              ],
              [
                101.99084,
                77.28754
              ],
              [
                104.3516,
                77.69792
              ],
              [
                106.06664,
                77.37389
              ],
              [
                104.705,
                77.1274
              ],
              [
                106.97013,
                76.97419
              ]
            ]
          ],
          [
            [
              [
                105.07547,
                78.30689
              ],
              [
                99.43814,
                77.921
              ],
              [
                101.2649,
                79.23399
              ],
              [
                102.08635,
                79.34641
              ],
              [
                102.837815,
                79.28129
              ],
              [
                105.37243,
                78.71334
              ],
              [
                105.07547,
                78.30689
              ]
            ]
          ],
          [
            [
              [
                51.136187,
                80.54728
              ],
              [
                49.793685,
                80.415428
              ],
              [
                48.894411,
                80.339567
              ],
              [
                48.754937,
                80.175468
              ],
              [
                47.586119,
                80.010181
              ],
              [
                46.502826,
                80.247247
              ],
              [
                47.072455,
                80.559424
              ],
              [
                44.846958,
                80.58981
              ],
              [
                46.799139,
                80.771918
              ],
              [
                48.318477,
                80.78401
              ],
              [
                48.522806,
                80.514569
              ],
              [
                49.09719,
                80.753986
              ],
              [
                50.039768,
                80.918885
              ],
              [
                51.522933,
                80.699726
              ],
              [
                51.136187,
                80.54728
              ]
            ]
          ],
          [
            [
              [
                99.93976,
                78.88094
              ],
              [
                97.75794,
                78.7562
              ],
              [
                94.97259,
                79.044745
              ],
              [
                93.31288,
                79.4265
              ],
              [
                92.5454,
                80.14379
              ],
              [
                91.18107,
                80.34146
              ],
              [
                93.77766,
                81.0246
              ],
              [
                95.940895,
                81.2504
              ],
              [
                97.88385,
                80.746975
              ],
              [
                100.186655,
                79.780135
              ],
              [
                99.93976,
                78.88094
              ]
            ]
          ]
        ]
      },
      id: "RUS"
    },
    {
      type: "Feature",
      properties: {
        name: "Rwanda"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              30.419105,
              -1.134659
            ],
            [
              30.816135,
              -1.698914
            ],
            [
              30.758309,
              -2.28725
            ],
            [
              30.469696,
              -2.413858
            ],
            [
              29.938359,
              -2.348487
            ],
            [
              29.632176,
              -2.917858
            ],
            [
              29.024926,
              -2.839258
            ],
            [
              29.117479,
              -2.292211
            ],
            [
              29.254835,
              -2.21511
            ],
            [
              29.291887,
              -1.620056
            ],
            [
              29.579466,
              -1.341313
            ],
            [
              29.821519,
              -1.443322
            ],
            [
              30.419105,
              -1.134659
            ]
          ]
        ]
      },
      id: "RWA"
    },
    {
      type: "Feature",
      properties: {
        name: "Western Sahara"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -8.794884,
              27.120696
            ],
            [
              -8.817828,
              27.656426
            ],
            [
              -8.66559,
              27.656426
            ],
            [
              -8.665124,
              27.589479
            ],
            [
              -8.6844,
              27.395744
            ],
            [
              -8.687294,
              25.881056
            ],
            [
              -11.969419,
              25.933353
            ],
            [
              -11.937224,
              23.374594
            ],
            [
              -12.874222,
              23.284832
            ],
            [
              -13.118754,
              22.77122
            ],
            [
              -12.929102,
              21.327071
            ],
            [
              -16.845194,
              21.333323
            ],
            [
              -17.063423,
              20.999752
            ],
            [
              -17.020428,
              21.42231
            ],
            [
              -17.002962,
              21.420734
            ],
            [
              -14.750955,
              21.5006
            ],
            [
              -14.630833,
              21.86094
            ],
            [
              -14.221168,
              22.310163
            ],
            [
              -13.89111,
              23.691009
            ],
            [
              -12.500963,
              24.770116
            ],
            [
              -12.030759,
              26.030866
            ],
            [
              -11.71822,
              26.104092
            ],
            [
              -11.392555,
              26.883424
            ],
            [
              -10.551263,
              26.990808
            ],
            [
              -10.189424,
              26.860945
            ],
            [
              -9.735343,
              26.860945
            ],
            [
              -9.413037,
              27.088476
            ],
            [
              -8.794884,
              27.120696
            ]
          ]
        ]
      },
      id: "ESH"
    },
    {
      type: "Feature",
      properties: {
        name: "Saudi Arabia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              42.779332,
              16.347891
            ],
            [
              42.649573,
              16.774635
            ],
            [
              42.347989,
              17.075806
            ],
            [
              42.270888,
              17.474722
            ],
            [
              41.754382,
              17.833046
            ],
            [
              41.221391,
              18.6716
            ],
            [
              40.939341,
              19.486485
            ],
            [
              40.247652,
              20.174635
            ],
            [
              39.801685,
              20.338862
            ],
            [
              39.139399,
              21.291905
            ],
            [
              39.023696,
              21.986875
            ],
            [
              39.066329,
              22.579656
            ],
            [
              38.492772,
              23.688451
            ],
            [
              38.02386,
              24.078686
            ],
            [
              37.483635,
              24.285495
            ],
            [
              37.154818,
              24.858483
            ],
            [
              37.209491,
              25.084542
            ],
            [
              36.931627,
              25.602959
            ],
            [
              36.639604,
              25.826228
            ],
            [
              36.249137,
              26.570136
            ],
            [
              35.640182,
              27.37652
            ],
            [
              35.130187,
              28.063352
            ],
            [
              34.632336,
              28.058546
            ],
            [
              34.787779,
              28.607427
            ],
            [
              34.83222,
              28.957483
            ],
            [
              34.956037,
              29.356555
            ],
            [
              36.068941,
              29.197495
            ],
            [
              36.501214,
              29.505254
            ],
            [
              36.740528,
              29.865283
            ],
            [
              37.503582,
              30.003776
            ],
            [
              37.66812,
              30.338665
            ],
            [
              37.998849,
              30.5085
            ],
            [
              37.002166,
              31.508413
            ],
            [
              39.004886,
              32.010217
            ],
            [
              39.195468,
              32.161009
            ],
            [
              40.399994,
              31.889992
            ],
            [
              41.889981,
              31.190009
            ],
            [
              44.709499,
              29.178891
            ],
            [
              46.568713,
              29.099025
            ],
            [
              47.459822,
              29.002519
            ],
            [
              47.708851,
              28.526063
            ],
            [
              48.416094,
              28.552004
            ],
            [
              48.807595,
              27.689628
            ],
            [
              49.299554,
              27.461218
            ],
            [
              49.470914,
              27.109999
            ],
            [
              50.152422,
              26.689663
            ],
            [
              50.212935,
              26.277027
            ],
            [
              50.113303,
              25.943972
            ],
            [
              50.239859,
              25.60805
            ],
            [
              50.527387,
              25.327808
            ],
            [
              50.660557,
              24.999896
            ],
            [
              50.810108,
              24.754743
            ],
            [
              51.112415,
              24.556331
            ],
            [
              51.389608,
              24.627386
            ],
            [
              51.579519,
              24.245497
            ],
            [
              51.617708,
              24.014219
            ],
            [
              52.000733,
              23.001154
            ],
            [
              55.006803,
              22.496948
            ],
            [
              55.208341,
              22.70833
            ],
            [
              55.666659,
              22.000001
            ],
            [
              54.999982,
              19.999994
            ],
            [
              52.00001,
              19.000003
            ],
            [
              49.116672,
              18.616668
            ],
            [
              48.183344,
              18.166669
            ],
            [
              47.466695,
              17.116682
            ],
            [
              47.000005,
              16.949999
            ],
            [
              46.749994,
              17.283338
            ],
            [
              46.366659,
              17.233315
            ],
            [
              45.399999,
              17.333335
            ],
            [
              45.216651,
              17.433329
            ],
            [
              44.062613,
              17.410359
            ],
            [
              43.791519,
              17.319977
            ],
            [
              43.380794,
              17.579987
            ],
            [
              43.115798,
              17.08844
            ],
            [
              43.218375,
              16.66689
            ],
            [
              42.779332,
              16.347891
            ]
          ]
        ]
      },
      id: "SAU"
    },
    {
      type: "Feature",
      properties: {
        name: "Sudan"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              33.963393,
              9.464285
            ],
            [
              33.824963,
              9.484061
            ],
            [
              33.842131,
              9.981915
            ],
            [
              33.721959,
              10.325262
            ],
            [
              33.206938,
              10.720112
            ],
            [
              33.086766,
              11.441141
            ],
            [
              33.206938,
              12.179338
            ],
            [
              32.743419,
              12.248008
            ],
            [
              32.67475,
              12.024832
            ],
            [
              32.073892,
              11.97333
            ],
            [
              32.314235,
              11.681484
            ],
            [
              32.400072,
              11.080626
            ],
            [
              31.850716,
              10.531271
            ],
            [
              31.352862,
              9.810241
            ],
            [
              30.837841,
              9.707237
            ],
            [
              29.996639,
              10.290927
            ],
            [
              29.618957,
              10.084919
            ],
            [
              29.515953,
              9.793074
            ],
            [
              29.000932,
              9.604232
            ],
            [
              28.966597,
              9.398224
            ],
            [
              27.97089,
              9.398224
            ],
            [
              27.833551,
              9.604232
            ],
            [
              27.112521,
              9.638567
            ],
            [
              26.752006,
              9.466893
            ],
            [
              26.477328,
              9.55273
            ],
            [
              25.962307,
              10.136421
            ],
            [
              25.790633,
              10.411099
            ],
            [
              25.069604,
              10.27376
            ],
            [
              24.794926,
              9.810241
            ],
            [
              24.537415,
              8.917538
            ],
            [
              24.194068,
              8.728696
            ],
            [
              23.88698,
              8.61973
            ],
            [
              23.805813,
              8.666319
            ],
            [
              23.459013,
              8.954286
            ],
            [
              23.394779,
              9.265068
            ],
            [
              23.55725,
              9.681218
            ],
            [
              23.554304,
              10.089255
            ],
            [
              22.977544,
              10.714463
            ],
            [
              22.864165,
              11.142395
            ],
            [
              22.87622,
              11.38461
            ],
            [
              22.50869,
              11.67936
            ],
            [
              22.49762,
              12.26024
            ],
            [
              22.28801,
              12.64605
            ],
            [
              21.93681,
              12.58818
            ],
            [
              22.03759,
              12.95546
            ],
            [
              22.29658,
              13.37232
            ],
            [
              22.18329,
              13.78648
            ],
            [
              22.51202,
              14.09318
            ],
            [
              22.30351,
              14.32682
            ],
            [
              22.56795,
              14.94429
            ],
            [
              23.02459,
              15.68072
            ],
            [
              23.88689,
              15.61084
            ],
            [
              23.83766,
              19.58047
            ],
            [
              23.85,
              20
            ],
            [
              25,
              20.00304
            ],
            [
              25,
              22
            ],
            [
              29.02,
              22
            ],
            [
              32.9,
              22
            ],
            [
              36.86623,
              22
            ],
            [
              37.18872,
              21.01885
            ],
            [
              36.96941,
              20.83744
            ],
            [
              37.1147,
              19.80796
            ],
            [
              37.48179,
              18.61409
            ],
            [
              37.86276,
              18.36786
            ],
            [
              38.41009,
              17.998307
            ],
            [
              37.904,
              17.42754
            ],
            [
              37.16747,
              17.26314
            ],
            [
              36.85253,
              16.95655
            ],
            [
              36.75389,
              16.29186
            ],
            [
              36.32322,
              14.82249
            ],
            [
              36.42951,
              14.42211
            ],
            [
              36.27022,
              13.56333
            ],
            [
              35.86363,
              12.57828
            ],
            [
              35.26049,
              12.08286
            ],
            [
              34.83163,
              11.31896
            ],
            [
              34.73115,
              10.91017
            ],
            [
              34.25745,
              10.63009
            ],
            [
              33.96162,
              9.58358
            ],
            [
              33.963393,
              9.464285
            ]
          ]
        ]
      },
      id: "SDN"
    },
    {
      type: "Feature",
      properties: {
        name: "South Sudan"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              33.963393,
              9.464285
            ],
            [
              33.97498,
              8.68456
            ],
            [
              33.8255,
              8.37916
            ],
            [
              33.2948,
              8.35458
            ],
            [
              32.95418,
              7.78497
            ],
            [
              33.56829,
              7.71334
            ],
            [
              34.0751,
              7.22595
            ],
            [
              34.25032,
              6.82607
            ],
            [
              34.70702,
              6.59422
            ],
            [
              35.298007,
              5.506
            ],
            [
              34.620196,
              4.847123
            ],
            [
              34.005,
              4.249885
            ],
            [
              33.39,
              3.79
            ],
            [
              32.68642,
              3.79232
            ],
            [
              31.88145,
              3.55827
            ],
            [
              31.24556,
              3.7819
            ],
            [
              30.83385,
              3.50917
            ],
            [
              29.95349,
              4.1737
            ],
            [
              29.715995,
              4.600805
            ],
            [
              29.159078,
              4.389267
            ],
            [
              28.696678,
              4.455077
            ],
            [
              28.428994,
              4.287155
            ],
            [
              27.979977,
              4.408413
            ],
            [
              27.374226,
              5.233944
            ],
            [
              27.213409,
              5.550953
            ],
            [
              26.465909,
              5.946717
            ],
            [
              26.213418,
              6.546603
            ],
            [
              25.796648,
              6.979316
            ],
            [
              25.124131,
              7.500085
            ],
            [
              25.114932,
              7.825104
            ],
            [
              24.567369,
              8.229188
            ],
            [
              23.88698,
              8.61973
            ],
            [
              24.194068,
              8.728696
            ],
            [
              24.537415,
              8.917538
            ],
            [
              24.794926,
              9.810241
            ],
            [
              25.069604,
              10.27376
            ],
            [
              25.790633,
              10.411099
            ],
            [
              25.962307,
              10.136421
            ],
            [
              26.477328,
              9.55273
            ],
            [
              26.752006,
              9.466893
            ],
            [
              27.112521,
              9.638567
            ],
            [
              27.833551,
              9.604232
            ],
            [
              27.97089,
              9.398224
            ],
            [
              28.966597,
              9.398224
            ],
            [
              29.000932,
              9.604232
            ],
            [
              29.515953,
              9.793074
            ],
            [
              29.618957,
              10.084919
            ],
            [
              29.996639,
              10.290927
            ],
            [
              30.837841,
              9.707237
            ],
            [
              31.352862,
              9.810241
            ],
            [
              31.850716,
              10.531271
            ],
            [
              32.400072,
              11.080626
            ],
            [
              32.314235,
              11.681484
            ],
            [
              32.073892,
              11.97333
            ],
            [
              32.67475,
              12.024832
            ],
            [
              32.743419,
              12.248008
            ],
            [
              33.206938,
              12.179338
            ],
            [
              33.086766,
              11.441141
            ],
            [
              33.206938,
              10.720112
            ],
            [
              33.721959,
              10.325262
            ],
            [
              33.842131,
              9.981915
            ],
            [
              33.824963,
              9.484061
            ],
            [
              33.963393,
              9.464285
            ]
          ]
        ]
      },
      id: "SDS"
    },
    {
      type: "Feature",
      properties: {
        name: "Senegal"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -16.713729,
              13.594959
            ],
            [
              -17.126107,
              14.373516
            ],
            [
              -17.625043,
              14.729541
            ],
            [
              -17.185173,
              14.919477
            ],
            [
              -16.700706,
              15.621527
            ],
            [
              -16.463098,
              16.135036
            ],
            [
              -16.12069,
              16.455663
            ],
            [
              -15.623666,
              16.369337
            ],
            [
              -15.135737,
              16.587282
            ],
            [
              -14.577348,
              16.598264
            ],
            [
              -14.099521,
              16.304302
            ],
            [
              -13.435738,
              16.039383
            ],
            [
              -12.830658,
              15.303692
            ],
            [
              -12.17075,
              14.616834
            ],
            [
              -12.124887,
              13.994727
            ],
            [
              -11.927716,
              13.422075
            ],
            [
              -11.553398,
              13.141214
            ],
            [
              -11.467899,
              12.754519
            ],
            [
              -11.513943,
              12.442988
            ],
            [
              -11.658301,
              12.386583
            ],
            [
              -12.203565,
              12.465648
            ],
            [
              -12.278599,
              12.35444
            ],
            [
              -12.499051,
              12.33209
            ],
            [
              -13.217818,
              12.575874
            ],
            [
              -13.700476,
              12.586183
            ],
            [
              -15.548477,
              12.62817
            ],
            [
              -15.816574,
              12.515567
            ],
            [
              -16.147717,
              12.547762
            ],
            [
              -16.677452,
              12.384852
            ],
            [
              -16.841525,
              13.151394
            ],
            [
              -15.931296,
              13.130284
            ],
            [
              -15.691001,
              13.270353
            ],
            [
              -15.511813,
              13.27857
            ],
            [
              -15.141163,
              13.509512
            ],
            [
              -14.712197,
              13.298207
            ],
            [
              -14.277702,
              13.280585
            ],
            [
              -13.844963,
              13.505042
            ],
            [
              -14.046992,
              13.794068
            ],
            [
              -14.376714,
              13.62568
            ],
            [
              -14.687031,
              13.630357
            ],
            [
              -15.081735,
              13.876492
            ],
            [
              -15.39877,
              13.860369
            ],
            [
              -15.624596,
              13.623587
            ],
            [
              -16.713729,
              13.594959
            ]
          ]
        ]
      },
      id: "SEN"
    },
    {
      type: "Feature",
      properties: {
        name: "Solomon Islands"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                162.119025,
                -10.482719
              ],
              [
                162.398646,
                -10.826367
              ],
              [
                161.700032,
                -10.820011
              ],
              [
                161.319797,
                -10.204751
              ],
              [
                161.917383,
                -10.446701
              ],
              [
                162.119025,
                -10.482719
              ]
            ]
          ],
          [
            [
              [
                160.852229,
                -9.872937
              ],
              [
                160.462588,
                -9.89521
              ],
              [
                159.849447,
                -9.794027
              ],
              [
                159.640003,
                -9.63998
              ],
              [
                159.702945,
                -9.24295
              ],
              [
                160.362956,
                -9.400304
              ],
              [
                160.688518,
                -9.610162
              ],
              [
                160.852229,
                -9.872937
              ]
            ]
          ],
          [
            [
              [
                161.679982,
                -9.599982
              ],
              [
                161.529397,
                -9.784312
              ],
              [
                160.788253,
                -8.917543
              ],
              [
                160.579997,
                -8.320009
              ],
              [
                160.920028,
                -8.320009
              ],
              [
                161.280006,
                -9.120011
              ],
              [
                161.679982,
                -9.599982
              ]
            ]
          ],
          [
            [
              [
                159.875027,
                -8.33732
              ],
              [
                159.917402,
                -8.53829
              ],
              [
                159.133677,
                -8.114181
              ],
              [
                158.586114,
                -7.754824
              ],
              [
                158.21115,
                -7.421872
              ],
              [
                158.359978,
                -7.320018
              ],
              [
                158.820001,
                -7.560003
              ],
              [
                159.640003,
                -8.020027
              ],
              [
                159.875027,
                -8.33732
              ]
            ]
          ],
          [
            [
              [
                157.538426,
                -7.34782
              ],
              [
                157.33942,
                -7.404767
              ],
              [
                156.90203,
                -7.176874
              ],
              [
                156.491358,
                -6.765943
              ],
              [
                156.542828,
                -6.599338
              ],
              [
                157.14,
                -7.021638
              ],
              [
                157.538426,
                -7.34782
              ]
            ]
          ]
        ]
      },
      id: "SLB"
    },
    {
      type: "Feature",
      properties: {
        name: "Sierra Leone"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -11.438779,
              6.785917
            ],
            [
              -11.708195,
              6.860098
            ],
            [
              -12.428099,
              7.262942
            ],
            [
              -12.949049,
              7.798646
            ],
            [
              -13.124025,
              8.163946
            ],
            [
              -13.24655,
              8.903049
            ],
            [
              -12.711958,
              9.342712
            ],
            [
              -12.596719,
              9.620188
            ],
            [
              -12.425929,
              9.835834
            ],
            [
              -12.150338,
              9.858572
            ],
            [
              -11.917277,
              10.046984
            ],
            [
              -11.117481,
              10.045873
            ],
            [
              -10.839152,
              9.688246
            ],
            [
              -10.622395,
              9.26791
            ],
            [
              -10.65477,
              8.977178
            ],
            [
              -10.494315,
              8.715541
            ],
            [
              -10.505477,
              8.348896
            ],
            [
              -10.230094,
              8.406206
            ],
            [
              -10.695595,
              7.939464
            ],
            [
              -11.146704,
              7.396706
            ],
            [
              -11.199802,
              7.105846
            ],
            [
              -11.438779,
              6.785917
            ]
          ]
        ]
      },
      id: "SLE"
    },
    {
      type: "Feature",
      properties: {
        name: "El Salvador"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -87.793111,
              13.38448
            ],
            [
              -87.904112,
              13.149017
            ],
            [
              -88.483302,
              13.163951
            ],
            [
              -88.843228,
              13.259734
            ],
            [
              -89.256743,
              13.458533
            ],
            [
              -89.812394,
              13.520622
            ],
            [
              -90.095555,
              13.735338
            ],
            [
              -90.064678,
              13.88197
            ],
            [
              -89.721934,
              14.134228
            ],
            [
              -89.534219,
              14.244816
            ],
            [
              -89.587343,
              14.362586
            ],
            [
              -89.353326,
              14.424133
            ],
            [
              -89.058512,
              14.340029
            ],
            [
              -88.843073,
              14.140507
            ],
            [
              -88.541231,
              13.980155
            ],
            [
              -88.503998,
              13.845486
            ],
            [
              -88.065343,
              13.964626
            ],
            [
              -87.859515,
              13.893312
            ],
            [
              -87.723503,
              13.78505
            ],
            [
              -87.793111,
              13.38448
            ]
          ]
        ]
      },
      id: "SLV"
    },
    {
      type: "Feature",
      properties: {
        name: "Somaliland"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              48.93813,
              9.451749
            ],
            [
              48.486736,
              8.837626
            ],
            [
              47.78942,
              8.003
            ],
            [
              46.948328,
              7.996877
            ],
            [
              43.67875,
              9.18358
            ],
            [
              43.296975,
              9.540477
            ],
            [
              42.92812,
              10.02194
            ],
            [
              42.55876,
              10.57258
            ],
            [
              42.776852,
              10.926879
            ],
            [
              43.145305,
              11.46204
            ],
            [
              43.47066,
              11.27771
            ],
            [
              43.666668,
              10.864169
            ],
            [
              44.117804,
              10.445538
            ],
            [
              44.614259,
              10.442205
            ],
            [
              45.556941,
              10.698029
            ],
            [
              46.645401,
              10.816549
            ],
            [
              47.525658,
              11.127228
            ],
            [
              48.021596,
              11.193064
            ],
            [
              48.378784,
              11.375482
            ],
            [
              48.948206,
              11.410622
            ],
            [
              48.942005,
              11.394266
            ],
            [
              48.938491,
              10.982327
            ],
            [
              48.938233,
              9.9735
            ],
            [
              48.93813,
              9.451749
            ]
          ]
        ]
      },
      id: "ABV"
    },
    {
      type: "Feature",
      properties: {
        name: "Somalia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              49.72862,
              11.5789
            ],
            [
              50.25878,
              11.67957
            ],
            [
              50.73202,
              12.0219
            ],
            [
              51.1112,
              12.02464
            ],
            [
              51.13387,
              11.74815
            ],
            [
              51.04153,
              11.16651
            ],
            [
              51.04531,
              10.6409
            ],
            [
              50.83418,
              10.27972
            ],
            [
              50.55239,
              9.19874
            ],
            [
              50.07092,
              8.08173
            ],
            [
              49.4527,
              6.80466
            ],
            [
              48.59455,
              5.33911
            ],
            [
              47.74079,
              4.2194
            ],
            [
              46.56476,
              2.85529
            ],
            [
              45.56399,
              2.04576
            ],
            [
              44.06815,
              1.05283
            ],
            [
              43.13597,
              0.2922
            ],
            [
              42.04157,
              -0.91916
            ],
            [
              41.81095,
              -1.44647
            ],
            [
              41.58513,
              -1.68325
            ],
            [
              40.993,
              -0.85829
            ],
            [
              40.98105,
              2.78452
            ],
            [
              41.855083,
              3.918912
            ],
            [
              42.12861,
              4.23413
            ],
            [
              42.76967,
              4.25259
            ],
            [
              43.66087,
              4.95755
            ],
            [
              44.9636,
              5.00162
            ],
            [
              47.78942,
              8.003
            ],
            [
              48.486736,
              8.837626
            ],
            [
              48.93813,
              9.451749
            ],
            [
              48.938233,
              9.9735
            ],
            [
              48.938491,
              10.982327
            ],
            [
              48.942005,
              11.394266
            ],
            [
              48.948205,
              11.410617
            ],
            [
              49.26776,
              11.43033
            ],
            [
              49.72862,
              11.5789
            ]
          ]
        ]
      },
      id: "SOM"
    },
    {
      type: "Feature",
      properties: {
        name: "Serbia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              20.874313,
              45.416375
            ],
            [
              21.483526,
              45.18117
            ],
            [
              21.562023,
              44.768947
            ],
            [
              22.145088,
              44.478422
            ],
            [
              22.459022,
              44.702517
            ],
            [
              22.705726,
              44.578003
            ],
            [
              22.474008,
              44.409228
            ],
            [
              22.65715,
              44.234923
            ],
            [
              22.410446,
              44.008063
            ],
            [
              22.500157,
              43.642814
            ],
            [
              22.986019,
              43.211161
            ],
            [
              22.604801,
              42.898519
            ],
            [
              22.436595,
              42.580321
            ],
            [
              22.545012,
              42.461362
            ],
            [
              22.380526,
              42.32026
            ],
            [
              21.91708,
              42.30364
            ],
            [
              21.576636,
              42.245224
            ],
            [
              21.54332,
              42.32025
            ],
            [
              21.66292,
              42.43922
            ],
            [
              21.77505,
              42.6827
            ],
            [
              21.63302,
              42.67717
            ],
            [
              21.43866,
              42.86255
            ],
            [
              21.27421,
              42.90959
            ],
            [
              21.143395,
              43.068685
            ],
            [
              20.95651,
              43.13094
            ],
            [
              20.81448,
              43.27205
            ],
            [
              20.63508,
              43.21671
            ],
            [
              20.49679,
              42.88469
            ],
            [
              20.25758,
              42.81275
            ],
            [
              20.3398,
              42.89852
            ],
            [
              19.95857,
              43.10604
            ],
            [
              19.63,
              43.21378
            ],
            [
              19.48389,
              43.35229
            ],
            [
              19.21852,
              43.52384
            ],
            [
              19.454,
              43.5681
            ],
            [
              19.59976,
              44.03847
            ],
            [
              19.11761,
              44.42307
            ],
            [
              19.36803,
              44.863
            ],
            [
              19.00548,
              44.86023
            ],
            [
              19.390476,
              45.236516
            ],
            [
              19.072769,
              45.521511
            ],
            [
              18.82982,
              45.90888
            ],
            [
              19.596045,
              46.17173
            ],
            [
              20.220192,
              46.127469
            ],
            [
              20.762175,
              45.734573
            ],
            [
              20.874313,
              45.416375
            ]
          ]
        ]
      },
      id: "SRB"
    },
    {
      type: "Feature",
      properties: {
        name: "Suriname"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -57.147436,
              5.97315
            ],
            [
              -55.949318,
              5.772878
            ],
            [
              -55.84178,
              5.953125
            ],
            [
              -55.03325,
              6.025291
            ],
            [
              -53.958045,
              5.756548
            ],
            [
              -54.478633,
              4.896756
            ],
            [
              -54.399542,
              4.212611
            ],
            [
              -54.006931,
              3.620038
            ],
            [
              -54.181726,
              3.18978
            ],
            [
              -54.269705,
              2.732392
            ],
            [
              -54.524754,
              2.311849
            ],
            [
              -55.097587,
              2.523748
            ],
            [
              -55.569755,
              2.421506
            ],
            [
              -55.973322,
              2.510364
            ],
            [
              -56.073342,
              2.220795
            ],
            [
              -55.9056,
              2.021996
            ],
            [
              -55.995698,
              1.817667
            ],
            [
              -56.539386,
              1.899523
            ],
            [
              -57.150098,
              2.768927
            ],
            [
              -57.281433,
              3.333492
            ],
            [
              -57.601569,
              3.334655
            ],
            [
              -58.044694,
              4.060864
            ],
            [
              -57.86021,
              4.576801
            ],
            [
              -57.914289,
              4.812626
            ],
            [
              -57.307246,
              5.073567
            ],
            [
              -57.147436,
              5.97315
            ]
          ]
        ]
      },
      id: "SUR"
    },
    {
      type: "Feature",
      properties: {
        name: "Slovakia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              18.853144,
              49.49623
            ],
            [
              18.909575,
              49.435846
            ],
            [
              19.320713,
              49.571574
            ],
            [
              19.825023,
              49.217125
            ],
            [
              20.415839,
              49.431453
            ],
            [
              20.887955,
              49.328772
            ],
            [
              21.607808,
              49.470107
            ],
            [
              22.558138,
              49.085738
            ],
            [
              22.280842,
              48.825392
            ],
            [
              22.085608,
              48.422264
            ],
            [
              21.872236,
              48.319971
            ],
            [
              20.801294,
              48.623854
            ],
            [
              20.473562,
              48.56285
            ],
            [
              20.239054,
              48.327567
            ],
            [
              19.769471,
              48.202691
            ],
            [
              19.661364,
              48.266615
            ],
            [
              19.174365,
              48.111379
            ],
            [
              18.777025,
              48.081768
            ],
            [
              18.696513,
              47.880954
            ],
            [
              17.857133,
              47.758429
            ],
            [
              17.488473,
              47.867466
            ],
            [
              16.979667,
              48.123497
            ],
            [
              16.879983,
              48.470013
            ],
            [
              16.960288,
              48.596982
            ],
            [
              17.101985,
              48.816969
            ],
            [
              17.545007,
              48.800019
            ],
            [
              17.886485,
              48.903475
            ],
            [
              17.913512,
              48.996493
            ],
            [
              18.104973,
              49.043983
            ],
            [
              18.170498,
              49.271515
            ],
            [
              18.399994,
              49.315001
            ],
            [
              18.554971,
              49.495015
            ],
            [
              18.853144,
              49.49623
            ]
          ]
        ]
      },
      id: "SVK"
    },
    {
      type: "Feature",
      properties: {
        name: "Slovenia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              13.806475,
              46.509306
            ],
            [
              14.632472,
              46.431817
            ],
            [
              15.137092,
              46.658703
            ],
            [
              16.011664,
              46.683611
            ],
            [
              16.202298,
              46.852386
            ],
            [
              16.370505,
              46.841327
            ],
            [
              16.564808,
              46.503751
            ],
            [
              15.768733,
              46.238108
            ],
            [
              15.67153,
              45.834154
            ],
            [
              15.323954,
              45.731783
            ],
            [
              15.327675,
              45.452316
            ],
            [
              14.935244,
              45.471695
            ],
            [
              14.595109,
              45.634941
            ],
            [
              14.411968,
              45.466166
            ],
            [
              13.71506,
              45.500324
            ],
            [
              13.93763,
              45.591016
            ],
            [
              13.69811,
              46.016778
            ],
            [
              13.806475,
              46.509306
            ]
          ]
        ]
      },
      id: "SVN"
    },
    {
      type: "Feature",
      properties: {
        name: "Sweden"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              22.183173,
              65.723741
            ],
            [
              21.213517,
              65.026005
            ],
            [
              21.369631,
              64.413588
            ],
            [
              19.778876,
              63.609554
            ],
            [
              17.847779,
              62.7494
            ],
            [
              17.119555,
              61.341166
            ],
            [
              17.831346,
              60.636583
            ],
            [
              18.787722,
              60.081914
            ],
            [
              17.869225,
              58.953766
            ],
            [
              16.829185,
              58.719827
            ],
            [
              16.44771,
              57.041118
            ],
            [
              15.879786,
              56.104302
            ],
            [
              14.666681,
              56.200885
            ],
            [
              14.100721,
              55.407781
            ],
            [
              12.942911,
              55.361737
            ],
            [
              12.625101,
              56.30708
            ],
            [
              11.787942,
              57.441817
            ],
            [
              11.027369,
              58.856149
            ],
            [
              11.468272,
              59.432393
            ],
            [
              12.300366,
              60.117933
            ],
            [
              12.631147,
              61.293572
            ],
            [
              11.992064,
              61.800362
            ],
            [
              11.930569,
              63.128318
            ],
            [
              12.579935,
              64.066219
            ],
            [
              13.571916,
              64.049114
            ],
            [
              13.919905,
              64.445421
            ],
            [
              13.55569,
              64.787028
            ],
            [
              15.108411,
              66.193867
            ],
            [
              16.108712,
              67.302456
            ],
            [
              16.768879,
              68.013937
            ],
            [
              17.729182,
              68.010552
            ],
            [
              17.993868,
              68.567391
            ],
            [
              19.87856,
              68.407194
            ],
            [
              20.025269,
              69.065139
            ],
            [
              20.645593,
              69.106247
            ],
            [
              21.978535,
              68.616846
            ],
            [
              23.539473,
              67.936009
            ],
            [
              23.56588,
              66.396051
            ],
            [
              23.903379,
              66.006927
            ],
            [
              22.183173,
              65.723741
            ]
          ]
        ]
      },
      id: "SWE"
    },
    {
      type: "Feature",
      properties: {
        name: "Swaziland"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              32.071665,
              -26.73382
            ],
            [
              31.86806,
              -27.177927
            ],
            [
              31.282773,
              -27.285879
            ],
            [
              30.685962,
              -26.743845
            ],
            [
              30.676609,
              -26.398078
            ],
            [
              30.949667,
              -26.022649
            ],
            [
              31.04408,
              -25.731452
            ],
            [
              31.333158,
              -25.660191
            ],
            [
              31.837778,
              -25.843332
            ],
            [
              31.985779,
              -26.29178
            ],
            [
              32.071665,
              -26.73382
            ]
          ]
        ]
      },
      id: "SWZ"
    },
    {
      type: "Feature",
      properties: {
        name: "Syria"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              38.792341,
              33.378686
            ],
            [
              36.834062,
              32.312938
            ],
            [
              35.719918,
              32.709192
            ],
            [
              35.700798,
              32.716014
            ],
            [
              35.836397,
              32.868123
            ],
            [
              35.821101,
              33.277426
            ],
            [
              36.06646,
              33.824912
            ],
            [
              36.61175,
              34.201789
            ],
            [
              36.448194,
              34.593935
            ],
            [
              35.998403,
              34.644914
            ],
            [
              35.905023,
              35.410009
            ],
            [
              36.149763,
              35.821535
            ],
            [
              36.41755,
              36.040617
            ],
            [
              36.685389,
              36.259699
            ],
            [
              36.739494,
              36.81752
            ],
            [
              37.066761,
              36.623036
            ],
            [
              38.167727,
              36.90121
            ],
            [
              38.699891,
              36.712927
            ],
            [
              39.52258,
              36.716054
            ],
            [
              40.673259,
              37.091276
            ],
            [
              41.212089,
              37.074352
            ],
            [
              42.349591,
              37.229873
            ],
            [
              41.837064,
              36.605854
            ],
            [
              41.289707,
              36.358815
            ],
            [
              41.383965,
              35.628317
            ],
            [
              41.006159,
              34.419372
            ],
            [
              38.792341,
              33.378686
            ]
          ]
        ]
      },
      id: "SYR"
    },
    {
      type: "Feature",
      properties: {
        name: "Chad"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              14.495787,
              12.859396
            ],
            [
              14.595781,
              13.330427
            ],
            [
              13.954477,
              13.353449
            ],
            [
              13.956699,
              13.996691
            ],
            [
              13.540394,
              14.367134
            ],
            [
              13.97217,
              15.68437
            ],
            [
              15.247731,
              16.627306
            ],
            [
              15.300441,
              17.92795
            ],
            [
              15.685741,
              19.95718
            ],
            [
              15.903247,
              20.387619
            ],
            [
              15.487148,
              20.730415
            ],
            [
              15.47106,
              21.04845
            ],
            [
              15.096888,
              21.308519
            ],
            [
              14.8513,
              22.86295
            ],
            [
              15.86085,
              23.40972
            ],
            [
              19.84926,
              21.49509
            ],
            [
              23.83766,
              19.58047
            ],
            [
              23.88689,
              15.61084
            ],
            [
              23.02459,
              15.68072
            ],
            [
              22.56795,
              14.94429
            ],
            [
              22.30351,
              14.32682
            ],
            [
              22.51202,
              14.09318
            ],
            [
              22.18329,
              13.78648
            ],
            [
              22.29658,
              13.37232
            ],
            [
              22.03759,
              12.95546
            ],
            [
              21.93681,
              12.58818
            ],
            [
              22.28801,
              12.64605
            ],
            [
              22.49762,
              12.26024
            ],
            [
              22.50869,
              11.67936
            ],
            [
              22.87622,
              11.38461
            ],
            [
              22.864165,
              11.142395
            ],
            [
              22.231129,
              10.971889
            ],
            [
              21.723822,
              10.567056
            ],
            [
              21.000868,
              9.475985
            ],
            [
              20.059685,
              9.012706
            ],
            [
              19.094008,
              9.074847
            ],
            [
              18.81201,
              8.982915
            ],
            [
              18.911022,
              8.630895
            ],
            [
              18.389555,
              8.281304
            ],
            [
              17.96493,
              7.890914
            ],
            [
              16.705988,
              7.508328
            ],
            [
              16.456185,
              7.734774
            ],
            [
              16.290562,
              7.754307
            ],
            [
              16.106232,
              7.497088
            ],
            [
              15.27946,
              7.421925
            ],
            [
              15.436092,
              7.692812
            ],
            [
              15.120866,
              8.38215
            ],
            [
              14.979996,
              8.796104
            ],
            [
              14.544467,
              8.965861
            ],
            [
              13.954218,
              9.549495
            ],
            [
              14.171466,
              10.021378
            ],
            [
              14.627201,
              9.920919
            ],
            [
              14.909354,
              9.992129
            ],
            [
              15.467873,
              9.982337
            ],
            [
              14.923565,
              10.891325
            ],
            [
              14.960152,
              11.555574
            ],
            [
              14.89336,
              12.21905
            ],
            [
              14.495787,
              12.859396
            ]
          ]
        ]
      },
      id: "TCD"
    },
    {
      type: "Feature",
      properties: {
        name: "Togo"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              1.865241,
              6.142158
            ],
            [
              1.060122,
              5.928837
            ],
            [
              0.836931,
              6.279979
            ],
            [
              0.570384,
              6.914359
            ],
            [
              0.490957,
              7.411744
            ],
            [
              0.712029,
              8.312465
            ],
            [
              0.461192,
              8.677223
            ],
            [
              0.365901,
              9.465004
            ],
            [
              0.36758,
              10.191213
            ],
            [
              -0.049785,
              10.706918
            ],
            [
              0.023803,
              11.018682
            ],
            [
              0.899563,
              10.997339
            ],
            [
              0.772336,
              10.470808
            ],
            [
              1.077795,
              10.175607
            ],
            [
              1.425061,
              9.825395
            ],
            [
              1.463043,
              9.334624
            ],
            [
              1.664478,
              9.12859
            ],
            [
              1.618951,
              6.832038
            ],
            [
              1.865241,
              6.142158
            ]
          ]
        ]
      },
      id: "TGO"
    },
    {
      type: "Feature",
      properties: {
        name: "Thailand"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              102.584932,
              12.186595
            ],
            [
              101.687158,
              12.64574
            ],
            [
              100.83181,
              12.627085
            ],
            [
              100.978467,
              13.412722
            ],
            [
              100.097797,
              13.406856
            ],
            [
              100.018733,
              12.307001
            ],
            [
              99.478921,
              10.846367
            ],
            [
              99.153772,
              9.963061
            ],
            [
              99.222399,
              9.239255
            ],
            [
              99.873832,
              9.207862
            ],
            [
              100.279647,
              8.295153
            ],
            [
              100.459274,
              7.429573
            ],
            [
              101.017328,
              6.856869
            ],
            [
              101.623079,
              6.740622
            ],
            [
              102.141187,
              6.221636
            ],
            [
              101.814282,
              5.810808
            ],
            [
              101.154219,
              5.691384
            ],
            [
              101.075516,
              6.204867
            ],
            [
              100.259596,
              6.642825
            ],
            [
              100.085757,
              6.464489
            ],
            [
              99.690691,
              6.848213
            ],
            [
              99.519642,
              7.343454
            ],
            [
              98.988253,
              7.907993
            ],
            [
              98.503786,
              8.382305
            ],
            [
              98.339662,
              7.794512
            ],
            [
              98.150009,
              8.350007
            ],
            [
              98.25915,
              8.973923
            ],
            [
              98.553551,
              9.93296
            ],
            [
              99.038121,
              10.960546
            ],
            [
              99.587286,
              11.892763
            ],
            [
              99.196354,
              12.804748
            ],
            [
              99.212012,
              13.269294
            ],
            [
              99.097755,
              13.827503
            ],
            [
              98.430819,
              14.622028
            ],
            [
              98.192074,
              15.123703
            ],
            [
              98.537376,
              15.308497
            ],
            [
              98.903348,
              16.177824
            ],
            [
              98.493761,
              16.837836
            ],
            [
              97.859123,
              17.567946
            ],
            [
              97.375896,
              18.445438
            ],
            [
              97.797783,
              18.62708
            ],
            [
              98.253724,
              19.708203
            ],
            [
              98.959676,
              19.752981
            ],
            [
              99.543309,
              20.186598
            ],
            [
              100.115988,
              20.41785
            ],
            [
              100.548881,
              20.109238
            ],
            [
              100.606294,
              19.508344
            ],
            [
              101.282015,
              19.462585
            ],
            [
              101.035931,
              18.408928
            ],
            [
              101.059548,
              17.512497
            ],
            [
              102.113592,
              18.109102
            ],
            [
              102.413005,
              17.932782
            ],
            [
              102.998706,
              17.961695
            ],
            [
              103.200192,
              18.309632
            ],
            [
              103.956477,
              18.240954
            ],
            [
              104.716947,
              17.428859
            ],
            [
              104.779321,
              16.441865
            ],
            [
              105.589039,
              15.570316
            ],
            [
              105.544338,
              14.723934
            ],
            [
              105.218777,
              14.273212
            ],
            [
              104.281418,
              14.416743
            ],
            [
              102.988422,
              14.225721
            ],
            [
              102.348099,
              13.394247
            ],
            [
              102.584932,
              12.186595
            ]
          ]
        ]
      },
      id: "THA"
    },
    {
      type: "Feature",
      properties: {
        name: "Tajikistan"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              71.014198,
              40.244366
            ],
            [
              70.648019,
              39.935754
            ],
            [
              69.55961,
              40.103211
            ],
            [
              69.464887,
              39.526683
            ],
            [
              70.549162,
              39.604198
            ],
            [
              71.784694,
              39.279463
            ],
            [
              73.675379,
              39.431237
            ],
            [
              73.928852,
              38.505815
            ],
            [
              74.257514,
              38.606507
            ],
            [
              74.864816,
              38.378846
            ],
            [
              74.829986,
              37.990007
            ],
            [
              74.980002,
              37.41999
            ],
            [
              73.948696,
              37.421566
            ],
            [
              73.260056,
              37.495257
            ],
            [
              72.63689,
              37.047558
            ],
            [
              72.193041,
              36.948288
            ],
            [
              71.844638,
              36.738171
            ],
            [
              71.448693,
              37.065645
            ],
            [
              71.541918,
              37.905774
            ],
            [
              71.239404,
              37.953265
            ],
            [
              71.348131,
              38.258905
            ],
            [
              70.806821,
              38.486282
            ],
            [
              70.376304,
              38.138396
            ],
            [
              70.270574,
              37.735165
            ],
            [
              70.116578,
              37.588223
            ],
            [
              69.518785,
              37.608997
            ],
            [
              69.196273,
              37.151144
            ],
            [
              68.859446,
              37.344336
            ],
            [
              68.135562,
              37.023115
            ],
            [
              67.83,
              37.144994
            ],
            [
              68.392033,
              38.157025
            ],
            [
              68.176025,
              38.901553
            ],
            [
              67.44222,
              39.140144
            ],
            [
              67.701429,
              39.580478
            ],
            [
              68.536416,
              39.533453
            ],
            [
              69.011633,
              40.086158
            ],
            [
              69.329495,
              40.727824
            ],
            [
              70.666622,
              40.960213
            ],
            [
              70.45816,
              40.496495
            ],
            [
              70.601407,
              40.218527
            ],
            [
              71.014198,
              40.244366
            ]
          ]
        ]
      },
      id: "TJK"
    },
    {
      type: "Feature",
      properties: {
        name: "Turkmenistan"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              61.210817,
              35.650072
            ],
            [
              61.123071,
              36.491597
            ],
            [
              60.377638,
              36.527383
            ],
            [
              59.234762,
              37.412988
            ],
            [
              58.436154,
              37.522309
            ],
            [
              57.330434,
              38.029229
            ],
            [
              56.619366,
              38.121394
            ],
            [
              56.180375,
              37.935127
            ],
            [
              55.511578,
              37.964117
            ],
            [
              54.800304,
              37.392421
            ],
            [
              53.921598,
              37.198918
            ],
            [
              53.735511,
              37.906136
            ],
            [
              53.880929,
              38.952093
            ],
            [
              53.101028,
              39.290574
            ],
            [
              53.357808,
              39.975286
            ],
            [
              52.693973,
              40.033629
            ],
            [
              52.915251,
              40.876523
            ],
            [
              53.858139,
              40.631034
            ],
            [
              54.736845,
              40.951015
            ],
            [
              54.008311,
              41.551211
            ],
            [
              53.721713,
              42.123191
            ],
            [
              52.91675,
              41.868117
            ],
            [
              52.814689,
              41.135371
            ],
            [
              52.50246,
              41.783316
            ],
            [
              52.944293,
              42.116034
            ],
            [
              54.079418,
              42.324109
            ],
            [
              54.755345,
              42.043971
            ],
            [
              55.455251,
              41.259859
            ],
            [
              55.968191,
              41.308642
            ],
            [
              57.096391,
              41.32231
            ],
            [
              56.932215,
              41.826026
            ],
            [
              57.78653,
              42.170553
            ],
            [
              58.629011,
              42.751551
            ],
            [
              59.976422,
              42.223082
            ],
            [
              60.083341,
              41.425146
            ],
            [
              60.465953,
              41.220327
            ],
            [
              61.547179,
              41.26637
            ],
            [
              61.882714,
              41.084857
            ],
            [
              62.37426,
              40.053886
            ],
            [
              63.518015,
              39.363257
            ],
            [
              64.170223,
              38.892407
            ],
            [
              65.215999,
              38.402695
            ],
            [
              66.54615,
              37.974685
            ],
            [
              66.518607,
              37.362784
            ],
            [
              66.217385,
              37.39379
            ],
            [
              65.745631,
              37.661164
            ],
            [
              65.588948,
              37.305217
            ],
            [
              64.746105,
              37.111818
            ],
            [
              64.546479,
              36.312073
            ],
            [
              63.982896,
              36.007957
            ],
            [
              63.193538,
              35.857166
            ],
            [
              62.984662,
              35.404041
            ],
            [
              62.230651,
              35.270664
            ],
            [
              61.210817,
              35.650072
            ]
          ]
        ]
      },
      id: "TKM"
    },
    {
      type: "Feature",
      properties: {
        name: "East Timor"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              124.968682,
              -8.89279
            ],
            [
              125.086246,
              -8.656887
            ],
            [
              125.947072,
              -8.432095
            ],
            [
              126.644704,
              -8.398247
            ],
            [
              126.957243,
              -8.273345
            ],
            [
              127.335928,
              -8.397317
            ],
            [
              126.967992,
              -8.668256
            ],
            [
              125.925885,
              -9.106007
            ],
            [
              125.08852,
              -9.393173
            ],
            [
              125.07002,
              -9.089987
            ],
            [
              124.968682,
              -8.89279
            ]
          ]
        ]
      },
      id: "TLS"
    },
    {
      type: "Feature",
      properties: {
        name: "Trinidad and Tobago"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -61.68,
              10.76
            ],
            [
              -61.105,
              10.89
            ],
            [
              -60.895,
              10.855
            ],
            [
              -60.935,
              10.11
            ],
            [
              -61.77,
              10
            ],
            [
              -61.95,
              10.09
            ],
            [
              -61.66,
              10.365
            ],
            [
              -61.68,
              10.76
            ]
          ]
        ]
      },
      id: "TTO"
    },
    {
      type: "Feature",
      properties: {
        name: "Tunisia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              9.48214,
              30.307556
            ],
            [
              9.055603,
              32.102692
            ],
            [
              8.439103,
              32.506285
            ],
            [
              8.430473,
              32.748337
            ],
            [
              7.612642,
              33.344115
            ],
            [
              7.524482,
              34.097376
            ],
            [
              8.140981,
              34.655146
            ],
            [
              8.376368,
              35.479876
            ],
            [
              8.217824,
              36.433177
            ],
            [
              8.420964,
              36.946427
            ],
            [
              9.509994,
              37.349994
            ],
            [
              10.210002,
              37.230002
            ],
            [
              10.18065,
              36.724038
            ],
            [
              11.028867,
              37.092103
            ],
            [
              11.100026,
              36.899996
            ],
            [
              10.600005,
              36.41
            ],
            [
              10.593287,
              35.947444
            ],
            [
              10.939519,
              35.698984
            ],
            [
              10.807847,
              34.833507
            ],
            [
              10.149593,
              34.330773
            ],
            [
              10.339659,
              33.785742
            ],
            [
              10.856836,
              33.76874
            ],
            [
              11.108501,
              33.293343
            ],
            [
              11.488787,
              33.136996
            ],
            [
              11.432253,
              32.368903
            ],
            [
              10.94479,
              32.081815
            ],
            [
              10.636901,
              31.761421
            ],
            [
              9.950225,
              31.37607
            ],
            [
              10.056575,
              30.961831
            ],
            [
              9.970017,
              30.539325
            ],
            [
              9.48214,
              30.307556
            ]
          ]
        ]
      },
      id: "TUN"
    },
    {
      type: "Feature",
      properties: {
        name: "Turkey"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                36.913127,
                41.335358
              ],
              [
                38.347665,
                40.948586
              ],
              [
                39.512607,
                41.102763
              ],
              [
                40.373433,
                41.013673
              ],
              [
                41.554084,
                41.535656
              ],
              [
                42.619549,
                41.583173
              ],
              [
                43.582746,
                41.092143
              ],
              [
                43.752658,
                40.740201
              ],
              [
                43.656436,
                40.253564
              ],
              [
                44.400009,
                40.005
              ],
              [
                44.79399,
                39.713003
              ],
              [
                44.109225,
                39.428136
              ],
              [
                44.421403,
                38.281281
              ],
              [
                44.225756,
                37.971584
              ],
              [
                44.772699,
                37.170445
              ],
              [
                44.293452,
                37.001514
              ],
              [
                43.942259,
                37.256228
              ],
              [
                42.779126,
                37.385264
              ],
              [
                42.349591,
                37.229873
              ],
              [
                41.212089,
                37.074352
              ],
              [
                40.673259,
                37.091276
              ],
              [
                39.52258,
                36.716054
              ],
              [
                38.699891,
                36.712927
              ],
              [
                38.167727,
                36.90121
              ],
              [
                37.066761,
                36.623036
              ],
              [
                36.739494,
                36.81752
              ],
              [
                36.685389,
                36.259699
              ],
              [
                36.41755,
                36.040617
              ],
              [
                36.149763,
                35.821535
              ],
              [
                35.782085,
                36.274995
              ],
              [
                36.160822,
                36.650606
              ],
              [
                35.550936,
                36.565443
              ],
              [
                34.714553,
                36.795532
              ],
              [
                34.026895,
                36.21996
              ],
              [
                32.509158,
                36.107564
              ],
              [
                31.699595,
                36.644275
              ],
              [
                30.621625,
                36.677865
              ],
              [
                30.391096,
                36.262981
              ],
              [
                29.699976,
                36.144357
              ],
              [
                28.732903,
                36.676831
              ],
              [
                27.641187,
                36.658822
              ],
              [
                27.048768,
                37.653361
              ],
              [
                26.318218,
                38.208133
              ],
              [
                26.8047,
                38.98576
              ],
              [
                26.170785,
                39.463612
              ],
              [
                27.28002,
                40.420014
              ],
              [
                28.819978,
                40.460011
              ],
              [
                29.240004,
                41.219991
              ],
              [
                31.145934,
                41.087622
              ],
              [
                32.347979,
                41.736264
              ],
              [
                33.513283,
                42.01896
              ],
              [
                35.167704,
                42.040225
              ],
              [
                36.913127,
                41.335358
              ]
            ]
          ],
          [
            [
              [
                27.192377,
                40.690566
              ],
              [
                26.358009,
                40.151994
              ],
              [
                26.043351,
                40.617754
              ],
              [
                26.056942,
                40.824123
              ],
              [
                26.294602,
                40.936261
              ],
              [
                26.604196,
                41.562115
              ],
              [
                26.117042,
                41.826905
              ],
              [
                27.135739,
                42.141485
              ],
              [
                27.99672,
                42.007359
              ],
              [
                28.115525,
                41.622886
              ],
              [
                28.988443,
                41.299934
              ],
              [
                28.806438,
                41.054962
              ],
              [
                27.619017,
                40.999823
              ],
              [
                27.192377,
                40.690566
              ]
            ]
          ]
        ]
      },
      id: "TUR"
    },
    {
      type: "Feature",
      properties: {
        name: "Taiwan"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              121.777818,
              24.394274
            ],
            [
              121.175632,
              22.790857
            ],
            [
              120.74708,
              21.970571
            ],
            [
              120.220083,
              22.814861
            ],
            [
              120.106189,
              23.556263
            ],
            [
              120.69468,
              24.538451
            ],
            [
              121.495044,
              25.295459
            ],
            [
              121.951244,
              24.997596
            ],
            [
              121.777818,
              24.394274
            ]
          ]
        ]
      },
      id: "TWN"
    },
    {
      type: "Feature",
      properties: {
        name: "Tanzania"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              33.903711,
              -0.95
            ],
            [
              34.07262,
              -1.05982
            ],
            [
              37.69869,
              -3.09699
            ],
            [
              37.7669,
              -3.67712
            ],
            [
              39.20222,
              -4.67677
            ],
            [
              38.74054,
              -5.90895
            ],
            [
              38.79977,
              -6.47566
            ],
            [
              39.44,
              -6.84
            ],
            [
              39.47,
              -7.1
            ],
            [
              39.19469,
              -7.7039
            ],
            [
              39.25203,
              -8.00781
            ],
            [
              39.18652,
              -8.48551
            ],
            [
              39.53574,
              -9.11237
            ],
            [
              39.9496,
              -10.0984
            ],
            [
              40.31659,
              -10.3171
            ],
            [
              39.521,
              -10.89688
            ],
            [
              38.427557,
              -11.285202
            ],
            [
              37.82764,
              -11.26879
            ],
            [
              37.47129,
              -11.56876
            ],
            [
              36.775151,
              -11.594537
            ],
            [
              36.514082,
              -11.720938
            ],
            [
              35.312398,
              -11.439146
            ],
            [
              34.559989,
              -11.52002
            ],
            [
              34.28,
              -10.16
            ],
            [
              33.940838,
              -9.693674
            ],
            [
              33.73972,
              -9.41715
            ],
            [
              32.759375,
              -9.230599
            ],
            [
              32.191865,
              -8.930359
            ],
            [
              31.556348,
              -8.762049
            ],
            [
              31.157751,
              -8.594579
            ],
            [
              30.74,
              -8.34
            ],
            [
              30.2,
              -7.08
            ],
            [
              29.62,
              -6.52
            ],
            [
              29.419993,
              -5.939999
            ],
            [
              29.519987,
              -5.419979
            ],
            [
              29.339998,
              -4.499983
            ],
            [
              29.753512,
              -4.452389
            ],
            [
              30.11632,
              -4.09012
            ],
            [
              30.50554,
              -3.56858
            ],
            [
              30.75224,
              -3.35931
            ],
            [
              30.74301,
              -3.03431
            ],
            [
              30.52766,
              -2.80762
            ],
            [
              30.46967,
              -2.41383
            ],
            [
              30.758309,
              -2.28725
            ],
            [
              30.816135,
              -1.698914
            ],
            [
              30.419105,
              -1.134659
            ],
            [
              30.76986,
              -1.01455
            ],
            [
              31.86617,
              -1.02736
            ],
            [
              33.903711,
              -0.95
            ]
          ]
        ]
      },
      id: "TZA"
    },
    {
      type: "Feature",
      properties: {
        name: "Uganda"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              31.86617,
              -1.02736
            ],
            [
              30.76986,
              -1.01455
            ],
            [
              30.419105,
              -1.134659
            ],
            [
              29.821519,
              -1.443322
            ],
            [
              29.579466,
              -1.341313
            ],
            [
              29.587838,
              -0.587406
            ],
            [
              29.8195,
              -0.2053
            ],
            [
              29.875779,
              0.59738
            ],
            [
              30.086154,
              1.062313
            ],
            [
              30.468508,
              1.583805
            ],
            [
              30.85267,
              1.849396
            ],
            [
              31.174149,
              2.204465
            ],
            [
              30.77332,
              2.33989
            ],
            [
              30.83385,
              3.50917
            ],
            [
              31.24556,
              3.7819
            ],
            [
              31.88145,
              3.55827
            ],
            [
              32.68642,
              3.79232
            ],
            [
              33.39,
              3.79
            ],
            [
              34.005,
              4.249885
            ],
            [
              34.47913,
              3.5556
            ],
            [
              34.59607,
              3.05374
            ],
            [
              35.03599,
              1.90584
            ],
            [
              34.6721,
              1.17694
            ],
            [
              34.18,
              0.515
            ],
            [
              33.893569,
              0.109814
            ],
            [
              33.903711,
              -0.95
            ],
            [
              31.86617,
              -1.02736
            ]
          ]
        ]
      },
      id: "UGA"
    },
    {
      type: "Feature",
      properties: {
        name: "Ukraine"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              31.785998,
              52.101678
            ],
            [
              32.159412,
              52.061267
            ],
            [
              32.412058,
              52.288695
            ],
            [
              32.715761,
              52.238465
            ],
            [
              33.7527,
              52.335075
            ],
            [
              34.391731,
              51.768882
            ],
            [
              34.141978,
              51.566413
            ],
            [
              34.224816,
              51.255993
            ],
            [
              35.022183,
              51.207572
            ],
            [
              35.377924,
              50.773955
            ],
            [
              35.356116,
              50.577197
            ],
            [
              36.626168,
              50.225591
            ],
            [
              37.39346,
              50.383953
            ],
            [
              38.010631,
              49.915662
            ],
            [
              38.594988,
              49.926462
            ],
            [
              40.069058,
              49.601055
            ],
            [
              40.080789,
              49.30743
            ],
            [
              39.674664,
              48.783818
            ],
            [
              39.895632,
              48.232405
            ],
            [
              39.738278,
              47.898937
            ],
            [
              38.770585,
              47.825608
            ],
            [
              38.255112,
              47.5464
            ],
            [
              38.223538,
              47.10219
            ],
            [
              37.425137,
              47.022221
            ],
            [
              36.759855,
              46.6987
            ],
            [
              35.823685,
              46.645964
            ],
            [
              34.962342,
              46.273197
            ],
            [
              35.020788,
              45.651219
            ],
            [
              35.510009,
              45.409993
            ],
            [
              36.529998,
              45.46999
            ],
            [
              36.334713,
              45.113216
            ],
            [
              35.239999,
              44.939996
            ],
            [
              33.882511,
              44.361479
            ],
            [
              33.326421,
              44.564877
            ],
            [
              33.546924,
              45.034771
            ],
            [
              32.454174,
              45.327466
            ],
            [
              32.630804,
              45.519186
            ],
            [
              33.588162,
              45.851569
            ],
            [
              33.298567,
              46.080598
            ],
            [
              31.74414,
              46.333348
            ],
            [
              31.675307,
              46.706245
            ],
            [
              30.748749,
              46.5831
            ],
            [
              30.377609,
              46.03241
            ],
            [
              29.603289,
              45.293308
            ],
            [
              29.149725,
              45.464925
            ],
            [
              28.679779,
              45.304031
            ],
            [
              28.233554,
              45.488283
            ],
            [
              28.485269,
              45.596907
            ],
            [
              28.659987,
              45.939987
            ],
            [
              28.933717,
              46.25883
            ],
            [
              28.862972,
              46.437889
            ],
            [
              29.072107,
              46.517678
            ],
            [
              29.170654,
              46.379262
            ],
            [
              29.759972,
              46.349988
            ],
            [
              30.024659,
              46.423937
            ],
            [
              29.83821,
              46.525326
            ],
            [
              29.908852,
              46.674361
            ],
            [
              29.559674,
              46.928583
            ],
            [
              29.415135,
              47.346645
            ],
            [
              29.050868,
              47.510227
            ],
            [
              29.122698,
              47.849095
            ],
            [
              28.670891,
              48.118149
            ],
            [
              28.259547,
              48.155562
            ],
            [
              27.522537,
              48.467119
            ],
            [
              26.857824,
              48.368211
            ],
            [
              26.619337,
              48.220726
            ],
            [
              26.19745,
              48.220881
            ],
            [
              25.945941,
              47.987149
            ],
            [
              25.207743,
              47.891056
            ],
            [
              24.866317,
              47.737526
            ],
            [
              24.402056,
              47.981878
            ],
            [
              23.760958,
              47.985598
            ],
            [
              23.142236,
              48.096341
            ],
            [
              22.710531,
              47.882194
            ],
            [
              22.64082,
              48.15024
            ],
            [
              22.085608,
              48.422264
            ],
            [
              22.280842,
              48.825392
            ],
            [
              22.558138,
              49.085738
            ],
            [
              22.776419,
              49.027395
            ],
            [
              22.51845,
              49.476774
            ],
            [
              23.426508,
              50.308506
            ],
            [
              23.922757,
              50.424881
            ],
            [
              24.029986,
              50.705407
            ],
            [
              23.527071,
              51.578454
            ],
            [
              24.005078,
              51.617444
            ],
            [
              24.553106,
              51.888461
            ],
            [
              25.327788,
              51.910656
            ],
            [
              26.337959,
              51.832289
            ],
            [
              27.454066,
              51.592303
            ],
            [
              28.241615,
              51.572227
            ],
            [
              28.617613,
              51.427714
            ],
            [
              28.992835,
              51.602044
            ],
            [
              29.254938,
              51.368234
            ],
            [
              30.157364,
              51.416138
            ],
            [
              30.555117,
              51.319503
            ],
            [
              30.619454,
              51.822806
            ],
            [
              30.927549,
              52.042353
            ],
            [
              31.785998,
              52.101678
            ]
          ]
        ]
      },
      id: "UKR"
    },
    {
      type: "Feature",
      properties: {
        name: "Uruguay"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -57.625133,
              -30.216295
            ],
            [
              -56.976026,
              -30.109686
            ],
            [
              -55.973245,
              -30.883076
            ],
            [
              -55.60151,
              -30.853879
            ],
            [
              -54.572452,
              -31.494511
            ],
            [
              -53.787952,
              -32.047243
            ],
            [
              -53.209589,
              -32.727666
            ],
            [
              -53.650544,
              -33.202004
            ],
            [
              -53.373662,
              -33.768378
            ],
            [
              -53.806426,
              -34.396815
            ],
            [
              -54.935866,
              -34.952647
            ],
            [
              -55.67409,
              -34.752659
            ],
            [
              -56.215297,
              -34.859836
            ],
            [
              -57.139685,
              -34.430456
            ],
            [
              -57.817861,
              -34.462547
            ],
            [
              -58.427074,
              -33.909454
            ],
            [
              -58.349611,
              -33.263189
            ],
            [
              -58.132648,
              -33.040567
            ],
            [
              -58.14244,
              -32.044504
            ],
            [
              -57.874937,
              -31.016556
            ],
            [
              -57.625133,
              -30.216295
            ]
          ]
        ]
      },
      id: "URY"
    },
    {
      type: "Feature",
      properties: {
        name: "USA"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                -155.54211,
                19.08348
              ],
              [
                -155.68817,
                18.91619
              ],
              [
                -155.93665,
                19.05939
              ],
              [
                -155.90806,
                19.33888
              ],
              [
                -156.07347,
                19.70294
              ],
              [
                -156.02368,
                19.81422
              ],
              [
                -155.85008,
                19.97729
              ],
              [
                -155.91907,
                20.17395
              ],
              [
                -155.86108,
                20.26721
              ],
              [
                -155.78505,
                20.2487
              ],
              [
                -155.40214,
                20.07975
              ],
              [
                -155.22452,
                19.99302
              ],
              [
                -155.06226,
                19.8591
              ],
              [
                -154.80741,
                19.50871
              ],
              [
                -154.83147,
                19.45328
              ],
              [
                -155.22217,
                19.23972
              ],
              [
                -155.54211,
                19.08348
              ]
            ]
          ],
          [
            [
              [
                -156.07926,
                20.64397
              ],
              [
                -156.41445,
                20.57241
              ],
              [
                -156.58673,
                20.783
              ],
              [
                -156.70167,
                20.8643
              ],
              [
                -156.71055,
                20.92676
              ],
              [
                -156.61258,
                21.01249
              ],
              [
                -156.25711,
                20.91745
              ],
              [
                -155.99566,
                20.76404
              ],
              [
                -156.07926,
                20.64397
              ]
            ]
          ],
          [
            [
              [
                -156.75824,
                21.17684
              ],
              [
                -156.78933,
                21.06873
              ],
              [
                -157.32521,
                21.09777
              ],
              [
                -157.25027,
                21.21958
              ],
              [
                -156.75824,
                21.17684
              ]
            ]
          ],
          [
            [
              [
                -157.65283,
                21.32217
              ],
              [
                -157.70703,
                21.26442
              ],
              [
                -157.7786,
                21.27729
              ],
              [
                -158.12667,
                21.31244
              ],
              [
                -158.2538,
                21.53919
              ],
              [
                -158.29265,
                21.57912
              ],
              [
                -158.0252,
                21.71696
              ],
              [
                -157.94161,
                21.65272
              ],
              [
                -157.65283,
                21.32217
              ]
            ]
          ],
          [
            [
              [
                -159.34512,
                21.982
              ],
              [
                -159.46372,
                21.88299
              ],
              [
                -159.80051,
                22.06533
              ],
              [
                -159.74877,
                22.1382
              ],
              [
                -159.5962,
                22.23618
              ],
              [
                -159.36569,
                22.21494
              ],
              [
                -159.34512,
                21.982
              ]
            ]
          ],
          [
            [
              [
                -94.81758,
                49.38905
              ],
              [
                -94.64,
                48.84
              ],
              [
                -94.32914,
                48.67074
              ],
              [
                -93.63087,
                48.60926
              ],
              [
                -92.61,
                48.45
              ],
              [
                -91.64,
                48.14
              ],
              [
                -90.83,
                48.27
              ],
              [
                -89.6,
                48.01
              ],
              [
                -89.272917,
                48.019808
              ],
              [
                -88.378114,
                48.302918
              ],
              [
                -87.439793,
                47.94
              ],
              [
                -86.461991,
                47.553338
              ],
              [
                -85.652363,
                47.220219
              ],
              [
                -84.87608,
                46.900083
              ],
              [
                -84.779238,
                46.637102
              ],
              [
                -84.543749,
                46.538684
              ],
              [
                -84.6049,
                46.4396
              ],
              [
                -84.3367,
                46.40877
              ],
              [
                -84.14212,
                46.512226
              ],
              [
                -84.091851,
                46.275419
              ],
              [
                -83.890765,
                46.116927
              ],
              [
                -83.616131,
                46.116927
              ],
              [
                -83.469551,
                45.994686
              ],
              [
                -83.592851,
                45.816894
              ],
              [
                -82.550925,
                45.347517
              ],
              [
                -82.337763,
                44.44
              ],
              [
                -82.137642,
                43.571088
              ],
              [
                -82.43,
                42.98
              ],
              [
                -82.9,
                42.43
              ],
              [
                -83.12,
                42.08
              ],
              [
                -83.142,
                41.975681
              ],
              [
                -83.02981,
                41.832796
              ],
              [
                -82.690089,
                41.675105
              ],
              [
                -82.439278,
                41.675105
              ],
              [
                -81.277747,
                42.209026
              ],
              [
                -80.247448,
                42.3662
              ],
              [
                -78.939362,
                42.863611
              ],
              [
                -78.92,
                42.965
              ],
              [
                -79.01,
                43.27
              ],
              [
                -79.171674,
                43.466339
              ],
              [
                -78.72028,
                43.625089
              ],
              [
                -77.737885,
                43.629056
              ],
              [
                -76.820034,
                43.628784
              ],
              [
                -76.5,
                44.018459
              ],
              [
                -76.375,
                44.09631
              ],
              [
                -75.31821,
                44.81645
              ],
              [
                -74.867,
                45.00048
              ],
              [
                -73.34783,
                45.00738
              ],
              [
                -71.50506,
                45.0082
              ],
              [
                -71.405,
                45.255
              ],
              [
                -71.08482,
                45.30524
              ],
              [
                -70.66,
                45.46
              ],
              [
                -70.305,
                45.915
              ],
              [
                -69.99997,
                46.69307
              ],
              [
                -69.237216,
                47.447781
              ],
              [
                -68.905,
                47.185
              ],
              [
                -68.23444,
                47.35486
              ],
              [
                -67.79046,
                47.06636
              ],
              [
                -67.79134,
                45.70281
              ],
              [
                -67.13741,
                45.13753
              ],
              [
                -66.96466,
                44.8097
              ],
              [
                -68.03252,
                44.3252
              ],
              [
                -69.06,
                43.98
              ],
              [
                -70.11617,
                43.68405
              ],
              [
                -70.645476,
                43.090238
              ],
              [
                -70.81489,
                42.8653
              ],
              [
                -70.825,
                42.335
              ],
              [
                -70.495,
                41.805
              ],
              [
                -70.08,
                41.78
              ],
              [
                -70.185,
                42.145
              ],
              [
                -69.88497,
                41.92283
              ],
              [
                -69.96503,
                41.63717
              ],
              [
                -70.64,
                41.475
              ],
              [
                -71.12039,
                41.49445
              ],
              [
                -71.86,
                41.32
              ],
              [
                -72.295,
                41.27
              ],
              [
                -72.87643,
                41.22065
              ],
              [
                -73.71,
                40.931102
              ],
              [
                -72.24126,
                41.11948
              ],
              [
                -71.945,
                40.93
              ],
              [
                -73.345,
                40.63
              ],
              [
                -73.982,
                40.628
              ],
              [
                -73.952325,
                40.75075
              ],
              [
                -74.25671,
                40.47351
              ],
              [
                -73.96244,
                40.42763
              ],
              [
                -74.17838,
                39.70926
              ],
              [
                -74.90604,
                38.93954
              ],
              [
                -74.98041,
                39.1964
              ],
              [
                -75.20002,
                39.24845
              ],
              [
                -75.52805,
                39.4985
              ],
              [
                -75.32,
                38.96
              ],
              [
                -75.071835,
                38.782032
              ],
              [
                -75.05673,
                38.40412
              ],
              [
                -75.37747,
                38.01551
              ],
              [
                -75.94023,
                37.21689
              ],
              [
                -76.03127,
                37.2566
              ],
              [
                -75.72205,
                37.93705
              ],
              [
                -76.23287,
                38.319215
              ],
              [
                -76.35,
                39.15
              ],
              [
                -76.542725,
                38.717615
              ],
              [
                -76.32933,
                38.08326
              ],
              [
                -76.989998,
                38.239992
              ],
              [
                -76.30162,
                37.917945
              ],
              [
                -76.25874,
                36.9664
              ],
              [
                -75.9718,
                36.89726
              ],
              [
                -75.86804,
                36.55125
              ],
              [
                -75.72749,
                35.55074
              ],
              [
                -76.36318,
                34.80854
              ],
              [
                -77.397635,
                34.51201
              ],
              [
                -78.05496,
                33.92547
              ],
              [
                -78.55435,
                33.86133
              ],
              [
                -79.06067,
                33.49395
              ],
              [
                -79.20357,
                33.15839
              ],
              [
                -80.301325,
                32.509355
              ],
              [
                -80.86498,
                32.0333
              ],
              [
                -81.33629,
                31.44049
              ],
              [
                -81.49042,
                30.72999
              ],
              [
                -81.31371,
                30.03552
              ],
              [
                -80.98,
                29.18
              ],
              [
                -80.535585,
                28.47213
              ],
              [
                -80.53,
                28.04
              ],
              [
                -80.056539,
                26.88
              ],
              [
                -80.088015,
                26.205765
              ],
              [
                -80.13156,
                25.816775
              ],
              [
                -80.38103,
                25.20616
              ],
              [
                -80.68,
                25.08
              ],
              [
                -81.17213,
                25.20126
              ],
              [
                -81.33,
                25.64
              ],
              [
                -81.71,
                25.87
              ],
              [
                -82.24,
                26.73
              ],
              [
                -82.70515,
                27.49504
              ],
              [
                -82.85526,
                27.88624
              ],
              [
                -82.65,
                28.55
              ],
              [
                -82.93,
                29.1
              ],
              [
                -83.70959,
                29.93656
              ],
              [
                -84.1,
                30.09
              ],
              [
                -85.10882,
                29.63615
              ],
              [
                -85.28784,
                29.68612
              ],
              [
                -85.7731,
                30.15261
              ],
              [
                -86.4,
                30.4
              ],
              [
                -87.53036,
                30.27433
              ],
              [
                -88.41782,
                30.3849
              ],
              [
                -89.18049,
                30.31598
              ],
              [
                -89.593831,
                30.159994
              ],
              [
                -89.413735,
                29.89419
              ],
              [
                -89.43,
                29.48864
              ],
              [
                -89.21767,
                29.29108
              ],
              [
                -89.40823,
                29.15961
              ],
              [
                -89.77928,
                29.30714
              ],
              [
                -90.15463,
                29.11743
              ],
              [
                -90.880225,
                29.148535
              ],
              [
                -91.626785,
                29.677
              ],
              [
                -92.49906,
                29.5523
              ],
              [
                -93.22637,
                29.78375
              ],
              [
                -93.84842,
                29.71363
              ],
              [
                -94.69,
                29.48
              ],
              [
                -95.60026,
                28.73863
              ],
              [
                -96.59404,
                28.30748
              ],
              [
                -97.14,
                27.83
              ],
              [
                -97.37,
                27.38
              ],
              [
                -97.38,
                26.69
              ],
              [
                -97.33,
                26.21
              ],
              [
                -97.14,
                25.87
              ],
              [
                -97.53,
                25.84
              ],
              [
                -98.24,
                26.06
              ],
              [
                -99.02,
                26.37
              ],
              [
                -99.3,
                26.84
              ],
              [
                -99.52,
                27.54
              ],
              [
                -100.11,
                28.11
              ],
              [
                -100.45584,
                28.69612
              ],
              [
                -100.9576,
                29.38071
              ],
              [
                -101.6624,
                29.7793
              ],
              [
                -102.48,
                29.76
              ],
              [
                -103.11,
                28.97
              ],
              [
                -103.94,
                29.27
              ],
              [
                -104.45697,
                29.57196
              ],
              [
                -104.70575,
                30.12173
              ],
              [
                -105.03737,
                30.64402
              ],
              [
                -105.63159,
                31.08383
              ],
              [
                -106.1429,
                31.39995
              ],
              [
                -106.50759,
                31.75452
              ],
              [
                -108.24,
                31.754854
              ],
              [
                -108.24194,
                31.34222
              ],
              [
                -109.035,
                31.34194
              ],
              [
                -111.02361,
                31.33472
              ],
              [
                -113.30498,
                32.03914
              ],
              [
                -114.815,
                32.52528
              ],
              [
                -114.72139,
                32.72083
              ],
              [
                -115.99135,
                32.61239
              ],
              [
                -117.12776,
                32.53534
              ],
              [
                -117.295938,
                33.046225
              ],
              [
                -117.944,
                33.621236
              ],
              [
                -118.410602,
                33.740909
              ],
              [
                -118.519895,
                34.027782
              ],
              [
                -119.081,
                34.078
              ],
              [
                -119.438841,
                34.348477
              ],
              [
                -120.36778,
                34.44711
              ],
              [
                -120.62286,
                34.60855
              ],
              [
                -120.74433,
                35.15686
              ],
              [
                -121.71457,
                36.16153
              ],
              [
                -122.54747,
                37.55176
              ],
              [
                -122.51201,
                37.78339
              ],
              [
                -122.95319,
                38.11371
              ],
              [
                -123.7272,
                38.95166
              ],
              [
                -123.86517,
                39.76699
              ],
              [
                -124.39807,
                40.3132
              ],
              [
                -124.17886,
                41.14202
              ],
              [
                -124.2137,
                41.99964
              ],
              [
                -124.53284,
                42.76599
              ],
              [
                -124.14214,
                43.70838
              ],
              [
                -124.020535,
                44.615895
              ],
              [
                -123.89893,
                45.52341
              ],
              [
                -124.079635,
                46.86475
              ],
              [
                -124.39567,
                47.72017
              ],
              [
                -124.68721,
                48.184433
              ],
              [
                -124.566101,
                48.379715
              ],
              [
                -123.12,
                48.04
              ],
              [
                -122.58736,
                47.096
              ],
              [
                -122.34,
                47.36
              ],
              [
                -122.5,
                48.18
              ],
              [
                -122.84,
                49
              ],
              [
                -120,
                49
              ],
              [
                -117.03121,
                49
              ],
              [
                -116.04818,
                49
              ],
              [
                -113,
                49
              ],
              [
                -110.05,
                49
              ],
              [
                -107.05,
                49
              ],
              [
                -104.04826,
                48.99986
              ],
              [
                -100.65,
                49
              ],
              [
                -97.22872,
                49.0007
              ],
              [
                -95.15907,
                49
              ],
              [
                -95.15609,
                49.38425
              ],
              [
                -94.81758,
                49.38905
              ]
            ]
          ],
          [
            [
              [
                -153.006314,
                57.115842
              ],
              [
                -154.00509,
                56.734677
              ],
              [
                -154.516403,
                56.992749
              ],
              [
                -154.670993,
                57.461196
              ],
              [
                -153.76278,
                57.816575
              ],
              [
                -153.228729,
                57.968968
              ],
              [
                -152.564791,
                57.901427
              ],
              [
                -152.141147,
                57.591059
              ],
              [
                -153.006314,
                57.115842
              ]
            ]
          ],
          [
            [
              [
                -165.579164,
                59.909987
              ],
              [
                -166.19277,
                59.754441
              ],
              [
                -166.848337,
                59.941406
              ],
              [
                -167.455277,
                60.213069
              ],
              [
                -166.467792,
                60.38417
              ],
              [
                -165.67443,
                60.293607
              ],
              [
                -165.579164,
                59.909987
              ]
            ]
          ],
          [
            [
              [
                -171.731657,
                63.782515
              ],
              [
                -171.114434,
                63.592191
              ],
              [
                -170.491112,
                63.694975
              ],
              [
                -169.682505,
                63.431116
              ],
              [
                -168.689439,
                63.297506
              ],
              [
                -168.771941,
                63.188598
              ],
              [
                -169.52944,
                62.976931
              ],
              [
                -170.290556,
                63.194438
              ],
              [
                -170.671386,
                63.375822
              ],
              [
                -171.553063,
                63.317789
              ],
              [
                -171.791111,
                63.405846
              ],
              [
                -171.731657,
                63.782515
              ]
            ]
          ],
          [
            [
              [
                -155.06779,
                71.147776
              ],
              [
                -154.344165,
                70.696409
              ],
              [
                -153.900006,
                70.889989
              ],
              [
                -152.210006,
                70.829992
              ],
              [
                -152.270002,
                70.600006
              ],
              [
                -150.739992,
                70.430017
              ],
              [
                -149.720003,
                70.53001
              ],
              [
                -147.613362,
                70.214035
              ],
              [
                -145.68999,
                70.12001
              ],
              [
                -144.920011,
                69.989992
              ],
              [
                -143.589446,
                70.152514
              ],
              [
                -142.07251,
                69.851938
              ],
              [
                -140.985988,
                69.711998
              ],
              [
                -140.985988,
                69.711998
              ],
              [
                -140.992499,
                66.000029
              ],
              [
                -140.99777,
                60.306397
              ],
              [
                -140.012998,
                60.276838
              ],
              [
                -139.039,
                60.000007
              ],
              [
                -138.34089,
                59.56211
              ],
              [
                -137.4525,
                58.905
              ],
              [
                -136.47972,
                59.46389
              ],
              [
                -135.47583,
                59.78778
              ],
              [
                -134.945,
                59.27056
              ],
              [
                -134.27111,
                58.86111
              ],
              [
                -133.355549,
                58.410285
              ],
              [
                -132.73042,
                57.69289
              ],
              [
                -131.70781,
                56.55212
              ],
              [
                -130.00778,
                55.91583
              ],
              [
                -129.979994,
                55.284998
              ],
              [
                -130.53611,
                54.802753
              ],
              [
                -131.085818,
                55.178906
              ],
              [
                -131.967211,
                55.497776
              ],
              [
                -132.250011,
                56.369996
              ],
              [
                -133.539181,
                57.178887
              ],
              [
                -134.078063,
                58.123068
              ],
              [
                -135.038211,
                58.187715
              ],
              [
                -136.628062,
                58.212209
              ],
              [
                -137.800006,
                58.499995
              ],
              [
                -139.867787,
                59.537762
              ],
              [
                -140.825274,
                59.727517
              ],
              [
                -142.574444,
                60.084447
              ],
              [
                -143.958881,
                59.99918
              ],
              [
                -145.925557,
                60.45861
              ],
              [
                -147.114374,
                60.884656
              ],
              [
                -148.224306,
                60.672989
              ],
              [
                -148.018066,
                59.978329
              ],
              [
                -148.570823,
                59.914173
              ],
              [
                -149.727858,
                59.705658
              ],
              [
                -150.608243,
                59.368211
              ],
              [
                -151.716393,
                59.155821
              ],
              [
                -151.859433,
                59.744984
              ],
              [
                -151.409719,
                60.725803
              ],
              [
                -150.346941,
                61.033588
              ],
              [
                -150.621111,
                61.284425
              ],
              [
                -151.895839,
                60.727198
              ],
              [
                -152.57833,
                60.061657
              ],
              [
                -154.019172,
                59.350279
              ],
              [
                -153.287511,
                58.864728
              ],
              [
                -154.232492,
                58.146374
              ],
              [
                -155.307491,
                57.727795
              ],
              [
                -156.308335,
                57.422774
              ],
              [
                -156.556097,
                56.979985
              ],
              [
                -158.117217,
                56.463608
              ],
              [
                -158.433321,
                55.994154
              ],
              [
                -159.603327,
                55.566686
              ],
              [
                -160.28972,
                55.643581
              ],
              [
                -161.223048,
                55.364735
              ],
              [
                -162.237766,
                55.024187
              ],
              [
                -163.069447,
                54.689737
              ],
              [
                -164.785569,
                54.404173
              ],
              [
                -164.942226,
                54.572225
              ],
              [
                -163.84834,
                55.039431
              ],
              [
                -162.870001,
                55.348043
              ],
              [
                -161.804175,
                55.894986
              ],
              [
                -160.563605,
                56.008055
              ],
              [
                -160.07056,
                56.418055
              ],
              [
                -158.684443,
                57.016675
              ],
              [
                -158.461097,
                57.216921
              ],
              [
                -157.72277,
                57.570001
              ],
              [
                -157.550274,
                58.328326
              ],
              [
                -157.041675,
                58.918885
              ],
              [
                -158.194731,
                58.615802
              ],
              [
                -158.517218,
                58.787781
              ],
              [
                -159.058606,
                58.424186
              ],
              [
                -159.711667,
                58.93139
              ],
              [
                -159.981289,
                58.572549
              ],
              [
                -160.355271,
                59.071123
              ],
              [
                -161.355003,
                58.670838
              ],
              [
                -161.968894,
                58.671665
              ],
              [
                -162.054987,
                59.266925
              ],
              [
                -161.874171,
                59.633621
              ],
              [
                -162.518059,
                59.989724
              ],
              [
                -163.818341,
                59.798056
              ],
              [
                -164.662218,
                60.267484
              ],
              [
                -165.346388,
                60.507496
              ],
              [
                -165.350832,
                61.073895
              ],
              [
                -166.121379,
                61.500019
              ],
              [
                -165.734452,
                62.074997
              ],
              [
                -164.919179,
                62.633076
              ],
              [
                -164.562508,
                63.146378
              ],
              [
                -163.753332,
                63.219449
              ],
              [
                -163.067224,
                63.059459
              ],
              [
                -162.260555,
                63.541936
              ],
              [
                -161.53445,
                63.455817
              ],
              [
                -160.772507,
                63.766108
              ],
              [
                -160.958335,
                64.222799
              ],
              [
                -161.518068,
                64.402788
              ],
              [
                -160.777778,
                64.788604
              ],
              [
                -161.391926,
                64.777235
              ],
              [
                -162.45305,
                64.559445
              ],
              [
                -162.757786,
                64.338605
              ],
              [
                -163.546394,
                64.55916
              ],
              [
                -164.96083,
                64.446945
              ],
              [
                -166.425288,
                64.686672
              ],
              [
                -166.845004,
                65.088896
              ],
              [
                -168.11056,
                65.669997
              ],
              [
                -166.705271,
                66.088318
              ],
              [
                -164.47471,
                66.57666
              ],
              [
                -163.652512,
                66.57666
              ],
              [
                -163.788602,
                66.077207
              ],
              [
                -161.677774,
                66.11612
              ],
              [
                -162.489715,
                66.735565
              ],
              [
                -163.719717,
                67.116395
              ],
              [
                -164.430991,
                67.616338
              ],
              [
                -165.390287,
                68.042772
              ],
              [
                -166.764441,
                68.358877
              ],
              [
                -166.204707,
                68.883031
              ],
              [
                -164.430811,
                68.915535
              ],
              [
                -163.168614,
                69.371115
              ],
              [
                -162.930566,
                69.858062
              ],
              [
                -161.908897,
                70.33333
              ],
              [
                -160.934797,
                70.44769
              ],
              [
                -159.039176,
                70.891642
              ],
              [
                -158.119723,
                70.824721
              ],
              [
                -156.580825,
                71.357764
              ],
              [
                -155.06779,
                71.147776
              ]
            ]
          ]
        ]
      },
      id: "USA"
    },
    {
      type: "Feature",
      properties: {
        name: "Uzbekistan"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              66.518607,
              37.362784
            ],
            [
              66.54615,
              37.974685
            ],
            [
              65.215999,
              38.402695
            ],
            [
              64.170223,
              38.892407
            ],
            [
              63.518015,
              39.363257
            ],
            [
              62.37426,
              40.053886
            ],
            [
              61.882714,
              41.084857
            ],
            [
              61.547179,
              41.26637
            ],
            [
              60.465953,
              41.220327
            ],
            [
              60.083341,
              41.425146
            ],
            [
              59.976422,
              42.223082
            ],
            [
              58.629011,
              42.751551
            ],
            [
              57.78653,
              42.170553
            ],
            [
              56.932215,
              41.826026
            ],
            [
              57.096391,
              41.32231
            ],
            [
              55.968191,
              41.308642
            ],
            [
              55.928917,
              44.995858
            ],
            [
              58.503127,
              45.586804
            ],
            [
              58.689989,
              45.500014
            ],
            [
              60.239972,
              44.784037
            ],
            [
              61.05832,
              44.405817
            ],
            [
              62.0133,
              43.504477
            ],
            [
              63.185787,
              43.650075
            ],
            [
              64.900824,
              43.728081
            ],
            [
              66.098012,
              42.99766
            ],
            [
              66.023392,
              41.994646
            ],
            [
              66.510649,
              41.987644
            ],
            [
              66.714047,
              41.168444
            ],
            [
              67.985856,
              41.135991
            ],
            [
              68.259896,
              40.662325
            ],
            [
              68.632483,
              40.668681
            ],
            [
              69.070027,
              41.384244
            ],
            [
              70.388965,
              42.081308
            ],
            [
              70.962315,
              42.266154
            ],
            [
              71.259248,
              42.167711
            ],
            [
              70.420022,
              41.519998
            ],
            [
              71.157859,
              41.143587
            ],
            [
              71.870115,
              41.3929
            ],
            [
              73.055417,
              40.866033
            ],
            [
              71.774875,
              40.145844
            ],
            [
              71.014198,
              40.244366
            ],
            [
              70.601407,
              40.218527
            ],
            [
              70.45816,
              40.496495
            ],
            [
              70.666622,
              40.960213
            ],
            [
              69.329495,
              40.727824
            ],
            [
              69.011633,
              40.086158
            ],
            [
              68.536416,
              39.533453
            ],
            [
              67.701429,
              39.580478
            ],
            [
              67.44222,
              39.140144
            ],
            [
              68.176025,
              38.901553
            ],
            [
              68.392033,
              38.157025
            ],
            [
              67.83,
              37.144994
            ],
            [
              67.075782,
              37.356144
            ],
            [
              66.518607,
              37.362784
            ]
          ]
        ]
      },
      id: "UZB"
    },
    {
      type: "Feature",
      properties: {
        name: "Venezuela"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              -71.331584,
              11.776284
            ],
            [
              -71.360006,
              11.539994
            ],
            [
              -71.94705,
              11.423282
            ],
            [
              -71.620868,
              10.96946
            ],
            [
              -71.633064,
              10.446494
            ],
            [
              -72.074174,
              9.865651
            ],
            [
              -71.695644,
              9.072263
            ],
            [
              -71.264559,
              9.137195
            ],
            [
              -71.039999,
              9.859993
            ],
            [
              -71.350084,
              10.211935
            ],
            [
              -71.400623,
              10.968969
            ],
            [
              -70.155299,
              11.375482
            ],
            [
              -70.293843,
              11.846822
            ],
            [
              -69.943245,
              12.162307
            ],
            [
              -69.5843,
              11.459611
            ],
            [
              -68.882999,
              11.443385
            ],
            [
              -68.233271,
              10.885744
            ],
            [
              -68.194127,
              10.554653
            ],
            [
              -67.296249,
              10.545868
            ],
            [
              -66.227864,
              10.648627
            ],
            [
              -65.655238,
              10.200799
            ],
            [
              -64.890452,
              10.077215
            ],
            [
              -64.329479,
              10.389599
            ],
            [
              -64.318007,
              10.641418
            ],
            [
              -63.079322,
              10.701724
            ],
            [
              -61.880946,
              10.715625
            ],
            [
              -62.730119,
              10.420269
            ],
            [
              -62.388512,
              9.948204
            ],
            [
              -61.588767,
              9.873067
            ],
            [
              -60.830597,
              9.38134
            ],
            [
              -60.671252,
              8.580174
            ],
            [
              -60.150096,
              8.602757
            ],
            [
              -59.758285,
              8.367035
            ],
            [
              -60.550588,
              7.779603
            ],
            [
              -60.637973,
              7.415
            ],
            [
              -60.295668,
              7.043911
            ],
            [
              -60.543999,
              6.856584
            ],
            [
              -61.159336,
              6.696077
            ],
            [
              -61.139415,
              6.234297
            ],
            [
              -61.410303,
              5.959068
            ],
            [
              -60.733574,
              5.200277
            ],
            [
              -60.601179,
              4.918098
            ],
            [
              -60.966893,
              4.536468
            ],
            [
              -62.08543,
              4.162124
            ],
            [
              -62.804533,
              4.006965
            ],
            [
              -63.093198,
              3.770571
            ],
            [
              -63.888343,
              4.02053
            ],
            [
              -64.628659,
              4.148481
            ],
            [
              -64.816064,
              4.056445
            ],
            [
              -64.368494,
              3.79721
            ],
            [
              -64.408828,
              3.126786
            ],
            [
              -64.269999,
              2.497006
            ],
            [
              -63.422867,
              2.411068
            ],
            [
              -63.368788,
              2.2009
            ],
            [
              -64.083085,
              1.916369
            ],
            [
              -64.199306,
              1.492855
            ],
            [
              -64.611012,
              1.328731
            ],
            [
              -65.354713,
              1.095282
            ],
            [
              -65.548267,
              0.789254
            ],
            [
              -66.325765,
              0.724452
            ],
            [
              -66.876326,
              1.253361
            ],
            [
              -67.181294,
              2.250638
            ],
            [
              -67.447092,
              2.600281
            ],
            [
              -67.809938,
              2.820655
            ],
            [
              -67.303173,
              3.318454
            ],
            [
              -67.337564,
              3.542342
            ],
            [
              -67.621836,
              3.839482
            ],
            [
              -67.823012,
              4.503937
            ],
            [
              -67.744697,
              5.221129
            ],
            [
              -67.521532,
              5.55687
            ],
            [
              -67.34144,
              6.095468
            ],
            [
              -67.695087,
              6.267318
            ],
            [
              -68.265052,
              6.153268
            ],
            [
              -68.985319,
              6.206805
            ],
            [
              -69.38948,
              6.099861
            ],
            [
              -70.093313,
              6.960376
            ],
            [
              -70.674234,
              7.087785
            ],
            [
              -71.960176,
              6.991615
            ],
            [
              -72.198352,
              7.340431
            ],
            [
              -72.444487,
              7.423785
            ],
            [
              -72.479679,
              7.632506
            ],
            [
              -72.360901,
              8.002638
            ],
            [
              -72.439862,
              8.405275
            ],
            [
              -72.660495,
              8.625288
            ],
            [
              -72.78873,
              9.085027
            ],
            [
              -73.304952,
              9.152
            ],
            [
              -73.027604,
              9.73677
            ],
            [
              -72.905286,
              10.450344
            ],
            [
              -72.614658,
              10.821975
            ],
            [
              -72.227575,
              11.108702
            ],
            [
              -71.973922,
              11.608672
            ],
            [
              -71.331584,
              11.776284
            ]
          ]
        ]
      },
      id: "VEN"
    },
    {
      type: "Feature",
      properties: {
        name: "Vietnam"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              108.05018,
              21.55238
            ],
            [
              106.715068,
              20.696851
            ],
            [
              105.881682,
              19.75205
            ],
            [
              105.662006,
              19.058165
            ],
            [
              106.426817,
              18.004121
            ],
            [
              107.361954,
              16.697457
            ],
            [
              108.269495,
              16.079742
            ],
            [
              108.877107,
              15.276691
            ],
            [
              109.33527,
              13.426028
            ],
            [
              109.200136,
              11.666859
            ],
            [
              108.36613,
              11.008321
            ],
            [
              107.220929,
              10.364484
            ],
            [
              106.405113,
              9.53084
            ],
            [
              105.158264,
              8.59976
            ],
            [
              104.795185,
              9.241038
            ],
            [
              105.076202,
              9.918491
            ],
            [
              104.334335,
              10.486544
            ],
            [
              105.199915,
              10.88931
            ],
            [
              106.24967,
              10.961812
            ],
            [
              105.810524,
              11.567615
            ],
            [
              107.491403,
              12.337206
            ],
            [
              107.614548,
              13.535531
            ],
            [
              107.382727,
              14.202441
            ],
            [
              107.564525,
              15.202173
            ],
            [
              107.312706,
              15.908538
            ],
            [
              106.556008,
              16.604284
            ],
            [
              105.925762,
              17.485315
            ],
            [
              105.094598,
              18.666975
            ],
            [
              103.896532,
              19.265181
            ],
            [
              104.183388,
              19.624668
            ],
            [
              104.822574,
              19.886642
            ],
            [
              104.435,
              20.758733
            ],
            [
              103.203861,
              20.766562
            ],
            [
              102.754896,
              21.675137
            ],
            [
              102.170436,
              22.464753
            ],
            [
              102.706992,
              22.708795
            ],
            [
              103.504515,
              22.703757
            ],
            [
              104.476858,
              22.81915
            ],
            [
              105.329209,
              23.352063
            ],
            [
              105.811247,
              22.976892
            ],
            [
              106.725403,
              22.794268
            ],
            [
              106.567273,
              22.218205
            ],
            [
              107.04342,
              21.811899
            ],
            [
              108.05018,
              21.55238
            ]
          ]
        ]
      },
      id: "VNM"
    },
    {
      type: "Feature",
      properties: {
        name: "Vanuatu"
      },
      geometry: {
        type: "MultiPolygon",
        coordinates: [
          [
            [
              [
                167.844877,
                -16.466333
              ],
              [
                167.515181,
                -16.59785
              ],
              [
                167.180008,
                -16.159995
              ],
              [
                167.216801,
                -15.891846
              ],
              [
                167.844877,
                -16.466333
              ]
            ]
          ],
          [
            [
              [
                167.107712,
                -14.93392
              ],
              [
                167.270028,
                -15.740021
              ],
              [
                167.001207,
                -15.614602
              ],
              [
                166.793158,
                -15.668811
              ],
              [
                166.649859,
                -15.392704
              ],
              [
                166.629137,
                -14.626497
              ],
              [
                167.107712,
                -14.93392
              ]
            ]
          ]
        ]
      },
      id: "VUT"
    },
    {
      type: "Feature",
      properties: {
        name: "West Bank"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              35.545665,
              32.393992
            ],
            [
              35.545252,
              31.782505
            ],
            [
              35.397561,
              31.489086
            ],
            [
              34.927408,
              31.353435
            ],
            [
              34.970507,
              31.616778
            ],
            [
              35.225892,
              31.754341
            ],
            [
              34.974641,
              31.866582
            ],
            [
              35.18393,
              32.532511
            ],
            [
              35.545665,
              32.393992
            ]
          ]
        ]
      },
      id: "PSE"
    },
    {
      type: "Feature",
      properties: {
        name: "Yemen"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              53.108573,
              16.651051
            ],
            [
              52.385206,
              16.382411
            ],
            [
              52.191729,
              15.938433
            ],
            [
              52.168165,
              15.59742
            ],
            [
              51.172515,
              15.17525
            ],
            [
              49.574576,
              14.708767
            ],
            [
              48.679231,
              14.003202
            ],
            [
              48.238947,
              13.94809
            ],
            [
              47.938914,
              14.007233
            ],
            [
              47.354454,
              13.59222
            ],
            [
              46.717076,
              13.399699
            ],
            [
              45.877593,
              13.347764
            ],
            [
              45.62505,
              13.290946
            ],
            [
              45.406459,
              13.026905
            ],
            [
              45.144356,
              12.953938
            ],
            [
              44.989533,
              12.699587
            ],
            [
              44.494576,
              12.721653
            ],
            [
              44.175113,
              12.58595
            ],
            [
              43.482959,
              12.6368
            ],
            [
              43.222871,
              13.22095
            ],
            [
              43.251448,
              13.767584
            ],
            [
              43.087944,
              14.06263
            ],
            [
              42.892245,
              14.802249
            ],
            [
              42.604873,
              15.213335
            ],
            [
              42.805015,
              15.261963
            ],
            [
              42.702438,
              15.718886
            ],
            [
              42.823671,
              15.911742
            ],
            [
              42.779332,
              16.347891
            ],
            [
              43.218375,
              16.66689
            ],
            [
              43.115798,
              17.08844
            ],
            [
              43.380794,
              17.579987
            ],
            [
              43.791519,
              17.319977
            ],
            [
              44.062613,
              17.410359
            ],
            [
              45.216651,
              17.433329
            ],
            [
              45.399999,
              17.333335
            ],
            [
              46.366659,
              17.233315
            ],
            [
              46.749994,
              17.283338
            ],
            [
              47.000005,
              16.949999
            ],
            [
              47.466695,
              17.116682
            ],
            [
              48.183344,
              18.166669
            ],
            [
              49.116672,
              18.616668
            ],
            [
              52.00001,
              19.000003
            ],
            [
              52.782184,
              17.349742
            ],
            [
              53.108573,
              16.651051
            ]
          ]
        ]
      },
      id: "YEM"
    },
    {
      type: "Feature",
      properties: {
        name: "South Africa"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              31.521001,
              -29.257387
            ],
            [
              31.325561,
              -29.401978
            ],
            [
              30.901763,
              -29.909957
            ],
            [
              30.622813,
              -30.423776
            ],
            [
              30.055716,
              -31.140269
            ],
            [
              28.925553,
              -32.172041
            ],
            [
              28.219756,
              -32.771953
            ],
            [
              27.464608,
              -33.226964
            ],
            [
              26.419452,
              -33.61495
            ],
            [
              25.909664,
              -33.66704
            ],
            [
              25.780628,
              -33.944646
            ],
            [
              25.172862,
              -33.796851
            ],
            [
              24.677853,
              -33.987176
            ],
            [
              23.594043,
              -33.794474
            ],
            [
              22.988189,
              -33.916431
            ],
            [
              22.574157,
              -33.864083
            ],
            [
              21.542799,
              -34.258839
            ],
            [
              20.689053,
              -34.417175
            ],
            [
              20.071261,
              -34.795137
            ],
            [
              19.616405,
              -34.819166
            ],
            [
              19.193278,
              -34.462599
            ],
            [
              18.855315,
              -34.444306
            ],
            [
              18.424643,
              -33.997873
            ],
            [
              18.377411,
              -34.136521
            ],
            [
              18.244499,
              -33.867752
            ],
            [
              18.25008,
              -33.281431
            ],
            [
              17.92519,
              -32.611291
            ],
            [
              18.24791,
              -32.429131
            ],
            [
              18.221762,
              -31.661633
            ],
            [
              17.566918,
              -30.725721
            ],
            [
              17.064416,
              -29.878641
            ],
            [
              17.062918,
              -29.875954
            ],
            [
              16.344977,
              -28.576705
            ],
            [
              16.824017,
              -28.082162
            ],
            [
              17.218929,
              -28.355943
            ],
            [
              17.387497,
              -28.783514
            ],
            [
              17.836152,
              -28.856378
            ],
            [
              18.464899,
              -29.045462
            ],
            [
              19.002127,
              -28.972443
            ],
            [
              19.894734,
              -28.461105
            ],
            [
              19.895768,
              -24.76779
            ],
            [
              20.165726,
              -24.917962
            ],
            [
              20.758609,
              -25.868136
            ],
            [
              20.66647,
              -26.477453
            ],
            [
              20.889609,
              -26.828543
            ],
            [
              21.605896,
              -26.726534
            ],
            [
              22.105969,
              -26.280256
            ],
            [
              22.579532,
              -25.979448
            ],
            [
              22.824271,
              -25.500459
            ],
            [
              23.312097,
              -25.26869
            ],
            [
              23.73357,
              -25.390129
            ],
            [
              24.211267,
              -25.670216
            ],
            [
              25.025171,
              -25.71967
            ],
            [
              25.664666,
              -25.486816
            ],
            [
              25.765849,
              -25.174845
            ],
            [
              25.941652,
              -24.696373
            ],
            [
              26.485753,
              -24.616327
            ],
            [
              26.786407,
              -24.240691
            ],
            [
              27.11941,
              -23.574323
            ],
            [
              28.017236,
              -22.827754
            ],
            [
              29.432188,
              -22.091313
            ],
            [
              29.839037,
              -22.102216
            ],
            [
              30.322883,
              -22.271612
            ],
            [
              30.659865,
              -22.151567
            ],
            [
              31.191409,
              -22.25151
            ],
            [
              31.670398,
              -23.658969
            ],
            [
              31.930589,
              -24.369417
            ],
            [
              31.752408,
              -25.484284
            ],
            [
              31.837778,
              -25.843332
            ],
            [
              31.333158,
              -25.660191
            ],
            [
              31.04408,
              -25.731452
            ],
            [
              30.949667,
              -26.022649
            ],
            [
              30.676609,
              -26.398078
            ],
            [
              30.685962,
              -26.743845
            ],
            [
              31.282773,
              -27.285879
            ],
            [
              31.86806,
              -27.177927
            ],
            [
              32.071665,
              -26.73382
            ],
            [
              32.83012,
              -26.742192
            ],
            [
              32.580265,
              -27.470158
            ],
            [
              32.462133,
              -28.301011
            ],
            [
              32.203389,
              -28.752405
            ],
            [
              31.521001,
              -29.257387
            ]
          ],
          [
            [
              28.978263,
              -28.955597
            ],
            [
              28.5417,
              -28.647502
            ],
            [
              28.074338,
              -28.851469
            ],
            [
              27.532511,
              -29.242711
            ],
            [
              26.999262,
              -29.875954
            ],
            [
              27.749397,
              -30.645106
            ],
            [
              28.107205,
              -30.545732
            ],
            [
              28.291069,
              -30.226217
            ],
            [
              28.8484,
              -30.070051
            ],
            [
              29.018415,
              -29.743766
            ],
            [
              29.325166,
              -29.257387
            ],
            [
              28.978263,
              -28.955597
            ]
          ]
        ]
      },
      id: "ZAF"
    },
    {
      type: "Feature",
      properties: {
        name: "Zambia"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              32.759375,
              -9.230599
            ],
            [
              33.231388,
              -9.676722
            ],
            [
              33.485688,
              -10.525559
            ],
            [
              33.31531,
              -10.79655
            ],
            [
              33.114289,
              -11.607198
            ],
            [
              33.306422,
              -12.435778
            ],
            [
              32.991764,
              -12.783871
            ],
            [
              32.688165,
              -13.712858
            ],
            [
              33.214025,
              -13.97186
            ],
            [
              30.179481,
              -14.796099
            ],
            [
              30.274256,
              -15.507787
            ],
            [
              29.516834,
              -15.644678
            ],
            [
              28.947463,
              -16.043051
            ],
            [
              28.825869,
              -16.389749
            ],
            [
              28.467906,
              -16.4684
            ],
            [
              27.598243,
              -17.290831
            ],
            [
              27.044427,
              -17.938026
            ],
            [
              26.706773,
              -17.961229
            ],
            [
              26.381935,
              -17.846042
            ],
            [
              25.264226,
              -17.73654
            ],
            [
              25.084443,
              -17.661816
            ],
            [
              25.07695,
              -17.578823
            ],
            [
              24.682349,
              -17.353411
            ],
            [
              24.033862,
              -17.295843
            ],
            [
              23.215048,
              -17.523116
            ],
            [
              22.562478,
              -16.898451
            ],
            [
              21.887843,
              -16.08031
            ],
            [
              21.933886,
              -12.898437
            ],
            [
              24.016137,
              -12.911046
            ],
            [
              23.930922,
              -12.565848
            ],
            [
              24.079905,
              -12.191297
            ],
            [
              23.904154,
              -11.722282
            ],
            [
              24.017894,
              -11.237298
            ],
            [
              23.912215,
              -10.926826
            ],
            [
              24.257155,
              -10.951993
            ],
            [
              24.314516,
              -11.262826
            ],
            [
              24.78317,
              -11.238694
            ],
            [
              25.418118,
              -11.330936
            ],
            [
              25.75231,
              -11.784965
            ],
            [
              26.553088,
              -11.92444
            ],
            [
              27.16442,
              -11.608748
            ],
            [
              27.388799,
              -12.132747
            ],
            [
              28.155109,
              -12.272481
            ],
            [
              28.523562,
              -12.698604
            ],
            [
              28.934286,
              -13.248958
            ],
            [
              29.699614,
              -13.257227
            ],
            [
              29.616001,
              -12.178895
            ],
            [
              29.341548,
              -12.360744
            ],
            [
              28.642417,
              -11.971569
            ],
            [
              28.372253,
              -11.793647
            ],
            [
              28.49607,
              -10.789884
            ],
            [
              28.673682,
              -9.605925
            ],
            [
              28.449871,
              -9.164918
            ],
            [
              28.734867,
              -8.526559
            ],
            [
              29.002912,
              -8.407032
            ],
            [
              30.346086,
              -8.238257
            ],
            [
              30.740015,
              -8.340007
            ],
            [
              31.157751,
              -8.594579
            ],
            [
              31.556348,
              -8.762049
            ],
            [
              32.191865,
              -8.930359
            ],
            [
              32.759375,
              -9.230599
            ]
          ]
        ]
      },
      id: "ZMB"
    },
    {
      type: "Feature",
      properties: {
        name: "Zimbabwe"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              31.191409,
              -22.25151
            ],
            [
              30.659865,
              -22.151567
            ],
            [
              30.322883,
              -22.271612
            ],
            [
              29.839037,
              -22.102216
            ],
            [
              29.432188,
              -22.091313
            ],
            [
              28.794656,
              -21.639454
            ],
            [
              28.02137,
              -21.485975
            ],
            [
              27.727228,
              -20.851802
            ],
            [
              27.724747,
              -20.499059
            ],
            [
              27.296505,
              -20.39152
            ],
            [
              26.164791,
              -19.293086
            ],
            [
              25.850391,
              -18.714413
            ],
            [
              25.649163,
              -18.536026
            ],
            [
              25.264226,
              -17.73654
            ],
            [
              26.381935,
              -17.846042
            ],
            [
              26.706773,
              -17.961229
            ],
            [
              27.044427,
              -17.938026
            ],
            [
              27.598243,
              -17.290831
            ],
            [
              28.467906,
              -16.4684
            ],
            [
              28.825869,
              -16.389749
            ],
            [
              28.947463,
              -16.043051
            ],
            [
              29.516834,
              -15.644678
            ],
            [
              30.274256,
              -15.507787
            ],
            [
              30.338955,
              -15.880839
            ],
            [
              31.173064,
              -15.860944
            ],
            [
              31.636498,
              -16.07199
            ],
            [
              31.852041,
              -16.319417
            ],
            [
              32.328239,
              -16.392074
            ],
            [
              32.847639,
              -16.713398
            ],
            [
              32.849861,
              -17.979057
            ],
            [
              32.654886,
              -18.67209
            ],
            [
              32.611994,
              -19.419383
            ],
            [
              32.772708,
              -19.715592
            ],
            [
              32.659743,
              -20.30429
            ],
            [
              32.508693,
              -20.395292
            ],
            [
              32.244988,
              -21.116489
            ],
            [
              31.191409,
              -22.25151
            ]
          ]
        ]
      },
      id: "ZWE"
    },
    {
      type: "Feature",
      properties: {
        name: "Korea"
      },
      geometry: {
        type: "Polygon",
        coordinates: [
          [
            [
              128.349716,
              38.612243
            ],
            [
              129.21292,
              37.432392
            ],
            [
              129.46045,
              36.784189
            ],
            [
              129.468304,
              35.632141
            ],
            [
              129.091377,
              35.082484
            ],
            [
              128.18585,
              34.890377
            ],
            [
              127.386519,
              34.475674
            ],
            [
              126.485748,
              34.390046
            ],
            [
              126.37392,
              34.93456
            ],
            [
              126.559231,
              35.684541
            ],
            [
              126.117398,
              36.725485
            ],
            [
              126.860143,
              36.893924
            ],
            [
              126.174759,
              37.749686
            ],
            [
              126.237339,
              37.840378
            ],
            [
              126.68372,
              37.804773
            ],
            [
              127.073309,
              38.256115
            ],
            [
              127.780035,
              38.304536
            ],
            [
              128.205746,
              38.370397
            ],
            [
              128.349716,
              38.612243
            ],
            [
              130.640016,
              42.395009
            ],
            [
              130.780007,
              42.220007
            ],
            [
              130.400031,
              42.280004
            ],
            [
              129.965949,
              41.941368
            ],
            [
              129.667362,
              41.601104
            ],
            [
              129.705189,
              40.882828
            ],
            [
              129.188115,
              40.661808
            ],
            [
              129.0104,
              40.485436
            ],
            [
              128.633368,
              40.189847
            ],
            [
              127.967414,
              40.025413
            ],
            [
              127.533436,
              39.75685
            ],
            [
              127.50212,
              39.323931
            ],
            [
              127.385434,
              39.213472
            ],
            [
              127.783343,
              39.050898
            ],
            [
              128.349716,
              38.612243
            ],
            [
              128.205746,
              38.370397
            ],
            [
              127.780035,
              38.304536
            ],
            [
              127.073309,
              38.256115
            ],
            [
              126.68372,
              37.804773
            ],
            [
              126.237339,
              37.840378
            ],
            [
              126.174759,
              37.749686
            ],
            [
              125.689104,
              37.94001
            ],
            [
              125.568439,
              37.752089
            ],
            [
              125.27533,
              37.669071
            ],
            [
              125.240087,
              37.857224
            ],
            [
              124.981033,
              37.948821
            ],
            [
              124.712161,
              38.108346
            ],
            [
              124.985994,
              38.548474
            ],
            [
              125.221949,
              38.665857
            ],
            [
              125.132859,
              38.848559
            ],
            [
              125.38659,
              39.387958
            ],
            [
              125.321116,
              39.551385
            ],
            [
              124.737482,
              39.660344
            ],
            [
              124.265625,
              39.928493
            ],
            [
              125.079942,
              40.569824
            ],
            [
              126.182045,
              41.107336
            ],
            [
              126.869083,
              41.816569
            ],
            [
              127.343783,
              41.503152
            ],
            [
              128.208433,
              41.466772
            ],
            [
              128.052215,
              41.994285
            ],
            [
              129.596669,
              42.424982
            ],
            [
              129.994267,
              42.985387
            ],
            [
              130.640016,
              42.395009
            ]
          ]
        ]
      },
      id: "KOR"
    }
  ];
  var world_countries_default = {
    type,
    features
  };

  // src/components/Map.tsx
  var MapComponent = (props) => {
    return /* @__PURE__ */ import_react55.default.createElement(he, {
      data: props.data,
      features: world_countries_default.features,
      colors: "nivo",
      unknownColor: "#666666",
      label: "properties.name",
      valueFormat: ".2s",
      projectionTranslation: [0.5, 0.5],
      enableGraticule: true,
      graticuleLineColor: "#dddddd",
      borderWidth: 0.5,
      domain: [0, 1e6],
      borderColor: "#152538",
      legends: [
        {
          anchor: "bottom-left",
          direction: "column",
          justify: true,
          translateX: 20,
          translateY: -100,
          itemsSpacing: 0,
          itemWidth: 94,
          itemHeight: 18,
          itemDirection: "left-to-right",
          itemTextColor: "#444444",
          itemOpacity: 0.85,
          symbolSize: 18,
          effects: [
            {
              on: "hover",
              style: {
                itemTextColor: "#000000",
                itemOpacity: 1
              }
            }
          ]
        }
      ]
    });
  };
  var Map2 = () => {
    return /* @__PURE__ */ import_react55.default.createElement(MapComponent, {
      data: []
    });
  };

  // src/components/Bar.tsx
  var import_react59 = __toModule(require_react());

  // ../../node_modules/@nivo/axes/dist/nivo-axes.es.js
  var t7 = __toModule(require_react());
  var import_react56 = __toModule(require_react());

  // ../../node_modules/@nivo/scales/dist/nivo-scales.es.js
  var import_uniq = __toModule(require_uniq());
  var import_uniqBy = __toModule(require_uniqBy());
  var import_sortBy = __toModule(require_sortBy());
  var import_last2 = __toModule(require_last());
  var import_isDate2 = __toModule(require_isDate());

  // ../../node_modules/@nivo/scales/node_modules/d3-time/src/interval.js
  var t02 = new Date();
  var t12 = new Date();
  function newInterval2(floori, offseti, count2, field) {
    function interval(date2) {
      return floori(date2 = arguments.length === 0 ? new Date() : new Date(+date2)), date2;
    }
    interval.floor = function(date2) {
      return floori(date2 = new Date(+date2)), date2;
    };
    interval.ceil = function(date2) {
      return floori(date2 = new Date(date2 - 1)), offseti(date2, 1), floori(date2), date2;
    };
    interval.round = function(date2) {
      var d0 = interval(date2), d1 = interval.ceil(date2);
      return date2 - d0 < d1 - date2 ? d0 : d1;
    };
    interval.offset = function(date2, step) {
      return offseti(date2 = new Date(+date2), step == null ? 1 : Math.floor(step)), date2;
    };
    interval.range = function(start2, stop, step) {
      var range = [], previous;
      start2 = interval.ceil(start2);
      step = step == null ? 1 : Math.floor(step);
      if (!(start2 < stop) || !(step > 0))
        return range;
      do
        range.push(previous = new Date(+start2)), offseti(start2, step), floori(start2);
      while (previous < start2 && start2 < stop);
      return range;
    };
    interval.filter = function(test) {
      return newInterval2(function(date2) {
        if (date2 >= date2)
          while (floori(date2), !test(date2))
            date2.setTime(date2 - 1);
      }, function(date2, step) {
        if (date2 >= date2) {
          if (step < 0)
            while (++step <= 0) {
              while (offseti(date2, -1), !test(date2)) {
              }
            }
          else
            while (--step >= 0) {
              while (offseti(date2, 1), !test(date2)) {
              }
            }
        }
      });
    };
    if (count2) {
      interval.count = function(start2, end) {
        t02.setTime(+start2), t12.setTime(+end);
        floori(t02), floori(t12);
        return Math.floor(count2(t02, t12));
      };
      interval.every = function(step) {
        step = Math.floor(step);
        return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function(d4) {
          return field(d4) % step === 0;
        } : function(d4) {
          return interval.count(0, d4) % step === 0;
        });
      };
    }
    return interval;
  }

  // ../../node_modules/@nivo/scales/node_modules/d3-time/src/millisecond.js
  var millisecond2 = newInterval2(function() {
  }, function(date2, step) {
    date2.setTime(+date2 + step);
  }, function(start2, end) {
    return end - start2;
  });
  millisecond2.every = function(k6) {
    k6 = Math.floor(k6);
    if (!isFinite(k6) || !(k6 > 0))
      return null;
    if (!(k6 > 1))
      return millisecond2;
    return newInterval2(function(date2) {
      date2.setTime(Math.floor(date2 / k6) * k6);
    }, function(date2, step) {
      date2.setTime(+date2 + step * k6);
    }, function(start2, end) {
      return (end - start2) / k6;
    });
  };
  var millisecond_default2 = millisecond2;
  var milliseconds2 = millisecond2.range;

  // ../../node_modules/@nivo/scales/node_modules/d3-time/src/duration.js
  var durationSecond2 = 1e3;
  var durationMinute2 = 6e4;
  var durationHour2 = 36e5;
  var durationWeek2 = 6048e5;

  // ../../node_modules/@nivo/scales/node_modules/d3-time/src/second.js
  var second2 = newInterval2(function(date2) {
    date2.setTime(date2 - date2.getMilliseconds());
  }, function(date2, step) {
    date2.setTime(+date2 + step * durationSecond2);
  }, function(start2, end) {
    return (end - start2) / durationSecond2;
  }, function(date2) {
    return date2.getUTCSeconds();
  });
  var second_default2 = second2;
  var seconds2 = second2.range;

  // ../../node_modules/@nivo/scales/node_modules/d3-time/src/minute.js
  var minute2 = newInterval2(function(date2) {
    date2.setTime(date2 - date2.getMilliseconds() - date2.getSeconds() * durationSecond2);
  }, function(date2, step) {
    date2.setTime(+date2 + step * durationMinute2);
  }, function(start2, end) {
    return (end - start2) / durationMinute2;
  }, function(date2) {
    return date2.getMinutes();
  });
  var minute_default2 = minute2;
  var minutes2 = minute2.range;

  // ../../node_modules/@nivo/scales/node_modules/d3-time/src/hour.js
  var hour2 = newInterval2(function(date2) {
    date2.setTime(date2 - date2.getMilliseconds() - date2.getSeconds() * durationSecond2 - date2.getMinutes() * durationMinute2);
  }, function(date2, step) {
    date2.setTime(+date2 + step * durationHour2);
  }, function(start2, end) {
    return (end - start2) / durationHour2;
  }, function(date2) {
    return date2.getHours();
  });
  var hour_default2 = hour2;
  var hours2 = hour2.range;

  // ../../node_modules/@nivo/scales/node_modules/d3-time/src/week.js
  function weekday2(i9) {
    return newInterval2(function(date2) {
      date2.setDate(date2.getDate() - (date2.getDay() + 7 - i9) % 7);
      date2.setHours(0, 0, 0, 0);
    }, function(date2, step) {
      date2.setDate(date2.getDate() + step * 7);
    }, function(start2, end) {
      return (end - start2 - (end.getTimezoneOffset() - start2.getTimezoneOffset()) * durationMinute2) / durationWeek2;
    });
  }
  var sunday2 = weekday2(0);
  var monday2 = weekday2(1);
  var tuesday2 = weekday2(2);
  var wednesday2 = weekday2(3);
  var thursday2 = weekday2(4);
  var friday2 = weekday2(5);
  var saturday2 = weekday2(6);
  var sundays2 = sunday2.range;
  var mondays2 = monday2.range;
  var tuesdays2 = tuesday2.range;
  var wednesdays2 = wednesday2.range;
  var thursdays2 = thursday2.range;
  var fridays2 = friday2.range;
  var saturdays2 = saturday2.range;

  // ../../node_modules/@nivo/scales/node_modules/d3-time/src/month.js
  var month2 = newInterval2(function(date2) {
    date2.setDate(1);
    date2.setHours(0, 0, 0, 0);
  }, function(date2, step) {
    date2.setMonth(date2.getMonth() + step);
  }, function(start2, end) {
    return end.getMonth() - start2.getMonth() + (end.getFullYear() - start2.getFullYear()) * 12;
  }, function(date2) {
    return date2.getMonth();
  });
  var month_default2 = month2;
  var months2 = month2.range;

  // ../../node_modules/@nivo/scales/node_modules/d3-time/src/year.js
  var year2 = newInterval2(function(date2) {
    date2.setMonth(0, 1);
    date2.setHours(0, 0, 0, 0);
  }, function(date2, step) {
    date2.setFullYear(date2.getFullYear() + step);
  }, function(start2, end) {
    return end.getFullYear() - start2.getFullYear();
  }, function(date2) {
    return date2.getFullYear();
  });
  year2.every = function(k6) {
    return !isFinite(k6 = Math.floor(k6)) || !(k6 > 0) ? null : newInterval2(function(date2) {
      date2.setFullYear(Math.floor(date2.getFullYear() / k6) * k6);
      date2.setMonth(0, 1);
      date2.setHours(0, 0, 0, 0);
    }, function(date2, step) {
      date2.setFullYear(date2.getFullYear() + step * k6);
    });
  };
  var year_default2 = year2;
  var years2 = year2.range;

  // ../../node_modules/@nivo/scales/node_modules/d3-time/src/utcMinute.js
  var utcMinute2 = newInterval2(function(date2) {
    date2.setUTCSeconds(0, 0);
  }, function(date2, step) {
    date2.setTime(+date2 + step * durationMinute2);
  }, function(start2, end) {
    return (end - start2) / durationMinute2;
  }, function(date2) {
    return date2.getUTCMinutes();
  });
  var utcMinute_default2 = utcMinute2;
  var utcMinutes2 = utcMinute2.range;

  // ../../node_modules/@nivo/scales/node_modules/d3-time/src/utcHour.js
  var utcHour2 = newInterval2(function(date2) {
    date2.setUTCMinutes(0, 0, 0);
  }, function(date2, step) {
    date2.setTime(+date2 + step * durationHour2);
  }, function(start2, end) {
    return (end - start2) / durationHour2;
  }, function(date2) {
    return date2.getUTCHours();
  });
  var utcHour_default2 = utcHour2;
  var utcHours2 = utcHour2.range;

  // ../../node_modules/@nivo/scales/node_modules/d3-time/src/utcWeek.js
  function utcWeekday2(i9) {
    return newInterval2(function(date2) {
      date2.setUTCDate(date2.getUTCDate() - (date2.getUTCDay() + 7 - i9) % 7);
      date2.setUTCHours(0, 0, 0, 0);
    }, function(date2, step) {
      date2.setUTCDate(date2.getUTCDate() + step * 7);
    }, function(start2, end) {
      return (end - start2) / durationWeek2;
    });
  }
  var utcSunday2 = utcWeekday2(0);
  var utcMonday2 = utcWeekday2(1);
  var utcTuesday2 = utcWeekday2(2);
  var utcWednesday2 = utcWeekday2(3);
  var utcThursday2 = utcWeekday2(4);
  var utcFriday2 = utcWeekday2(5);
  var utcSaturday2 = utcWeekday2(6);
  var utcSundays2 = utcSunday2.range;
  var utcMondays2 = utcMonday2.range;
  var utcTuesdays2 = utcTuesday2.range;
  var utcWednesdays2 = utcWednesday2.range;
  var utcThursdays2 = utcThursday2.range;
  var utcFridays2 = utcFriday2.range;
  var utcSaturdays2 = utcSaturday2.range;

  // ../../node_modules/@nivo/scales/node_modules/d3-time/src/utcMonth.js
  var utcMonth2 = newInterval2(function(date2) {
    date2.setUTCDate(1);
    date2.setUTCHours(0, 0, 0, 0);
  }, function(date2, step) {
    date2.setUTCMonth(date2.getUTCMonth() + step);
  }, function(start2, end) {
    return end.getUTCMonth() - start2.getUTCMonth() + (end.getUTCFullYear() - start2.getUTCFullYear()) * 12;
  }, function(date2) {
    return date2.getUTCMonth();
  });
  var utcMonth_default2 = utcMonth2;
  var utcMonths2 = utcMonth2.range;

  // ../../node_modules/@nivo/scales/node_modules/d3-time/src/utcYear.js
  var utcYear2 = newInterval2(function(date2) {
    date2.setUTCMonth(0, 1);
    date2.setUTCHours(0, 0, 0, 0);
  }, function(date2, step) {
    date2.setUTCFullYear(date2.getUTCFullYear() + step);
  }, function(start2, end) {
    return end.getUTCFullYear() - start2.getUTCFullYear();
  }, function(date2) {
    return date2.getUTCFullYear();
  });
  utcYear2.every = function(k6) {
    return !isFinite(k6 = Math.floor(k6)) || !(k6 > 0) ? null : newInterval2(function(date2) {
      date2.setUTCFullYear(Math.floor(date2.getUTCFullYear() / k6) * k6);
      date2.setUTCMonth(0, 1);
      date2.setUTCHours(0, 0, 0, 0);
    }, function(date2, step) {
      date2.setUTCFullYear(date2.getUTCFullYear() + step * k6);
    });
  };
  var utcYear_default2 = utcYear2;
  var utcYears2 = utcYear2.range;

  // ../../node_modules/@nivo/scales/dist/nivo-scales.es.js
  function $2() {
    return $2 = Object.assign || function(n11) {
      for (var t13 = 1; t13 < arguments.length; t13++) {
        var r9 = arguments[t13];
        for (var e15 in r9)
          Object.prototype.hasOwnProperty.call(r9, e15) && (n11[e15] = r9[e15]);
      }
      return n11;
    }, $2.apply(this, arguments);
  }
  var J2 = [function(n11) {
    return n11.setMilliseconds(0);
  }, function(n11) {
    return n11.setSeconds(0);
  }, function(n11) {
    return n11.setMinutes(0);
  }, function(n11) {
    return n11.setHours(0);
  }, function(n11) {
    return n11.setDate(1);
  }, function(n11) {
    return n11.setMonth(0);
  }];
  var K2 = {millisecond: [], second: J2.slice(0, 1), minute: J2.slice(0, 2), hour: J2.slice(0, 3), day: J2.slice(0, 4), month: J2.slice(0, 5), year: J2.slice(0, 6)};
  var L = function(n11) {
    return function(t13) {
      return K2[n11].forEach(function(n12) {
        n12(t13);
      }), t13;
    };
  };
  var Q2 = function(n11) {
    var t13 = n11.format, r9 = t13 === void 0 ? "native" : t13, e15 = n11.precision, a7 = e15 === void 0 ? "millisecond" : e15, u4 = n11.useUTC, c6 = u4 === void 0 || u4, f4 = L(a7);
    return function(n12) {
      if (n12 === void 0)
        return n12;
      if (r9 === "native" || n12 instanceof Date)
        return f4(n12);
      var t14 = c6 ? utcParse(r9) : timeParse(r9);
      return f4(t14(n12));
    };
  };
  var W2 = function(n11, t13, r9, e15) {
    var a7, i9, o8, c6, f4 = n11.min, d4 = f4 === void 0 ? 0 : f4, s4 = n11.max, l4 = s4 === void 0 ? "auto" : s4, m5 = n11.stacked, v8 = m5 !== void 0 && m5, y6 = n11.reverse, p6 = y6 !== void 0 && y6, h4 = n11.clamp, g6 = h4 !== void 0 && h4, x7 = n11.nice, k6 = x7 !== void 0 && x7;
    d4 === "auto" ? a7 = v8 === true ? (i9 = t13.minStacked) != null ? i9 : 0 : t13.min : a7 = d4;
    l4 === "auto" ? o8 = v8 === true ? (c6 = t13.maxStacked) != null ? c6 : 0 : t13.max : o8 = l4;
    var T7 = linear3().rangeRound(e15 === "x" ? [0, r9] : [r9, 0]).domain(p6 ? [o8, a7] : [a7, o8]).clamp(g6);
    return k6 === true ? T7.nice() : typeof k6 == "number" && T7.nice(k6), X4(T7, v8);
  };
  var X4 = function(n11, t13) {
    t13 === void 0 && (t13 = false);
    var r9 = n11;
    return r9.type = "linear", r9.stacked = t13, r9;
  };
  var Y4 = function(n11, t13, r9) {
    var e15 = point().range([0, r9]).domain(t13.all);
    return e15.type = "point", e15;
  };
  var _2 = function(n11, t13, r9, e15) {
    var a7 = n11.round, i9 = a7 === void 0 || a7, o8 = band().range(e15 === "x" ? [0, r9] : [r9, 0]).domain(t13.all).round(i9);
    return nn(o8);
  };
  var nn = function(n11) {
    var t13 = n11;
    return t13.type = "band", t13;
  };
  var tn = function(n11, t13, r9) {
    var e15, a7, i9 = n11.format, o8 = i9 === void 0 ? "native" : i9, u4 = n11.precision, c6 = u4 === void 0 ? "millisecond" : u4, f4 = n11.min, l4 = f4 === void 0 ? "auto" : f4, m5 = n11.max, v8 = m5 === void 0 ? "auto" : m5, y6 = n11.useUTC, p6 = y6 === void 0 || y6, h4 = n11.nice, g6 = h4 !== void 0 && h4, x7 = Q2({format: o8, precision: c6, useUTC: p6});
    e15 = l4 === "auto" ? x7(t13.min) : o8 !== "native" ? x7(l4) : l4, a7 = v8 === "auto" ? x7(t13.max) : o8 !== "native" ? x7(v8) : v8;
    var k6 = p6 ? utcTime() : time2();
    k6.range([0, r9]), e15 && a7 && k6.domain([e15, a7]), g6 === true ? k6.nice() : typeof g6 != "object" && typeof g6 != "number" || k6.nice(g6);
    var T7 = k6;
    return T7.type = "time", T7.useUTC = p6, T7;
  };
  var rn2 = function(n11, t13, r9, e15) {
    var a7, i9 = n11.base, o8 = i9 === void 0 ? 10 : i9, u4 = n11.min, c6 = u4 === void 0 ? "auto" : u4, f4 = n11.max, d4 = f4 === void 0 ? "auto" : f4;
    if (t13.all.some(function(n12) {
      return n12 === 0;
    }))
      throw new Error("a log scale domain must not include or cross zero");
    var s4, m5, v8 = false;
    if (t13.all.filter(function(n12) {
      return n12 != null;
    }).forEach(function(n12) {
      v8 || (a7 === void 0 ? a7 = Math.sign(n12) : Math.sign(n12) !== a7 && (v8 = true));
    }), v8)
      throw new Error("a log scale domain must be strictly-positive or strictly-negative");
    s4 = c6 === "auto" ? t13.min : c6, m5 = d4 === "auto" ? t13.max : d4;
    var y6 = log().domain([s4, m5]).rangeRound(e15 === "x" ? [0, r9] : [r9, 0]).base(o8).nice();
    return y6.type = "log", y6;
  };
  var en2 = function(n11, t13, r9, e15) {
    var a7, i9, o8 = n11.constant, u4 = o8 === void 0 ? 1 : o8, c6 = n11.min, f4 = c6 === void 0 ? "auto" : c6, d4 = n11.max, s4 = d4 === void 0 ? "auto" : d4, l4 = n11.reverse, v8 = l4 !== void 0 && l4;
    a7 = f4 === "auto" ? t13.min : f4, i9 = s4 === "auto" ? t13.max : s4;
    var y6 = symlog().constant(u4).rangeRound(e15 === "x" ? [0, r9] : [r9, 0]).nice();
    v8 === true ? y6.domain([i9, a7]) : y6.domain([a7, i9]);
    var p6 = y6;
    return p6.type = "symlog", p6;
  };
  var an = function(n11) {
    return n11 === "x" ? "y" : "x";
  };
  var on2 = function(n11, t13) {
    return n11 === t13;
  };
  var un = function(n11, t13) {
    return n11.getTime() === t13.getTime();
  };
  function cn(n11, t13, r9, e15) {
    switch (n11.type) {
      case "linear":
        return W2(n11, t13, r9, e15);
      case "point":
        return Y4(0, t13, r9);
      case "band":
        return _2(n11, t13, r9, e15);
      case "time":
        return tn(n11, t13, r9);
      case "log":
        return rn2(n11, t13, r9, e15);
      case "symlog":
        return en2(n11, t13, r9, e15);
      default:
        throw new Error("invalid scale spec");
    }
  }
  var fn = function(n11, t13, r9) {
    var e15;
    if ("stacked" in r9 && r9.stacked) {
      var a7 = n11.data[t13 === "x" ? "xStacked" : "yStacked"];
      return a7 == null ? null : r9(a7);
    }
    return (e15 = r9(n11.data[t13])) != null ? e15 : null;
  };
  var dn = function(n11, t13, r9, e15, a7) {
    var i9 = n11.map(function(n12) {
      return function(n13) {
        return $2({}, n13, {data: n13.data.map(function(n14) {
          return {data: $2({}, n14)};
        })});
      }(n12);
    }), o8 = sn(i9, t13, r9);
    "stacked" in t13 && t13.stacked === true && vn(o8, i9), "stacked" in r9 && r9.stacked === true && yn(o8, i9);
    var u4 = cn(t13, o8.x, e15, "x"), c6 = cn(r9, o8.y, a7, "y"), f4 = i9.map(function(n12) {
      return $2({}, n12, {data: n12.data.map(function(n13) {
        return $2({}, n13, {position: {x: fn(n13, "x", u4), y: fn(n13, "y", c6)}});
      })});
    });
    return $2({}, o8, {series: f4, xScale: u4, yScale: c6});
  };
  var sn = function(n11, t13, r9) {
    return {x: ln(n11, "x", t13), y: ln(n11, "y", r9)};
  };
  var ln = function(a7, i9, o8, u4) {
    var c6 = u4 === void 0 ? {} : u4, f4 = c6.getValue, d4 = f4 === void 0 ? function(n11) {
      return n11.data[i9];
    } : f4, s4 = c6.setValue, l4 = s4 === void 0 ? function(n11, t13) {
      n11.data[i9] = t13;
    } : s4;
    if (o8.type === "linear")
      a7.forEach(function(n11) {
        n11.data.forEach(function(n12) {
          var t13 = d4(n12);
          t13 && l4(n12, parseFloat(String(t13)));
        });
      });
    else if (o8.type === "time" && o8.format !== "native") {
      var m5 = Q2(o8);
      a7.forEach(function(n11) {
        n11.data.forEach(function(n12) {
          var t13 = d4(n12);
          t13 && l4(n12, m5(t13));
        });
      });
    }
    var v8 = [];
    switch (a7.forEach(function(n11) {
      n11.data.forEach(function(n12) {
        v8.push(d4(n12));
      });
    }), o8.type) {
      case "linear":
        var y6 = (0, import_sortBy.default)((0, import_uniq.default)(v8).filter(function(n11) {
          return n11 !== null;
        }), function(n11) {
          return n11;
        });
        return {all: y6, min: Math.min.apply(Math, y6), max: Math.max.apply(Math, y6)};
      case "time":
        var p6 = (0, import_uniqBy.default)(v8, function(n11) {
          return n11.getTime();
        }).slice(0).sort(function(n11, t13) {
          return t13.getTime() - n11.getTime();
        }).reverse();
        return {all: p6, min: p6[0], max: (0, import_last2.default)(p6)};
      default:
        var h4 = (0, import_uniq.default)(v8);
        return {all: h4, min: h4[0], max: (0, import_last2.default)(h4)};
    }
  };
  var mn = function(n11, t13, r9) {
    var i9 = an(n11), o8 = [];
    t13[i9].all.forEach(function(t14) {
      var u4 = (0, import_isDate2.default)(t14) ? un : on2, c6 = [];
      r9.forEach(function(r10) {
        var a7 = r10.data.find(function(n12) {
          return u4(n12.data[i9], t14);
        }), f4 = null, d4 = null;
        if (a7 !== void 0) {
          if ((f4 = a7.data[n11]) !== null) {
            var s4 = (0, import_last2.default)(c6);
            s4 === void 0 ? d4 = f4 : s4 !== null && (d4 = s4 + f4);
          }
          a7.data[n11 === "x" ? "xStacked" : "yStacked"] = d4;
        }
        c6.push(d4), d4 !== null && o8.push(d4);
      });
    }), t13[n11].minStacked = Math.min.apply(Math, o8), t13[n11].maxStacked = Math.max.apply(Math, o8);
  };
  var vn = function(n11, t13) {
    return mn("x", n11, t13);
  };
  var yn = function(n11, t13) {
    return mn("y", n11, t13);
  };
  var pn = function(n11) {
    var t13 = n11.bandwidth();
    if (t13 === 0)
      return n11;
    var r9 = t13 / 2;
    return n11.round() && (r9 = Math.round(r9)), function(t14) {
      var e15;
      return ((e15 = n11(t14)) != null ? e15 : 0) + r9;
    };
  };
  var hn = {millisecond: [millisecond_default2, millisecond_default2], second: [second_default2, second_default2], minute: [minute_default2, utcMinute_default2], hour: [hour_default2, utcHour_default2], day: [newInterval2(function(n11) {
    return n11.setHours(0, 0, 0, 0);
  }, function(n11, t13) {
    return n11.setDate(n11.getDate() + t13);
  }, function(n11, t13) {
    return (t13.getTime() - n11.getTime()) / 864e5;
  }, function(n11) {
    return Math.floor(n11.getTime() / 864e5);
  }), newInterval2(function(n11) {
    return n11.setUTCHours(0, 0, 0, 0);
  }, function(n11, t13) {
    return n11.setUTCDate(n11.getUTCDate() + t13);
  }, function(n11, t13) {
    return (t13.getTime() - n11.getTime()) / 864e5;
  }, function(n11) {
    return Math.floor(n11.getTime() / 864e5);
  })], week: [sunday2, utcSunday2], sunday: [sunday2, utcSunday2], monday: [monday2, utcMonday2], tuesday: [tuesday2, utcTuesday2], wednesday: [wednesday2, utcWednesday2], thursday: [thursday2, utcThursday2], friday: [friday2, utcFriday2], saturday: [saturday2, utcSaturday2], month: [month_default2, utcMonth_default2], year: [year_default2, utcYear_default2]};
  var gn = Object.keys(hn);
  var xn = new RegExp("^every\\s*(\\d+)?\\s*(" + gn.join("|") + ")s?$", "i");
  var kn = function(n11, t13) {
    if (Array.isArray(t13))
      return t13;
    if (typeof t13 == "string" && "useUTC" in n11) {
      var r9 = t13.match(xn);
      if (r9) {
        var e15 = r9[1], a7 = r9[2], i9 = hn[a7][n11.useUTC ? 1 : 0];
        if (a7 === "day") {
          var o8, u4, c6 = n11.domain(), f4 = c6[0], d4 = c6[1], s4 = new Date(d4);
          return s4.setDate(s4.getDate() + 1), (o8 = (u4 = i9.every(Number(e15 != null ? e15 : 1))) == null ? void 0 : u4.range(f4, s4)) != null ? o8 : [];
        }
        if (e15 === void 0)
          return n11.ticks(i9);
        var l4 = i9.every(Number(e15));
        if (l4)
          return n11.ticks(l4);
      }
      throw new Error("Invalid tickValues: " + t13);
    }
    if ("ticks" in n11) {
      if (t13 === void 0)
        return n11.ticks();
      if (typeof (m5 = t13) == "number" && isFinite(m5) && Math.floor(m5) === m5)
        return n11.ticks(t13);
    }
    var m5;
    return n11.domain();
  };

  // ../../node_modules/@nivo/axes/dist/nivo-axes.es.js
  var import_jsx_runtime5 = __toModule(require_jsx_runtime());
  var import_prop_types27 = __toModule(require_prop_types());
  function v5() {
    return v5 = Object.assign || function(t13) {
      for (var e15 = 1; e15 < arguments.length; e15++) {
        var i9 = arguments[e15];
        for (var n11 in i9)
          Object.prototype.hasOwnProperty.call(i9, n11) && (t13[n11] = i9[n11]);
      }
      return t13;
    }, v5.apply(this, arguments);
  }
  var p3 = function(t13) {
    var e15, i9 = t13.axis, n11 = t13.scale, r9 = t13.ticksPosition, a7 = t13.tickValues, o8 = t13.tickSize, s4 = t13.tickPadding, c6 = t13.tickRotation, f4 = t13.engine, x7 = f4 === void 0 ? "svg" : f4, d4 = kn(n11, a7), y6 = yi[x7], g6 = "bandwidth" in n11 ? pn(n11) : n11, k6 = {lineX: 0, lineY: 0}, h4 = {textX: 0, textY: 0}, p6 = typeof document == "object" && document.dir === "rtl", b8 = y6.align.center, P8 = y6.baseline.center;
    return i9 === "x" ? (e15 = function(t14) {
      var e16;
      return {x: (e16 = g6(t14)) != null ? e16 : 0, y: 0};
    }, k6.lineY = o8 * (r9 === "after" ? 1 : -1), h4.textY = (o8 + s4) * (r9 === "after" ? 1 : -1), P8 = r9 === "after" ? y6.baseline.top : y6.baseline.bottom, c6 === 0 ? b8 = y6.align.center : r9 === "after" && c6 < 0 || r9 === "before" && c6 > 0 ? (b8 = y6.align[p6 ? "left" : "right"], P8 = y6.baseline.center) : (r9 === "after" && c6 > 0 || r9 === "before" && c6 < 0) && (b8 = y6.align[p6 ? "right" : "left"], P8 = y6.baseline.center)) : (e15 = function(t14) {
      var e16;
      return {x: 0, y: (e16 = g6(t14)) != null ? e16 : 0};
    }, k6.lineX = o8 * (r9 === "after" ? 1 : -1), h4.textX = (o8 + s4) * (r9 === "after" ? 1 : -1), b8 = r9 === "after" ? y6.align.left : y6.align.right), {ticks: d4.map(function(t14) {
      return v5({key: typeof t14 == "number" || typeof t14 == "string" ? t14 : "" + t14, value: t14}, e15(t14), k6, h4);
    }), textAlign: b8, textBaseline: P8};
  };
  var b5 = function(t13, e15) {
    if (t13 === void 0 || typeof t13 == "function")
      return t13;
    if (e15.type === "time") {
      var i9 = timeFormat(t13);
      return function(t14) {
        return i9(t14 instanceof Date ? t14 : new Date(t14));
      };
    }
    return format3(t13);
  };
  var P3 = function(t13) {
    var e15, i9 = t13.width, n11 = t13.height, r9 = t13.scale, a7 = t13.axis, o8 = t13.values, l4 = (e15 = o8, Array.isArray(e15) ? o8 : void 0) || kn(r9, o8), s4 = "bandwidth" in r9 ? pn(r9) : r9, c6 = a7 === "x" ? l4.map(function(t14) {
      var e16, i10;
      return {key: "" + t14, x1: (e16 = s4(t14)) != null ? e16 : 0, x2: (i10 = s4(t14)) != null ? i10 : 0, y1: 0, y2: n11};
    }) : l4.map(function(t14) {
      var e16, n12;
      return {key: "" + t14, x1: 0, x2: i9, y1: (e16 = s4(t14)) != null ? e16 : 0, y2: (n12 = s4(t14)) != null ? n12 : 0};
    });
    return c6;
  };
  var S3 = (0, import_react56.memo)(function(t13) {
    var e15, n11 = t13.value, a7 = t13.format, o8 = t13.lineX, l4 = t13.lineY, c6 = t13.onClick, f4 = t13.textBaseline, x7 = t13.textAnchor, d4 = t13.animatedProps, u4 = Vt(), m5 = (e15 = a7 == null ? void 0 : a7(n11)) != null ? e15 : n11, k6 = (0, import_react56.useMemo)(function() {
      var t14 = {opacity: d4.opacity};
      return c6 ? {style: v5({}, t14, {cursor: "pointer"}), onClick: function(t15) {
        return c6(t15, m5);
      }} : {style: t14};
    }, [d4.opacity, c6, m5]);
    return (0, import_jsx_runtime5.jsxs)(animated.g, v5({transform: d4.transform}, k6, {children: [(0, import_jsx_runtime5.jsx)("line", {x1: 0, x2: o8, y1: 0, y2: l4, style: u4.axis.ticks.line}), (0, import_jsx_runtime5.jsx)(animated.text, {dominantBaseline: f4, textAnchor: x7, transform: d4.textTransform, style: u4.axis.ticks.text, children: m5})]}));
  });
  var T3 = (0, import_react56.memo)(function(e15) {
    var n11 = e15.axis, l4 = e15.scale, f4 = e15.x, x7 = f4 === void 0 ? 0 : f4, d4 = e15.y, u4 = d4 === void 0 ? 0 : d4, m5 = e15.length, k6 = e15.ticksPosition, h4 = e15.tickValues, P8 = e15.tickSize, T7 = P8 === void 0 ? 5 : P8, w5 = e15.tickPadding, A8 = w5 === void 0 ? 5 : w5, O8 = e15.tickRotation, X7 = O8 === void 0 ? 0 : O8, Y6 = e15.format, W7 = e15.renderTick, B5 = W7 === void 0 ? S3 : W7, z6 = e15.legend, V5 = e15.legendPosition, C6 = V5 === void 0 ? "end" : V5, R3 = e15.legendOffset, j4 = R3 === void 0 ? 0 : R3, E4 = e15.onClick, D4 = e15.ariaHidden, q4 = Vt(), F3 = (0, import_react56.useMemo)(function() {
      return b5(Y6, l4);
    }, [Y6, l4]), H4 = p3({axis: n11, scale: l4, ticksPosition: k6, tickValues: h4, tickSize: T7, tickPadding: A8, tickRotation: X7}), N5 = H4.ticks, I4 = H4.textAlign, G = H4.textBaseline, J6 = null;
    if (z6 !== void 0) {
      var K6, L5 = 0, M5 = 0, Q6 = 0;
      n11 === "y" ? (Q6 = -90, L5 = j4, C6 === "start" ? (K6 = "start", M5 = m5) : C6 === "middle" ? (K6 = "middle", M5 = m5 / 2) : C6 === "end" && (K6 = "end")) : (M5 = j4, C6 === "start" ? K6 = "start" : C6 === "middle" ? (K6 = "middle", L5 = m5 / 2) : C6 === "end" && (K6 = "end", L5 = m5)), J6 = (0, import_jsx_runtime5.jsx)("text", {transform: "translate(" + L5 + ", " + M5 + ") rotate(" + Q6 + ")", textAnchor: K6, style: v5({dominantBaseline: "central"}, q4.axis.legend.text), children: z6});
    }
    var U4 = tt(), Z5 = U4.animate, $5 = U4.config, _5 = useSpring({transform: "translate(" + x7 + "," + u4 + ")", lineX2: n11 === "x" ? m5 : 0, lineY2: n11 === "x" ? 0 : m5, config: $5, immediate: !Z5}), tt2 = useTransition(N5, {keys: function(t13) {
      return t13.key;
    }, initial: function(t13) {
      return {opacity: 1, transform: "translate(" + t13.x + "," + t13.y + ")", textTransform: "translate(" + t13.textX + "," + t13.textY + ") rotate(" + X7 + ")"};
    }, from: function(t13) {
      return {opacity: 0, transform: "translate(" + t13.x + "," + t13.y + ")", textTransform: "translate(" + t13.textX + "," + t13.textY + ") rotate(" + X7 + ")"};
    }, enter: function(t13) {
      return {opacity: 1, transform: "translate(" + t13.x + "," + t13.y + ")", textTransform: "translate(" + t13.textX + "," + t13.textY + ") rotate(" + X7 + ")"};
    }, update: function(t13) {
      return {opacity: 1, transform: "translate(" + t13.x + "," + t13.y + ")", textTransform: "translate(" + t13.textX + "," + t13.textY + ") rotate(" + X7 + ")"};
    }, leave: {opacity: 0}, config: $5, immediate: !Z5});
    return (0, import_jsx_runtime5.jsxs)(animated.g, {transform: _5.transform, "aria-hidden": D4, children: [tt2(function(e16, i9, n12, r9) {
      return t7.createElement(B5, v5({tickIndex: r9, format: F3, rotate: X7, textBaseline: G, textAnchor: I4, animatedProps: e16}, i9, E4 ? {onClick: E4} : {}));
    }), (0, import_jsx_runtime5.jsx)(animated.line, {style: q4.axis.domain.line, x1: 0, x2: _5.lineX2, y1: 0, y2: _5.lineY2}), J6]});
  });
  var w3 = {ticksPosition: import_prop_types27.default.oneOf(["before", "after"]), tickValues: import_prop_types27.default.oneOfType([import_prop_types27.default.number, import_prop_types27.default.arrayOf(import_prop_types27.default.oneOfType([import_prop_types27.default.number, import_prop_types27.default.string, import_prop_types27.default.instanceOf(Date)])), import_prop_types27.default.string]), tickSize: import_prop_types27.default.number, tickPadding: import_prop_types27.default.number, tickRotation: import_prop_types27.default.number, format: import_prop_types27.default.oneOfType([import_prop_types27.default.func, import_prop_types27.default.string]), renderTick: import_prop_types27.default.func, legend: import_prop_types27.default.node, legendPosition: import_prop_types27.default.oneOf(["start", "middle", "end"]), legendOffset: import_prop_types27.default.number, ariaHidden: import_prop_types27.default.bool};
  var A6 = import_prop_types27.default.shape(w3);
  var O5 = ["top", "right", "bottom", "left"];
  var X5 = (0, import_react56.memo)(function(t13) {
    var e15 = t13.xScale, i9 = t13.yScale, n11 = t13.width, r9 = t13.height, a7 = {top: t13.top, right: t13.right, bottom: t13.bottom, left: t13.left};
    return (0, import_jsx_runtime5.jsx)(import_jsx_runtime5.Fragment, {children: O5.map(function(t14) {
      var o8 = a7[t14];
      if (!o8)
        return null;
      var l4 = t14 === "top" || t14 === "bottom";
      return (0, import_jsx_runtime5.jsx)(T3, v5({}, o8, {axis: l4 ? "x" : "y", x: t14 === "right" ? n11 : 0, y: t14 === "bottom" ? r9 : 0, scale: l4 ? e15 : i9, length: l4 ? n11 : r9, ticksPosition: t14 === "top" || t14 === "left" ? "before" : "after"}), t14);
    })});
  });
  var Y5 = (0, import_react56.memo)(function(t13) {
    var e15 = t13.animatedProps, i9 = Vt();
    return (0, import_jsx_runtime5.jsx)(animated.line, v5({}, e15, i9.grid.line));
  });
  var W3 = (0, import_react56.memo)(function(t13) {
    var e15 = t13.lines, i9 = tt(), r9 = i9.animate, a7 = i9.config, l4 = useTransition(e15, {keys: function(t14) {
      return t14.key;
    }, initial: function(t14) {
      return {opacity: 1, x1: t14.x1, x2: t14.x2, y1: t14.y1, y2: t14.y2};
    }, from: function(t14) {
      return {opacity: 0, x1: t14.x1, x2: t14.x2, y1: t14.y1, y2: t14.y2};
    }, enter: function(t14) {
      return {opacity: 1, x1: t14.x1, x2: t14.x2, y1: t14.y1, y2: t14.y2};
    }, update: function(t14) {
      return {opacity: 1, x1: t14.x1, x2: t14.x2, y1: t14.y1, y2: t14.y2};
    }, leave: {opacity: 0}, config: a7, immediate: !r9});
    return (0, import_jsx_runtime5.jsx)("g", {children: l4(function(t14, e16) {
      return (0, import_react56.createElement)(Y5, v5({}, e16, {key: e16.key, animatedProps: t14}));
    })});
  });
  var B3 = (0, import_react56.memo)(function(t13) {
    var e15 = t13.width, n11 = t13.height, r9 = t13.xScale, a7 = t13.yScale, o8 = t13.xValues, l4 = t13.yValues, s4 = (0, import_react56.useMemo)(function() {
      return !!r9 && P3({width: e15, height: n11, scale: r9, axis: "x", values: o8});
    }, [r9, o8, e15, n11]), c6 = (0, import_react56.useMemo)(function() {
      return !!a7 && P3({width: e15, height: n11, scale: a7, axis: "y", values: l4});
    }, [n11, e15, a7, l4]);
    return (0, import_jsx_runtime5.jsxs)(import_jsx_runtime5.Fragment, {children: [s4 && (0, import_jsx_runtime5.jsx)(W3, {lines: s4}), c6 && (0, import_jsx_runtime5.jsx)(W3, {lines: c6})]});
  });
  var z3 = function(t13, e15) {
    var i9, n11 = e15.axis, r9 = e15.scale, a7 = e15.x, o8 = a7 === void 0 ? 0 : a7, l4 = e15.y, s4 = l4 === void 0 ? 0 : l4, c6 = e15.length, x7 = e15.ticksPosition, d4 = e15.tickValues, u4 = e15.tickSize, m5 = u4 === void 0 ? 5 : u4, y6 = e15.tickPadding, g6 = y6 === void 0 ? 5 : y6, k6 = e15.tickRotation, h4 = k6 === void 0 ? 0 : k6, v8 = e15.format, b8 = e15.legend, P8 = e15.legendPosition, S6 = P8 === void 0 ? "end" : P8, T7 = e15.legendOffset, w5 = T7 === void 0 ? 0 : T7, A8 = e15.theme, O8 = p3({axis: n11, scale: r9, ticksPosition: x7, tickValues: d4, tickSize: m5, tickPadding: g6, tickRotation: h4, engine: "canvas"}), X7 = O8.ticks, Y6 = O8.textAlign, W7 = O8.textBaseline;
    t13.save(), t13.translate(o8, s4), t13.textAlign = Y6, t13.textBaseline = W7, t13.font = (A8.axis.ticks.text.fontWeight ? A8.axis.ticks.text.fontWeight + " " : "") + A8.axis.ticks.text.fontSize + "px " + A8.axis.ticks.text.fontFamily, ((i9 = A8.axis.domain.line.strokeWidth) != null ? i9 : 0) > 0 && (t13.lineWidth = Number(A8.axis.domain.line.strokeWidth), t13.lineCap = "square", A8.axis.domain.line.stroke && (t13.strokeStyle = A8.axis.domain.line.stroke), t13.beginPath(), t13.moveTo(0, 0), t13.lineTo(n11 === "x" ? c6 : 0, n11 === "x" ? 0 : c6), t13.stroke());
    var B5 = typeof v8 == "function" ? v8 : function(t14) {
      return "" + t14;
    };
    if (X7.forEach(function(e16) {
      var i10;
      ((i10 = A8.axis.ticks.line.strokeWidth) != null ? i10 : 0) > 0 && (t13.lineWidth = Number(A8.axis.ticks.line.strokeWidth), t13.lineCap = "square", A8.axis.ticks.line.stroke && (t13.strokeStyle = A8.axis.ticks.line.stroke), t13.beginPath(), t13.moveTo(e16.x, e16.y), t13.lineTo(e16.x + e16.lineX, e16.y + e16.lineY), t13.stroke());
      var n12 = B5(e16.value);
      t13.save(), t13.translate(e16.x + e16.textX, e16.y + e16.textY), t13.rotate(ui(h4)), A8.axis.ticks.text.fill && (t13.fillStyle = A8.axis.ticks.text.fill), t13.fillText(String(n12), 0, 0), t13.restore();
    }), b8 !== void 0) {
      var z6 = 0, V5 = 0, C6 = 0, R3 = "center";
      n11 === "y" ? (C6 = -90, z6 = w5, S6 === "start" ? (R3 = "start", V5 = c6) : S6 === "middle" ? (R3 = "center", V5 = c6 / 2) : S6 === "end" && (R3 = "end")) : (V5 = w5, S6 === "start" ? R3 = "start" : S6 === "middle" ? (R3 = "center", z6 = c6 / 2) : S6 === "end" && (R3 = "end", z6 = c6)), t13.translate(z6, V5), t13.rotate(ui(C6)), t13.font = (A8.axis.legend.text.fontWeight ? A8.axis.legend.text.fontWeight + " " : "") + A8.axis.legend.text.fontSize + "px " + A8.axis.legend.text.fontFamily, A8.axis.legend.text.fill && (t13.fillStyle = A8.axis.legend.text.fill), t13.textAlign = R3, t13.textBaseline = "middle", t13.fillText(b8, 0, 0);
    }
    t13.restore();
  };
  var V3 = function(t13, e15) {
    var i9 = e15.xScale, n11 = e15.yScale, r9 = e15.width, a7 = e15.height, o8 = e15.top, l4 = e15.right, s4 = e15.bottom, c6 = e15.left, f4 = e15.theme, x7 = {top: o8, right: l4, bottom: s4, left: c6};
    O5.forEach(function(e16) {
      var o9 = x7[e16];
      if (!o9)
        return null;
      var l5 = e16 === "top" || e16 === "bottom", s5 = e16 === "top" || e16 === "left" ? "before" : "after", c7 = l5 ? i9 : n11, d4 = b5(o9.format, c7);
      z3(t13, v5({}, o9, {axis: l5 ? "x" : "y", x: e16 === "right" ? r9 : 0, y: e16 === "bottom" ? a7 : 0, scale: c7, format: d4, length: l5 ? r9 : a7, ticksPosition: s5, theme: f4}));
    });
  };
  var C4 = function(t13, e15) {
    var i9 = e15.width, n11 = e15.height, r9 = e15.scale, a7 = e15.axis, o8 = e15.values;
    P3({width: i9, height: n11, scale: r9, axis: a7, values: o8}).forEach(function(e16) {
      t13.beginPath(), t13.moveTo(e16.x1, e16.y1), t13.lineTo(e16.x2, e16.y2), t13.stroke();
    });
  };

  // ../../node_modules/@nivo/annotations/dist/nivo-annotations.es.js
  var import_react57 = __toModule(require_react());
  var import_omit9 = __toModule(require_omit());
  var import_isNumber3 = __toModule(require_isNumber());
  var import_filter = __toModule(require_filter());
  var import_jsx_runtime6 = __toModule(require_jsx_runtime());
  function g4() {
    return g4 = Object.assign || function(t13) {
      for (var n11 = 1; n11 < arguments.length; n11++) {
        var i9 = arguments[n11];
        for (var o8 in i9)
          Object.prototype.hasOwnProperty.call(i9, o8) && (t13[o8] = i9[o8]);
      }
      return t13;
    }, g4.apply(this, arguments);
  }
  var k4 = {dotSize: 4, noteWidth: 120, noteTextOffset: 8, animate: true, motionStiffness: 90, motionDamping: 13};
  var W4 = function(n11) {
    var i9 = typeof n11;
    return (0, import_react57.isValidElement)(n11) || i9 === "string" || i9 === "function" || i9 === "object";
  };
  var v6 = function(t13) {
    var n11 = typeof t13;
    return n11 === "string" || n11 === "function";
  };
  var b6 = function(t13) {
    return t13.type === "circle";
  };
  var w4 = function(t13) {
    return t13.type === "dot";
  };
  var z4 = function(t13) {
    return t13.type === "rect";
  };
  var P4 = function(t13) {
    var n11 = t13.data, i9 = t13.annotations, e15 = t13.getPosition, r9 = t13.getDimensions;
    return i9.reduce(function(t14, i10) {
      var s4 = i10.offset || 0;
      return [].concat(t14, (0, import_filter.default)(n11, i10.match).map(function(t15) {
        var n12 = e15(t15), a7 = r9(t15);
        return (b6(i10) || z4(i10)) && (a7.size = a7.size + 2 * s4, a7.width = a7.width + 2 * s4, a7.height = a7.height + 2 * s4), g4({}, (0, import_omit9.default)(i10, ["match", "offset"]), n12, a7, {size: i10.size || a7.size, datum: t15});
      }));
    }, []);
  };
  var S4 = function(t13, n11, i9, o8) {
    var e15 = Math.atan2(o8 - n11, i9 - t13);
    return hi(ci(e15));
  };
  var C5 = function(t13) {
    var n11, i9, o8 = t13.x, a7 = t13.y, r9 = t13.noteX, s4 = t13.noteY, h4 = t13.noteWidth, d4 = h4 === void 0 ? k4.noteWidth : h4, c6 = t13.noteTextOffset, f4 = c6 === void 0 ? k4.noteTextOffset : c6;
    if ((0, import_isNumber3.default)(r9))
      n11 = o8 + r9;
    else {
      if (r9.abs === void 0)
        throw new Error("noteX should be either a number or an object containing an 'abs' property");
      n11 = r9.abs;
    }
    if ((0, import_isNumber3.default)(s4))
      i9 = a7 + s4;
    else {
      if (s4.abs === void 0)
        throw new Error("noteY should be either a number or an object containing an 'abs' property");
      i9 = s4.abs;
    }
    var y6 = o8, x7 = a7, m5 = S4(o8, a7, n11, i9);
    if (b6(t13)) {
      var p6 = pi3(ui(m5), t13.size / 2);
      y6 += p6.x, x7 += p6.y;
    }
    if (z4(t13)) {
      var g6 = Math.round((m5 + 90) / 45) % 8;
      g6 === 0 && (x7 -= t13.height / 2), g6 === 1 && (y6 += t13.width / 2, x7 -= t13.height / 2), g6 === 2 && (y6 += t13.width / 2), g6 === 3 && (y6 += t13.width / 2, x7 += t13.height / 2), g6 === 4 && (x7 += t13.height / 2), g6 === 5 && (y6 -= t13.width / 2, x7 += t13.height / 2), g6 === 6 && (y6 -= t13.width / 2), g6 === 7 && (y6 -= t13.width / 2, x7 -= t13.height / 2);
    }
    var W7 = n11, v8 = n11;
    return (m5 + 90) % 360 > 180 ? (W7 -= d4, v8 -= d4) : v8 += d4, {points: [[y6, x7], [n11, i9], [v8, i9]], text: [W7, i9 - f4], angle: m5 + 90};
  };
  var O6 = function(t13) {
    var i9 = t13.data, o8 = t13.annotations, e15 = t13.getPosition, a7 = t13.getDimensions;
    return (0, import_react57.useMemo)(function() {
      return P4({data: i9, annotations: o8, getPosition: e15, getDimensions: a7});
    }, [i9, o8, e15, a7]);
  };
  var j3 = function(t13) {
    var i9 = t13.annotations;
    return (0, import_react57.useMemo)(function() {
      return i9.map(function(t14) {
        return g4({}, t14, {computed: C5(g4({}, t14))});
      });
    }, [i9]);
  };
  var M3 = function(t13) {
    return (0, import_react57.useMemo)(function() {
      return C5(t13);
    }, [t13]);
  };
  var T4 = function(t13) {
    var n11 = t13.datum, e15 = t13.x, a7 = t13.y, r9 = t13.note, s4 = Vt(), l4 = tt(), u4 = l4.animate, c6 = l4.config, k6 = useSpring({x: e15, y: a7, config: c6, immediate: !u4});
    return typeof r9 == "function" ? (0, import_react57.createElement)(r9, {x: e15, y: a7, datum: n11}) : (0, import_jsx_runtime6.jsxs)(import_jsx_runtime6.Fragment, {children: [s4.annotations.text.outlineWidth > 0 && (0, import_jsx_runtime6.jsx)(animated.text, {x: k6.x, y: k6.y, style: g4({}, s4.annotations.text, {strokeLinejoin: "round", strokeWidth: 2 * s4.annotations.text.outlineWidth, stroke: s4.annotations.text.outlineColor}), children: r9}), (0, import_jsx_runtime6.jsx)(animated.text, {x: k6.x, y: k6.y, style: (0, import_omit9.default)(s4.annotations.text, ["outlineWidth", "outlineColor"]), children: r9})]});
  };
  var E3 = function(t13) {
    var i9 = t13.points, o8 = t13.isOutline, e15 = o8 !== void 0 && o8, a7 = Vt(), r9 = (0, import_react57.useMemo)(function() {
      var t14 = i9[0];
      return i9.slice(1).reduce(function(t15, n11) {
        return t15 + " L" + n11[0] + "," + n11[1];
      }, "M" + t14[0] + "," + t14[1]);
    }, [i9]), s4 = it(r9);
    if (e15 && a7.annotations.link.outlineWidth <= 0)
      return null;
    var l4 = g4({}, a7.annotations.link);
    return e15 && (l4.strokeLinecap = "square", l4.strokeWidth = a7.annotations.link.strokeWidth + 2 * a7.annotations.link.outlineWidth, l4.stroke = a7.annotations.link.outlineColor, l4.opacity = a7.annotations.link.outlineOpacity), (0, import_jsx_runtime6.jsx)(animated.path, {fill: "none", d: s4, style: l4});
  };
  var D3 = function(t13) {
    var n11 = t13.x, i9 = t13.y, o8 = t13.size, e15 = Vt(), a7 = tt(), r9 = a7.animate, s4 = a7.config, l4 = useSpring({x: n11, y: i9, radius: o8 / 2, config: s4, immediate: !r9});
    return (0, import_jsx_runtime6.jsxs)(import_jsx_runtime6.Fragment, {children: [e15.annotations.outline.outlineWidth > 0 && (0, import_jsx_runtime6.jsx)(animated.circle, {cx: l4.x, cy: l4.y, r: l4.radius, style: g4({}, e15.annotations.outline, {fill: "none", strokeWidth: e15.annotations.outline.strokeWidth + 2 * e15.annotations.outline.outlineWidth, stroke: e15.annotations.outline.outlineColor, opacity: e15.annotations.outline.outlineOpacity})}), (0, import_jsx_runtime6.jsx)(animated.circle, {cx: l4.x, cy: l4.y, r: l4.radius, style: e15.annotations.outline})]});
  };
  var I2 = function(t13) {
    var n11 = t13.x, i9 = t13.y, o8 = t13.size, e15 = o8 === void 0 ? k4.dotSize : o8, a7 = Vt(), r9 = tt(), s4 = r9.animate, l4 = r9.config, u4 = useSpring({x: n11, y: i9, radius: e15 / 2, config: l4, immediate: !s4});
    return (0, import_jsx_runtime6.jsxs)(import_jsx_runtime6.Fragment, {children: [a7.annotations.outline.outlineWidth > 0 && (0, import_jsx_runtime6.jsx)(animated.circle, {cx: u4.x, cy: u4.y, r: u4.radius, style: g4({}, a7.annotations.outline, {fill: "none", strokeWidth: 2 * a7.annotations.outline.outlineWidth, stroke: a7.annotations.outline.outlineColor, opacity: a7.annotations.outline.outlineOpacity})}), (0, import_jsx_runtime6.jsx)(animated.circle, {cx: u4.x, cy: u4.y, r: u4.radius, style: a7.annotations.symbol})]});
  };
  var L2 = function(t13) {
    var n11 = t13.x, i9 = t13.y, o8 = t13.width, e15 = t13.height, a7 = t13.borderRadius, r9 = a7 === void 0 ? 6 : a7, s4 = Vt(), l4 = tt(), u4 = l4.animate, c6 = l4.config, k6 = useSpring({x: n11 - o8 / 2, y: i9 - e15 / 2, width: o8, height: e15, config: c6, immediate: !u4});
    return (0, import_jsx_runtime6.jsxs)(import_jsx_runtime6.Fragment, {children: [s4.annotations.outline.outlineWidth > 0 && (0, import_jsx_runtime6.jsx)(animated.rect, {x: k6.x, y: k6.y, rx: r9, ry: r9, width: k6.width, height: k6.height, style: g4({}, s4.annotations.outline, {fill: "none", strokeWidth: s4.annotations.outline.strokeWidth + 2 * s4.annotations.outline.outlineWidth, stroke: s4.annotations.outline.outlineColor, opacity: s4.annotations.outline.outlineOpacity})}), (0, import_jsx_runtime6.jsx)(animated.rect, {x: k6.x, y: k6.y, rx: r9, ry: r9, width: k6.width, height: k6.height, style: s4.annotations.outline})]});
  };
  var R = function(t13) {
    var n11 = t13.datum, i9 = t13.x, o8 = t13.y, e15 = t13.note, a7 = M3(t13);
    if (!W4(e15))
      throw new Error("note should be a valid react element");
    return (0, import_jsx_runtime6.jsxs)(import_jsx_runtime6.Fragment, {children: [(0, import_jsx_runtime6.jsx)(E3, {points: a7.points, isOutline: true}), b6(t13) && (0, import_jsx_runtime6.jsx)(D3, {x: i9, y: o8, size: t13.size}), w4(t13) && (0, import_jsx_runtime6.jsx)(I2, {x: i9, y: o8, size: t13.size}), z4(t13) && (0, import_jsx_runtime6.jsx)(L2, {x: i9, y: o8, width: t13.width, height: t13.height, borderRadius: t13.borderRadius}), (0, import_jsx_runtime6.jsx)(E3, {points: a7.points}), (0, import_jsx_runtime6.jsx)(T4, {datum: n11, x: a7.text[0], y: a7.text[1], note: e15})]});
  };
  var q = function(t13, n11) {
    n11.forEach(function(n12, i9) {
      var o8 = n12[0], e15 = n12[1];
      i9 === 0 ? t13.moveTo(o8, e15) : t13.lineTo(o8, e15);
    });
  };
  var J3 = function(t13, n11) {
    var i9 = n11.annotations, o8 = n11.theme;
    i9.length !== 0 && (t13.save(), i9.forEach(function(n12) {
      if (!v6(n12.note))
        throw new Error("note is invalid for canvas implementation");
      o8.annotations.link.outlineWidth > 0 && (t13.lineCap = "square", t13.strokeStyle = o8.annotations.link.outlineColor, t13.lineWidth = o8.annotations.link.strokeWidth + 2 * o8.annotations.link.outlineWidth, t13.beginPath(), q(t13, n12.computed.points), t13.stroke(), t13.lineCap = "butt"), b6(n12) && o8.annotations.outline.outlineWidth > 0 && (t13.strokeStyle = o8.annotations.outline.outlineColor, t13.lineWidth = o8.annotations.outline.strokeWidth + 2 * o8.annotations.outline.outlineWidth, t13.beginPath(), t13.arc(n12.x, n12.y, n12.size / 2, 0, 2 * Math.PI), t13.stroke()), w4(n12) && o8.annotations.symbol.outlineWidth > 0 && (t13.strokeStyle = o8.annotations.symbol.outlineColor, t13.lineWidth = 2 * o8.annotations.symbol.outlineWidth, t13.beginPath(), t13.arc(n12.x, n12.y, n12.size / 2, 0, 2 * Math.PI), t13.stroke()), z4(n12) && o8.annotations.outline.outlineWidth > 0 && (t13.strokeStyle = o8.annotations.outline.outlineColor, t13.lineWidth = o8.annotations.outline.strokeWidth + 2 * o8.annotations.outline.outlineWidth, t13.beginPath(), t13.rect(n12.x - n12.width / 2, n12.y - n12.height / 2, n12.width, n12.height), t13.stroke()), t13.strokeStyle = o8.annotations.link.stroke, t13.lineWidth = o8.annotations.link.strokeWidth, t13.beginPath(), q(t13, n12.computed.points), t13.stroke(), b6(n12) && (t13.strokeStyle = o8.annotations.outline.stroke, t13.lineWidth = o8.annotations.outline.strokeWidth, t13.beginPath(), t13.arc(n12.x, n12.y, n12.size / 2, 0, 2 * Math.PI), t13.stroke()), w4(n12) && (t13.fillStyle = o8.annotations.symbol.fill, t13.beginPath(), t13.arc(n12.x, n12.y, n12.size / 2, 0, 2 * Math.PI), t13.fill()), z4(n12) && (t13.strokeStyle = o8.annotations.outline.stroke, t13.lineWidth = o8.annotations.outline.strokeWidth, t13.beginPath(), t13.rect(n12.x - n12.width / 2, n12.y - n12.height / 2, n12.width, n12.height), t13.stroke()), typeof n12.note == "function" ? n12.note(t13, {datum: n12.datum, x: n12.computed.text[0], y: n12.computed.text[1], theme: o8}) : (t13.font = o8.annotations.text.fontSize + "px " + o8.annotations.text.fontFamily, t13.textAlign = "left", t13.textBaseline = "alphabetic", t13.fillStyle = o8.annotations.text.fill, t13.strokeStyle = o8.annotations.text.outlineColor, t13.lineWidth = 2 * o8.annotations.text.outlineWidth, o8.annotations.text.outlineWidth > 0 && (t13.lineJoin = "round", t13.strokeText(n12.note, n12.computed.text[0], n12.computed.text[1]), t13.lineJoin = "miter"), t13.fillText(n12.note, n12.computed.text[0], n12.computed.text[1]));
    }), t13.restore());
  };

  // ../../node_modules/@nivo/bar/dist/nivo-bar.es.js
  var import_jsx_runtime7 = __toModule(require_jsx_runtime());
  var import_react58 = __toModule(require_react());
  var import_uniqBy2 = __toModule(require_uniqBy());
  function z5() {
    return z5 = Object.assign || function(e15) {
      for (var a7 = 1; a7 < arguments.length; a7++) {
        var i9 = arguments[a7];
        for (var t13 in i9)
          Object.prototype.hasOwnProperty.call(i9, t13) && (e15[t13] = i9[t13]);
      }
      return e15;
    }, z5.apply(this, arguments);
  }
  function K3(e15, a7) {
    if (e15 == null)
      return {};
    var i9, t13, n11 = {}, r9 = Object.keys(e15);
    for (t13 = 0; t13 < r9.length; t13++)
      i9 = r9[t13], a7.indexOf(i9) >= 0 || (n11[i9] = e15[i9]);
    return n11;
  }
  var N3;
  var J4 = function(e15) {
    var a7 = e15.bars, i9 = e15.annotations, t13 = O6({data: a7, annotations: i9, getPosition: function(e16) {
      return {x: e16.x + e16.width / 2, y: e16.y + e16.height / 2};
    }, getDimensions: function(e16) {
      var a8 = e16.height, i10 = e16.width;
      return {width: i10, height: a8, size: Math.max(i10, a8)};
    }});
    return (0, import_jsx_runtime7.jsx)(import_jsx_runtime7.Fragment, {children: t13.map(function(e16, a8) {
      return (0, import_jsx_runtime7.jsx)(R, z5({}, e16), a8);
    })});
  };
  var Q3 = function(e15) {
    var a7 = e15.width, i9 = e15.height, t13 = e15.legends, n11 = e15.toggleSerie;
    return (0, import_jsx_runtime7.jsx)(import_jsx_runtime7.Fragment, {children: t13.map(function(e16, t14) {
      var r9, l4 = e16[0], o8 = e16[1];
      return (0, import_jsx_runtime7.jsx)(X, z5({}, l4, {containerWidth: a7, containerHeight: i9, data: (r9 = l4.data) != null ? r9 : o8, toggleSerie: l4.toggleSerie && l4.dataFrom === "keys" ? n11 : void 0}), t14);
    })});
  };
  var U2 = ["data"];
  var Z3 = function(e15) {
    var a7, i9 = e15.bar, t13 = i9.data, n11 = K3(i9, U2), r9 = e15.style, l4 = r9.borderColor, o8 = r9.color, u4 = r9.height, s4 = r9.labelColor, h4 = r9.labelOpacity, g6 = r9.labelX, v8 = r9.labelY, f4 = r9.transform, m5 = r9.width, p6 = e15.borderRadius, x7 = e15.borderWidth, y6 = e15.label, S6 = e15.shouldRenderLabel, k6 = e15.isInteractive, w5 = e15.onClick, L5 = e15.onMouseEnter, C6 = e15.onMouseLeave, M5 = e15.tooltip, I4 = e15.isFocusable, T7 = e15.ariaLabel, R3 = e15.ariaLabelledBy, P8 = e15.ariaDescribedBy, F3 = Vt(), Y6 = k(), D4 = Y6.showTooltipFromEvent, O8 = Y6.showTooltipAt, G = Y6.hideTooltip, A8 = (0, import_react58.useMemo)(function() {
      return function() {
        return (0, import_react58.createElement)(M5, z5({}, n11, t13));
      };
    }, [M5, n11, t13]), j4 = (0, import_react58.useCallback)(function(e16) {
      w5 == null || w5(z5({color: n11.color}, t13), e16);
    }, [n11, t13, w5]), q4 = (0, import_react58.useCallback)(function(e16) {
      return D4(A8(), e16);
    }, [D4, A8]), N5 = (0, import_react58.useCallback)(function(e16) {
      L5 == null || L5(t13, e16), D4(A8(), e16);
    }, [t13, L5, D4, A8]), J6 = (0, import_react58.useCallback)(function(e16) {
      C6 == null || C6(t13, e16), G();
    }, [t13, G, C6]), Q6 = (0, import_react58.useCallback)(function() {
      O8(A8(), [n11.absX + n11.width / 2, n11.absY]);
    }, [O8, A8, n11]), Z5 = (0, import_react58.useCallback)(function() {
      G();
    }, [G]);
    return (0, import_jsx_runtime7.jsxs)(animated.g, {transform: f4, children: [(0, import_jsx_runtime7.jsx)(animated.rect, {width: to2(m5, function(e16) {
      return Math.max(e16, 0);
    }), height: to2(u4, function(e16) {
      return Math.max(e16, 0);
    }), rx: p6, ry: p6, fill: (a7 = t13.fill) != null ? a7 : o8, strokeWidth: x7, stroke: l4, focusable: I4, tabIndex: I4 ? 0 : void 0, "aria-label": T7 ? T7(t13) : void 0, "aria-labelledby": R3 ? R3(t13) : void 0, "aria-describedby": P8 ? P8(t13) : void 0, onMouseEnter: k6 ? N5 : void 0, onMouseMove: k6 ? q4 : void 0, onMouseLeave: k6 ? J6 : void 0, onClick: k6 ? j4 : void 0, onFocus: k6 && I4 ? Q6 : void 0, onBlur: k6 && I4 ? Z5 : void 0}), S6 && (0, import_jsx_runtime7.jsx)(animated.text, {x: g6, y: v8, textAnchor: "middle", dominantBaseline: "central", fillOpacity: h4, style: z5({}, F3.labels.text, {pointerEvents: "none", fill: s4}), children: y6})]});
  };
  var $3 = ["color", "label"];
  var _3 = {indexBy: "id", keys: ["value"], groupMode: "stacked", layout: "vertical", reverse: false, minValue: "auto", maxValue: "auto", valueScale: {type: "linear"}, indexScale: {type: "band", round: true}, padding: 0.1, innerPadding: 0, axisBottom: {}, axisLeft: {}, enableGridX: false, enableGridY: true, enableLabel: true, label: "formattedValue", labelSkipWidth: 0, labelSkipHeight: 0, labelTextColor: {from: "theme", theme: "labels.text.fill"}, colorBy: "id", colors: {scheme: "nivo"}, borderRadius: 0, borderWidth: 0, borderColor: {from: "color"}, isInteractive: true, tooltip: function(e15) {
    var a7 = e15.color, i9 = e15.label, t13 = K3(e15, $3);
    return (0, import_jsx_runtime7.jsx)(w, {id: i9, value: t13.formattedValue, enableChip: true, color: a7});
  }, tooltipLabel: function(e15) {
    return e15.id + " - " + e15.indexValue;
  }, legends: [], initialHiddenIds: [], annotations: [], markers: []};
  var ee2 = z5({}, _3, {layers: ["grid", "axes", "bars", "markers", "legends", "annotations"], barComponent: Z3, defs: [], fill: [], animate: true, motionConfig: "default", role: "img", isFocusable: false});
  var ae = z5({}, _3, {layers: ["grid", "axes", "bars", "legends", "annotations"], pixelRatio: typeof window != "undefined" && (N3 = window.devicePixelRatio) != null ? N3 : 1});
  var ie2 = function(e15, a7, i9, t13, n11, r9) {
    return cn(t13, {all: e15.map(a7), min: 0, max: 0}, n11, r9).padding(i9);
  };
  var te2 = function(e15, a7) {
    return e15.map(function(e16) {
      return z5({}, a7.reduce(function(e17, a8) {
        return e17[a8] = null, e17;
      }, {}), e16);
    });
  };
  var ne2 = function(e15) {
    return Object.keys(e15).reduce(function(a7, i9) {
      return e15[i9] && (a7[i9] = e15[i9]), a7;
    }, {});
  };
  var re4 = function(e15) {
    return [e15, Number(e15)];
  };
  var le2 = ["layout", "minValue", "maxValue", "reverse", "width", "height", "padding", "innerPadding", "valueScale", "indexScale", "hiddenIds"];
  var oe2 = function(e15, a7) {
    return e15 > a7;
  };
  var de = function(e15, a7) {
    return e15 < a7;
  };
  var ue2 = function(e15, a7) {
    return Array.from(" ".repeat(a7 - e15), function(a8, i9) {
      return e15 + i9;
    });
  };
  var ce2 = function(e15) {
    return oe2(e15, 0) ? 0 : e15;
  };
  var se2 = function(e15, a7, i9, t13) {
    var n11 = e15.data, r9 = e15.formatValue, l4 = e15.getColor, o8 = e15.getIndex, d4 = e15.getTooltipLabel, u4 = e15.innerPadding, c6 = u4 === void 0 ? 0 : u4, s4 = e15.keys, h4 = e15.xScale, b8 = e15.yScale, g6 = e15.margin, v8 = i9 ? de : oe2, f4 = n11.map(ne2), m5 = [];
    return s4.forEach(function(e16, i10) {
      return ue2(0, h4.domain().length).forEach(function(u5) {
        var s5, p6, x7, y6 = re4(n11[u5][e16]), S6 = y6[0], k6 = y6[1], w5 = o8(n11[u5]), L5 = ((s5 = h4(w5)) != null ? s5 : 0) + a7 * i10 + c6 * i10, C6 = v8(p6 = k6, 0) ? (x7 = b8(p6)) != null ? x7 : 0 : t13, V5 = function(e17, a8) {
          var i11;
          return v8(e17, 0) ? t13 - a8 : ((i11 = b8(e17)) != null ? i11 : 0) - t13;
        }(k6, C6), W7 = {id: e16, value: S6 === null ? S6 : k6, formattedValue: r9(k6), hidden: false, index: u5, indexValue: w5, data: f4[u5]};
        m5.push({key: e16 + "." + W7.indexValue, index: m5.length, data: W7, x: L5, y: C6, absX: g6.left + L5, absY: g6.top + C6, width: a7, height: V5, color: l4(W7), label: d4(W7)});
      });
    }), m5;
  };
  var he2 = function(e15, a7, i9, t13) {
    var n11 = e15.data, r9 = e15.formatValue, l4 = e15.getIndex, o8 = e15.getColor, d4 = e15.getTooltipLabel, u4 = e15.keys, c6 = e15.innerPadding, s4 = c6 === void 0 ? 0 : c6, h4 = e15.xScale, b8 = e15.yScale, g6 = e15.margin, v8 = i9 ? de : oe2, f4 = n11.map(ne2), m5 = [];
    return u4.forEach(function(e16, i10) {
      return ue2(0, b8.domain().length).forEach(function(u5) {
        var c7, p6, x7, y6 = re4(n11[u5][e16]), S6 = y6[0], k6 = y6[1], w5 = l4(n11[u5]), L5 = v8(p6 = k6, 0) ? t13 : (x7 = h4(p6)) != null ? x7 : 0, C6 = ((c7 = b8(w5)) != null ? c7 : 0) + a7 * i10 + s4 * i10, V5 = function(e17, a8) {
          var i11;
          return v8(e17, 0) ? ((i11 = h4(e17)) != null ? i11 : 0) - t13 : t13 - a8;
        }(k6, L5), W7 = {id: e16, value: S6 === null ? S6 : k6, formattedValue: r9(k6), hidden: false, index: u5, indexValue: w5, data: f4[u5]};
        m5.push({key: e16 + "." + W7.indexValue, index: m5.length, data: W7, x: L5, y: C6, absX: g6.left + L5, absY: g6.top + C6, width: V5, height: a7, color: o8(W7), label: d4(W7)});
      });
    }), m5;
  };
  var be = function(e15) {
    var a7, i9, t13 = e15.layout, n11 = e15.minValue, r9 = e15.maxValue, l4 = e15.reverse, o8 = e15.width, d4 = e15.height, u4 = e15.padding, c6 = u4 === void 0 ? 0 : u4, s4 = e15.innerPadding, h4 = s4 === void 0 ? 0 : s4, b8 = e15.valueScale, g6 = e15.indexScale, v8 = e15.hiddenIds, f4 = v8 === void 0 ? [] : v8, m5 = K3(e15, le2), p6 = m5.keys.filter(function(e16) {
      return !f4.includes(e16);
    }), x7 = te2(m5.data, p6), y6 = t13 === "vertical" ? ["y", "x", o8] : ["x", "y", d4], S6 = y6[0], k6 = y6[1], w5 = y6[2], L5 = ie2(x7, m5.getIndex, c6, g6, w5, k6), C6 = z5({max: r9, min: n11, reverse: l4}, b8), V5 = C6.min === "auto" ? ce2 : function(e16) {
      return e16;
    }, W7 = x7.reduce(function(e16, a8) {
      return [].concat(e16, p6.map(function(e17) {
        return a8[e17];
      }));
    }, []).filter(Boolean), B5 = V5(Math.min.apply(Math, W7)), M5 = (i9 = Math.max.apply(Math, W7), isFinite(i9) ? i9 : 0), I4 = cn(C6, {all: W7, min: B5, max: M5}, S6 === "x" ? o8 : d4, S6), T7 = t13 === "vertical" ? [L5, I4] : [I4, L5], R3 = T7[0], P8 = T7[1], H4 = (L5.bandwidth() - h4 * (p6.length - 1)) / p6.length, E4 = [z5({}, m5, {data: x7, keys: p6, innerPadding: h4, xScale: R3, yScale: P8}), H4, C6.reverse, (a7 = I4(0)) != null ? a7 : 0];
    return {xScale: R3, yScale: P8, bars: H4 > 0 ? t13 === "vertical" ? se2.apply(void 0, E4) : he2.apply(void 0, E4) : []};
  };
  var ge2 = ["data", "layout", "minValue", "maxValue", "reverse", "width", "height", "padding", "valueScale", "indexScale", "hiddenIds"];
  var ve2 = function e11(a7) {
    var i9;
    return a7.some(Array.isArray) ? e11((i9 = []).concat.apply(i9, a7)) : a7;
  };
  var fe2 = function(e15, a7, i9) {
    var t13 = e15.formatValue, n11 = e15.getColor, r9 = e15.getIndex, l4 = e15.getTooltipLabel, o8 = e15.innerPadding, d4 = e15.stackedData, u4 = e15.xScale, c6 = e15.yScale, s4 = e15.margin, h4 = [];
    return d4.forEach(function(e16) {
      return u4.domain().forEach(function(d5, b8) {
        var g6, v8, f4 = e16[b8], m5 = (g6 = u4(r9(f4.data))) != null ? g6 : 0, p6 = ((v8 = function(e17) {
          return c6(e17[i9 ? 0 : 1]);
        }(f4)) != null ? v8 : 0) + 0.5 * o8, x7 = function(e17, a8) {
          var t14;
          return ((t14 = c6(e17[i9 ? 1 : 0])) != null ? t14 : 0) - a8;
        }(f4, p6) - o8, y6 = re4(f4.data[e16.key]), S6 = y6[0], k6 = y6[1], w5 = {id: e16.key, value: S6 === null ? S6 : k6, formattedValue: t13(k6), hidden: false, index: b8, indexValue: d5, data: ne2(f4.data)};
        h4.push({key: e16.key + "." + d5, index: h4.length, data: w5, x: m5, y: p6, absX: s4.left + m5, absY: s4.top + p6, width: a7, height: x7, color: n11(w5), label: l4(w5)});
      });
    }), h4;
  };
  var me = function(e15, a7, i9) {
    var t13 = e15.formatValue, n11 = e15.getColor, r9 = e15.getIndex, l4 = e15.getTooltipLabel, o8 = e15.innerPadding, d4 = e15.stackedData, u4 = e15.xScale, c6 = e15.yScale, s4 = e15.margin, h4 = [];
    return d4.forEach(function(e16) {
      return c6.domain().forEach(function(d5, b8) {
        var g6, v8, f4 = e16[b8], m5 = (g6 = c6(r9(f4.data))) != null ? g6 : 0, p6 = ((v8 = function(e17) {
          return u4(e17[i9 ? 1 : 0]);
        }(f4)) != null ? v8 : 0) + 0.5 * o8, x7 = function(e17, a8) {
          var t14;
          return ((t14 = u4(e17[i9 ? 0 : 1])) != null ? t14 : 0) - a8;
        }(f4, p6) - o8, y6 = re4(f4.data[e16.key]), S6 = y6[0], k6 = y6[1], w5 = {id: e16.key, value: S6 === null ? S6 : k6, formattedValue: t13(k6), hidden: false, index: b8, indexValue: d5, data: ne2(f4.data)};
        h4.push({key: e16.key + "." + d5, index: h4.length, data: w5, x: p6, y: m5, absX: s4.left + p6, absY: s4.top + m5, width: x7, height: a7, color: n11(w5), label: l4(w5)});
      });
    }), h4;
  };
  var pe2 = function(e15) {
    var a7, i9 = e15.data, t13 = e15.layout, n11 = e15.minValue, r9 = e15.maxValue, l4 = e15.reverse, o8 = e15.width, d4 = e15.height, u4 = e15.padding, c6 = u4 === void 0 ? 0 : u4, s4 = e15.valueScale, h4 = e15.indexScale, b8 = e15.hiddenIds, g6 = b8 === void 0 ? [] : b8, v8 = K3(e15, ge2), f4 = v8.keys.filter(function(e16) {
      return !g6.includes(e16);
    }), m5 = stack_default().keys(f4).offset(diverging_default)(te2(i9, f4)), p6 = t13 === "vertical" ? ["y", "x", o8] : ["x", "y", d4], x7 = p6[0], y6 = p6[1], S6 = p6[2], k6 = ie2(i9, v8.getIndex, c6, h4, S6, y6), w5 = z5({max: r9, min: n11, reverse: l4}, s4), L5 = (a7 = ve2(m5), s4.type === "log" ? a7.filter(function(e16) {
      return e16 !== 0;
    }) : a7), C6 = Math.min.apply(Math, L5), V5 = Math.max.apply(Math, L5), W7 = cn(w5, {all: L5, min: C6, max: V5}, x7 === "x" ? o8 : d4, x7), B5 = t13 === "vertical" ? [k6, W7] : [W7, k6], M5 = B5[0], I4 = B5[1], T7 = v8.innerPadding > 0 ? v8.innerPadding : 0, R3 = k6.bandwidth(), P8 = [z5({}, v8, {innerPadding: T7, stackedData: m5, xScale: M5, yScale: I4}), R3, w5.reverse];
    return {xScale: M5, yScale: I4, bars: R3 > 0 ? t13 === "vertical" ? fe2.apply(void 0, P8) : me.apply(void 0, P8) : []};
  };
  var xe = function(e15) {
    var a7 = e15.bars, i9 = e15.direction, t13 = e15.from, n11 = e15.groupMode, r9 = e15.layout, l4 = e15.legendLabel, o8 = e15.reverse, d4 = Ui(l4 != null ? l4 : t13 === "indexes" ? "indexValue" : "id");
    return t13 === "indexes" ? function(e16, a8, i10) {
      var t14 = (0, import_uniqBy2.default)(e16.map(function(e17) {
        var a9, t15;
        return {id: (a9 = e17.data.indexValue) != null ? a9 : "", label: i10(e17.data), hidden: e17.data.hidden, color: (t15 = e17.color) != null ? t15 : "#000"};
      }), function(e17) {
        return e17.id;
      });
      return a8 === "horizontal" && t14.reverse(), t14;
    }(a7, r9, d4) : function(e16, a8, i10, t14, n12, r10) {
      var l5 = (0, import_uniqBy2.default)(e16.map(function(e17) {
        var a9;
        return {id: e17.data.id, label: r10(e17.data), hidden: e17.data.hidden, color: (a9 = e17.color) != null ? a9 : "#000"};
      }), function(e17) {
        return e17.id;
      });
      return (a8 === "vertical" && t14 === "stacked" && i10 === "column" && n12 !== true || a8 === "horizontal" && t14 === "stacked" && n12 === true) && l5.reverse(), l5;
    }(a7, r9, i9, n11, o8, d4);
  };
  var ye = function(e15) {
    var a7 = e15.indexBy, i9 = a7 === void 0 ? _3.indexBy : a7, t13 = e15.keys, n11 = t13 === void 0 ? _3.keys : t13, r9 = e15.label, l4 = r9 === void 0 ? _3.label : r9, o8 = e15.tooltipLabel, d4 = o8 === void 0 ? _3.tooltipLabel : o8, u4 = e15.valueFormat, c6 = e15.colors, s4 = c6 === void 0 ? _3.colors : c6, h4 = e15.colorBy, g6 = h4 === void 0 ? _3.colorBy : h4, m5 = e15.borderColor, p6 = m5 === void 0 ? _3.borderColor : m5, x7 = e15.labelTextColor, y6 = x7 === void 0 ? _3.labelTextColor : x7, S6 = e15.groupMode, k6 = S6 === void 0 ? _3.groupMode : S6, w5 = e15.layout, L5 = w5 === void 0 ? _3.layout : w5, C6 = e15.reverse, W7 = C6 === void 0 ? _3.reverse : C6, I4 = e15.data, T7 = e15.minValue, R3 = T7 === void 0 ? _3.minValue : T7, P8 = e15.maxValue, H4 = P8 === void 0 ? _3.maxValue : P8, E4 = e15.margin, F3 = e15.width, X7 = e15.height, Y6 = e15.padding, G = Y6 === void 0 ? _3.padding : Y6, A8 = e15.innerPadding, j4 = A8 === void 0 ? _3.innerPadding : A8, q4 = e15.valueScale, K6 = q4 === void 0 ? _3.valueScale : q4, N5 = e15.indexScale, J6 = N5 === void 0 ? _3.indexScale : N5, Q6 = e15.initialHiddenIds, U4 = Q6 === void 0 ? _3.initialHiddenIds : Q6, Z5 = e15.enableLabel, $5 = Z5 === void 0 ? _3.enableLabel : Z5, ee4 = e15.labelSkipWidth, ae4 = ee4 === void 0 ? _3.labelSkipWidth : ee4, ie5 = e15.labelSkipHeight, te5 = ie5 === void 0 ? _3.labelSkipHeight : ie5, ne5 = e15.legends, re6 = ne5 === void 0 ? _3.legends : ne5, le4 = e15.legendLabel, oe5 = (0, import_react58.useState)(U4 != null ? U4 : []), de4 = oe5[0], ue4 = oe5[1], ce4 = (0, import_react58.useCallback)(function(e16) {
      ue4(function(a8) {
        return a8.indexOf(e16) > -1 ? a8.filter(function(a9) {
          return a9 !== e16;
        }) : [].concat(a8, [e16]);
      });
    }, []), se5 = Xi(i9), he4 = Xi(l4), ge4 = Xi(d4), ve4 = Xt(u4), fe4 = Vt(), me3 = dr(s4, g6), ye3 = We(p6, fe4), Se4 = We(y6, fe4), ke3 = (k6 === "grouped" ? be : pe2)({layout: L5, reverse: W7, data: I4, getIndex: se5, keys: n11, minValue: R3, maxValue: H4, width: F3, height: X7, getColor: me3, padding: G, innerPadding: j4, valueScale: K6, indexScale: J6, hiddenIds: de4, formatValue: ve4, getTooltipLabel: ge4, margin: E4}), we4 = ke3.bars, Le4 = ke3.xScale, Ce4 = ke3.yScale, Ve4 = (0, import_react58.useMemo)(function() {
      return we4.filter(function(e16) {
        return e16.data.value !== null;
      }).map(function(e16, a8) {
        return z5({}, e16, {index: a8});
      });
    }, [we4]), We4 = (0, import_react58.useCallback)(function(e16) {
      var a8 = e16.width, i10 = e16.height;
      return !!$5 && (!(ae4 > 0 && a8 < ae4) && !(te5 > 0 && i10 < te5));
    }, [$5, ae4, te5]), Be4 = (0, import_react58.useMemo)(function() {
      return n11.map(function(e16) {
        var a8 = we4.find(function(a9) {
          return a9.data.id === e16;
        });
        return z5({}, a8, {data: z5({id: e16}, a8 == null ? void 0 : a8.data, {hidden: de4.includes(e16)})});
      });
    }, [de4, n11, we4]), Me4 = (0, import_react58.useMemo)(function() {
      return re6.map(function(e16) {
        return [e16, xe({bars: e16.dataFrom === "keys" ? Be4 : we4, direction: e16.direction, from: e16.dataFrom, groupMode: k6, layout: L5, legendLabel: le4, reverse: W7})];
      });
    }, [re6, Be4, we4, k6, L5, le4, W7]);
    return {bars: we4, barsWithValue: Ve4, xScale: Le4, yScale: Ce4, getIndex: se5, getLabel: he4, getTooltipLabel: ge4, formatValue: ve4, getColor: me3, getBorderColor: ye3, getLabelColor: Se4, shouldRenderBarLabel: We4, hiddenIds: de4, toggleSerie: ce4, legendsWithData: Me4};
  };
  var Se2 = ["isInteractive", "animate", "motionConfig", "theme", "renderWrapper"];
  var ke = function(i9) {
    var t13 = i9.data, n11 = i9.indexBy, r9 = i9.keys, l4 = i9.margin, o8 = i9.width, u4 = i9.height, c6 = i9.groupMode, s4 = i9.layout, h4 = i9.reverse, b8 = i9.minValue, g6 = i9.maxValue, v8 = i9.valueScale, f4 = i9.indexScale, m5 = i9.padding, w5 = i9.innerPadding, L5 = i9.axisTop, C6 = i9.axisRight, B5 = i9.axisBottom, M5 = B5 === void 0 ? ee2.axisBottom : B5, T7 = i9.axisLeft, R3 = T7 === void 0 ? ee2.axisLeft : T7, P8 = i9.enableGridX, H4 = P8 === void 0 ? ee2.enableGridX : P8, E4 = i9.enableGridY, X7 = E4 === void 0 ? ee2.enableGridY : E4, Y6 = i9.gridXValues, D4 = i9.gridYValues, O8 = i9.layers, G = O8 === void 0 ? ee2.layers : O8, A8 = i9.barComponent, j4 = A8 === void 0 ? ee2.barComponent : A8, q4 = i9.enableLabel, K6 = i9.label, N5 = i9.labelSkipWidth, U4 = i9.labelSkipHeight, Z5 = i9.labelTextColor, $5 = i9.markers, _5 = $5 === void 0 ? ee2.markers : $5, ae4 = i9.colorBy, ie5 = i9.colors, te5 = i9.defs, ne5 = te5 === void 0 ? ee2.defs : te5, re6 = i9.fill, le4 = re6 === void 0 ? ee2.fill : re6, oe5 = i9.borderRadius, de4 = oe5 === void 0 ? ee2.borderRadius : oe5, ue4 = i9.borderWidth, ce4 = ue4 === void 0 ? ee2.borderWidth : ue4, se5 = i9.borderColor, he4 = i9.annotations, be3 = he4 === void 0 ? ee2.annotations : he4, ge4 = i9.legendLabel, ve4 = i9.tooltipLabel, fe4 = i9.valueFormat, me3 = i9.isInteractive, pe4 = me3 === void 0 ? ee2.isInteractive : me3, xe3 = i9.tooltip, Se4 = xe3 === void 0 ? ee2.tooltip : xe3, ke3 = i9.onClick, we4 = i9.onMouseEnter, Le4 = i9.onMouseLeave, Ce4 = i9.legends, Ve4 = i9.role, We4 = Ve4 === void 0 ? ee2.role : Ve4, Be4 = i9.ariaLabel, Me4 = i9.ariaLabelledBy, Ie = i9.ariaDescribedBy, Te3 = i9.isFocusable, Re3 = Te3 === void 0 ? ee2.isFocusable : Te3, Pe3 = i9.barAriaLabel, He2 = i9.barAriaLabelledBy, Ee2 = i9.barAriaDescribedBy, Fe3 = i9.initialHiddenIds, Xe2 = tt(), Ye2 = Xe2.animate, De2 = Xe2.config, Oe3 = At(o8, u4, l4), Ge3 = Oe3.outerWidth, Ae = Oe3.outerHeight, je2 = Oe3.margin, qe3 = Oe3.innerWidth, ze2 = Oe3.innerHeight, Ke2 = ye({indexBy: n11, label: K6, tooltipLabel: ve4, valueFormat: fe4, colors: ie5, colorBy: ae4, borderColor: se5, labelTextColor: Z5, groupMode: c6, layout: s4, reverse: h4, data: t13, keys: r9, minValue: b8, maxValue: g6, margin: je2, width: qe3, height: ze2, padding: m5, innerPadding: w5, valueScale: v8, indexScale: f4, enableLabel: q4, labelSkipWidth: N5, labelSkipHeight: U4, legends: Ce4, legendLabel: ge4, initialHiddenIds: Fe3}), Ne2 = Ke2.bars, Je2 = Ke2.barsWithValue, Qe3 = Ke2.xScale, Ue2 = Ke2.yScale, Ze2 = Ke2.getLabel, $e2 = Ke2.getTooltipLabel, _e2 = Ke2.getBorderColor, ea = Ke2.getLabelColor, aa = Ke2.shouldRenderBarLabel, ia = Ke2.toggleSerie, ta = Ke2.legendsWithData, na = useTransition(Je2, {keys: function(e15) {
      return e15.key;
    }, from: function(e15) {
      return z5({borderColor: _e2(e15), color: e15.color, height: 0, labelColor: ea(e15), labelOpacity: 0, labelX: e15.width / 2, labelY: e15.height / 2, transform: "translate(" + e15.x + ", " + (e15.y + e15.height) + ")", width: e15.width}, s4 === "vertical" ? {} : {height: e15.height, transform: "translate(" + e15.x + ", " + e15.y + ")", width: 0});
    }, enter: function(e15) {
      return {borderColor: _e2(e15), color: e15.color, height: e15.height, labelColor: ea(e15), labelOpacity: 1, labelX: e15.width / 2, labelY: e15.height / 2, transform: "translate(" + e15.x + ", " + e15.y + ")", width: e15.width};
    }, update: function(e15) {
      return {borderColor: _e2(e15), color: e15.color, height: e15.height, labelColor: ea(e15), labelOpacity: 1, labelX: e15.width / 2, labelY: e15.height / 2, transform: "translate(" + e15.x + ", " + e15.y + ")", width: e15.width};
    }, leave: function(e15) {
      return z5({borderColor: _e2(e15), color: e15.color, height: 0, labelColor: ea(e15), labelOpacity: 0, labelX: e15.width / 2, labelY: 0, transform: "translate(" + e15.x + ", " + (e15.y + e15.height) + ")", width: e15.width}, s4 === "vertical" ? {} : {labelX: 0, labelY: e15.height / 2, height: e15.height, transform: "translate(" + e15.x + ", " + e15.y + ")", width: 0});
    }, config: De2, immediate: !Ye2}), ra = (0, import_react58.useMemo)(function() {
      return {borderRadius: de4, borderWidth: ce4, enableLabel: q4, isInteractive: pe4, labelSkipWidth: N5, labelSkipHeight: U4, onClick: ke3, onMouseEnter: we4, onMouseLeave: Le4, getTooltipLabel: $e2, tooltip: Se4, isFocusable: Re3, ariaLabel: Pe3, ariaLabelledBy: He2, ariaDescribedBy: Ee2};
    }, [de4, ce4, q4, $e2, pe4, U4, N5, ke3, we4, Le4, Se4, Re3, Pe3, He2, Ee2]), la = rn(ne5, Ne2, le4, {dataKey: "data", targetKey: "data.fill"}), oa = {annotations: null, axes: null, bars: null, grid: null, legends: null, markers: null};
    G.includes("annotations") && (oa.annotations = (0, import_jsx_runtime7.jsx)(J4, {bars: Ne2, annotations: be3}, "annotations")), G.includes("axes") && (oa.axes = (0, import_jsx_runtime7.jsx)(X5, {xScale: Qe3, yScale: Ue2, width: qe3, height: ze2, top: L5, right: C6, bottom: M5, left: R3}, "axes")), G.includes("bars") && (oa.bars = (0, import_jsx_runtime7.jsx)(import_react58.Fragment, {children: na(function(e15, a7) {
      return (0, import_react58.createElement)(j4, z5({}, ra, {bar: a7, style: e15, shouldRenderLabel: aa(a7), label: Ze2(a7.data)}));
    })}, "bars")), G.includes("grid") && (oa.grid = (0, import_jsx_runtime7.jsx)(B3, {width: qe3, height: ze2, xScale: H4 ? Qe3 : null, yScale: X7 ? Ue2 : null, xValues: Y6, yValues: D4}, "grid")), G.includes("legends") && (oa.legends = (0, import_jsx_runtime7.jsx)(Q3, {width: qe3, height: ze2, legends: ta, toggleSerie: ia}, "legends")), G.includes("markers") && (oa.markers = (0, import_jsx_runtime7.jsx)(Bi, {markers: _5, width: qe3, height: ze2, xScale: Qe3, yScale: Ue2}, "markers"));
    var da = (0, import_react58.useMemo)(function() {
      return z5({}, ra, {margin: je2, innerWidth: qe3, innerHeight: ze2, width: o8, height: u4, bars: Ne2, xScale: Qe3, yScale: Ue2});
    }, [ra, je2, qe3, ze2, o8, u4, Ne2, Qe3, Ue2]);
    return (0, import_jsx_runtime7.jsx)(Si, {width: Ge3, height: Ae, margin: je2, defs: la, role: We4, ariaLabel: Be4, ariaLabelledBy: Me4, ariaDescribedBy: Ie, isFocusable: Re3, children: G.map(function(e15, a7) {
      var i10;
      return typeof e15 == "function" ? (0, import_jsx_runtime7.jsx)(import_react58.Fragment, {children: (0, import_react58.createElement)(e15, da)}, a7) : (i10 = oa == null ? void 0 : oa[e15]) != null ? i10 : null;
    })});
  };
  var we2 = function(e15) {
    var a7 = e15.isInteractive, i9 = a7 === void 0 ? ee2.isInteractive : a7, t13 = e15.animate, n11 = t13 === void 0 ? ee2.animate : t13, r9 = e15.motionConfig, l4 = r9 === void 0 ? ee2.motionConfig : r9, o8 = e15.theme, u4 = e15.renderWrapper, c6 = K3(e15, Se2);
    return (0, import_jsx_runtime7.jsx)(Zt, {animate: n11, isInteractive: i9, motionConfig: l4, renderWrapper: u4, theme: o8, children: (0, import_jsx_runtime7.jsx)(ke, z5({isInteractive: i9}, c6))});
  };
  var Le2 = ["isInteractive", "renderWrapper", "theme"];
  var Ce2 = function(e15, a7, i9, t13) {
    return e15.find(function(e16) {
      return Ji(e16.x + a7.left, e16.y + a7.top, e16.width, e16.height, i9, t13);
    });
  };
  var Ve2 = function(e15) {
    var a7 = e15.data, r9 = e15.indexBy, u4 = e15.keys, c6 = e15.margin, s4 = e15.width, g6 = e15.height, v8 = e15.groupMode, f4 = e15.layout, m5 = e15.reverse, p6 = e15.minValue, y6 = e15.maxValue, S6 = e15.valueScale, k6 = e15.indexScale, L5 = e15.padding, C6 = e15.innerPadding, M5 = e15.axisTop, I4 = e15.axisRight, T7 = e15.axisBottom, H4 = T7 === void 0 ? ae.axisBottom : T7, E4 = e15.axisLeft, F3 = E4 === void 0 ? ae.axisLeft : E4, Y6 = e15.enableGridX, D4 = Y6 === void 0 ? ae.enableGridX : Y6, O8 = e15.enableGridY, G = O8 === void 0 ? ae.enableGridY : O8, A8 = e15.gridXValues, j4 = e15.gridYValues, q4 = e15.layers, K6 = q4 === void 0 ? ae.layers : q4, N5 = e15.renderBar, J6 = N5 === void 0 ? function(e16, a8) {
      var i9 = a8.bar, t13 = i9.color, n11 = i9.height, r10 = i9.width, l4 = i9.x, o8 = i9.y, d4 = a8.borderColor, u5 = a8.borderRadius, c7 = a8.borderWidth, s5 = a8.label, h4 = a8.labelColor, b8 = a8.shouldRenderLabel;
      if (e16.fillStyle = t13, c7 > 0 && (e16.strokeStyle = d4, e16.lineWidth = c7), e16.beginPath(), u5 > 0) {
        var g7 = Math.min(u5, n11);
        e16.moveTo(l4 + g7, o8), e16.lineTo(l4 + r10 - g7, o8), e16.quadraticCurveTo(l4 + r10, o8, l4 + r10, o8 + g7), e16.lineTo(l4 + r10, o8 + n11 - g7), e16.quadraticCurveTo(l4 + r10, o8 + n11, l4 + r10 - g7, o8 + n11), e16.lineTo(l4 + g7, o8 + n11), e16.quadraticCurveTo(l4, o8 + n11, l4, o8 + n11 - g7), e16.lineTo(l4, o8 + g7), e16.quadraticCurveTo(l4, o8, l4 + g7, o8), e16.closePath();
      } else
        e16.rect(l4, o8, r10, n11);
      e16.fill(), c7 > 0 && e16.stroke(), b8 && (e16.textBaseline = "middle", e16.textAlign = "center", e16.fillStyle = h4, e16.fillText(s5, l4 + r10 / 2, o8 + n11 / 2));
    } : N5, Q6 = e15.enableLabel, U4 = e15.label, Z5 = e15.labelSkipWidth, $5 = e15.labelSkipHeight, _5 = e15.labelTextColor, ee4 = e15.colorBy, ie5 = e15.colors, te5 = e15.borderRadius, ne5 = te5 === void 0 ? ae.borderRadius : te5, re6 = e15.borderWidth, le4 = re6 === void 0 ? ae.borderWidth : re6, oe5 = e15.borderColor, de4 = e15.annotations, ue4 = de4 === void 0 ? ae.annotations : de4, ce4 = e15.legendLabel, se5 = e15.tooltipLabel, he4 = e15.valueFormat, be3 = e15.isInteractive, ge4 = be3 === void 0 ? ae.isInteractive : be3, ve4 = e15.tooltip, fe4 = ve4 === void 0 ? ae.tooltip : ve4, me3 = e15.onClick, pe4 = e15.onMouseEnter, xe3 = e15.onMouseLeave, Se4 = e15.legends, ke3 = e15.pixelRatio, we4 = ke3 === void 0 ? ae.pixelRatio : ke3, Le4 = e15.canvasRef, Ve4 = (0, import_react58.useRef)(null), We4 = Vt(), Be4 = At(s4, g6, c6), Me4 = Be4.margin, Ie = Be4.innerWidth, Te3 = Be4.innerHeight, Re3 = Be4.outerWidth, Pe3 = Be4.outerHeight, He2 = ye({indexBy: r9, label: U4, tooltipLabel: se5, valueFormat: he4, colors: ie5, colorBy: ee4, borderColor: oe5, labelTextColor: _5, groupMode: v8, layout: f4, reverse: m5, data: a7, keys: u4, minValue: p6, maxValue: y6, margin: Me4, width: Ie, height: Te3, padding: L5, innerPadding: C6, valueScale: S6, indexScale: k6, enableLabel: Q6, labelSkipWidth: Z5, labelSkipHeight: $5, legends: Se4, legendLabel: ce4}), Ee2 = He2.bars, Fe3 = He2.barsWithValue, Xe2 = He2.xScale, Ye2 = He2.yScale, De2 = He2.getLabel, Oe3 = He2.getTooltipLabel, Ge3 = He2.getBorderColor, Ae = He2.getLabelColor, je2 = He2.shouldRenderBarLabel, qe3 = He2.legendsWithData, ze2 = k(), Ke2 = ze2.showTooltipFromEvent, Ne2 = ze2.hideTooltip, Je2 = j3({annotations: O6({data: Ee2, annotations: ue4, getPosition: function(e16) {
      return {x: e16.x, y: e16.y};
    }, getDimensions: function(e16) {
      var a8 = e16.width, i9 = e16.height;
      return {width: a8, height: i9, size: Math.max(a8, i9)};
    }})}), Qe3 = (0, import_react58.useMemo)(function() {
      return {borderRadius: ne5, borderWidth: le4, enableLabel: Q6, isInteractive: ge4, labelSkipWidth: Z5, labelSkipHeight: $5, onClick: me3, onMouseEnter: pe4, onMouseLeave: xe3, getTooltipLabel: Oe3, tooltip: fe4, margin: Me4, innerWidth: Ie, innerHeight: Te3, width: s4, height: g6, bars: Ee2, xScale: Xe2, yScale: Ye2};
    }, [ne5, le4, Q6, Oe3, g6, Te3, Ie, ge4, $5, Z5, Me4, me3, pe4, xe3, Ee2, Xe2, Ye2, fe4, s4]);
    (0, import_react58.useEffect)(function() {
      var e16, a8 = (e16 = Ve4.current) == null ? void 0 : e16.getContext("2d");
      Ve4.current && a8 && (Ve4.current.width = Re3 * we4, Ve4.current.height = Pe3 * we4, a8.scale(we4, we4), a8.fillStyle = We4.background, a8.fillRect(0, 0, Re3, Pe3), a8.translate(Me4.left, Me4.top), K6.forEach(function(e17) {
        e17 === "grid" ? typeof We4.grid.line.strokeWidth == "number" && We4.grid.line.strokeWidth > 0 && (a8.lineWidth = We4.grid.line.strokeWidth, a8.strokeStyle = We4.grid.line.stroke, D4 && C4(a8, {width: s4, height: g6, scale: Xe2, axis: "x", values: A8}), G && C4(a8, {width: s4, height: g6, scale: Ye2, axis: "y", values: j4})) : e17 === "axes" ? V3(a8, {xScale: Xe2, yScale: Ye2, width: Ie, height: Te3, top: M5, right: I4, bottom: H4, left: F3, theme: We4}) : e17 === "bars" ? Fe3.forEach(function(e18) {
          J6(a8, {bar: e18, borderColor: Ge3(e18), borderRadius: ne5, borderWidth: le4, label: De2(e18.data), labelColor: Ae(e18), shouldRenderLabel: je2(e18)});
        }) : e17 === "legends" ? qe3.forEach(function(e18) {
          var i9 = e18[0], t13 = e18[1];
          H(a8, z5({}, i9, {data: t13, containerWidth: Ie, containerHeight: Te3, theme: We4}));
        }) : e17 === "annotations" ? J3(a8, {annotations: Je2, theme: We4}) : typeof e17 == "function" && e17(a8, Qe3);
      }), a8.save());
    }, [H4, F3, I4, M5, Fe3, ne5, le4, Je2, D4, G, Ge3, De2, Ae, A8, j4, v8, g6, Te3, Ie, Qe3, K6, f4, qe3, Me4.left, Me4.top, Pe3, Re3, we4, J6, Xe2, Ye2, m5, je2, We4, s4]);
    var Ue2 = (0, import_react58.useCallback)(function(e16) {
      if (Ee2 && Ve4.current) {
        var a8 = Qi(Ve4.current, e16), i9 = a8[0], t13 = a8[1], n11 = Ce2(Ee2, Me4, i9, t13);
        n11 !== void 0 ? (Ke2((0, import_react58.createElement)(fe4, z5({}, n11.data, {color: n11.color, label: n11.label, value: Number(n11.data.value)})), e16), e16.type === "mouseenter" && (pe4 == null || pe4(n11.data, e16))) : Ne2();
      }
    }, [Ne2, Me4, pe4, Ee2, Ke2, fe4]), Ze2 = (0, import_react58.useCallback)(function(e16) {
      if (Ee2 && Ve4.current) {
        Ne2();
        var a8 = Qi(Ve4.current, e16), i9 = a8[0], t13 = a8[1], n11 = Ce2(Ee2, Me4, i9, t13);
        n11 && (xe3 == null || xe3(n11.data, e16));
      }
    }, [Ne2, Me4, xe3, Ee2]), $e2 = (0, import_react58.useCallback)(function(e16) {
      if (Ee2 && Ve4.current) {
        var a8 = Qi(Ve4.current, e16), i9 = a8[0], t13 = a8[1], n11 = Ce2(Ee2, Me4, i9, t13);
        n11 !== void 0 && (me3 == null || me3(z5({}, n11.data, {color: n11.color}), e16));
      }
    }, [Me4, me3, Ee2]);
    return (0, import_jsx_runtime7.jsx)("canvas", {ref: function(e16) {
      Ve4.current = e16, Le4 && "current" in Le4 && (Le4.current = e16);
    }, width: Re3 * we4, height: Pe3 * we4, style: {width: Re3, height: Pe3, cursor: ge4 ? "auto" : "normal"}, onMouseEnter: ge4 ? Ue2 : void 0, onMouseMove: ge4 ? Ue2 : void 0, onMouseLeave: ge4 ? Ze2 : void 0, onClick: ge4 ? $e2 : void 0});
  };
  var We2 = (0, import_react58.forwardRef)(function(e15, a7) {
    var i9 = e15.isInteractive, t13 = e15.renderWrapper, n11 = e15.theme, r9 = K3(e15, Le2);
    return (0, import_jsx_runtime7.jsx)(Zt, {isInteractive: i9, renderWrapper: t13, theme: n11, animate: false, children: (0, import_jsx_runtime7.jsx)(Ve2, z5({}, r9, {canvasRef: a7}))});
  });
  var Be2 = function(e15) {
    return (0, import_jsx_runtime7.jsx)(ti, {children: function(a7) {
      var i9 = a7.width, t13 = a7.height;
      return (0, import_jsx_runtime7.jsx)(we2, z5({width: i9, height: t13}, e15));
    }});
  };
  var Me2 = (0, import_react58.forwardRef)(function(e15, a7) {
    return (0, import_jsx_runtime7.jsx)(ti, {children: function(i9) {
      var t13 = i9.width, n11 = i9.height;
      return (0, import_jsx_runtime7.jsx)(We2, z5({width: t13, height: n11}, e15, {ref: a7}));
    }});
  });

  // src/components/Bar.tsx
  var BarComponent = (props) => /* @__PURE__ */ import_react59.default.createElement(Be2, {
    data: props.data,
    keys: [
      "hot dog",
      "burger",
      "sandwich",
      "kebab",
      "fries",
      "donut"
    ],
    indexBy: "country",
    margin: {top: 50, right: 130, bottom: 50, left: 60},
    padding: 0.3,
    valueScale: {type: "linear"},
    indexScale: {type: "band", round: true},
    colors: {scheme: "nivo"},
    defs: [
      {
        id: "dots",
        type: "patternDots",
        background: "inherit",
        color: "#38bcb2",
        size: 4,
        padding: 1,
        stagger: true
      },
      {
        id: "lines",
        type: "patternLines",
        background: "inherit",
        color: "#eed312",
        rotation: -45,
        lineWidth: 6,
        spacing: 10
      }
    ],
    fill: [
      {
        match: {
          id: "fries"
        },
        id: "dots"
      },
      {
        match: {
          id: "sandwich"
        },
        id: "lines"
      }
    ],
    borderColor: {
      from: "color",
      modifiers: [
        [
          "darker",
          1.6
        ]
      ]
    },
    axisTop: null,
    axisRight: null,
    axisBottom: {
      tickSize: 5,
      tickPadding: 5,
      tickRotation: 0,
      legend: "country",
      legendPosition: "middle",
      legendOffset: 32
    },
    axisLeft: {
      tickSize: 5,
      tickPadding: 5,
      tickRotation: 0,
      legend: "food",
      legendPosition: "middle",
      legendOffset: -40
    },
    labelSkipWidth: 12,
    labelSkipHeight: 12,
    labelTextColor: {
      from: "color",
      modifiers: [
        [
          "darker",
          1.6
        ]
      ]
    },
    legends: [
      {
        dataFrom: "keys",
        anchor: "bottom-right",
        direction: "column",
        justify: false,
        translateX: 120,
        translateY: 0,
        itemsSpacing: 2,
        itemWidth: 100,
        itemHeight: 20,
        itemDirection: "left-to-right",
        itemOpacity: 0.85,
        symbolSize: 20,
        effects: [
          {
            on: "hover",
            style: {
              itemOpacity: 1
            }
          }
        ]
      }
    ],
    role: "application",
    ariaLabel: "Nivo bar chart demo",
    barAriaLabel: function(e15) {
      return e15.id + ": " + e15.formattedValue + " in country: " + e15.indexValue;
    }
  });
  var BarChart = () => {
    return /* @__PURE__ */ import_react59.default.createElement(BarComponent, {
      data: []
    });
  };

  // ../../node_modules/@nivo/line/dist/nivo-line.es.js
  var import_react61 = __toModule(require_react());
  var import_prop_types28 = __toModule(require_prop_types());
  var import_jsx_runtime9 = __toModule(require_jsx_runtime());

  // ../../node_modules/@nivo/voronoi/dist/nivo-voronoi.es.js
  var import_react60 = __toModule(require_react());

  // ../../node_modules/delaunator/index.js
  var EPSILON = Math.pow(2, -52);
  var EDGE_STACK = new Uint32Array(512);
  var Delaunator = class {
    static from(points, getX = defaultGetX, getY = defaultGetY) {
      const n11 = points.length;
      const coords = new Float64Array(n11 * 2);
      for (let i9 = 0; i9 < n11; i9++) {
        const p6 = points[i9];
        coords[2 * i9] = getX(p6);
        coords[2 * i9 + 1] = getY(p6);
      }
      return new Delaunator(coords);
    }
    constructor(coords) {
      const n11 = coords.length >> 1;
      if (n11 > 0 && typeof coords[0] !== "number")
        throw new Error("Expected coords to contain numbers.");
      this.coords = coords;
      const maxTriangles = Math.max(2 * n11 - 5, 0);
      this._triangles = new Uint32Array(maxTriangles * 3);
      this._halfedges = new Int32Array(maxTriangles * 3);
      this._hashSize = Math.ceil(Math.sqrt(n11));
      this._hullPrev = new Uint32Array(n11);
      this._hullNext = new Uint32Array(n11);
      this._hullTri = new Uint32Array(n11);
      this._hullHash = new Int32Array(this._hashSize).fill(-1);
      this._ids = new Uint32Array(n11);
      this._dists = new Float64Array(n11);
      this.update();
    }
    update() {
      const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} = this;
      const n11 = coords.length >> 1;
      let minX = Infinity;
      let minY = Infinity;
      let maxX = -Infinity;
      let maxY = -Infinity;
      for (let i9 = 0; i9 < n11; i9++) {
        const x7 = coords[2 * i9];
        const y6 = coords[2 * i9 + 1];
        if (x7 < minX)
          minX = x7;
        if (y6 < minY)
          minY = y6;
        if (x7 > maxX)
          maxX = x7;
        if (y6 > maxY)
          maxY = y6;
        this._ids[i9] = i9;
      }
      const cx = (minX + maxX) / 2;
      const cy = (minY + maxY) / 2;
      let minDist = Infinity;
      let i0, i1, i22;
      for (let i9 = 0; i9 < n11; i9++) {
        const d4 = dist(cx, cy, coords[2 * i9], coords[2 * i9 + 1]);
        if (d4 < minDist) {
          i0 = i9;
          minDist = d4;
        }
      }
      const i0x = coords[2 * i0];
      const i0y = coords[2 * i0 + 1];
      minDist = Infinity;
      for (let i9 = 0; i9 < n11; i9++) {
        if (i9 === i0)
          continue;
        const d4 = dist(i0x, i0y, coords[2 * i9], coords[2 * i9 + 1]);
        if (d4 < minDist && d4 > 0) {
          i1 = i9;
          minDist = d4;
        }
      }
      let i1x = coords[2 * i1];
      let i1y = coords[2 * i1 + 1];
      let minRadius = Infinity;
      for (let i9 = 0; i9 < n11; i9++) {
        if (i9 === i0 || i9 === i1)
          continue;
        const r9 = circumradius(i0x, i0y, i1x, i1y, coords[2 * i9], coords[2 * i9 + 1]);
        if (r9 < minRadius) {
          i22 = i9;
          minRadius = r9;
        }
      }
      let i2x = coords[2 * i22];
      let i2y = coords[2 * i22 + 1];
      if (minRadius === Infinity) {
        for (let i9 = 0; i9 < n11; i9++) {
          this._dists[i9] = coords[2 * i9] - coords[0] || coords[2 * i9 + 1] - coords[1];
        }
        quicksort(this._ids, this._dists, 0, n11 - 1);
        const hull = new Uint32Array(n11);
        let j4 = 0;
        for (let i9 = 0, d0 = -Infinity; i9 < n11; i9++) {
          const id = this._ids[i9];
          if (this._dists[id] > d0) {
            hull[j4++] = id;
            d0 = this._dists[id];
          }
        }
        this.hull = hull.subarray(0, j4);
        this.triangles = new Uint32Array(0);
        this.halfedges = new Uint32Array(0);
        return;
      }
      if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {
        const i9 = i1;
        const x7 = i1x;
        const y6 = i1y;
        i1 = i22;
        i1x = i2x;
        i1y = i2y;
        i22 = i9;
        i2x = x7;
        i2y = y6;
      }
      const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);
      this._cx = center.x;
      this._cy = center.y;
      for (let i9 = 0; i9 < n11; i9++) {
        this._dists[i9] = dist(coords[2 * i9], coords[2 * i9 + 1], center.x, center.y);
      }
      quicksort(this._ids, this._dists, 0, n11 - 1);
      this._hullStart = i0;
      let hullSize = 3;
      hullNext[i0] = hullPrev[i22] = i1;
      hullNext[i1] = hullPrev[i0] = i22;
      hullNext[i22] = hullPrev[i1] = i0;
      hullTri[i0] = 0;
      hullTri[i1] = 1;
      hullTri[i22] = 2;
      hullHash.fill(-1);
      hullHash[this._hashKey(i0x, i0y)] = i0;
      hullHash[this._hashKey(i1x, i1y)] = i1;
      hullHash[this._hashKey(i2x, i2y)] = i22;
      this.trianglesLen = 0;
      this._addTriangle(i0, i1, i22, -1, -1, -1);
      for (let k6 = 0, xp, yp; k6 < this._ids.length; k6++) {
        const i9 = this._ids[k6];
        const x7 = coords[2 * i9];
        const y6 = coords[2 * i9 + 1];
        if (k6 > 0 && Math.abs(x7 - xp) <= EPSILON && Math.abs(y6 - yp) <= EPSILON)
          continue;
        xp = x7;
        yp = y6;
        if (i9 === i0 || i9 === i1 || i9 === i22)
          continue;
        let start2 = 0;
        for (let j4 = 0, key = this._hashKey(x7, y6); j4 < this._hashSize; j4++) {
          start2 = hullHash[(key + j4) % this._hashSize];
          if (start2 !== -1 && start2 !== hullNext[start2])
            break;
        }
        start2 = hullPrev[start2];
        let e15 = start2, q4;
        while (q4 = hullNext[e15], !orient(x7, y6, coords[2 * e15], coords[2 * e15 + 1], coords[2 * q4], coords[2 * q4 + 1])) {
          e15 = q4;
          if (e15 === start2) {
            e15 = -1;
            break;
          }
        }
        if (e15 === -1)
          continue;
        let t13 = this._addTriangle(e15, i9, hullNext[e15], -1, -1, hullTri[e15]);
        hullTri[i9] = this._legalize(t13 + 2);
        hullTri[e15] = t13;
        hullSize++;
        let n12 = hullNext[e15];
        while (q4 = hullNext[n12], orient(x7, y6, coords[2 * n12], coords[2 * n12 + 1], coords[2 * q4], coords[2 * q4 + 1])) {
          t13 = this._addTriangle(n12, i9, q4, hullTri[i9], -1, hullTri[n12]);
          hullTri[i9] = this._legalize(t13 + 2);
          hullNext[n12] = n12;
          hullSize--;
          n12 = q4;
        }
        if (e15 === start2) {
          while (q4 = hullPrev[e15], orient(x7, y6, coords[2 * q4], coords[2 * q4 + 1], coords[2 * e15], coords[2 * e15 + 1])) {
            t13 = this._addTriangle(q4, i9, e15, -1, hullTri[e15], hullTri[q4]);
            this._legalize(t13 + 2);
            hullTri[q4] = t13;
            hullNext[e15] = e15;
            hullSize--;
            e15 = q4;
          }
        }
        this._hullStart = hullPrev[i9] = e15;
        hullNext[e15] = hullPrev[n12] = i9;
        hullNext[i9] = n12;
        hullHash[this._hashKey(x7, y6)] = i9;
        hullHash[this._hashKey(coords[2 * e15], coords[2 * e15 + 1])] = e15;
      }
      this.hull = new Uint32Array(hullSize);
      for (let i9 = 0, e15 = this._hullStart; i9 < hullSize; i9++) {
        this.hull[i9] = e15;
        e15 = hullNext[e15];
      }
      this.triangles = this._triangles.subarray(0, this.trianglesLen);
      this.halfedges = this._halfedges.subarray(0, this.trianglesLen);
    }
    _hashKey(x7, y6) {
      return Math.floor(pseudoAngle(x7 - this._cx, y6 - this._cy) * this._hashSize) % this._hashSize;
    }
    _legalize(a7) {
      const {_triangles: triangles, _halfedges: halfedges, coords} = this;
      let i9 = 0;
      let ar = 0;
      while (true) {
        const b8 = halfedges[a7];
        const a0 = a7 - a7 % 3;
        ar = a0 + (a7 + 2) % 3;
        if (b8 === -1) {
          if (i9 === 0)
            break;
          a7 = EDGE_STACK[--i9];
          continue;
        }
        const b0 = b8 - b8 % 3;
        const al = a0 + (a7 + 1) % 3;
        const bl = b0 + (b8 + 2) % 3;
        const p0 = triangles[ar];
        const pr = triangles[a7];
        const pl = triangles[al];
        const p1 = triangles[bl];
        const illegal = inCircle(coords[2 * p0], coords[2 * p0 + 1], coords[2 * pr], coords[2 * pr + 1], coords[2 * pl], coords[2 * pl + 1], coords[2 * p1], coords[2 * p1 + 1]);
        if (illegal) {
          triangles[a7] = p1;
          triangles[b8] = p0;
          const hbl = halfedges[bl];
          if (hbl === -1) {
            let e15 = this._hullStart;
            do {
              if (this._hullTri[e15] === bl) {
                this._hullTri[e15] = a7;
                break;
              }
              e15 = this._hullPrev[e15];
            } while (e15 !== this._hullStart);
          }
          this._link(a7, hbl);
          this._link(b8, halfedges[ar]);
          this._link(ar, bl);
          const br = b0 + (b8 + 1) % 3;
          if (i9 < EDGE_STACK.length) {
            EDGE_STACK[i9++] = br;
          }
        } else {
          if (i9 === 0)
            break;
          a7 = EDGE_STACK[--i9];
        }
      }
      return ar;
    }
    _link(a7, b8) {
      this._halfedges[a7] = b8;
      if (b8 !== -1)
        this._halfedges[b8] = a7;
    }
    _addTriangle(i0, i1, i22, a7, b8, c6) {
      const t13 = this.trianglesLen;
      this._triangles[t13] = i0;
      this._triangles[t13 + 1] = i1;
      this._triangles[t13 + 2] = i22;
      this._link(t13, a7);
      this._link(t13 + 1, b8);
      this._link(t13 + 2, c6);
      this.trianglesLen += 3;
      return t13;
    }
  };
  var delaunator_default = Delaunator;
  function pseudoAngle(dx, dy) {
    const p6 = dx / (Math.abs(dx) + Math.abs(dy));
    return (dy > 0 ? 3 - p6 : 1 + p6) / 4;
  }
  function dist(ax, ay, bx, by) {
    const dx = ax - bx;
    const dy = ay - by;
    return dx * dx + dy * dy;
  }
  function orientIfSure(px, py, rx, ry, qx, qy) {
    const l4 = (ry - py) * (qx - px);
    const r9 = (rx - px) * (qy - py);
    return Math.abs(l4 - r9) >= 33306690738754716e-32 * Math.abs(l4 + r9) ? l4 - r9 : 0;
  }
  function orient(rx, ry, qx, qy, px, py) {
    const sign3 = orientIfSure(px, py, rx, ry, qx, qy) || orientIfSure(rx, ry, qx, qy, px, py) || orientIfSure(qx, qy, px, py, rx, ry);
    return sign3 < 0;
  }
  function inCircle(ax, ay, bx, by, cx, cy, px, py) {
    const dx = ax - px;
    const dy = ay - py;
    const ex = bx - px;
    const ey = by - py;
    const fx = cx - px;
    const fy = cy - py;
    const ap = dx * dx + dy * dy;
    const bp = ex * ex + ey * ey;
    const cp = fx * fx + fy * fy;
    return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;
  }
  function circumradius(ax, ay, bx, by, cx, cy) {
    const dx = bx - ax;
    const dy = by - ay;
    const ex = cx - ax;
    const ey = cy - ay;
    const bl = dx * dx + dy * dy;
    const cl = ex * ex + ey * ey;
    const d4 = 0.5 / (dx * ey - dy * ex);
    const x7 = (ey * bl - dy * cl) * d4;
    const y6 = (dx * cl - ex * bl) * d4;
    return x7 * x7 + y6 * y6;
  }
  function circumcenter(ax, ay, bx, by, cx, cy) {
    const dx = bx - ax;
    const dy = by - ay;
    const ex = cx - ax;
    const ey = cy - ay;
    const bl = dx * dx + dy * dy;
    const cl = ex * ex + ey * ey;
    const d4 = 0.5 / (dx * ey - dy * ex);
    const x7 = ax + (ey * bl - dy * cl) * d4;
    const y6 = ay + (dx * cl - ex * bl) * d4;
    return {x: x7, y: y6};
  }
  function quicksort(ids, dists, left, right) {
    if (right - left <= 20) {
      for (let i9 = left + 1; i9 <= right; i9++) {
        const temp2 = ids[i9];
        const tempDist = dists[temp2];
        let j4 = i9 - 1;
        while (j4 >= left && dists[ids[j4]] > tempDist)
          ids[j4 + 1] = ids[j4--];
        ids[j4 + 1] = temp2;
      }
    } else {
      const median = left + right >> 1;
      let i9 = left + 1;
      let j4 = right;
      swap(ids, median, i9);
      if (dists[ids[left]] > dists[ids[right]])
        swap(ids, left, right);
      if (dists[ids[i9]] > dists[ids[right]])
        swap(ids, i9, right);
      if (dists[ids[left]] > dists[ids[i9]])
        swap(ids, left, i9);
      const temp2 = ids[i9];
      const tempDist = dists[temp2];
      while (true) {
        do
          i9++;
        while (dists[ids[i9]] < tempDist);
        do
          j4--;
        while (dists[ids[j4]] > tempDist);
        if (j4 < i9)
          break;
        swap(ids, i9, j4);
      }
      ids[left + 1] = ids[j4];
      ids[j4] = temp2;
      if (right - i9 + 1 >= j4 - left) {
        quicksort(ids, dists, i9, right);
        quicksort(ids, dists, left, j4 - 1);
      } else {
        quicksort(ids, dists, left, j4 - 1);
        quicksort(ids, dists, i9, right);
      }
    }
  }
  function swap(arr, i9, j4) {
    const tmp = arr[i9];
    arr[i9] = arr[j4];
    arr[j4] = tmp;
  }
  function defaultGetX(p6) {
    return p6[0];
  }
  function defaultGetY(p6) {
    return p6[1];
  }

  // ../../node_modules/d3-delaunay/src/path.js
  var epsilon4 = 1e-6;
  var Path2 = class {
    constructor() {
      this._x0 = this._y0 = this._x1 = this._y1 = null;
      this._ = "";
    }
    moveTo(x7, y6) {
      this._ += `M${this._x0 = this._x1 = +x7},${this._y0 = this._y1 = +y6}`;
    }
    closePath() {
      if (this._x1 !== null) {
        this._x1 = this._x0, this._y1 = this._y0;
        this._ += "Z";
      }
    }
    lineTo(x7, y6) {
      this._ += `L${this._x1 = +x7},${this._y1 = +y6}`;
    }
    arc(x7, y6, r9) {
      x7 = +x7, y6 = +y6, r9 = +r9;
      const x05 = x7 + r9;
      const y05 = y6;
      if (r9 < 0)
        throw new Error("negative radius");
      if (this._x1 === null)
        this._ += `M${x05},${y05}`;
      else if (Math.abs(this._x1 - x05) > epsilon4 || Math.abs(this._y1 - y05) > epsilon4)
        this._ += "L" + x05 + "," + y05;
      if (!r9)
        return;
      this._ += `A${r9},${r9},0,1,1,${x7 - r9},${y6}A${r9},${r9},0,1,1,${this._x1 = x05},${this._y1 = y05}`;
    }
    rect(x7, y6, w5, h4) {
      this._ += `M${this._x0 = this._x1 = +x7},${this._y0 = this._y1 = +y6}h${+w5}v${+h4}h${-w5}Z`;
    }
    value() {
      return this._ || null;
    }
  };
  var path_default3 = Path2;

  // ../../node_modules/d3-delaunay/src/polygon.js
  var Polygon = class {
    constructor() {
      this._ = [];
    }
    moveTo(x7, y6) {
      this._.push([x7, y6]);
    }
    closePath() {
      this._.push(this._[0].slice());
    }
    lineTo(x7, y6) {
      this._.push([x7, y6]);
    }
    value() {
      return this._.length ? this._ : null;
    }
  };
  var polygon_default = Polygon;

  // ../../node_modules/d3-delaunay/src/voronoi.js
  var Voronoi = class {
    constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {
      if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin)))
        throw new Error("invalid bounds");
      this.delaunay = delaunay;
      this._circumcenters = new Float64Array(delaunay.points.length * 2);
      this.vectors = new Float64Array(delaunay.points.length * 2);
      this.xmax = xmax, this.xmin = xmin;
      this.ymax = ymax, this.ymin = ymin;
      this._init();
    }
    update() {
      this.delaunay.update();
      this._init();
      return this;
    }
    _init() {
      const {delaunay: {points, hull, triangles}, vectors} = this;
      const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);
      for (let i9 = 0, j4 = 0, n11 = triangles.length, x7, y6; i9 < n11; i9 += 3, j4 += 2) {
        const t13 = triangles[i9] * 2;
        const t22 = triangles[i9 + 1] * 2;
        const t32 = triangles[i9 + 2] * 2;
        const x13 = points[t13];
        const y13 = points[t13 + 1];
        const x22 = points[t22];
        const y22 = points[t22 + 1];
        const x32 = points[t32];
        const y32 = points[t32 + 1];
        const dx = x22 - x13;
        const dy = y22 - y13;
        const ex = x32 - x13;
        const ey = y32 - y13;
        const bl = dx * dx + dy * dy;
        const cl = ex * ex + ey * ey;
        const ab = (dx * ey - dy * ex) * 2;
        if (!ab) {
          x7 = (x13 + x32) / 2 - 1e8 * ey;
          y6 = (y13 + y32) / 2 + 1e8 * ex;
        } else if (Math.abs(ab) < 1e-8) {
          x7 = (x13 + x32) / 2;
          y6 = (y13 + y32) / 2;
        } else {
          const d4 = 1 / ab;
          x7 = x13 + (ey * bl - dy * cl) * d4;
          y6 = y13 + (dx * cl - ex * bl) * d4;
        }
        circumcenters[j4] = x7;
        circumcenters[j4 + 1] = y6;
      }
      let h4 = hull[hull.length - 1];
      let p0, p1 = h4 * 4;
      let x05, x12 = points[2 * h4];
      let y05, y12 = points[2 * h4 + 1];
      vectors.fill(0);
      for (let i9 = 0; i9 < hull.length; ++i9) {
        h4 = hull[i9];
        p0 = p1, x05 = x12, y05 = y12;
        p1 = h4 * 4, x12 = points[2 * h4], y12 = points[2 * h4 + 1];
        vectors[p0 + 2] = vectors[p1] = y05 - y12;
        vectors[p0 + 3] = vectors[p1 + 1] = x12 - x05;
      }
    }
    render(context) {
      const buffer = context == null ? context = new path_default3() : void 0;
      const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;
      if (hull.length <= 1)
        return null;
      for (let i9 = 0, n11 = halfedges.length; i9 < n11; ++i9) {
        const j4 = halfedges[i9];
        if (j4 < i9)
          continue;
        const ti2 = Math.floor(i9 / 3) * 2;
        const tj = Math.floor(j4 / 3) * 2;
        const xi2 = circumcenters[ti2];
        const yi2 = circumcenters[ti2 + 1];
        const xj = circumcenters[tj];
        const yj = circumcenters[tj + 1];
        this._renderSegment(xi2, yi2, xj, yj, context);
      }
      let h0, h1 = hull[hull.length - 1];
      for (let i9 = 0; i9 < hull.length; ++i9) {
        h0 = h1, h1 = hull[i9];
        const t13 = Math.floor(inedges[h1] / 3) * 2;
        const x7 = circumcenters[t13];
        const y6 = circumcenters[t13 + 1];
        const v8 = h0 * 4;
        const p6 = this._project(x7, y6, vectors[v8 + 2], vectors[v8 + 3]);
        if (p6)
          this._renderSegment(x7, y6, p6[0], p6[1], context);
      }
      return buffer && buffer.value();
    }
    renderBounds(context) {
      const buffer = context == null ? context = new path_default3() : void 0;
      context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);
      return buffer && buffer.value();
    }
    renderCell(i9, context) {
      const buffer = context == null ? context = new path_default3() : void 0;
      const points = this._clip(i9);
      if (points === null || !points.length)
        return;
      context.moveTo(points[0], points[1]);
      let n11 = points.length;
      while (points[0] === points[n11 - 2] && points[1] === points[n11 - 1] && n11 > 1)
        n11 -= 2;
      for (let i10 = 2; i10 < n11; i10 += 2) {
        if (points[i10] !== points[i10 - 2] || points[i10 + 1] !== points[i10 - 1])
          context.lineTo(points[i10], points[i10 + 1]);
      }
      context.closePath();
      return buffer && buffer.value();
    }
    *cellPolygons() {
      const {delaunay: {points}} = this;
      for (let i9 = 0, n11 = points.length / 2; i9 < n11; ++i9) {
        const cell = this.cellPolygon(i9);
        if (cell)
          cell.index = i9, yield cell;
      }
    }
    cellPolygon(i9) {
      const polygon = new polygon_default();
      this.renderCell(i9, polygon);
      return polygon.value();
    }
    _renderSegment(x05, y05, x12, y12, context) {
      let S6;
      const c0 = this._regioncode(x05, y05);
      const c1 = this._regioncode(x12, y12);
      if (c0 === 0 && c1 === 0) {
        context.moveTo(x05, y05);
        context.lineTo(x12, y12);
      } else if (S6 = this._clipSegment(x05, y05, x12, y12, c0, c1)) {
        context.moveTo(S6[0], S6[1]);
        context.lineTo(S6[2], S6[3]);
      }
    }
    contains(i9, x7, y6) {
      if ((x7 = +x7, x7 !== x7) || (y6 = +y6, y6 !== y6))
        return false;
      return this.delaunay._step(i9, x7, y6) === i9;
    }
    *neighbors(i9) {
      const ci2 = this._clip(i9);
      if (ci2)
        for (const j4 of this.delaunay.neighbors(i9)) {
          const cj = this._clip(j4);
          if (cj)
            loop:
              for (let ai2 = 0, li = ci2.length; ai2 < li; ai2 += 2) {
                for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {
                  if (ci2[ai2] == cj[aj] && ci2[ai2 + 1] == cj[aj + 1] && ci2[(ai2 + 2) % li] == cj[(aj + lj - 2) % lj] && ci2[(ai2 + 3) % li] == cj[(aj + lj - 1) % lj]) {
                    yield j4;
                    break loop;
                  }
                }
              }
        }
    }
    _cell(i9) {
      const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;
      const e0 = inedges[i9];
      if (e0 === -1)
        return null;
      const points = [];
      let e15 = e0;
      do {
        const t13 = Math.floor(e15 / 3);
        points.push(circumcenters[t13 * 2], circumcenters[t13 * 2 + 1]);
        e15 = e15 % 3 === 2 ? e15 - 2 : e15 + 1;
        if (triangles[e15] !== i9)
          break;
        e15 = halfedges[e15];
      } while (e15 !== e0 && e15 !== -1);
      return points;
    }
    _clip(i9) {
      if (i9 === 0 && this.delaunay.hull.length === 1) {
        return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];
      }
      const points = this._cell(i9);
      if (points === null)
        return null;
      const {vectors: V5} = this;
      const v8 = i9 * 4;
      return V5[v8] || V5[v8 + 1] ? this._clipInfinite(i9, points, V5[v8], V5[v8 + 1], V5[v8 + 2], V5[v8 + 3]) : this._clipFinite(i9, points);
    }
    _clipFinite(i9, points) {
      const n11 = points.length;
      let P8 = null;
      let x05, y05, x12 = points[n11 - 2], y12 = points[n11 - 1];
      let c0, c1 = this._regioncode(x12, y12);
      let e0, e1;
      for (let j4 = 0; j4 < n11; j4 += 2) {
        x05 = x12, y05 = y12, x12 = points[j4], y12 = points[j4 + 1];
        c0 = c1, c1 = this._regioncode(x12, y12);
        if (c0 === 0 && c1 === 0) {
          e0 = e1, e1 = 0;
          if (P8)
            P8.push(x12, y12);
          else
            P8 = [x12, y12];
        } else {
          let S6, sx0, sy0, sx1, sy1;
          if (c0 === 0) {
            if ((S6 = this._clipSegment(x05, y05, x12, y12, c0, c1)) === null)
              continue;
            [sx0, sy0, sx1, sy1] = S6;
          } else {
            if ((S6 = this._clipSegment(x12, y12, x05, y05, c1, c0)) === null)
              continue;
            [sx1, sy1, sx0, sy0] = S6;
            e0 = e1, e1 = this._edgecode(sx0, sy0);
            if (e0 && e1)
              this._edge(i9, e0, e1, P8, P8.length);
            if (P8)
              P8.push(sx0, sy0);
            else
              P8 = [sx0, sy0];
          }
          e0 = e1, e1 = this._edgecode(sx1, sy1);
          if (e0 && e1)
            this._edge(i9, e0, e1, P8, P8.length);
          if (P8)
            P8.push(sx1, sy1);
          else
            P8 = [sx1, sy1];
        }
      }
      if (P8) {
        e0 = e1, e1 = this._edgecode(P8[0], P8[1]);
        if (e0 && e1)
          this._edge(i9, e0, e1, P8, P8.length);
      } else if (this.contains(i9, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {
        return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];
      }
      return P8;
    }
    _clipSegment(x05, y05, x12, y12, c0, c1) {
      while (true) {
        if (c0 === 0 && c1 === 0)
          return [x05, y05, x12, y12];
        if (c0 & c1)
          return null;
        let x7, y6, c6 = c0 || c1;
        if (c6 & 8)
          x7 = x05 + (x12 - x05) * (this.ymax - y05) / (y12 - y05), y6 = this.ymax;
        else if (c6 & 4)
          x7 = x05 + (x12 - x05) * (this.ymin - y05) / (y12 - y05), y6 = this.ymin;
        else if (c6 & 2)
          y6 = y05 + (y12 - y05) * (this.xmax - x05) / (x12 - x05), x7 = this.xmax;
        else
          y6 = y05 + (y12 - y05) * (this.xmin - x05) / (x12 - x05), x7 = this.xmin;
        if (c0)
          x05 = x7, y05 = y6, c0 = this._regioncode(x05, y05);
        else
          x12 = x7, y12 = y6, c1 = this._regioncode(x12, y12);
      }
    }
    _clipInfinite(i9, points, vx0, vy0, vxn, vyn) {
      let P8 = Array.from(points), p6;
      if (p6 = this._project(P8[0], P8[1], vx0, vy0))
        P8.unshift(p6[0], p6[1]);
      if (p6 = this._project(P8[P8.length - 2], P8[P8.length - 1], vxn, vyn))
        P8.push(p6[0], p6[1]);
      if (P8 = this._clipFinite(i9, P8)) {
        for (let j4 = 0, n11 = P8.length, c0, c1 = this._edgecode(P8[n11 - 2], P8[n11 - 1]); j4 < n11; j4 += 2) {
          c0 = c1, c1 = this._edgecode(P8[j4], P8[j4 + 1]);
          if (c0 && c1)
            j4 = this._edge(i9, c0, c1, P8, j4), n11 = P8.length;
        }
      } else if (this.contains(i9, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {
        P8 = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];
      }
      return P8;
    }
    _edge(i9, e0, e1, P8, j4) {
      while (e0 !== e1) {
        let x7, y6;
        switch (e0) {
          case 5:
            e0 = 4;
            continue;
          case 4:
            e0 = 6, x7 = this.xmax, y6 = this.ymin;
            break;
          case 6:
            e0 = 2;
            continue;
          case 2:
            e0 = 10, x7 = this.xmax, y6 = this.ymax;
            break;
          case 10:
            e0 = 8;
            continue;
          case 8:
            e0 = 9, x7 = this.xmin, y6 = this.ymax;
            break;
          case 9:
            e0 = 1;
            continue;
          case 1:
            e0 = 5, x7 = this.xmin, y6 = this.ymin;
            break;
        }
        if ((P8[j4] !== x7 || P8[j4 + 1] !== y6) && this.contains(i9, x7, y6)) {
          P8.splice(j4, 0, x7, y6), j4 += 2;
        }
      }
      if (P8.length > 4) {
        for (let i10 = 0; i10 < P8.length; i10 += 2) {
          const j5 = (i10 + 2) % P8.length, k6 = (i10 + 4) % P8.length;
          if (P8[i10] === P8[j5] && P8[j5] === P8[k6] || P8[i10 + 1] === P8[j5 + 1] && P8[j5 + 1] === P8[k6 + 1])
            P8.splice(j5, 2), i10 -= 2;
        }
      }
      return j4;
    }
    _project(x05, y05, vx, vy) {
      let t13 = Infinity, c6, x7, y6;
      if (vy < 0) {
        if (y05 <= this.ymin)
          return null;
        if ((c6 = (this.ymin - y05) / vy) < t13)
          y6 = this.ymin, x7 = x05 + (t13 = c6) * vx;
      } else if (vy > 0) {
        if (y05 >= this.ymax)
          return null;
        if ((c6 = (this.ymax - y05) / vy) < t13)
          y6 = this.ymax, x7 = x05 + (t13 = c6) * vx;
      }
      if (vx > 0) {
        if (x05 >= this.xmax)
          return null;
        if ((c6 = (this.xmax - x05) / vx) < t13)
          x7 = this.xmax, y6 = y05 + (t13 = c6) * vy;
      } else if (vx < 0) {
        if (x05 <= this.xmin)
          return null;
        if ((c6 = (this.xmin - x05) / vx) < t13)
          x7 = this.xmin, y6 = y05 + (t13 = c6) * vy;
      }
      return [x7, y6];
    }
    _edgecode(x7, y6) {
      return (x7 === this.xmin ? 1 : x7 === this.xmax ? 2 : 0) | (y6 === this.ymin ? 4 : y6 === this.ymax ? 8 : 0);
    }
    _regioncode(x7, y6) {
      return (x7 < this.xmin ? 1 : x7 > this.xmax ? 2 : 0) | (y6 < this.ymin ? 4 : y6 > this.ymax ? 8 : 0);
    }
  };
  var voronoi_default = Voronoi;

  // ../../node_modules/d3-delaunay/src/delaunay.js
  var tau4 = 2 * Math.PI;
  var pow = Math.pow;
  function pointX(p6) {
    return p6[0];
  }
  function pointY(p6) {
    return p6[1];
  }
  function collinear(d4) {
    const {triangles, coords} = d4;
    for (let i9 = 0; i9 < triangles.length; i9 += 3) {
      const a7 = 2 * triangles[i9], b8 = 2 * triangles[i9 + 1], c6 = 2 * triangles[i9 + 2], cross = (coords[c6] - coords[a7]) * (coords[b8 + 1] - coords[a7 + 1]) - (coords[b8] - coords[a7]) * (coords[c6 + 1] - coords[a7 + 1]);
      if (cross > 1e-10)
        return false;
    }
    return true;
  }
  function jitter(x7, y6, r9) {
    return [x7 + Math.sin(x7 + y6) * r9, y6 + Math.cos(x7 - y6) * r9];
  }
  var Delaunay = class {
    static from(points, fx = pointX, fy = pointY, that) {
      return new Delaunay("length" in points ? flatArray(points, fx, fy, that) : Float64Array.from(flatIterable(points, fx, fy, that)));
    }
    constructor(points) {
      this._delaunator = new delaunator_default(points);
      this.inedges = new Int32Array(points.length / 2);
      this._hullIndex = new Int32Array(points.length / 2);
      this.points = this._delaunator.coords;
      this._init();
    }
    update() {
      this._delaunator.update();
      this._init();
      return this;
    }
    _init() {
      const d4 = this._delaunator, points = this.points;
      if (d4.hull && d4.hull.length > 2 && collinear(d4)) {
        this.collinear = Int32Array.from({length: points.length / 2}, (_5, i9) => i9).sort((i9, j4) => points[2 * i9] - points[2 * j4] || points[2 * i9 + 1] - points[2 * j4 + 1]);
        const e15 = this.collinear[0], f4 = this.collinear[this.collinear.length - 1], bounds = [points[2 * e15], points[2 * e15 + 1], points[2 * f4], points[2 * f4 + 1]], r9 = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);
        for (let i9 = 0, n11 = points.length / 2; i9 < n11; ++i9) {
          const p6 = jitter(points[2 * i9], points[2 * i9 + 1], r9);
          points[2 * i9] = p6[0];
          points[2 * i9 + 1] = p6[1];
        }
        this._delaunator = new delaunator_default(points);
      } else {
        delete this.collinear;
      }
      const halfedges = this.halfedges = this._delaunator.halfedges;
      const hull = this.hull = this._delaunator.hull;
      const triangles = this.triangles = this._delaunator.triangles;
      const inedges = this.inedges.fill(-1);
      const hullIndex = this._hullIndex.fill(-1);
      for (let e15 = 0, n11 = halfedges.length; e15 < n11; ++e15) {
        const p6 = triangles[e15 % 3 === 2 ? e15 - 2 : e15 + 1];
        if (halfedges[e15] === -1 || inedges[p6] === -1)
          inedges[p6] = e15;
      }
      for (let i9 = 0, n11 = hull.length; i9 < n11; ++i9) {
        hullIndex[hull[i9]] = i9;
      }
      if (hull.length <= 2 && hull.length > 0) {
        this.triangles = new Int32Array(3).fill(-1);
        this.halfedges = new Int32Array(3).fill(-1);
        this.triangles[0] = hull[0];
        this.triangles[1] = hull[1];
        this.triangles[2] = hull[1];
        inedges[hull[0]] = 1;
        if (hull.length === 2)
          inedges[hull[1]] = 0;
      }
    }
    voronoi(bounds) {
      return new voronoi_default(this, bounds);
    }
    *neighbors(i9) {
      const {inedges, hull, _hullIndex, halfedges, triangles, collinear: collinear2} = this;
      if (collinear2) {
        const l4 = collinear2.indexOf(i9);
        if (l4 > 0)
          yield collinear2[l4 - 1];
        if (l4 < collinear2.length - 1)
          yield collinear2[l4 + 1];
        return;
      }
      const e0 = inedges[i9];
      if (e0 === -1)
        return;
      let e15 = e0, p0 = -1;
      do {
        yield p0 = triangles[e15];
        e15 = e15 % 3 === 2 ? e15 - 2 : e15 + 1;
        if (triangles[e15] !== i9)
          return;
        e15 = halfedges[e15];
        if (e15 === -1) {
          const p6 = hull[(_hullIndex[i9] + 1) % hull.length];
          if (p6 !== p0)
            yield p6;
          return;
        }
      } while (e15 !== e0);
    }
    find(x7, y6, i9 = 0) {
      if ((x7 = +x7, x7 !== x7) || (y6 = +y6, y6 !== y6))
        return -1;
      const i0 = i9;
      let c6;
      while ((c6 = this._step(i9, x7, y6)) >= 0 && c6 !== i9 && c6 !== i0)
        i9 = c6;
      return c6;
    }
    _step(i9, x7, y6) {
      const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;
      if (inedges[i9] === -1 || !points.length)
        return (i9 + 1) % (points.length >> 1);
      let c6 = i9;
      let dc = pow(x7 - points[i9 * 2], 2) + pow(y6 - points[i9 * 2 + 1], 2);
      const e0 = inedges[i9];
      let e15 = e0;
      do {
        let t13 = triangles[e15];
        const dt = pow(x7 - points[t13 * 2], 2) + pow(y6 - points[t13 * 2 + 1], 2);
        if (dt < dc)
          dc = dt, c6 = t13;
        e15 = e15 % 3 === 2 ? e15 - 2 : e15 + 1;
        if (triangles[e15] !== i9)
          break;
        e15 = halfedges[e15];
        if (e15 === -1) {
          e15 = hull[(_hullIndex[i9] + 1) % hull.length];
          if (e15 !== t13) {
            if (pow(x7 - points[e15 * 2], 2) + pow(y6 - points[e15 * 2 + 1], 2) < dc)
              return e15;
          }
          break;
        }
      } while (e15 !== e0);
      return c6;
    }
    render(context) {
      const buffer = context == null ? context = new path_default3() : void 0;
      const {points, halfedges, triangles} = this;
      for (let i9 = 0, n11 = halfedges.length; i9 < n11; ++i9) {
        const j4 = halfedges[i9];
        if (j4 < i9)
          continue;
        const ti2 = triangles[i9] * 2;
        const tj = triangles[j4] * 2;
        context.moveTo(points[ti2], points[ti2 + 1]);
        context.lineTo(points[tj], points[tj + 1]);
      }
      this.renderHull(context);
      return buffer && buffer.value();
    }
    renderPoints(context, r9 = 2) {
      const buffer = context == null ? context = new path_default3() : void 0;
      const {points} = this;
      for (let i9 = 0, n11 = points.length; i9 < n11; i9 += 2) {
        const x7 = points[i9], y6 = points[i9 + 1];
        context.moveTo(x7 + r9, y6);
        context.arc(x7, y6, r9, 0, tau4);
      }
      return buffer && buffer.value();
    }
    renderHull(context) {
      const buffer = context == null ? context = new path_default3() : void 0;
      const {hull, points} = this;
      const h4 = hull[0] * 2, n11 = hull.length;
      context.moveTo(points[h4], points[h4 + 1]);
      for (let i9 = 1; i9 < n11; ++i9) {
        const h5 = 2 * hull[i9];
        context.lineTo(points[h5], points[h5 + 1]);
      }
      context.closePath();
      return buffer && buffer.value();
    }
    hullPolygon() {
      const polygon = new polygon_default();
      this.renderHull(polygon);
      return polygon.value();
    }
    renderTriangle(i9, context) {
      const buffer = context == null ? context = new path_default3() : void 0;
      const {points, triangles} = this;
      const t03 = triangles[i9 *= 3] * 2;
      const t13 = triangles[i9 + 1] * 2;
      const t22 = triangles[i9 + 2] * 2;
      context.moveTo(points[t03], points[t03 + 1]);
      context.lineTo(points[t13], points[t13 + 1]);
      context.lineTo(points[t22], points[t22 + 1]);
      context.closePath();
      return buffer && buffer.value();
    }
    *trianglePolygons() {
      const {triangles} = this;
      for (let i9 = 0, n11 = triangles.length / 3; i9 < n11; ++i9) {
        yield this.trianglePolygon(i9);
      }
    }
    trianglePolygon(i9) {
      const polygon = new polygon_default();
      this.renderTriangle(i9, polygon);
      return polygon.value();
    }
  };
  var delaunay_default = Delaunay;
  function flatArray(points, fx, fy, that) {
    const n11 = points.length;
    const array2 = new Float64Array(n11 * 2);
    for (let i9 = 0; i9 < n11; ++i9) {
      const p6 = points[i9];
      array2[i9 * 2] = fx.call(that, p6, i9, points);
      array2[i9 * 2 + 1] = fy.call(that, p6, i9, points);
    }
    return array2;
  }
  function* flatIterable(points, fx, fy, that) {
    let i9 = 0;
    for (const p6 of points) {
      yield fx.call(that, p6, i9, points);
      yield fy.call(that, p6, i9, points);
      ++i9;
    }
  }

  // ../../node_modules/@nivo/voronoi/dist/nivo-voronoi.es.js
  var import_jsx_runtime8 = __toModule(require_jsx_runtime());
  var g5 = function(n11) {
    return typeof n11 == "function" ? n11 : function(e15) {
      return e15[n11];
    };
  };
  var b7 = function(n11) {
    var e15 = n11.points, i9 = n11.x, o8 = i9 === void 0 ? "x" : i9, t13 = n11.y, r9 = t13 === void 0 ? "y" : t13, l4 = g5(o8), u4 = g5(r9);
    return e15.map(function(n12) {
      return [l4(n12), u4(n12)];
    });
  };
  var k5 = function(n11) {
    var e15 = n11.points, i9 = n11.width, o8 = n11.height, t13 = n11.debug, r9 = delaunay_default.from(e15), l4 = t13 ? r9.voronoi([0, 0, i9, o8]) : void 0;
    return {delaunay: r9, voronoi: l4};
  };
  var x6 = function(e15) {
    var i9 = e15.points, o8 = e15.x, t13 = e15.y, r9 = e15.width, l4 = e15.height, u4 = e15.debug, a7 = (0, import_react60.useMemo)(function() {
      return b7({points: i9, x: o8, y: t13});
    }, [i9, o8, t13]);
    return (0, import_react60.useMemo)(function() {
      return k5({points: a7, width: r9, height: l4, debug: u4});
    }, [a7, r9, l4, u4]);
  };
  var P6 = function(e15) {
    var i9 = e15.nodes, l4 = e15.width, u4 = e15.height, a7 = e15.x, d4 = e15.y, c6 = e15.onMouseEnter, h4 = e15.onMouseMove, m5 = e15.onMouseLeave, y6 = e15.onClick, g6 = e15.debug, b8 = (0, import_react60.useRef)(null), k6 = (0, import_react60.useState)(null), C6 = k6[0], L5 = k6[1], w5 = x6({points: i9, x: a7, y: d4, width: l4, height: u4, debug: g6}), W7 = w5.delaunay, D4 = w5.voronoi, M5 = (0, import_react60.useMemo)(function() {
      if (g6 && D4)
        return D4.render();
    }, [g6, D4]), P8 = (0, import_react60.useCallback)(function(n11) {
      if (!b8.current)
        return [null, null];
      var e16 = Qi(b8.current, n11), o8 = e16[0], t13 = e16[1], r9 = W7.find(o8, t13);
      return [r9, r9 !== void 0 ? i9[r9] : null];
    }, [b8, W7]), O8 = (0, import_react60.useCallback)(function(n11) {
      var e16 = P8(n11), i10 = e16[0], o8 = e16[1];
      L5(i10), o8 && (c6 == null || c6(o8, n11));
    }, [P8, L5, c6]), S6 = (0, import_react60.useCallback)(function(n11) {
      var e16 = P8(n11), i10 = e16[0], o8 = e16[1];
      L5(i10), o8 && (h4 == null || h4(o8, n11));
    }, [P8, L5, h4]), j4 = (0, import_react60.useCallback)(function(n11) {
      if (L5(null), m5) {
        var e16 = void 0;
        C6 !== null && (e16 = i9[C6]), e16 && m5(e16, n11);
      }
    }, [L5, C6, m5, i9]), z6 = (0, import_react60.useCallback)(function(n11) {
      var e16 = P8(n11), i10 = e16[0], o8 = e16[1];
      L5(i10), o8 && (y6 == null || y6(o8, n11));
    }, [P8, L5, y6]);
    return (0, import_jsx_runtime8.jsxs)("g", {ref: b8, children: [g6 && D4 && (0, import_jsx_runtime8.jsxs)(import_jsx_runtime8.Fragment, {children: [(0, import_jsx_runtime8.jsx)("path", {d: M5, stroke: "red", strokeWidth: 1, opacity: 0.75}), C6 !== null && (0, import_jsx_runtime8.jsx)("path", {fill: "pink", opacity: 0.35, d: D4.renderCell(C6)})]}), (0, import_jsx_runtime8.jsx)("rect", {width: l4, height: u4, fill: "red", opacity: 0, style: {cursor: "auto"}, onMouseEnter: O8, onMouseMove: S6, onMouseLeave: j4, onClick: z6})]});
  };
  var O7 = function(n11, e15) {
    n11.save(), n11.globalAlpha = 0.75, n11.beginPath(), e15.render(n11), n11.strokeStyle = "red", n11.lineWidth = 1, n11.stroke(), n11.restore();
  };
  var S5 = function(n11, e15, i9) {
    n11.save(), n11.globalAlpha = 0.35, n11.beginPath(), e15.renderCell(i9, n11), n11.fillStyle = "red", n11.fill(), n11.restore();
  };

  // ../../node_modules/@nivo/line/dist/nivo-line.es.js
  function ie3() {
    return ie3 = Object.assign || function(e15) {
      for (var r9 = 1; r9 < arguments.length; r9++) {
        var i9 = arguments[r9];
        for (var n11 in i9)
          Object.prototype.hasOwnProperty.call(i9, n11) && (e15[n11] = i9[n11]);
      }
      return e15;
    }, ie3.apply(this, arguments);
  }
  var ne3 = function(e15) {
    var r9 = e15.point;
    return (0, import_jsx_runtime9.jsx)(w, {id: (0, import_jsx_runtime9.jsxs)("span", {children: ["x: ", (0, import_jsx_runtime9.jsx)("strong", {children: r9.data.xFormatted}), ", y:", " ", (0, import_jsx_runtime9.jsx)("strong", {children: r9.data.yFormatted})]}), enableChip: true, color: r9.serieColor});
  };
  ne3.propTypes = {point: import_prop_types28.default.object.isRequired};
  var te3 = (0, import_react61.memo)(ne3);
  var oe3 = function(e15) {
    var r9 = e15.slice, i9 = e15.axis, n11 = Vt(), t13 = i9 === "x" ? "y" : "x";
    return (0, import_jsx_runtime9.jsx)(C, {rows: r9.points.map(function(e16) {
      return [(0, import_jsx_runtime9.jsx)(b, {color: e16.serieColor, style: n11.tooltip.chip}, "chip"), e16.serieId, (0, import_jsx_runtime9.jsx)("span", {style: n11.tooltip.tableCellValue, children: e16.data[t13 + "Formatted"]}, "value")];
    })});
  };
  oe3.propTypes = {slice: import_prop_types28.default.object.isRequired, axis: import_prop_types28.default.oneOf(["x", "y"]).isRequired};
  var ae2 = (0, import_react61.memo)(oe3);
  var se3 = {data: import_prop_types28.default.arrayOf(import_prop_types28.default.shape({id: import_prop_types28.default.oneOfType([import_prop_types28.default.string, import_prop_types28.default.number]).isRequired, data: import_prop_types28.default.arrayOf(import_prop_types28.default.shape({x: import_prop_types28.default.oneOfType([import_prop_types28.default.number, import_prop_types28.default.string, import_prop_types28.default.instanceOf(Date)]), y: import_prop_types28.default.oneOfType([import_prop_types28.default.number, import_prop_types28.default.string, import_prop_types28.default.instanceOf(Date)])})).isRequired})).isRequired, xScale: import_prop_types28.default.object.isRequired, xFormat: import_prop_types28.default.oneOfType([import_prop_types28.default.func, import_prop_types28.default.string]), yScale: import_prop_types28.default.object.isRequired, yFormat: import_prop_types28.default.oneOfType([import_prop_types28.default.func, import_prop_types28.default.string]), layers: import_prop_types28.default.arrayOf(import_prop_types28.default.oneOfType([import_prop_types28.default.oneOf(["grid", "markers", "axes", "areas", "crosshair", "lines", "slices", "points", "mesh", "legends"]), import_prop_types28.default.func])).isRequired, curve: Rt.isRequired, axisTop: A6, axisRight: A6, axisBottom: A6, axisLeft: A6, enableGridX: import_prop_types28.default.bool.isRequired, enableGridY: import_prop_types28.default.bool.isRequired, gridXValues: import_prop_types28.default.oneOfType([import_prop_types28.default.number, import_prop_types28.default.arrayOf(import_prop_types28.default.oneOfType([import_prop_types28.default.number, import_prop_types28.default.string, import_prop_types28.default.instanceOf(Date)]))]), gridYValues: import_prop_types28.default.oneOfType([import_prop_types28.default.number, import_prop_types28.default.arrayOf(import_prop_types28.default.oneOfType([import_prop_types28.default.number, import_prop_types28.default.string, import_prop_types28.default.instanceOf(Date)]))]), enablePoints: import_prop_types28.default.bool.isRequired, pointSymbol: import_prop_types28.default.func, pointSize: import_prop_types28.default.number.isRequired, pointColor: import_prop_types28.default.any.isRequired, pointBorderWidth: import_prop_types28.default.number.isRequired, pointBorderColor: import_prop_types28.default.any.isRequired, enablePointLabel: import_prop_types28.default.bool.isRequired, pointLabel: import_prop_types28.default.oneOfType([import_prop_types28.default.string, import_prop_types28.default.func]).isRequired, markers: import_prop_types28.default.arrayOf(import_prop_types28.default.shape({axis: import_prop_types28.default.oneOf(["x", "y"]).isRequired, value: import_prop_types28.default.oneOfType([import_prop_types28.default.number, import_prop_types28.default.string, import_prop_types28.default.instanceOf(Date)]).isRequired, style: import_prop_types28.default.object})), colors: Xe.isRequired, enableArea: import_prop_types28.default.bool.isRequired, areaOpacity: import_prop_types28.default.number.isRequired, areaBlendMode: Mt.isRequired, areaBaselineValue: import_prop_types28.default.oneOfType([import_prop_types28.default.number, import_prop_types28.default.string, import_prop_types28.default.instanceOf(Date)]).isRequired, lineWidth: import_prop_types28.default.number.isRequired, legends: import_prop_types28.default.arrayOf(import_prop_types28.default.shape(T2)).isRequired, isInteractive: import_prop_types28.default.bool.isRequired, debugMesh: import_prop_types28.default.bool.isRequired, tooltip: import_prop_types28.default.oneOfType([import_prop_types28.default.func, import_prop_types28.default.object]).isRequired, enableSlices: import_prop_types28.default.oneOf(["x", "y", false]).isRequired, debugSlices: import_prop_types28.default.bool.isRequired, sliceTooltip: import_prop_types28.default.oneOfType([import_prop_types28.default.func, import_prop_types28.default.object]).isRequired, enableCrosshair: import_prop_types28.default.bool.isRequired, crosshairType: import_prop_types28.default.string.isRequired};
  var le3 = ie3({}, se3, {enablePointLabel: import_prop_types28.default.bool.isRequired, role: import_prop_types28.default.string.isRequired, useMesh: import_prop_types28.default.bool.isRequired}, et, kt);
  var ue3 = ie3({pixelRatio: import_prop_types28.default.number.isRequired}, se3);
  var de2 = {curve: "linear", xScale: {type: "point"}, yScale: {type: "linear", min: 0, max: "auto"}, layers: ["grid", "markers", "axes", "areas", "crosshair", "lines", "points", "slices", "mesh", "legends"], axisBottom: {}, axisLeft: {}, enableGridX: true, enableGridY: true, enablePoints: true, pointSize: 6, pointColor: {from: "color"}, pointBorderWidth: 0, pointBorderColor: {theme: "background"}, enablePointLabel: false, pointLabel: "yFormatted", colors: {scheme: "nivo"}, enableArea: false, areaBaselineValue: 0, areaOpacity: 0.2, areaBlendMode: "normal", lineWidth: 2, legends: [], isInteractive: true, tooltip: te3, enableSlices: false, debugSlices: false, sliceTooltip: ae2, debugMesh: false, enableCrosshair: true, crosshairType: "bottom-left"};
  var ce3 = ie3({}, de2, {enablePointLabel: false, useMesh: false, animate: true, motionConfig: "gentle", defs: [], fill: [], role: "img"});
  var fe3 = ie3({}, de2, {pixelRatio: typeof window != "undefined" && window.devicePixelRatio || 1});
  var pe3 = function(e15) {
    var i9 = e15.curve;
    return (0, import_react61.useMemo)(function() {
      return line_default().defined(function(e16) {
        return e16.x !== null && e16.y !== null;
      }).x(function(e16) {
        return e16.x;
      }).y(function(e16) {
        return e16.y;
      }).curve(qt(i9));
    }, [i9]);
  };
  var he3 = function(e15) {
    var i9 = e15.curve, n11 = e15.yScale, t13 = e15.areaBaselineValue;
    return (0, import_react61.useMemo)(function() {
      return area_default().defined(function(e16) {
        return e16.x !== null && e16.y !== null;
      }).x(function(e16) {
        return e16.x;
      }).y1(function(e16) {
        return e16.y;
      }).curve(qt(i9)).y0(n11(t13));
    }, [i9, n11, t13]);
  };
  var ye2 = function(e15) {
    var i9 = e15.enableSlices, n11 = e15.points, t13 = e15.width, o8 = e15.height;
    return (0, import_react61.useMemo)(function() {
      if (i9 === false)
        return [];
      if (i9 === "x") {
        var e16 = new Map();
        return n11.forEach(function(r10) {
          r10.data.x !== null && r10.data.y !== null && (e16.has(r10.x) ? e16.get(r10.x).push(r10) : e16.set(r10.x, [r10]));
        }), Array.from(e16.entries()).sort(function(e17, r10) {
          return e17[0] - r10[0];
        }).map(function(e17, r10, i10) {
          var n12, a7 = e17[0], s4 = e17[1], l4 = i10[r10 - 1], u4 = i10[r10 + 1];
          return {id: a7, x0: n12 = l4 ? a7 - (a7 - l4[0]) / 2 : a7, x: a7, y0: 0, y: 0, width: u4 ? a7 - n12 + (u4[0] - a7) / 2 : t13 - n12, height: o8, points: s4.reverse()};
        });
      }
      if (i9 === "y") {
        var r9 = new Map();
        return n11.forEach(function(e17) {
          e17.data.x !== null && e17.data.y !== null && (r9.has(e17.y) ? r9.get(e17.y).push(e17) : r9.set(e17.y, [e17]));
        }), Array.from(r9.entries()).sort(function(e17, r10) {
          return e17[0] - r10[0];
        }).map(function(e17, r10, i10) {
          var n12, a7, s4 = e17[0], l4 = e17[1], u4 = i10[r10 - 1], d4 = i10[r10 + 1];
          return n12 = u4 ? s4 - (s4 - u4[0]) / 2 : s4, a7 = d4 ? s4 - n12 + (d4[0] - s4) / 2 : o8 - n12, {id: s4, x0: 0, x: 0, y0: n12, y: s4, width: t13, height: a7, points: l4.reverse()};
        });
      }
    }, [i9, n11]);
  };
  var be2 = function(e15) {
    var t13 = e15.data, o8 = e15.xScale, a7 = o8 === void 0 ? ce3.xScale : o8, s4 = e15.xFormat, l4 = e15.yScale, d4 = l4 === void 0 ? ce3.yScale : l4, c6 = e15.yFormat, f4 = e15.width, p6 = e15.height, h4 = e15.colors, b8 = h4 === void 0 ? ce3.colors : h4, g6 = e15.curve, m5 = g6 === void 0 ? ce3.curve : g6, v8 = e15.areaBaselineValue, x7 = v8 === void 0 ? ce3.areaBaselineValue : v8, R3 = e15.pointColor, q4 = R3 === void 0 ? ce3.pointColor : R3, O8 = e15.pointBorderColor, S6 = O8 === void 0 ? ce3.pointBorderColor : O8, C6 = e15.enableSlices, T7 = C6 === void 0 ? ce3.enableSlicesTooltip : C6, M5 = Xt(s4), w5 = Xt(c6), W7 = dr(b8, "id"), G = Vt(), L5 = We(q4, G), P8 = We(S6, G), j4 = (0, import_react61.useState)([]), F3 = j4[0], V5 = j4[1], E4 = (0, import_react61.useMemo)(function() {
      return dn(t13.filter(function(e16) {
        return F3.indexOf(e16.id) === -1;
      }), a7, d4, f4, p6);
    }, [t13, F3, a7, d4, f4, p6]), Y6 = E4.xScale, D4 = E4.yScale, X7 = E4.series, z6 = (0, import_react61.useMemo)(function() {
      var e16 = t13.map(function(e17) {
        return {id: e17.id, label: e17.id, color: W7(e17)};
      }), r9 = e16.map(function(e17) {
        return ie3({}, X7.find(function(r10) {
          return r10.id === e17.id;
        }), {color: e17.color});
      }).filter(function(e17) {
        return Boolean(e17.id);
      });
      return {legendData: e16.map(function(e17) {
        return ie3({}, e17, {hidden: !r9.find(function(r10) {
          return r10.id === e17.id;
        })});
      }).reverse(), series: r9};
    }, [t13, X7, W7]), A8 = z6.legendData, H4 = z6.series, I4 = (0, import_react61.useCallback)(function(e16) {
      V5(function(r9) {
        return r9.indexOf(e16) > -1 ? r9.filter(function(r10) {
          return r10 !== e16;
        }) : [].concat(r9, [e16]);
      });
    }, []), K6 = function(e16) {
      var i9 = e16.series, n11 = e16.getPointColor, t14 = e16.getPointBorderColor, o9 = e16.formatX, a8 = e16.formatY;
      return (0, import_react61.useMemo)(function() {
        return i9.reduce(function(e17, r9) {
          return [].concat(e17, r9.data.filter(function(e18) {
            return e18.position.x !== null && e18.position.y !== null;
          }).map(function(i10, s5) {
            var l5 = {id: r9.id + "." + s5, index: e17.length + s5, serieId: r9.id, serieColor: r9.color, x: i10.position.x, y: i10.position.y};
            return l5.color = n11(r9), l5.borderColor = t14(l5), l5.data = ie3({}, i10.data, {xFormatted: o9(i10.data.x), yFormatted: a8(i10.data.y)}), l5;
          }));
        }, []);
      }, [i9, n11, t14, o9, a8]);
    }({series: H4, getPointColor: L5, getPointBorderColor: P8, formatX: M5, formatY: w5}), N5 = ye2({enableSlices: T7, points: K6, width: f4, height: p6});
    return {legendData: A8, toggleSerie: I4, lineGenerator: pe3({curve: m5}), areaGenerator: he3({curve: m5, yScale: D4, areaBaselineValue: x7}), getColor: W7, series: H4, xScale: Y6, yScale: D4, slices: N5, points: K6};
  };
  var ge3 = function(e15) {
    var r9 = e15.areaBlendMode, i9 = e15.areaOpacity, n11 = e15.color, t13 = e15.fill, o8 = e15.path, a7 = tt(), s4 = a7.animate, l4 = a7.config, u4 = it(o8), d4 = useSpring({color: n11, config: l4, immediate: !s4});
    return (0, import_jsx_runtime9.jsx)(animated.path, {d: u4, fill: t13 || d4.color, fillOpacity: i9, strokeWidth: 0, style: {mixBlendMode: r9}});
  };
  ge3.propTypes = {areaBlendMode: Mt.isRequired, areaOpacity: import_prop_types28.default.number.isRequired, color: import_prop_types28.default.string, fill: import_prop_types28.default.string, path: import_prop_types28.default.string.isRequired};
  var me2 = function(e15) {
    var r9 = e15.areaGenerator, i9 = e15.areaOpacity, n11 = e15.areaBlendMode, t13 = e15.lines.slice(0).reverse();
    return (0, import_jsx_runtime9.jsx)("g", {children: t13.map(function(e16) {
      return (0, import_jsx_runtime9.jsx)(ge3, ie3({path: r9(e16.data.map(function(e17) {
        return e17.position;
      }))}, ie3({areaOpacity: i9, areaBlendMode: n11}, e16)), e16.id);
    })});
  };
  me2.propTypes = {areaGenerator: import_prop_types28.default.func.isRequired, areaOpacity: import_prop_types28.default.number.isRequired, areaBlendMode: Mt.isRequired, lines: import_prop_types28.default.arrayOf(import_prop_types28.default.object).isRequired};
  var ve3 = (0, import_react61.memo)(me2);
  var xe2 = function(e15) {
    var i9 = e15.lineGenerator, n11 = e15.points, t13 = e15.color, o8 = e15.thickness, a7 = (0, import_react61.useMemo)(function() {
      return i9(n11);
    }, [i9, n11]), s4 = it(a7);
    return (0, import_jsx_runtime9.jsx)(animated.path, {d: s4, fill: "none", strokeWidth: o8, stroke: t13});
  };
  xe2.propTypes = {points: import_prop_types28.default.arrayOf(import_prop_types28.default.shape({x: import_prop_types28.default.oneOfType([import_prop_types28.default.string, import_prop_types28.default.number]), y: import_prop_types28.default.oneOfType([import_prop_types28.default.string, import_prop_types28.default.number])})), lineGenerator: import_prop_types28.default.func.isRequired, color: import_prop_types28.default.string.isRequired, thickness: import_prop_types28.default.number.isRequired};
  var Re2 = (0, import_react61.memo)(xe2);
  var qe2 = function(e15) {
    var r9 = e15.lines, i9 = e15.lineGenerator, n11 = e15.lineWidth;
    return r9.slice(0).reverse().map(function(e16) {
      var r10 = e16.id, t13 = e16.data, o8 = e16.color;
      return (0, import_jsx_runtime9.jsx)(Re2, {id: r10, points: t13.map(function(e17) {
        return e17.position;
      }), lineGenerator: i9, color: o8, thickness: n11}, r10);
    });
  };
  qe2.propTypes = {lines: import_prop_types28.default.arrayOf(import_prop_types28.default.shape({id: import_prop_types28.default.oneOfType([import_prop_types28.default.string, import_prop_types28.default.number]).isRequired, color: import_prop_types28.default.string.isRequired, data: import_prop_types28.default.arrayOf(import_prop_types28.default.shape({data: import_prop_types28.default.shape({x: import_prop_types28.default.oneOfType([import_prop_types28.default.string, import_prop_types28.default.number, import_prop_types28.default.instanceOf(Date)]), y: import_prop_types28.default.oneOfType([import_prop_types28.default.string, import_prop_types28.default.number, import_prop_types28.default.instanceOf(Date)])}).isRequired, position: import_prop_types28.default.shape({x: import_prop_types28.default.number, y: import_prop_types28.default.number}).isRequired})).isRequired})).isRequired, lineWidth: import_prop_types28.default.number.isRequired, lineGenerator: import_prop_types28.default.func.isRequired};
  var Oe2 = (0, import_react61.memo)(qe2);
  var Se3 = function(e15) {
    var r9 = e15.slice, i9 = e15.axis, o8 = e15.debug, a7 = e15.tooltip, s4 = e15.isCurrent, l4 = e15.setCurrent, u4 = k(), d4 = u4.showTooltipFromEvent, c6 = u4.hideTooltip, f4 = (0, import_react61.useCallback)(function(e16) {
      d4((0, import_react61.createElement)(a7, {slice: r9, axis: i9}), e16, "right"), l4(r9);
    }, [d4, a7, r9]), p6 = (0, import_react61.useCallback)(function(e16) {
      d4((0, import_react61.createElement)(a7, {slice: r9, axis: i9}), e16, "right");
    }, [d4, a7, r9]), h4 = (0, import_react61.useCallback)(function() {
      c6(), l4(null);
    }, [c6]);
    return (0, import_jsx_runtime9.jsx)("rect", {x: r9.x0, y: r9.y0, width: r9.width, height: r9.height, stroke: "red", strokeWidth: o8 ? 1 : 0, strokeOpacity: 0.75, fill: "red", fillOpacity: s4 && o8 ? 0.35 : 0, onMouseEnter: f4, onMouseMove: p6, onMouseLeave: h4});
  };
  Se3.propTypes = {slice: import_prop_types28.default.object.isRequired, axis: import_prop_types28.default.oneOf(["x", "y"]).isRequired, debug: import_prop_types28.default.bool.isRequired, height: import_prop_types28.default.number.isRequired, tooltip: import_prop_types28.default.oneOfType([import_prop_types28.default.func, import_prop_types28.default.object]), isCurrent: import_prop_types28.default.bool.isRequired, setCurrent: import_prop_types28.default.func.isRequired};
  var Ce3 = (0, import_react61.memo)(Se3);
  var Te2 = function(e15) {
    var r9 = e15.slices, i9 = e15.axis, n11 = e15.debug, t13 = e15.height, o8 = e15.tooltip, a7 = e15.current, s4 = e15.setCurrent;
    return r9.map(function(e16) {
      return (0, import_jsx_runtime9.jsx)(Ce3, {slice: e16, axis: i9, debug: n11, height: t13, tooltip: o8, setCurrent: s4, isCurrent: a7 !== null && a7.id === e16.id}, e16.id);
    });
  };
  Te2.propTypes = {slices: import_prop_types28.default.arrayOf(import_prop_types28.default.shape({id: import_prop_types28.default.oneOfType([import_prop_types28.default.number, import_prop_types28.default.string, import_prop_types28.default.instanceOf(Date)]).isRequired, x: import_prop_types28.default.number.isRequired, y: import_prop_types28.default.number.isRequired, points: import_prop_types28.default.arrayOf(import_prop_types28.default.object).isRequired})).isRequired, axis: import_prop_types28.default.oneOf(["x", "y"]).isRequired, debug: import_prop_types28.default.bool.isRequired, height: import_prop_types28.default.number.isRequired, tooltip: import_prop_types28.default.oneOfType([import_prop_types28.default.func, import_prop_types28.default.object]).isRequired, current: import_prop_types28.default.object, setCurrent: import_prop_types28.default.func.isRequired};
  var Me3 = (0, import_react61.memo)(Te2);
  var we3 = function(e15) {
    var r9 = e15.points, i9 = e15.symbol, n11 = e15.size, t13 = e15.borderWidth, o8 = e15.enableLabel, a7 = e15.label, s4 = e15.labelYOffset, l4 = Vt(), d4 = Ei(a7), c6 = r9.reverse().map(function(e16) {
      return {id: e16.id, x: e16.x, y: e16.y, datum: e16.data, fill: e16.color, stroke: e16.borderColor, label: o8 ? d4(e16.data) : null};
    });
    return (0, import_jsx_runtime9.jsx)("g", {children: c6.map(function(e16) {
      return (0, import_jsx_runtime9.jsx)(Mi, {x: e16.x, y: e16.y, datum: e16.datum, symbol: i9, size: n11, color: e16.fill, borderWidth: t13, borderColor: e16.stroke, label: e16.label, labelYOffset: s4, theme: l4}, e16.id);
    })});
  };
  we3.propTypes = {points: import_prop_types28.default.arrayOf(import_prop_types28.default.object), symbol: import_prop_types28.default.func, size: import_prop_types28.default.number.isRequired, color: import_prop_types28.default.func.isRequired, borderWidth: import_prop_types28.default.number.isRequired, borderColor: import_prop_types28.default.func.isRequired, enableLabel: import_prop_types28.default.bool.isRequired, label: import_prop_types28.default.oneOfType([import_prop_types28.default.string, import_prop_types28.default.func]).isRequired, labelYOffset: import_prop_types28.default.number};
  var Be3 = (0, import_react61.memo)(we3);
  var ke2 = function(e15) {
    var r9 = e15.points, i9 = e15.width, o8 = e15.height, a7 = e15.margin, s4 = e15.setCurrent, l4 = e15.onMouseEnter, u4 = e15.onMouseMove, d4 = e15.onMouseLeave, c6 = e15.onClick, f4 = e15.tooltip, p6 = e15.debug, h4 = k(), y6 = h4.showTooltipAt, b8 = h4.hideTooltip, g6 = (0, import_react61.useCallback)(function(e16, r10) {
      y6((0, import_react61.createElement)(f4, {point: e16}), [e16.x + a7.left, e16.y + a7.top], "top"), s4(e16), l4 && l4(e16, r10);
    }, [s4, y6, f4, l4, a7]), m5 = (0, import_react61.useCallback)(function(e16, r10) {
      y6((0, import_react61.createElement)(f4, {point: e16}), [e16.x + a7.left, e16.y + a7.top], "top"), s4(e16), u4 && u4(e16, r10);
    }, [s4, y6, f4, u4]), v8 = (0, import_react61.useCallback)(function(e16, r10) {
      b8(), s4(null), d4 && d4(e16, r10);
    }, [b8, s4, d4]), x7 = (0, import_react61.useCallback)(function(e16, r10) {
      c6 && c6(e16, r10);
    }, [c6]);
    return (0, import_jsx_runtime9.jsx)(P6, {nodes: r9, width: i9, height: o8, onMouseEnter: g6, onMouseMove: m5, onMouseLeave: v8, onClick: x7, debug: p6});
  };
  ke2.propTypes = {points: import_prop_types28.default.arrayOf(import_prop_types28.default.object).isRequired, width: import_prop_types28.default.number.isRequired, height: import_prop_types28.default.number.isRequired, margin: import_prop_types28.default.object.isRequired, setCurrent: import_prop_types28.default.func.isRequired, onMouseEnter: import_prop_types28.default.func, onMouseMove: import_prop_types28.default.func, onMouseLeave: import_prop_types28.default.func, onClick: import_prop_types28.default.func, tooltip: import_prop_types28.default.oneOfType([import_prop_types28.default.func, import_prop_types28.default.object]).isRequired, debug: import_prop_types28.default.bool.isRequired};
  var We3 = (0, import_react61.memo)(ke2);
  var Ge2 = function(e15) {
    var r9 = e15.data, n11 = e15.xScale, t13 = e15.xFormat, a7 = e15.yScale, s4 = e15.yFormat, l4 = e15.layers, d4 = e15.curve, c6 = e15.areaBaselineValue, f4 = e15.colors, p6 = e15.margin, h4 = e15.width, y6 = e15.height, b8 = e15.axisTop, g6 = e15.axisRight, m5 = e15.axisBottom, v8 = e15.axisLeft, x7 = e15.enableGridX, C6 = e15.enableGridY, T7 = e15.gridXValues, M5 = e15.gridYValues, w5 = e15.lineWidth, B5 = e15.enableArea, W7 = e15.areaOpacity, P8 = e15.areaBlendMode, j4 = e15.enablePoints, F3 = e15.pointSymbol, E4 = e15.pointSize, Y6 = e15.pointColor, D4 = e15.pointBorderWidth, X7 = e15.pointBorderColor, z6 = e15.enablePointLabel, H4 = e15.pointLabel, I4 = e15.pointLabelYOffset, J6 = e15.defs, K6 = e15.fill, Q6 = e15.markers, U4 = e15.legends, Z5 = e15.isInteractive, $5 = e15.useMesh, _5 = e15.debugMesh, ee4 = e15.onMouseEnter, re6 = e15.onMouseMove, ne5 = e15.onMouseLeave, te5 = e15.onClick, oe5 = e15.tooltip, ae4 = e15.enableSlices, se5 = e15.debugSlices, le4 = e15.sliceTooltip, ue4 = e15.enableCrosshair, de4 = e15.crosshairType, ce4 = e15.role, fe4 = At(h4, y6, p6), pe4 = fe4.margin, he4 = fe4.innerWidth, ye3 = fe4.innerHeight, ge4 = fe4.outerWidth, me3 = fe4.outerHeight, xe3 = be2({data: r9, xScale: n11, xFormat: t13, yScale: a7, yFormat: s4, width: he4, height: ye3, colors: f4, curve: d4, areaBaselineValue: c6, pointColor: Y6, pointBorderColor: X7, enableSlices: ae4}), Re3 = xe3.legendData, qe3 = xe3.toggleSerie, Se4 = xe3.lineGenerator, Ce4 = xe3.areaGenerator, Te3 = xe3.series, we4 = xe3.xScale, ke3 = xe3.yScale, Ge3 = xe3.slices, Le4 = xe3.points, Pe3 = Vt(), je2 = We(Y6, Pe3), Fe3 = We(X7, Pe3), Ve4 = (0, import_react61.useState)(null), Ee2 = Ve4[0], Ye2 = Ve4[1], De2 = (0, import_react61.useState)(null), Xe2 = De2[0], ze2 = De2[1], Ae = {grid: (0, import_jsx_runtime9.jsx)(B3, {theme: Pe3, width: he4, height: ye3, xScale: x7 ? we4 : null, yScale: C6 ? ke3 : null, xValues: T7, yValues: M5}, "grid"), markers: (0, import_jsx_runtime9.jsx)(Bi, {markers: Q6, width: he4, height: ye3, xScale: we4, yScale: ke3, theme: Pe3}, "markers"), axes: (0, import_jsx_runtime9.jsx)(X5, {xScale: we4, yScale: ke3, width: he4, height: ye3, theme: Pe3, top: b8, right: g6, bottom: m5, left: v8}, "axes"), areas: null, lines: (0, import_jsx_runtime9.jsx)(Oe2, {lines: Te3, lineGenerator: Se4, lineWidth: w5}, "lines"), slices: null, points: null, crosshair: null, mesh: null, legends: U4.map(function(e16, r10) {
      return (0, import_jsx_runtime9.jsx)(X, ie3({}, e16, {containerWidth: he4, containerHeight: ye3, data: e16.data || Re3, theme: Pe3, toggleSerie: e16.toggleSerie ? qe3 : void 0}), "legend." + r10);
    })}, He2 = rn(J6, Te3, K6);
    return B5 && (Ae.areas = (0, import_jsx_runtime9.jsx)(ve3, {areaGenerator: Ce4, areaOpacity: W7, areaBlendMode: P8, lines: Te3}, "areas")), Z5 && ae4 !== false && (Ae.slices = (0, import_jsx_runtime9.jsx)(Me3, {slices: Ge3, axis: ae4, debug: se5, height: ye3, tooltip: le4, current: Xe2, setCurrent: ze2}, "slices")), j4 && (Ae.points = (0, import_jsx_runtime9.jsx)(Be3, {points: Le4, symbol: F3, size: E4, color: je2, borderWidth: D4, borderColor: Fe3, enableLabel: z6, label: H4, labelYOffset: I4}, "points")), Z5 && ue4 && (Ee2 !== null && (Ae.crosshair = (0, import_jsx_runtime9.jsx)(P, {width: he4, height: ye3, x: Ee2.x, y: Ee2.y, type: de4}, "crosshair")), Xe2 !== null && (Ae.crosshair = (0, import_jsx_runtime9.jsx)(P, {width: he4, height: ye3, x: Xe2.x, y: Xe2.y, type: ae4}, "crosshair"))), Z5 && $5 && ae4 === false && (Ae.mesh = (0, import_jsx_runtime9.jsx)(We3, {points: Le4, width: he4, height: ye3, margin: pe4, current: Ee2, setCurrent: Ye2, onMouseEnter: ee4, onMouseMove: re6, onMouseLeave: ne5, onClick: te5, tooltip: oe5, debug: _5}, "mesh")), (0, import_jsx_runtime9.jsx)(Si, {defs: He2, width: ge4, height: me3, margin: pe4, role: ce4, children: l4.map(function(r10, i9) {
      return typeof r10 == "function" ? (0, import_jsx_runtime9.jsx)(import_react61.Fragment, {children: r10(ie3({}, e15, {innerWidth: he4, innerHeight: ye3, series: Te3, slices: Ge3, points: Le4, xScale: we4, yScale: ke3, lineGenerator: Se4, areaGenerator: Ce4, currentPoint: Ee2, setCurrentPoint: Ye2, currentSlice: Xe2, setCurrentSlice: ze2}))}, i9) : Ae[r10];
    })});
  };
  Ge2.propTypes = le3, Ge2.defaultProps = ce3;
  var Le3 = Fi(Ge2);
  var Pe2 = function(e15) {
    return (0, import_jsx_runtime9.jsx)(ti, {children: function(r9) {
      var i9 = r9.width, n11 = r9.height;
      return (0, import_jsx_runtime9.jsx)(Le3, ie3({width: i9, height: n11}, e15));
    }});
  };
  var je = function(e15) {
    var r9 = e15.width, o8 = e15.height, a7 = e15.margin, d4 = e15.pixelRatio, c6 = e15.data, f4 = e15.xScale, p6 = e15.xFormat, h4 = e15.yScale, y6 = e15.yFormat, b8 = e15.curve, g6 = e15.layers, m5 = e15.colors, v8 = e15.lineWidth, x7 = e15.enableArea, q4 = e15.areaBaselineValue, O8 = e15.areaOpacity, S6 = e15.enablePoints, C6 = e15.pointSize, w5 = e15.pointColor, B5 = e15.pointBorderWidth, k6 = e15.pointBorderColor, W7 = e15.enableGridX, G = e15.gridXValues, L5 = e15.enableGridY, F3 = e15.gridYValues, V5 = e15.axisTop, Y6 = e15.axisRight, D4 = e15.axisBottom, X7 = e15.axisLeft, A8 = e15.legends, H4 = e15.isInteractive, I4 = e15.debugMesh, J6 = e15.onMouseLeave, K6 = e15.onClick, Q6 = e15.tooltip, U4 = e15.canvasRef, Z5 = (0, import_react61.useRef)(null), $5 = At(r9, o8, a7), ne5 = $5.margin, te5 = $5.innerWidth, oe5 = $5.innerHeight, ae4 = $5.outerWidth, se5 = $5.outerHeight, le4 = Vt(), ue4 = (0, import_react61.useState)(null), de4 = ue4[0], ce4 = ue4[1], fe4 = be2({data: c6, xScale: f4, xFormat: p6, yScale: h4, yFormat: y6, width: te5, height: oe5, colors: m5, curve: b8, areaBaselineValue: q4, pointColor: w5, pointBorderColor: k6}), pe4 = fe4.lineGenerator, he4 = fe4.areaGenerator, ye3 = fe4.series, ge4 = fe4.xScale, me3 = fe4.yScale, ve4 = fe4.points, xe3 = x6({points: ve4, width: te5, height: oe5, debug: I4}), Re3 = xe3.delaunay, qe3 = xe3.voronoi;
    (0, import_react61.useEffect)(function() {
      U4 && (U4.current = Z5.current), Z5.current.width = ae4 * d4, Z5.current.height = se5 * d4;
      var e16 = Z5.current.getContext("2d");
      e16.scale(d4, d4), e16.fillStyle = le4.background, e16.fillRect(0, 0, ae4, se5), e16.translate(ne5.left, ne5.top), g6.forEach(function(r10) {
        if (typeof r10 == "function" && r10({ctx: e16, innerWidth: te5, innerHeight: oe5, series: ye3, points: ve4, xScale: ge4, yScale: me3, lineWidth: v8, lineGenerator: pe4, areaGenerator: he4, currentPoint: de4, setCurrentPoint: ce4}), r10 === "grid" && le4.grid.line.strokeWidth > 0 && (e16.lineWidth = le4.grid.line.strokeWidth, e16.strokeStyle = le4.grid.line.stroke, W7 && C4(e16, {width: te5, height: oe5, scale: ge4, axis: "x", values: G}), L5 && C4(e16, {width: te5, height: oe5, scale: me3, axis: "y", values: F3})), r10 === "axes" && V3(e16, {xScale: ge4, yScale: me3, width: te5, height: oe5, top: V5, right: Y6, bottom: D4, left: X7, theme: le4}), r10 === "areas" && x7 === true && (e16.save(), e16.globalAlpha = O8, he4.context(e16), ye3.forEach(function(r11) {
          e16.fillStyle = r11.color, e16.beginPath(), he4(r11.data.map(function(e17) {
            return e17.position;
          })), e16.fill();
        }), e16.restore()), r10 === "lines" && (pe4.context(e16), ye3.forEach(function(r11) {
          e16.strokeStyle = r11.color, e16.lineWidth = v8, e16.beginPath(), pe4(r11.data.map(function(e17) {
            return e17.position;
          })), e16.stroke();
        })), r10 === "points" && S6 === true && C6 > 0 && ve4.forEach(function(r11) {
          e16.fillStyle = r11.color, e16.beginPath(), e16.arc(r11.x, r11.y, C6 / 2, 0, 2 * Math.PI), e16.fill(), B5 > 0 && (e16.strokeStyle = r11.borderColor, e16.lineWidth = B5, e16.stroke());
        }), r10 === "mesh" && I4 === true && (O7(e16, qe3), de4 && S5(e16, qe3, de4.index)), r10 === "legends") {
          var i9 = ye3.map(function(e17) {
            return {id: e17.id, label: e17.id, color: e17.color};
          }).reverse();
          A8.forEach(function(r11) {
            H(e16, ie3({}, r11, {data: r11.data || i9, containerWidth: te5, containerHeight: oe5, theme: le4}));
          });
        }
      });
    }, [Z5, ae4, se5, g6, le4, pe4, ye3, ge4, me3, W7, G, L5, F3, V5, Y6, D4, X7, A8, ve4, S6, C6, de4]);
    var Oe3 = (0, import_react61.useCallback)(function(e16) {
      var r10 = Qi(Z5.current, e16), i9 = r10[0], n11 = r10[1];
      if (!Ji(ne5.left, ne5.top, te5, oe5, i9, n11))
        return null;
      var t13 = Re3.find(i9 - ne5.left, n11 - ne5.top);
      return ve4[t13];
    }, [Z5, ne5, te5, oe5, Re3]), Se4 = k(), Ce4 = Se4.showTooltipFromEvent, Te3 = Se4.hideTooltip, Me4 = (0, import_react61.useCallback)(function(e16) {
      var r10 = Oe3(e16);
      ce4(r10), r10 ? Ce4((0, import_react61.createElement)(Q6, {point: r10}), e16) : Te3();
    }, [Oe3, ce4, Ce4, Te3, Q6]), we4 = (0, import_react61.useCallback)(function(e16) {
      Te3(), ce4(null), de4 && J6 && J6(de4, e16);
    }, [Te3, ce4, J6]), Be4 = (0, import_react61.useCallback)(function(e16) {
      if (K6) {
        var r10 = Oe3(e16);
        r10 && K6(r10, e16);
      }
    }, [Oe3, K6]);
    return (0, import_jsx_runtime9.jsx)("canvas", {ref: Z5, width: ae4 * d4, height: se5 * d4, style: {width: ae4, height: se5, cursor: H4 ? "auto" : "normal"}, onMouseEnter: H4 ? Me4 : void 0, onMouseMove: H4 ? Me4 : void 0, onMouseLeave: H4 ? we4 : void 0, onClick: H4 ? Be4 : void 0});
  };
  je.propTypes = ue3, je.defaultProps = fe3;
  var Fe2 = Fi(je);
  var Ve3 = (0, import_react61.forwardRef)(function(e15, r9) {
    return (0, import_jsx_runtime9.jsx)(Fe2, ie3({}, e15, {canvasRef: r9}));
  });
  var Ee = (0, import_react61.forwardRef)(function(e15, r9) {
    return (0, import_jsx_runtime9.jsx)(ti, {children: function(i9) {
      var n11 = i9.width, t13 = i9.height;
      return (0, import_jsx_runtime9.jsx)(Ve3, ie3({width: n11, height: t13}, e15, {ref: r9}));
    }});
  });

  // src/components/Line.tsx
  var import_react62 = __toModule(require_react());

  // src/DBUtil.ts
  var DBUtil = class {
    static fetchLineData(compareA, compareB, metric) {
      return fetch("/line", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({compareA, compareB, metric})
      }).then((res) => {
        if (res.ok)
          return res.json();
        return res.text().then((txt) => {
          throw new Error(txt);
        });
      });
    }
  };

  // src/components/Line.tsx
  var LineComponent = (props) => {
    if (!props.data.length)
      return null;
    return /* @__PURE__ */ import_react62.default.createElement(Pe2, {
      data: props.data,
      margin: {top: 0, right: 110, bottom: 70, left: 60},
      xScale: {
        type: "time",
        format: "%Y-%m-%d"
      },
      xFormat: "time:%Y-%m-%d",
      yScale: {
        type: "linear",
        min: "auto",
        max: "auto",
        stacked: false,
        reverse: false
      },
      curve: "monotoneX",
      axisTop: null,
      axisRight: null,
      axisLeft: {
        legend: "Count",
        legendOffset: -40,
        legendPosition: "middle"
      },
      axisBottom: {
        format: "%Y-%m-%d",
        tickRotation: -45,
        legend: "Day",
        legendOffset: 40,
        legendPosition: "middle"
      },
      colors: {scheme: "spectral"},
      pointSize: 1,
      pointColor: {theme: "background"},
      pointBorderWidth: 0,
      pointBorderColor: {from: "serieColor"},
      pointLabel: "y",
      pointLabelYOffset: -12,
      useMesh: true,
      legends: [
        {
          anchor: "bottom-right",
          direction: "column",
          justify: false,
          translateX: 100,
          translateY: 0,
          itemsSpacing: 0,
          itemDirection: "left-to-right",
          itemWidth: 80,
          itemHeight: 20,
          itemOpacity: 0.75,
          symbolSize: 12,
          symbolShape: "circle",
          symbolBorderColor: "rgba(0, 0, 0, .5)",
          effects: [
            {
              on: "hover",
              style: {
                itemBackground: "rgba(0, 0, 0, .03)",
                itemOpacity: 1
              }
            }
          ]
        }
      ]
    });
  };
  var Line = () => {
    const app = useAppContext();
    const [lineData, setLineData] = import_react62.default.useState([]);
    import_react62.default.useEffect(() => {
      if (!app.leftCountry || !app.rightCountry || !app.selectedMetric)
        setLineData([]);
      else
        DBUtil.fetchLineData(app.leftCountry, app.rightCountry, app.selectedMetric).then((res) => {
          const transformRows = (rows) => {
            const results = {};
            for (let row of rows) {
              if (!results[row.iso_code])
                results[row.iso_code] = {
                  id: row.iso_code,
                  data: [{x: row.date, y: row[app.selectedMetric]}]
                };
              else
                results[row.iso_code].data.push({
                  x: row.date,
                  y: row[app.selectedMetric]
                });
            }
            return Array.from(Object.values(results));
          };
          setLineData(transformRows(res));
        });
      return () => {
      };
    }, [app.chartType, app.leftCountry, app.rightCountry, app.selectedMetric]);
    return /* @__PURE__ */ import_react62.default.createElement(LineComponent, {
      data: lineData
    });
  };

  // src/components/Scatter.tsx
  var import_react64 = __toModule(require_react());

  // ../../node_modules/@nivo/scatterplot/dist/nivo-scatterplot.es.js
  var import_react63 = __toModule(require_react());
  var import_get9 = __toModule(require_get());
  var import_isString4 = __toModule(require_isString());
  var import_isNumber4 = __toModule(require_isNumber());
  var import_isPlainObject3 = __toModule(require_isPlainObject());
  var import_jsx_runtime10 = __toModule(require_jsx_runtime());
  function P7() {
    return P7 = Object.assign || function(e15) {
      for (var n11 = 1; n11 < arguments.length; n11++) {
        var o8 = arguments[n11];
        for (var i9 in o8)
          Object.prototype.hasOwnProperty.call(o8, i9) && (e15[i9] = o8[i9]);
      }
      return e15;
    }, P7.apply(this, arguments);
  }
  function A7(e15, n11) {
    if (e15 == null)
      return {};
    var o8, i9, t13 = {}, r9 = Object.keys(e15);
    for (i9 = 0; i9 < r9.length; i9++)
      o8 = r9[i9], n11.indexOf(o8) >= 0 || (t13[o8] = e15[o8]);
    return t13;
  }
  var U3 = function(e15) {
    if (typeof e15 == "function")
      return e15;
    if ((0, import_isNumber4.default)(e15))
      return function() {
        return e15;
      };
    if (function(e16) {
      return (0, import_isPlainObject3.default)(e16);
    }(e15)) {
      if (!(0, import_isString4.default)(e15.key))
        throw new Error("symbolSize is invalid, key should be a string pointing to the property to use to determine node size");
      if (!Array.isArray(e15.values) || e15.values.length !== 2)
        throw new Error("symbolSize is invalid, values spec should be an array containing two values, min and max");
      if (!Array.isArray(e15.sizes) || e15.sizes.length !== 2)
        throw new Error("symbolSize is invalid, sizes spec should be an array containing two values, min and max");
      var n11 = linear3().domain([e15.values[0], e15.values[1]]).range([e15.sizes[0], e15.sizes[1]]);
      return function(o8) {
        return n11((0, import_get9.default)(o8, e15.key));
      };
    }
    throw new Error("nodeSize is invalid, it should be either a function, a number or an object");
  };
  var q3 = function(n11) {
    var o8, i9 = n11.data, t13 = n11.xScaleSpec, r9 = n11.xFormat, a7 = n11.yScaleSpec, l4 = n11.yFormat, u4 = n11.width, c6 = n11.height, h4 = n11.nodeId, f4 = n11.nodeSize, v8 = n11.colors, m5 = (0, import_react63.useMemo)(function() {
      return dn(i9, t13, a7, u4, c6);
    }, [i9, t13, a7, u4, c6]), g6 = m5.series, p6 = m5.xScale, y6 = m5.yScale, x7 = Xt(r9), M5 = Xt(l4), S6 = Xi(h4), b8 = (0, import_react63.useMemo)(function() {
      return function(e15) {
        var n12 = e15.series, o9 = e15.formatX, i10 = e15.formatY, t14 = e15.getNodeId, r10 = [];
        return n12.forEach(function(e16) {
          e16.data.forEach(function(n13, a8) {
            var d4 = {index: r10.length, serieIndex: a8, serieId: e16.id, x: n13.position.x, xValue: n13.data.x, formattedX: o9(n13.data.x), y: n13.position.y, yValue: n13.data.y, formattedY: i10(n13.data.y), data: n13.data};
            r10.push(P7({}, d4, {id: t14(d4)}));
          });
        }), r10;
      }({series: g6, formatX: x7, formatY: M5, getNodeId: S6});
    }, [g6, x7, M5, S6]), w5 = (0, import_react63.useMemo)(function() {
      return U3(o8);
    }, [o8 = f4]), z6 = dr(v8, "serieId");
    return {xScale: p6, yScale: y6, nodes: (0, import_react63.useMemo)(function() {
      return b8.map(function(e15) {
        return P7({}, e15, {size: w5(e15), color: z6({serieId: e15.serieId})});
      });
    }, [b8, w5, z6]), legendData: (0, import_react63.useMemo)(function() {
      return g6.map(function(e15) {
        return {id: e15.id, label: e15.id, color: z6({serieId: e15.id})};
      });
    }, [g6, z6])};
  };
  var J5 = function(e15, n11) {
    return O6({data: e15, annotations: n11, getPosition: function(e16) {
      return {x: e16.x, y: e16.y};
    }, getDimensions: function(e16) {
      return {size: e16.size, width: e16.size, height: e16.size};
    }});
  };
  var K5 = function(e15) {
    return e15 / 2;
  };
  var Q5 = {xScale: {type: "linear", min: 0, max: "auto"}, yScale: {type: "linear", min: 0, max: "auto"}, enableGridX: true, enableGridY: true, axisBottom: {}, axisLeft: {}, nodeId: function(e15) {
    return e15.serieId + "." + e15.index;
  }, nodeSize: 9, nodeComponent: function(e15) {
    var o8 = e15.node, i9 = e15.style, t13 = e15.blendMode, r9 = e15.isInteractive, a7 = e15.onMouseEnter, d4 = e15.onMouseMove, s4 = e15.onMouseLeave, l4 = e15.onClick, u4 = (0, import_react63.useCallback)(function(e16) {
      return a7 == null ? void 0 : a7(o8, e16);
    }, [o8, a7]), c6 = (0, import_react63.useCallback)(function(e16) {
      return d4 == null ? void 0 : d4(o8, e16);
    }, [o8, d4]), h4 = (0, import_react63.useCallback)(function(e16) {
      return s4 == null ? void 0 : s4(o8, e16);
    }, [o8, s4]), f4 = (0, import_react63.useCallback)(function(e16) {
      return l4 == null ? void 0 : l4(o8, e16);
    }, [o8, l4]);
    return (0, import_jsx_runtime10.jsx)(animated.circle, {cx: i9.x, cy: i9.y, r: i9.size.to(K5), fill: i9.color, style: {mixBlendMode: t13}, onMouseEnter: r9 ? u4 : void 0, onMouseMove: r9 ? c6 : void 0, onMouseLeave: r9 ? h4 : void 0, onClick: r9 ? f4 : void 0});
  }, colors: {scheme: "nivo"}, isInteractive: true, debugMesh: false, tooltip: function(e15) {
    var n11 = e15.node;
    return (0, import_jsx_runtime10.jsx)(w, {id: n11.serieId, value: "x: " + n11.formattedX + ", y: " + n11.formattedY, enableChip: true, color: n11.color});
  }, markers: [], legends: [], annotations: []};
  var Z4 = P7({}, Q5, {blendMode: "normal", layers: ["grid", "axes", "nodes", "markers", "mesh", "legends", "annotations"], role: "img", useMesh: true, animate: true, motionConfig: "default"});
  var $4 = P7({}, Q5, {layers: ["grid", "axes", "nodes", "mesh", "legends", "annotations"], pixelRatio: typeof window != "undefined" && window.devicePixelRatio || 1, renderNode: function(e15, n11) {
    e15.beginPath(), e15.arc(n11.x, n11.y, n11.size / 2, 0, 2 * Math.PI), e15.fillStyle = n11.color, e15.fill();
  }});
  var _4 = function(e15) {
    var n11 = e15.nodes, o8 = e15.annotations, i9 = J5(n11, o8);
    return (0, import_jsx_runtime10.jsx)(import_jsx_runtime10.Fragment, {children: i9.map(function(e16, n12) {
      return (0, import_jsx_runtime10.jsx)(R, P7({}, e16), n12);
    })});
  };
  var ee3 = function(e15) {
    return e15.id;
  };
  var ne4 = function(e15) {
    return {x: e15.x, y: e15.y, size: e15.size, color: e15.color};
  };
  var oe4 = function(e15) {
    return {x: e15.x, y: e15.y, size: 0, color: e15.color};
  };
  var ie4 = function(e15) {
    var i9 = e15.nodes, t13 = e15.nodeComponent, r9 = e15.isInteractive, a7 = e15.onMouseEnter, d4 = e15.onMouseMove, s4 = e15.onMouseLeave, u4 = e15.onClick, c6 = e15.tooltip, h4 = e15.blendMode, f4 = tt(), v8 = f4.animate, m5 = f4.config, g6 = useTransition(i9, {keys: ee3, from: ne4, enter: ne4, update: ne4, leave: oe4, config: m5, immediate: !v8}), p6 = k(), y6 = p6.showTooltipFromEvent, x7 = p6.hideTooltip, M5 = (0, import_react63.useCallback)(function(e16, n11) {
      y6((0, import_react63.createElement)(c6, {node: e16}), n11), a7 == null || a7(e16, n11);
    }, [c6, y6, a7]), S6 = (0, import_react63.useCallback)(function(e16, n11) {
      y6((0, import_react63.createElement)(c6, {node: e16}), n11), d4 == null || d4(e16, n11);
    }, [c6, y6, d4]), b8 = (0, import_react63.useCallback)(function(e16, n11) {
      x7(), s4 == null || s4(e16, n11);
    }, [x7, s4]), w5 = (0, import_react63.useCallback)(function(e16, n11) {
      return u4 == null ? void 0 : u4(e16, n11);
    }, [u4]);
    return (0, import_jsx_runtime10.jsx)(import_jsx_runtime10.Fragment, {children: g6(function(e16, n11) {
      return (0, import_react63.createElement)(t13, {node: n11, style: e16, blendMode: h4, isInteractive: r9, onMouseEnter: r9 ? M5 : void 0, onMouseMove: r9 ? S6 : void 0, onMouseLeave: r9 ? b8 : void 0, onClick: r9 ? w5 : void 0});
    })});
  };
  var te4 = function(e15) {
    var i9 = e15.nodes, t13 = e15.width, r9 = e15.height, a7 = e15.onMouseEnter, d4 = e15.onMouseMove, s4 = e15.onMouseLeave, l4 = e15.onClick, u4 = e15.tooltip, c6 = e15.debug, h4 = k(), f4 = h4.showTooltipFromEvent, v8 = h4.hideTooltip, m5 = (0, import_react63.useCallback)(function(e16, n11) {
      f4((0, import_react63.createElement)(u4, {node: e16}), n11), a7 && a7(e16, n11);
    }, [f4, u4, a7]), g6 = (0, import_react63.useCallback)(function(e16, n11) {
      f4((0, import_react63.createElement)(u4, {node: e16}), n11), d4 && d4(e16, n11);
    }, [f4, u4, d4]), p6 = (0, import_react63.useCallback)(function(e16, n11) {
      v8(), s4 && s4(e16, n11);
    }, [v8, s4]), y6 = (0, import_react63.useCallback)(function(e16, n11) {
      l4 && l4(e16, n11);
    }, [l4]);
    return (0, import_jsx_runtime10.jsx)(P6, {nodes: i9, width: t13, height: r9, onMouseEnter: m5, onMouseMove: g6, onMouseLeave: p6, onClick: y6, debug: c6});
  };
  var re5 = ["isInteractive", "animate", "motionConfig", "theme", "renderWrapper"];
  var ae3 = function(n11) {
    var t13 = n11.data, r9 = n11.xScale, a7 = r9 === void 0 ? Z4.xScale : r9, d4 = n11.xFormat, s4 = n11.yScale, l4 = s4 === void 0 ? Z4.yScale : s4, u4 = n11.yFormat, v8 = n11.width, m5 = n11.height, g6 = n11.margin, p6 = n11.layers, M5 = p6 === void 0 ? Z4.layers : p6, S6 = n11.colors, w5 = S6 === void 0 ? Z4.colors : S6, I4 = n11.blendMode, k6 = I4 === void 0 ? Z4.blendMode : I4, z6 = n11.nodeId, E4 = z6 === void 0 ? Z4.nodeId : z6, C6 = n11.nodeSize, L5 = C6 === void 0 ? Z4.nodeSize : C6, W7 = n11.nodeComponent, F3 = W7 === void 0 ? Z4.nodeComponent : W7, X7 = n11.enableGridX, Y6 = X7 === void 0 ? Z4.enableGridX : X7, B5 = n11.enableGridY, G = B5 === void 0 ? Z4.enableGridY : B5, T7 = n11.gridXValues, V5 = n11.gridYValues, R3 = n11.axisTop, j4 = n11.axisRight, D4 = n11.axisBottom, N5 = D4 === void 0 ? Z4.axisBottom : D4, O8 = n11.axisLeft, A8 = O8 === void 0 ? Z4.axisLeft : O8, U4 = n11.annotations, J6 = U4 === void 0 ? Z4.annotations : U4, K6 = n11.isInteractive, Q6 = K6 === void 0 ? Z4.isInteractive : K6, $5 = n11.useMesh, ee4 = $5 === void 0 ? Z4.useMesh : $5, ne5 = n11.debugMesh, oe5 = ne5 === void 0 ? Z4.debugMesh : ne5, re6 = n11.onMouseEnter, ae4 = n11.onMouseMove, de4 = n11.onMouseLeave, se5 = n11.onClick, le4 = n11.tooltip, ue4 = le4 === void 0 ? Z4.tooltip : le4, ce4 = n11.markers, he4 = ce4 === void 0 ? Z4.markers : ce4, fe4 = n11.legends, ve4 = fe4 === void 0 ? Z4.legends : fe4, me3 = n11.role, ge4 = me3 === void 0 ? Z4.role : me3, pe4 = n11.ariaLabel, ye3 = n11.ariaLabelledBy, xe3 = n11.ariaDescribedBy, Me4 = At(v8, m5, g6), Se4 = Me4.margin, be3 = Me4.innerWidth, we4 = Me4.innerHeight, Ie = Me4.outerWidth, ke3 = Me4.outerHeight, ze2 = q3({data: t13, xScaleSpec: a7, xFormat: d4, yScaleSpec: l4, yFormat: u4, width: be3, height: we4, nodeId: E4, nodeSize: L5, colors: w5}), Ee2 = ze2.xScale, Ce4 = ze2.yScale, Le4 = ze2.nodes, We4 = ze2.legendData, Fe3 = (0, import_react63.useMemo)(function() {
      return {xScale: Ee2, yScale: Ce4, nodes: Le4, margin: Se4, innerWidth: be3, innerHeight: we4, outerWidth: Ie, outerHeight: ke3};
    }, [Ee2, Ce4, Le4, Se4, be3, we4, Ie, ke3]), Xe2 = {grid: null, axes: null, nodes: null, markers: null, mesh: null, annotations: null, legends: null};
    return M5.includes("grid") && (Xe2.grid = (0, import_jsx_runtime10.jsx)(B3, {width: be3, height: we4, xScale: Y6 ? Ee2 : null, yScale: G ? Ce4 : null, xValues: T7, yValues: V5}, "grid")), M5.includes("axes") && (Xe2.axes = (0, import_jsx_runtime10.jsx)(X5, {xScale: Ee2, yScale: Ce4, width: be3, height: we4, top: R3, right: j4, bottom: N5, left: A8}, "axes")), M5.includes("nodes") && (Xe2.nodes = (0, import_jsx_runtime10.jsx)(ie4, {nodes: Le4, nodeComponent: F3, isInteractive: Q6, tooltip: ue4, blendMode: k6, onMouseEnter: re6, onMouseMove: ae4, onMouseLeave: de4, onClick: se5}, "nodes")), M5.includes("markers") && (Xe2.markers = (0, import_jsx_runtime10.jsx)(Bi, {markers: he4, width: be3, height: we4, xScale: Ee2, yScale: Ce4}, "markers")), M5.includes("mesh") && Q6 && ee4 && (Xe2.mesh = (0, import_jsx_runtime10.jsx)(te4, {nodes: Le4, width: be3, height: we4, onMouseEnter: re6, onMouseMove: ae4, onMouseLeave: de4, onClick: se5, tooltip: ue4, debug: oe5}, "mesh")), M5.includes("annotations") && (Xe2.annotations = (0, import_jsx_runtime10.jsx)(_4, {nodes: Le4, annotations: J6}, "annotations")), M5.includes("legends") && (Xe2.legends = ve4.map(function(e15, n12) {
      return (0, import_jsx_runtime10.jsx)(X, P7({}, e15, {containerWidth: be3, containerHeight: we4, data: We4}), n12);
    })), (0, import_jsx_runtime10.jsx)(Si, {width: Ie, height: ke3, margin: Se4, role: ge4, ariaLabel: pe4, ariaLabelledBy: ye3, ariaDescribedBy: xe3, children: M5.map(function(e15, n12) {
      if (typeof e15 == "string" && Xe2[e15] !== void 0)
        return Xe2[e15];
      if (typeof e15 == "function")
        return (0, import_jsx_runtime10.jsx)(import_react63.Fragment, {children: (0, import_react63.createElement)(e15, Fe3)}, n12);
      throw new Error("Unknown layer (" + e15 + ")");
    })});
  };
  var de3 = function(e15) {
    var n11 = e15.isInteractive, o8 = n11 === void 0 ? Z4.isInteractive : n11, i9 = e15.animate, t13 = i9 === void 0 ? Z4.animate : i9, r9 = e15.motionConfig, a7 = r9 === void 0 ? Z4.motionConfig : r9, d4 = e15.theme, s4 = e15.renderWrapper, l4 = A7(e15, re5);
    return (0, import_jsx_runtime10.jsx)(Zt, {animate: t13, isInteractive: o8, motionConfig: a7, renderWrapper: s4, theme: d4, children: (0, import_jsx_runtime10.jsx)(ae3, P7({isInteractive: o8}, l4))});
  };
  var se4 = function(e15) {
    return (0, import_jsx_runtime10.jsx)(ti, {children: function(n11) {
      var o8 = n11.width, i9 = n11.height;
      return (0, import_jsx_runtime10.jsx)(de3, P7({width: o8, height: i9}, e15));
    }});
  };

  // src/components/Scatter.tsx
  var ScatterComponent = (props) => {
    if (!props.data || !props.data.length)
      return null;
    return /* @__PURE__ */ import_react64.default.createElement(se4, {
      data: props.data,
      margin: {top: 60, right: 140, bottom: 70, left: 90},
      yFormat: ">-.2f",
      blendMode: "multiply",
      axisTop: null,
      axisRight: null,
      xScale: {
        type: "time",
        format: "%Y-%m-%d"
      },
      xFormat: "time:%Y-%m-%d",
      yScale: {
        type: "linear",
        min: "auto",
        max: "auto",
        stacked: false,
        reverse: false
      },
      legends: [
        {
          anchor: "bottom-right",
          direction: "column",
          justify: false,
          translateX: 130,
          translateY: 0,
          itemWidth: 100,
          itemHeight: 12,
          itemsSpacing: 5,
          itemDirection: "left-to-right",
          symbolSize: 12,
          symbolShape: "circle",
          effects: [
            {
              on: "hover",
              style: {
                itemOpacity: 1
              }
            }
          ]
        }
      ]
    });
  };
  var Scatter = () => {
    return /* @__PURE__ */ import_react64.default.createElement(ScatterComponent, {
      data: []
    });
  };

  // src/components/Charts.tsx
  var ChartsComponent = (props) => {
    return /* @__PURE__ */ import_react65.default.createElement("div", {
      style: {height: "100vh"}
    }, /* @__PURE__ */ import_react65.default.createElement("div", {
      className: "chart-select"
    }, /* @__PURE__ */ import_react65.default.createElement(SelectPicker_default2, {
      data: ChartTypes,
      valueKey: "id",
      labelKey: "name",
      value: props.selectedChartType,
      onChange: (d4) => {
        props.onSelectedChartType(d4);
      },
      disabledItemValues: ["scatter", "bar", "map"]
    })), /* @__PURE__ */ import_react65.default.createElement("div", {
      style: {height: "inherit"}
    }, renderChart(props.selectedChartType)));
  };
  var renderChart = (chartType) => {
    switch (chartType) {
      case "map":
        return /* @__PURE__ */ import_react65.default.createElement(Map2, null);
      case "bar":
        return /* @__PURE__ */ import_react65.default.createElement(BarChart, null);
      case "scatter":
        return /* @__PURE__ */ import_react65.default.createElement(Scatter, null);
      case "line":
        return /* @__PURE__ */ import_react65.default.createElement(Line, null);
    }
  };
  var Charts = () => {
    const app = useAppContext();
    return /* @__PURE__ */ import_react65.default.createElement(ChartsComponent, {
      selectedChartType: app.chartType,
      onSelectedChartType: app.setChartType,
      renderChart
    });
  };

  // src/components/ChooseCountries.tsx
  var import_react66 = __toModule(require_react());
  var CountriesSelectComponent = (props) => {
    return /* @__PURE__ */ import_react66.default.createElement("div", {
      className: "countries-select"
    }, /* @__PURE__ */ import_react66.default.createElement("span", null, "Compare", " "), /* @__PURE__ */ import_react66.default.createElement(SelectPicker_default2, {
      data: props.featuresData,
      value: props.leftValue,
      labelKey: "name",
      valueKey: "id",
      onChange: props.onLeftValueChange,
      placeholder: "select country"
    }), " ", /* @__PURE__ */ import_react66.default.createElement("span", null, "with", " "), /* @__PURE__ */ import_react66.default.createElement(SelectPicker_default2, {
      data: props.featuresData,
      value: props.rightValue,
      labelKey: "name",
      valueKey: "id",
      onChange: props.onRightValueChange,
      placeholder: "select country"
    }));
  };
  var CountriesSelect = () => {
    const app = useAppContext();
    const features2 = import_react66.default.useMemo(() => {
      return app.features.map((feature) => __objSpread(__objSpread({}, feature), {name: feature.properties.name}));
    }, app.features);
    return /* @__PURE__ */ import_react66.default.createElement(CountriesSelectComponent, {
      featuresData: features2,
      leftValue: app.leftCountry,
      rightValue: app.rightCountry,
      onLeftValueChange: app.onLeftCountryDataChange,
      onRightValueChange: app.onRightCountryDataChange
    });
  };

  // src/components/MetricsTree.tsx
  var import_react67 = __toModule(require_react());

  // src/utils.ts
  function getCategories(columns) {
    const cats = new Map();
    const blacklist = new Set(["Others"]);
    columns.forEach((col) => {
      if (blacklist.has(col.category))
        return;
      if (!cats.has(col.category)) {
        cats.set(col.category, {column: col.category, children: []});
      }
      cats.get(col.category).children.push(col);
    });
    return cats;
  }
  function removeDelim(st2, delim = "_", joinWith = " ") {
    const starr = st2.split(delim);
    return starr.join(joinWith);
  }
  function toTitleCase(st2, delimToRemove) {
    if (delimToRemove) {
      st2 = removeDelim(st2);
    }
    return st2.split(" ").map((a7) => {
      var _a;
      return ((_a = a7[0]) == null ? void 0 : _a.toUpperCase()) + a7.slice(1);
    }).join(" ");
  }

  // src/components/MetricsTree.tsx
  var MetricsTreeComponent = (props) => {
    const setSel = import_react67.default.useCallback((data, value, e15) => {
      props.setSelected(value.toString());
    }, [props.setSelected]);
    return /* @__PURE__ */ import_react67.default.createElement(Tree_default2, {
      className: "metrics-tree",
      data: Array.from(props.categories.values()),
      labelKey: "column",
      valueKey: "column",
      height: -1,
      style: {maxHeight: "100vh"},
      onSelect: setSel,
      value: props.selected,
      defaultExpandItemValues: ["Confirmed cases"],
      renderTreeNode: (data) => {
        return /* @__PURE__ */ import_react67.default.createElement(Panel_default2, {
          header: toTitleCase(data.column, "_"),
          style: {width: "100%"}
        }, /* @__PURE__ */ import_react67.default.createElement("span", null, data.description));
      }
    });
  };
  var MetricsTree = () => {
    const app = useAppContext();
    return /* @__PURE__ */ import_react67.default.createElement(MetricsTreeComponent, {
      categories: app.metricsCategories,
      selected: app.selectedMetric,
      setSelected: app.onMetricChange
    });
  };

  // src/components/Explorer.tsx
  var Explorer = () => {
    return /* @__PURE__ */ import_react68.default.createElement(import_react68.default.Fragment, null, /* @__PURE__ */ import_react68.default.createElement(Row_default2, {
      className: "show-grid"
    }, /* @__PURE__ */ import_react68.default.createElement(Col_default2, {
      xsHidden: true,
      xs: 8
    }, /* @__PURE__ */ import_react68.default.createElement(CountriesSelect, null), /* @__PURE__ */ import_react68.default.createElement(MetricsTree, null)), /* @__PURE__ */ import_react68.default.createElement(Col_default2, {
      xs: 16,
      style: {height: "100vh"}
    }, /* @__PURE__ */ import_react68.default.createElement(Charts, null))));
  };

  // src/AppProvider.tsx
  var import_react69 = __toModule(require_react());

  // src/static/columns.json
  var columns_default = [
    {
      column: "iso_code",
      source: "International Organization for Standardization",
      category: "Others",
      description: "ISO 3166-1 alpha-3 \u2013 three-letter country codes"
    },
    {
      column: "continent",
      source: "Our World in Data",
      category: "Others",
      description: "Continent of the geographical location"
    },
    {
      column: "location",
      source: "Our World in Data",
      category: "Others",
      description: "Geographical location"
    },
    {
      column: "date",
      source: "Our World in Data",
      category: "Others",
      description: "Date of observation"
    },
    {
      column: "total_cases",
      source: "COVID-19 Data Repository by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University",
      category: "Confirmed cases",
      description: "Total confirmed cases of COVID-19. Counts can include probable cases, where reported."
    },
    {
      column: "new_cases",
      source: "COVID-19 Data Repository by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University",
      category: "Confirmed cases",
      description: "New confirmed cases of COVID-19. Counts can include probable cases, where reported. In rare cases where our source reports a negative daily change due to a data correction, we set this metric to NA."
    },
    {
      column: "new_cases_smoothed",
      source: "COVID-19 Data Repository by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University",
      category: "Confirmed cases",
      description: "New confirmed cases of COVID-19 (7-day smoothed). Counts can include probable cases, where reported."
    },
    {
      column: "total_deaths",
      source: "COVID-19 Data Repository by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University",
      category: "Confirmed deaths",
      description: "Total deaths attributed to COVID-19. Counts can include probable deaths, where reported."
    },
    {
      column: "new_deaths",
      source: "COVID-19 Data Repository by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University",
      category: "Confirmed deaths",
      description: "New deaths attributed to COVID-19. Counts can include probable deaths, where reported. In rare cases where our source reports a negative daily change due to a data correction, we set this metric to NA."
    },
    {
      column: "new_deaths_smoothed",
      source: "COVID-19 Data Repository by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University",
      category: "Confirmed deaths",
      description: "New deaths attributed to COVID-19 (7-day smoothed). Counts can include probable deaths, where reported."
    },
    {
      column: "total_cases_per_million",
      source: "COVID-19 Data Repository by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University",
      category: "Confirmed cases",
      description: "Total confirmed cases of COVID-19 per 1,000,000 people. Counts can include probable cases, where reported."
    },
    {
      column: "new_cases_per_million",
      source: "COVID-19 Data Repository by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University",
      category: "Confirmed cases",
      description: "New confirmed cases of COVID-19 per 1,000,000 people. Counts can include probable cases, where reported."
    },
    {
      column: "new_cases_smoothed_per_million",
      source: "COVID-19 Data Repository by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University",
      category: "Confirmed cases",
      description: "New confirmed cases of COVID-19 (7-day smoothed) per 1,000,000 people. Counts can include probable cases, where reported."
    },
    {
      column: "total_deaths_per_million",
      source: "COVID-19 Data Repository by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University",
      category: "Confirmed deaths",
      description: "Total deaths attributed to COVID-19 per 1,000,000 people. Counts can include probable deaths, where reported."
    },
    {
      column: "new_deaths_per_million",
      source: "COVID-19 Data Repository by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University",
      category: "Confirmed deaths",
      description: "New deaths attributed to COVID-19 per 1,000,000 people. Counts can include probable deaths, where reported."
    },
    {
      column: "new_deaths_smoothed_per_million",
      source: "COVID-19 Data Repository by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University",
      category: "Confirmed deaths",
      description: "New deaths attributed to COVID-19 (7-day smoothed) per 1,000,000 people. Counts can include probable deaths, where reported."
    },
    {
      column: "reproduction_rate",
      source: "Arroyo Marioli et al. (2020). https://doi.org/10.2139/ssrn.3581633",
      category: "Reproduction rate",
      description: "Real-time estimate of the effective reproduction rate (R) of COVID-19. See https://github.com/crondonm/TrackingR/tree/main/Estimates-Database"
    },
    {
      column: "icu_patients",
      source: "National government reports and European CDC",
      category: "Hospital & ICU",
      description: "Number of COVID-19 patients in intensive care units (ICUs) on a given day"
    },
    {
      column: "icu_patients_per_million",
      source: "National government reports and European CDC",
      category: "Hospital & ICU",
      description: "Number of COVID-19 patients in intensive care units (ICUs) on a given day per 1,000,000 people"
    },
    {
      column: "hosp_patients",
      source: "National government reports and European CDC",
      category: "Hospital & ICU",
      description: "Number of COVID-19 patients in hospital on a given day"
    },
    {
      column: "hosp_patients_per_million",
      source: "National government reports and European CDC",
      category: "Hospital & ICU",
      description: "Number of COVID-19 patients in hospital on a given day per 1,000,000 people"
    },
    {
      column: "weekly_icu_admissions",
      source: "National government reports and European CDC",
      category: "Hospital & ICU",
      description: "Number of COVID-19 patients newly admitted to intensive care units (ICUs) in a given week (reporting date and the preceeding 6 days)"
    },
    {
      column: "weekly_icu_admissions_per_million",
      source: "National government reports and European CDC",
      category: "Hospital & ICU",
      description: "Number of COVID-19 patients newly admitted to intensive care units (ICUs) in a given week per 1,000,000 people (reporting date and the preceeding 6 days)"
    },
    {
      column: "weekly_hosp_admissions",
      source: "National government reports and European CDC",
      category: "Hospital & ICU",
      description: "Number of COVID-19 patients newly admitted to hospitals in a given week (reporting date and the preceeding 6 days)"
    },
    {
      column: "weekly_hosp_admissions_per_million",
      source: "National government reports and European CDC",
      category: "Hospital & ICU",
      description: "Number of COVID-19 patients newly admitted to hospitals in a given week per 1,000,000 people (reporting date and the preceeding 6 days)"
    },
    {
      column: "total_tests",
      source: "National government reports",
      category: "Tests & positivity",
      description: "Total tests for COVID-19"
    },
    {
      column: "new_tests",
      source: "National government reports",
      category: "Tests & positivity",
      description: "New tests for COVID-19 (only calculated for consecutive days)"
    },
    {
      column: "total_tests_per_thousand",
      source: "National government reports",
      category: "Tests & positivity",
      description: "Total tests for COVID-19 per 1,000 people"
    },
    {
      column: "new_tests_per_thousand",
      source: "National government reports",
      category: "Tests & positivity",
      description: "New tests for COVID-19 per 1,000 people"
    },
    {
      column: "new_tests_smoothed",
      source: "National government reports",
      category: "Tests & positivity",
      description: "New tests for COVID-19 (7-day smoothed). For countries that don't report testing data on a daily basis, we assume that testing changed equally on a daily basis over any periods in which no data was reported. This produces a complete series of daily figures, which is then averaged over a rolling 7-day window"
    },
    {
      column: "new_tests_smoothed_per_thousand",
      source: "National government reports",
      category: "Tests & positivity",
      description: "New tests for COVID-19 (7-day smoothed) per 1,000 people"
    },
    {
      column: "positive_rate",
      source: "National government reports",
      category: "Tests & positivity",
      description: "The share of COVID-19 tests that are positive, given as a rolling 7-day average (this is the inverse of tests_per_case)"
    },
    {
      column: "tests_per_case",
      source: "National government reports",
      category: "Tests & positivity",
      description: "Tests conducted per new confirmed case of COVID-19, given as a rolling 7-day average (this is the inverse of positive_rate)"
    },
    {
      column: "tests_units",
      source: "National government reports",
      category: "Tests & positivity",
      description: "Units used by the location to report its testing data"
    },
    {
      column: "total_vaccinations",
      source: "National government reports",
      category: "Vaccinations",
      description: "Total number of COVID-19 vaccination doses administered"
    },
    {
      column: "people_vaccinated",
      source: "National government reports",
      category: "Vaccinations",
      description: "Total number of people who received at least one vaccine dose"
    },
    {
      column: "people_fully_vaccinated",
      source: "National government reports",
      category: "Vaccinations",
      description: "Total number of people who received all doses prescribed by the initial vaccination protocol"
    },
    {
      column: "total_boosters",
      source: "National government reports",
      category: "Vaccinations",
      description: "Total number of COVID-19 vaccination booster doses administered (doses administered beyond the number prescribed by the vaccination protocol)"
    },
    {
      column: "new_vaccinations",
      source: "National government reports",
      category: "Vaccinations",
      description: "New COVID-19 vaccination doses administered (only calculated for consecutive days)"
    },
    {
      column: "new_vaccinations_smoothed",
      source: "National government reports",
      category: "Vaccinations",
      description: "New COVID-19 vaccination doses administered (7-day smoothed). For countries that don't report vaccination data on a daily basis, we assume that vaccination changed equally on a daily basis over any periods in which no data was reported. This produces a complete series of daily figures, which is then averaged over a rolling 7-day window"
    },
    {
      column: "total_vaccinations_per_hundred",
      source: "National government reports",
      category: "Vaccinations",
      description: "Total number of COVID-19 vaccination doses administered per 100 people in the total population"
    },
    {
      column: "people_vaccinated_per_hundred",
      source: "National government reports",
      category: "Vaccinations",
      description: "Total number of people who received at least one vaccine dose per 100 people in the total population"
    },
    {
      column: "people_fully_vaccinated_per_hundred",
      source: "National government reports",
      category: "Vaccinations",
      description: "Total number of people who received all doses prescribed by the initial vaccination protocol per 100 people in the total population"
    },
    {
      column: "total_boosters_per_hundred",
      source: "National government reports",
      category: "Vaccinations",
      description: "Total number of COVID-19 vaccination booster doses administered per 100 people in the total population"
    },
    {
      column: "new_vaccinations_smoothed_per_million",
      source: "National government reports",
      category: "Vaccinations",
      description: "New COVID-19 vaccination doses administered (7-day smoothed) per 1,000,000 people in the total population"
    },
    {
      column: "new_people_vaccinated_smoothed",
      source: "National government reports",
      category: "Vaccinations",
      description: "Daily number of people receiving their first vaccine dose (7-day smoothed)"
    },
    {
      column: "new_people_vaccinated_smoothed_per_hundred",
      source: "National government reports",
      category: "Vaccinations",
      description: "Daily number of people receiving their first vaccine dose (7-day smoothed) per 100 people in the total population"
    },
    {
      column: "stringency_index",
      source: "Oxford COVID-19 Government Response Tracker, Blavatnik School of Government",
      category: "Policy responses",
      description: "Government Response Stringency Index: composite measure based on 9 response indicators including school closures, workplace closures, and travel bans, rescaled to a value from 0 to 100 (100 = strictest response)"
    },
    {
      column: "population",
      source: "United Nations, Department of Economic and Social Affairs, Population Division, World Population Prospects 2019 Revision",
      category: "Others",
      description: "Population (latest available values). See https://github.com/owid/covid-19-data/blob/master/scripts/input/un/population_latest.csv for full list of sources"
    },
    {
      column: "population_density",
      source: "World Bank World Development Indicators, sourced from Food and Agriculture Organization and World Bank estimates",
      category: "Others",
      description: "Number of people divided by land area, measured in square kilometers, most recent year available"
    },
    {
      column: "median_age",
      source: "UN Population Division, World Population Prospects, 2017 Revision",
      category: "Others",
      description: "Median age of the population, UN projection for 2020"
    },
    {
      column: "aged_65_older",
      source: "World Bank World Development Indicators based on age/sex distributions of United Nations World Population Prospects 2017 Revision",
      category: "Others",
      description: "Share of the population that is 65 years and older, most recent year available"
    },
    {
      column: "aged_70_older",
      source: "United Nations, Department of Economic and Social Affairs, Population Division (2017), World Population Prospects 2017 Revision",
      category: "Others",
      description: "Share of the population that is 70 years and older in 2015"
    },
    {
      column: "gdp_per_capita",
      source: "World Bank World Development Indicators, source from World Bank, International Comparison Program database",
      category: "Others",
      description: "Gross domestic product at purchasing power parity (constant 2011 international dollars), most recent year available"
    },
    {
      column: "extreme_poverty",
      source: "World Bank World Development Indicators, sourced from World Bank Development Research Group",
      category: "Others",
      description: "Share of the population living in extreme poverty, most recent year available since 2010"
    },
    {
      column: "cardiovasc_death_rate",
      source: "Global Burden of Disease Collaborative Network, Global Burden of Disease Study 2017 Results",
      category: "Others",
      description: "Death rate from cardiovascular disease in 2017 (annual number of deaths per 100,000 people)"
    },
    {
      column: "diabetes_prevalence",
      source: "World Bank World Development Indicators, sourced from International Diabetes Federation, Diabetes Atlas",
      category: "Others",
      description: "Diabetes prevalence (% of population aged 20 to 79) in 2017"
    },
    {
      column: "female_smokers",
      source: "World Bank World Development Indicators, sourced from World Health Organization, Global Health Observatory Data Repository",
      category: "Others",
      description: "Share of women who smoke, most recent year available"
    },
    {
      column: "male_smokers",
      source: "World Bank World Development Indicators, sourced from World Health Organization, Global Health Observatory Data Repository",
      category: "Others",
      description: "Share of men who smoke, most recent year available"
    },
    {
      column: "handwashing_facilities",
      source: "United Nations Statistics Division",
      category: "Others",
      description: "Share of the population with basic handwashing facilities on premises, most recent year available"
    },
    {
      column: "hospital_beds_per_thousand",
      source: "OECD, Eurostat, World Bank, national government records and other sources",
      category: "Others",
      description: "Hospital beds per 1,000 people, most recent year available since 2010"
    },
    {
      column: "life_expectancy",
      source: "James C. Riley, Clio Infra, United Nations Population Division",
      category: "Others",
      description: "Life expectancy at birth in 2019"
    },
    {
      column: "human_development_index",
      source: "United Nations Development Programme (UNDP)",
      category: "Others",
      description: "A composite index measuring average achievement in three basic dimensions of human development\u2014a long and healthy life, knowledge and a decent standard of living. Values for 2019, imported from http://hdr.undp.org/en/indicators/137506"
    },
    {
      column: "excess_mortality",
      source: "Human Mortality Database (2021), World Mortality Dataset (2021)",
      category: "Excess mortality",
      description: "Percentage difference between the reported number of weekly or monthly deaths in 2020\u20132021 and the projected number of deaths for the same period based on previous years. For more information, see https://github.com/owid/covid-19-data/tree/master/public/data/excess_mortality"
    },
    {
      column: "excess_mortality_cumulative",
      source: "Human Mortality Database (2021), World Mortality Dataset (2021)",
      category: "Excess mortality",
      description: "Percentage difference between the cumulative number of deaths since 1 January 2020 and the cumulative projected deaths for the same period based on previous years. For more information, see https://github.com/owid/covid-19-data/tree/master/public/data/excess_mortality"
    },
    {
      column: "excess_mortality_cumulative_absolute",
      source: "Human Mortality Database (2021), World Mortality Dataset (2021)",
      category: "Excess mortality",
      description: "Cumulative difference between the reported number of deaths since 1 January 2020 and the projected number of deaths for the same period based on previous years. For more information, see https://github.com/owid/covid-19-data/tree/master/public/data/excess_mortality"
    },
    {
      column: "excess_mortality_cumulative_per_million",
      source: "Human Mortality Database (2021), World Mortality Dataset (2021)",
      category: "Excess mortality",
      description: "Cumulative difference between the reported number of deaths since 1 January 2020 and the projected number of deaths for the same period based on previous years, per million people. For more information, see https://github.com/owid/covid-19-data/tree/master/public/data/excess_mortality"
    }
  ];

  // src/AppProvider.tsx
  var categories = getCategories(columns_default);
  var AppProvider = (props) => {
    const [leftCountry, setLeftCountry] = import_react69.default.useState("USA");
    const [rightCountry, setRightCountry] = import_react69.default.useState("IND");
    const [chartType, setChartType] = import_react69.default.useState("line");
    const [selectedMetric, setSelectedMetric] = import_react69.default.useState("total_cases");
    return /* @__PURE__ */ import_react69.default.createElement(AppContext.Provider, {
      value: {
        leftCountry,
        rightCountry,
        features: world_countries_default.features,
        onLeftCountryDataChange: setLeftCountry,
        onRightCountryDataChange: setRightCountry,
        columns: columns_default,
        metricsCategories: categories,
        chartType,
        setChartType,
        selectedMetric,
        onMetricChange: setSelectedMetric
      }
    }, props.children);
  };

  // src/App.tsx
  function App() {
    return /* @__PURE__ */ import_react70.default.createElement(AppProvider, null, /* @__PURE__ */ import_react70.default.createElement("div", {
      className: "App",
      style: {height: "100vh"}
    }, /* @__PURE__ */ import_react70.default.createElement(Explorer, null)));
  }

  // src/index.tsx
  var import_client = __toModule(require_client());
  var container = document.getElementById("root");
  var root = (0, import_client.createRoot)(container);
  root.render(/* @__PURE__ */ import_react71.default.createElement(App, null));
})();
//# sourceMappingURL=bundle.js.map
